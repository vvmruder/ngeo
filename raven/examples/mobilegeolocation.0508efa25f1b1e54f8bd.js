!function(e){function t(t){for(var i,r,l=t[0],c=t[1],s=t[2],h=0,g=[];h<l.length;h++)r=l[h],n[r]&&g.push(n[r][0]),n[r]=0;for(i in c)Object.prototype.hasOwnProperty.call(c,i)&&(e[i]=c[i]);for(u&&u(t);g.length;)g.shift()();return a.push.apply(a,s||[]),o()}function o(){for(var e,t=0;t<a.length;t++){for(var o=a[t],i=!0,l=1;l<o.length;l++){var c=o[l];0!==n[c]&&(i=!1)}i&&(a.splice(t--,1),e=r(r.s=o[0]))}return e}var i={},n={16:0};var a=[];function r(t){if(i[t])return i[t].exports;var o=i[t]={i:t,l:!1,exports:{}};return e[t].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=e,r.c=i,r.d=function(e,t,o){r.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:o})},r.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="";var l=window.webpackJsonp=window.webpackJsonp||[],c=l.push.bind(l);l.push=t,l=l.slice();for(var s=0;s<l.length;s++)t(l[s]);var u=c;a.push([355,0]),o()}({311:function(e,t,o){"use strict";o.r(t);o(456);var i=o(21),n=o(27),a=o(20),r=o(32),l=o(73),c=o(17),s=o(38),u=o(35),h=o(26),g=o(2),p=o(180),_=o(211),f=o(74),d=o(3),w=o(18),v=o(240),y=o(30),m=angular.module("ngeoMobileGeolocation",[p.a.module.name,_.a.module.name]);m.GeolocationEventType={ERROR:"mobile-geolocation-error"},m.directive_=function(){return{restrict:"A",scope:{getMobileMapFn:"&ngeoMobileGeolocationMap",getMobileGeolocationOptionsFn:"&ngeoMobileGeolocationOptions"},controller:"ngeoGeolocationMobileController"}},m.directive("ngeoMobileGeolocation",m.directive_),m.Controller_=function(e,t,o,n,a){var r=this;t.on("click",this.toggleTracking.bind(this));var l=e.getMobileMapFn();g.a.assertInstanceof(l,i.a),this.$scope_=e,this.map_=l;var c=e.getMobileGeolocationOptionsFn()||{};g.a.assertObject(c),this.notification_=a,this.featureOverlay_=n.getFeatureOverlay(),this.geolocation_=new v.a({projection:l.getView().getProjection(),trackingOptions:{enableHighAccuracy:!0}}),c.autorotate&&this.autorotateListener(),this.geolocation_.on("error",function(t){this.untrack_();var i=void 0;switch(t.code){case 1:i=o.getString("User denied the request for Geolocation.");break;case 2:i=o.getString("Location information is unavailable.");break;case 3:i=o.getString("The request to get user location timed out.");break;default:i=o.getString("Geolocation: An unknown error occurred.")}this.notification_.error(i),e.$emit(m.GeolocationEventType.ERROR,t)},this),this.positionFeature_=new w.a,c.positionFeatureStyle&&this.positionFeature_.setStyle(c.positionFeatureStyle),this.accuracyFeature_=new w.a,c.accuracyFeatureStyle&&this.accuracyFeature_.setStyle(c.accuracyFeatureStyle),this.zoom_=c.zoom,this.follow_=!1,this.viewChangedByMe_=!1,d.a(this.geolocation_,"change:accuracyGeometry",function(){r.accuracyFeature_.setGeometry(r.geolocation_.getAccuracyGeometry()),r.setPosition_()}),d.a(this.geolocation_,"change:position",function(){r.setPosition_()});var s=l.getView();d.a(s,"change:center",this.handleViewChange_,this),d.a(s,"change:resolution",this.handleViewChange_,this)},m.Controller_.$inject=["$scope","$element","gettextCatalog","ngeoFeatureOverlayMgr","ngeoNotification"],m.Controller_.prototype.toggleTracking=function(){if(this.geolocation_.getTracking()){var e=this.geolocation_.getPosition();if(void 0===e)return this.untrack_(),void this.$scope_.$emit(m.GeolocationEventType.ERROR,null);g.a.assert(void 0!==e);var t=this.map_.getView().getCenter();Math.abs(e[0]-t[0])+Math.abs(e[1]-t[1])<2?this.untrack_():(this.untrack_(),this.track_())}else this.track_()},m.Controller_.prototype.track_=function(){this.featureOverlay_.addFeature(this.positionFeature_),this.featureOverlay_.addFeature(this.accuracyFeature_),this.follow_=!0,this.geolocation_.setTracking(!0)},m.Controller_.prototype.untrack_=function(){this.featureOverlay_.clear(),this.follow_=!1,this.geolocation_.setTracking(!1),this.notification_.clear()},m.Controller_.prototype.setPosition_=function(){var e=this.geolocation_.getPosition(),t=new y.a(e);this.positionFeature_.setGeometry(t);var o=this.accuracyFeature_.getGeometry();if(this.follow_){if(this.viewChangedByMe_=!0,void 0!==this.zoom_)this.map_.getView().setCenter(e),this.map_.getView().setZoom(this.zoom_);else if(o){var i=this.map_.getSize();this.map_.getView().fit(o,i)}this.viewChangedByMe_=!1}},m.Controller_.prototype.handleViewChange_=function(e){this.follow_&&!this.viewChangedByMe_&&(this.follow_=!1)},m.Controller_.prototype.autorotateListener=function(){var e=this,t=0;window.hasOwnProperty("ondeviceorientationabsolute")?window.addEventListener("deviceorientationabsolute",function(o){t=e.handleRotate_(o.alpha,t)},!0):window.hasOwnProperty("ondeviceorientation")?window.addEventListener("deviceorientation",function(o){t=o.webkitCompassHeading?e.handleRotate_(-o.webkitCompassHeading,t):e.handleRotate_(o.alpha-270,t)},!0):console.error("Orientation is not supported on this device")},m.Controller_.prototype.handleRotate_=function(e,t){if(this.geolocation_.getTracking()&&Math.abs(e-t)>.2){var o=(t=e)*Math.PI/180;this.map_.getView().animate({rotation:o,duration:350,easing:f.d})}return t},m.controller("ngeoGeolocationMobileController",m.Controller_);var b=m,M={},C=angular.module("app",["gettext",b.name,h.a.name]);M.MainController=function(e,t){var o=new c.a({image:new l.a({radius:6,fill:new s.a({color:"rgba(230, 100, 100, 1)"}),stroke:new u.a({color:"rgba(230, 40, 40, 1)",width:2})})}),h=new c.a({fill:new s.a({color:"rgba(100, 100, 230, 0.3)"}),stroke:new u.a({color:"rgba(40, 40, 230, 1)",width:2})});this.mobileGeolocationOptions={positionFeatureStyle:o,accuracyFeatureStyle:h,zoom:17,autorotate:!0},this.map=new i.a({layers:[new a.a({source:new r.a})],view:new n.a({center:[0,0],zoom:4})}),t.init(this.map)},M.MainController.$inject=["$scope","ngeoFeatureOverlayMgr"],C.controller("MainController",M.MainController);t.default=M},355:function(e,t,o){o(56),o(54),e.exports=o(311)},456:function(e,t){}});
//# sourceMappingURL=mobilegeolocation.0508efa25f1b1e54f8bd.js.map