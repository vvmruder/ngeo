(function(){'use strict';var h=this;function k(a,b){a=a.split(".");var c=h;a[0]in c||!c.execScript||c.execScript("var "+a[0]);for(var d;a.length&&(d=a.shift());)a.length||void 0===b?c[d]?c=c[d]:c=c[d]={}:c[d]=b};function l(a){this.type=a;this.target=null}l.prototype.preventDefault=l.prototype.stopPropagation=function(){};var m=function(){var a;"cosh"in Math?a=Math.cosh:a=function(a){a=Math.exp(a);return(a+1/a)/2};return a}();/*

 Latitude/longitude spherical geodesy formulae taken from
 http://www.movable-type.co.uk/scripts/latlong.html
 Licensed under CC-BY-3.0.
*/
function n(a){this.radius=a}function p(a,b){var c=a[1]*Math.PI/180,d=b[1]*Math.PI/180,e=(d-c)/2;a=(b[0]-a[0])*Math.PI/180/2;c=Math.sin(e)*Math.sin(e)+Math.sin(a)*Math.sin(a)*Math.cos(c)*Math.cos(d);return 2*q.radius*Math.atan2(Math.sqrt(c),Math.sqrt(1-c))}
n.prototype.offset=function(a,b,c){var d=a[1]*Math.PI/180;b/=this.radius;var e=Math.asin(Math.sin(d)*Math.cos(b)+Math.cos(d)*Math.sin(b)*Math.cos(c));return[180*(a[0]*Math.PI/180+Math.atan2(Math.sin(c)*Math.sin(b)*Math.cos(d),Math.cos(b)-Math.sin(d)*Math.sin(e)))/Math.PI,180*e/Math.PI]};var q=new n(6370997);var r={};r.degrees=2*Math.PI*q.radius/360;r.ft=.3048;r.m=1;r["us-ft"]=1200/3937;function t(a){this.a=a.code;this.c=a.units;this.h=void 0!==a.b?a.b:this.i;this.f=a.g;var b=u,c=a.code,d=v||window.proj4;if("function"==typeof d&&void 0===b[c]){var e=d.defs(c);if(void 0!==e){void 0===a.g&&(this.f=e.to_meter);void 0===a.units&&(this.c=e.units);var f,g;for(f in b)if(a=d.defs(f),void 0!==a)if(b=w(f),a===e)x([b,this]);else{g=d(f,c);a=g.forward;g=g.inverse;var b=w(b),E=w(this);y(b,E,z(a));y(E,b,z(g))}}}}
t.prototype.i=function(a,b){if("degrees"==this.c)return a;var c=w("EPSG:4326"),d=this.a,c=c.a,e;d in A&&c in A[d]&&(e=A[d][c]);void 0===e&&(e=B);a=[b[0]-a/2,b[1],b[0]+a/2,b[1],b[0],b[1]-a/2,b[0],b[1]+a/2];a=e(a,a,2);e=(p(a.slice(0,2),a.slice(2,4))+p(a.slice(4,6),a.slice(6,8)))/2;a=this.f||r[this.c];void 0!==a&&(e/=a);return e};t.prototype.b=function(a,b){return this.h(a,b)};var u={},A={},v=null;function x(a){C(a);a.forEach(function(b){a.forEach(function(a){b!==a&&y(b,a,D)})})}
function F(a){u[a.a]=a;y(a,a,D)}function C(a){var b=[];a.forEach(function(a){b.push(F(a))})}function y(a,b,c){a=a.a;b=b.a;a in A||(A[a]={});A[a][b]=c}function z(a){return function(b,c,d){var e=b.length;d=void 0!==d?d:2;c=void 0!==c?c:Array(e);var f,g;for(g=0;g<e;g+=d)for(f=a([b[g],b[g+1]]),c[g]=f[0],c[g+1]=f[1],f=d-1;2<=f;--f)c[g+f]=b[g+f];return c}}
function w(a){var b;if(a instanceof t)b=a;else if("string"===typeof a){b=u[a];var c=v||window.proj4;void 0===b&&"function"==typeof c&&void 0!==c.defs(a)&&(b=new t({code:a}),F(b))}return b||null}function B(a,b){if(void 0!==b&&a!==b){for(var c=0,d=a.length;c<d;++c)b[c]=a[c];a=b}return a}function D(a,b){if(void 0!==b){for(var c=0,d=a.length;c<d;++c)b[c]=a[c];a=b}else a=a.slice();return a};(function(){if(!("HTMLCanvasElement"in window))return!1;try{return document.createElement("CANVAS").getContext("2d")?!0:!1}catch(a){return!1}})();navigator.userAgent.match("CriOS");try{new MouseEvent("click",{buttons:1})}catch(a){};function G(a){t.call(this,{code:a,units:"m",extent:H,global:!0,l:I})}G.prototype=Object.create(t.prototype);G.prototype.constructor=G;G.prototype.b=function(a,b){return a/m(b[1]/6378137)};var J=6378137*Math.PI,H=[-J,-J,J,J],I=[-180,-85,180,85],K="EPSG:3857 EPSG:102100 EPSG:102113 EPSG:900913 urn:ogc:def:crs:EPSG:6.18:3:3857 urn:ogc:def:crs:EPSG::3857 http://www.opengis.net/gml/srs/epsg.xml#3857".split(" ").map(function(a){return new G(a)});
function L(a,b,c){var d=a.length;c=1<c?c:2;void 0===b&&(2<c?b=a.slice():b=Array(d));for(var e=0;e<d;e+=c){b[e]=J*a[e]/180;var f=6378137*Math.log(Math.tan(Math.PI*(a[e+1]+90)/360));f>J?f=J:f<-J&&(f=-J);b[e+1]=f}return b}function M(a,b,c){var d=a.length;c=1<c?c:2;void 0===b&&(2<c?b=a.slice():b=Array(d));for(var e=0;e<d;e+=c)b[e]=180*a[e]/J,b[e+1]=360*Math.atan(Math.exp(a[e+1]/6378137))/Math.PI-90;return b};var N=new n(6378137);function O(a,b){t.call(this,{code:a,units:"degrees",extent:P,o:b,global:!0,g:Q,l:P})}O.prototype=Object.create(t.prototype);O.prototype.constructor=O;O.prototype.b=function(a){return a};
var P=[-180,-90,180,90],Q=Math.PI*N.radius/180,R=[new O("CRS:84"),new O("EPSG:4326","neu"),new O("urn:ogc:def:crs:EPSG::4326","neu"),new O("urn:ogc:def:crs:EPSG:6.6:4326","neu"),new O("urn:ogc:def:crs:OGC:1.3:CRS84"),new O("urn:ogc:def:crs:OGC:2:84"),new O("http://www.opengis.net/gml/srs/epsg.xml#4326","neu"),new O("urn:x-ogc:def:crs:EPSG:4326","neu")];x(K);x(R);R.forEach(function(a){K.forEach(function(b){y(a,b,L);y(b,a,M)})});var S=angular.module("ngeo",["gettext","ui.date","floatThead"]);k("ngeo.FeatureProperties",{ANGLE:"a",COLOR:"c",IS_CIRCLE:"l",IS_RECTANGLE:"r",IS_TEXT:"t",NAME:"n",OPACITY:"o",AZIMUT:"z",SHOW_MEASURE:"m",SIZE:"s",STROKE:"k"});k("ngeo.GeometryType",{CIRCLE:"Circle",LINE_STRING:"LineString",MULTI_LINE_STRING:"MultiLineString",MULTI_POINT:"MultiPoint",MULTI_POLYGON:"MultiPolygon",POINT:"Point",POLYGON:"Polygon",RECTANGLE:"Rectangle",TEXT:"Text"});S.directive("ngeoMap",function(){return{restrict:"A",link:function(a,b,c){a.$eval(c.ngeoMap).a(b[0])}}});S.value("ngeoColorpickerTemplateUrl",function(a,b){a=b.ngeoColorpickerTemplateurl;return void 0!==a?a:"ngeo/colorpicker.html"});function T(a){return{restrict:"A",scope:{colors:"<?ngeoColorpicker",color:"=?ngeoColorpickerColor"},controller:"NgeoColorpickerController",controllerAs:"ctrl",bindToController:!0,templateUrl:a}}T.$inject=["ngeoColorpickerTemplateUrl"];S.directive("ngeoColorpicker",T);
var U=["#F4EB37 #CDDC39 #62AF44 #009D57 #0BA9CC #4186F0 #3F5BA9 #7C3592 #A61B4A #DB4436 #F8971B #F4B400 #795046".split(" "),"#F9F7A6 #E6EEA3 #B7DBAB #7CCFA9 #93D7E8 #9FC3FF #A7B5D7 #C6A4CF #D698AD #EE9C96 #FAD199 #FFDD5E #B29189".split(" "),["#ffffff","#CCCCCC","#777","#000000"]];function V(){this.colors=U}k("ngeo.ColorpickerController",V);V.$inject=["$scope","$element","$attrs"];V.prototype.j=function(a){this.color=a};V.prototype.setColor=V.prototype.j;S.controller("NgeoColorpickerController",V);var W=angular.module("app",["ngeo"]);W.directive("appColorpicker",function(){return{restrict:"E",scope:!0,template:'<div ngeo-colorpicker="ctrl.colors" ngeo-colorpicker-color="mainCtrl.color"></div>',controllerAs:"ctrl",bindToController:!0,controller:"AppColorpickerController"}});W.controller("AppColorpickerController",function(){this.colors=["red yellow green lightgreen lightblue orange purple".split(" "),["#ffffff","#f7f7f7","#c3c3c3","#000000"]]});function X(){this.color="red"}X.$inject=["$scope"];
W.controller("MainController",X);(function(){function a(a){a.put("ngeo/attributes.html",'<fieldset ng-disabled=attrCtrl.disabled> <div class=form-group ng-repeat="attribute in ::attrCtrl.attributes"> <div ng-if="attribute.type !== \'geometry\'"> <label class=control-label>{{ ::attribute.name | translate }} <span class=text-muted>{{::attribute.required ? "*" : ""}}</span></label> <div ng-switch=attribute.type> <select name={{::attribute.name}} ng-required=attribute.required ng-switch-when=select ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); class=form-control type=text> <option ng-repeat="attribute in ::attribute.choices" value="{{ ::attribute }}"> {{ ::attribute }} </option> </select> <input name={{::attribute.name}} ng-required=attribute.required ng-switch-when=date ui-date=attrCtrl.dateOptions ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); class=form-control type=text> <input name={{::attribute.name}} ng-required=attribute.required ng-switch-when=datetime ui-date=attrCtrl.dateOptions ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); class=form-control type=text> <input name={{::attribute.name}} ng-required=attribute.required ng-switch-default ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); class=form-control type=text> <div ng-show="form.$submitted || form[attribute.name].$touched"> <p class=text-danger ng-show=form[attribute.name].$error.required> {{\'This field is required\' | translate}} </p> </div> </div> </div> </div> </fieldset> ');
a.put("ngeo/popup.html",'<h4 class="popover-title ngeo-popup-title"> <span ng-bind-html=title></span> <button type=button class=close ng-click="open = false"> &times;</button> </h4> <div class=popover-content ng-bind-html=content></div> ');a.put("ngeo/grid.html",'<div class=ngeo-grid-table-container> <table float-thead=ctrl.floatTheadConfig ng-model=ctrl.configuration.data class="table table-bordered table-striped table-hover"> <thead class=table-header> <tr> <th ng-repeat="columnDefs in ctrl.configuration.columnDefs" ng-click=ctrl.sort(columnDefs.name)>{{columnDefs.name | translate}} <i ng-show="ctrl.sortedBy !== columnDefs.name" class="fa fa-fw"></i> <i ng-show="ctrl.sortedBy === columnDefs.name && ctrl.sortAscending === true" class="fa fa-caret-up"></i> <i ng-show="ctrl.sortedBy === columnDefs.name && ctrl.sortAscending === false" class="fa fa-caret-down"></i> </th> </tr> </thead> <tbody> <tr ng-repeat="attributes in ctrl.configuration.data" ng-class="[\'row-\' + ctrl.configuration.getRowUid(attributes), ctrl.configuration.isRowSelected(attributes) ? \'ngeo-grid-active\': \'\']" ng-click="ctrl.clickRow(attributes, $event)" ng-mousedown=ctrl.preventTextSelection($event)> <td ng-repeat="columnDefs in ctrl.configuration.columnDefs" ng-bind-html="attributes[columnDefs.name] | ngeoTrustHtml"></td> </tr> </tbody> </table> </div> ');
a.put("ngeo/scaleselector.html",'<div class="btn-group btn-block" ng-class="::{\'dropup\': scaleselectorCtrl.options.dropup}"> <button type=button class="btn btn-default dropdown-toggle" data-toggle=dropdown aria-expanded=false> <span ng-bind-html=scaleselectorCtrl.currentScale|ngeoScalify></span>&nbsp;<i class=caret></i> </button> <ul class="dropdown-menu btn-block" role=menu> <li ng-repeat="zoomLevel in ::scaleselectorCtrl.zoomLevels"> <a href ng-click=scaleselectorCtrl.changeZoom(zoomLevel) ng-bind-html=scaleselectorCtrl.getScale(zoomLevel)|ngeoScalify> </a> </li> </ul> </div> ');
a.put("ngeo/datepicker.html","<div class=ngeo-datepicker> <form name=dateForm class=ngeo-datepicker-form novalidate> <div ng-if=\"::datepickerCtrl.time.widget === 'datepicker'\"> <div class=ngeo-datepicker-start-date> <span ng-if=\"::datepickerCtrl.time.mode === 'range'\" translate>From:</span> <span ng-if=\"::datepickerCtrl.time.mode !== 'range'\" translate>Date:</span> <input name=sdate ui-date=datepickerCtrl.sdateOptions ng-model=datepickerCtrl.sdate required> </div> <div class=ngeo-datepicker-end-date ng-if=\"::datepickerCtrl.time.mode === 'range'\"> <span translate>To:</span> <input name=edate ui-date=datepickerCtrl.edateOptions ng-model=datepickerCtrl.edate required> </div> </div> </form> </div> ");
a.put("ngeo/layertree.html",'<span ng-if=::!layertreeCtrl.isRoot>{{::layertreeCtrl.node.name}}</span> <input type=checkbox ng-if="::layertreeCtrl.node && !layertreeCtrl.node.children" ng-model=layertreeCtrl.getSetActive ng-model-options="{getterSetter: true}"> <ul ng-if=::layertreeCtrl.node.children> <li ng-repeat="node in ::layertreeCtrl.node.children" ngeo-layertree=::node ngeo-layertree-notroot ngeo-layertree-map=layertreeCtrl.map ngeo-layertree-nodelayerexpr=layertreeCtrl.nodelayerExpr ngeo-layertree-listenersexpr=layertreeCtrl.listenersExpr> </li> </ul> ');
a.put("ngeo/colorpicker.html",'<table class=ngeo-colorpicker-palette> <tr ng-repeat="colors in ::ctrl.colors"> <td ng-repeat="color in ::colors" ng-click=ctrl.setColor(color) ng-class="{\'ngeo-colorpicker-selected\': color == ctrl.color}"> <div ng-style="::{\'background-color\': color}"></div> </td> </tr> </table> ')}a.$inject=["$templateCache"];S.run(a)})();}).call(window);
//# sourceMappingURL=colorpicker.js.map
