{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/format/FeatureHashStyleType.js","webpack:///./src/format/FeatureHash.js","webpack:///./examples/permalink.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","11","exports","module","l","m","c","d","name","getter","o","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","p","jsonpArray","window","oldJsonpFunction","bind","slice","FeatureHashStyleType","LINE_STRING","POINT","POLYGON","FeatureHash_exports","opt_options","TextFeature","this","options","undefined","accuracy_","accuracy","ACCURACY_","encodeStyles_","encodeStyles","propertiesFunction_","properties","defaultPropertiesFunction_","setStyle_","setStyle","prevX_","prevY_","LegacyProperties_","propertiesType","ol","StyleTypes_","LineString","Point","Polygon","MultiLineString","MultiPoint","MultiPolygon","readFeature","readFeatures","readGeometry","writeFeature","writeFeatures","writeGeometry","CHAR64_","feature","getProperties","encodeSignedNumber_","num","signedNum","encodeNumber_","encodedNumber","charAt","styles","geometryType","encodedStyles","styleType","goog_asserts_prod","assert","style","fillStyle","getFill","imageStyle","getImage","strokeStyle","getStroke","textStyle","getText","encodeStylePolygon_","encodeStyleLine_","encodeStylePoint_","encodeStyleText_","encodeStyleStroke_","Circle","radius","getRadius","encodeURIComponent","encodeStyleFill_","opt_propertyName","propertyName","fillColor","getColor","Array","isArray","fillColorRgba","color","fillColorHex","utils","rgbArrayToHex","strokeColor","strokeColorRgba","strokeColorHex","strokeWidth","getWidth","fontStyle","getFont","font","split","readLineStringGeometry_","text","substring","flatCoordinates","decodeCoordinates_","lineString","setFlatCoordinates","GeometryLayout","XY","readMultiLineStringGeometry_","ends","lineStrings","ii","multiLineString","readPointGeometry_","point","readMultiPointGeometry_","multiPoint","readPolygonGeometry_","rings","end","polygon","readMultiPolygonGeometry_","endss","polygons","jj","multipolygon","setStyleInFeature_","getStyleProperties_","fontSize","fontColor","pointRadius","Fill","Stroke","width","fill","stroke","Text","Style","image","setStyleProperties_","geometry","getGeometry","FeatureProperties","IS_TEXT","parseFloat","indexOf","Math","round","clone","key","setProperties","castValue_","numProperties","ANGLE","OPACITY","SIZE","STROKE","boolProperties","IS_CIRCLE","IS_RECTANGLE","SHOW_MEASURE","SHOW_LABEL","array","parts","keyVal","decodeURIComponent","val","writeLineStringGeometry_","assertInstanceof","getFlatCoordinates","stride","getStride","encodeCoordinates_","writeMultiLineStringGeometry_","getEnds","lineStringCount","offset","textArray","join","writePointGeometry_","writeMultiPointGeometry_","encodeRings_","linearRingCount","writePolygonGeometry_","writeMultiPolygonGeometry_","getEndss","polygonCount","GEOMETRY_READERS_","P","L","A","a","GEOMETRY_WRITERS_","opt_flatCoordinates","len","index","b","dx","dy","encodedCoordinates","x","y","floor","readFeatureFromText","splitIndex","geometryText","readGeometryFromText","Feature","attributesAndStylesText","attributesText","set","stylesText","readFeaturesFromText","features","geometryReader","writeFeatureText","encodedParts","encodedGeometry","writeGeometryText","encodedProperties","propFunction","getGeometryName","encoded","replace","toString","styleFunction","getStyleFunction","getType","writeFeaturesText","geometryWriter","transformedGeometry","format_Feature","FeatureHash","permalink_exports","angular","map_module","debounce","statemanager_module","mapComponent","controller","bindings","map","template","component","MapComponentController","ngeoLocation","ngeoDebounce","ngeoLocation_","ngeoDebounce_","$onInit","_this","view","getView","zoom","getParam","center","setCenter","setZoom","updateParams","z","on","e","getCenter","params","getZoom","drawComponent","layer","DrawComponentController","$scope","scope_","featureSeq_","interaction","_this2","vectorSource","getSource","Draw","type","source","setActive","addInteraction","decorate","fhFormat","getFeatures","encodedFeatures","$applyAsync","addFeatures","clearLayer","clear","deleteParam","MainController","Map","layers","Tile","OSM","source_Vector","vectorLayer","Vector","setMap","__webpack_exports__"],"mappings":"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","file":"permalink.aded34.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t11: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([346,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/**\n * @module ngeo.format.FeatureHashStyleType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.FeatureHash\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoFormatFeatureHashStyleType from 'ngeo/format/FeatureHashStyleType.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport * as olArray from 'ol/array.js';\nimport * as olFormatFeature from 'ol/format/Feature.js';\nimport olFormatTextFeature from 'ol/format/TextFeature.js';\nimport olGeomGeometryLayout from 'ol/geom/GeometryLayout.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @classdesc\n * Provide an OpenLayers format for encoding and decoding features for use\n * in permalinks.\n *\n * The code is based on Stéphane Brunner's URLCompressed format.\n *\n * TODOs:\n *\n * - The OpenLayers-URLCompressed format has options where the user\n *   can define attribute and style transformers. This is currently\n *   not supported by this format.\n * - The OpenLayers-URLCompressed format has a \"simplify\" option.\n *   This format does not have it.\n * - ol.style.Icon styles are not supported.\n * - Transformation of coordinates during encoding and decoding is\n *   not supported.\n *\n * @see https://github.com/sbrunner/OpenLayers-URLCompressed\n * @constructor\n * @struct\n * @extends {ol.format.TextFeature}\n * @param {ngeox.format.FeatureHashOptions=} opt_options Options.\n */\nconst exports = function(opt_options) {\n\n  olFormatTextFeature.call(this);\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.accuracy_ = options.accuracy !== undefined ?\n    options.accuracy : exports.ACCURACY_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.encodeStyles_ = options.encodeStyles !== undefined ?\n    options.encodeStyles : true;\n\n  /**\n   * @type {function(ol.Feature):Object.<string, (string|number)>}\n   * @private\n   */\n  this.propertiesFunction_ = options.properties !== undefined ?\n    options.properties : exports.defaultPropertiesFunction_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.setStyle_ = options.setStyle !== undefined ? options.setStyle : true;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevX_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevY_ = 0;\n\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  exports.LegacyProperties_ = (options.propertiesType !== undefined) &&  options.propertiesType;\n\n};\n\nolBase.inherits(exports, olFormatTextFeature);\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.format.FeatureHashStyleType>}\n * @private\n */\nexports.StyleTypes_ = {\n  'LineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'Point': ngeoFormatFeatureHashStyleType.POINT,\n  'Polygon': ngeoFormatFeatureHashStyleType.POLYGON,\n  'MultiLineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'MultiPoint': ngeoFormatFeatureHashStyleType.POINT,\n  'MultiPolygon': ngeoFormatFeatureHashStyleType.POLYGON\n};\n\n/**\n * @type {Object.<string, string>}\n * @private\n */\nexports.LegacyProperties_ = {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeGeometry;\n\n\n/**\n * Characters used to encode the coordinates. The characters \"~\", \"'\", \"(\"\n * and \")\" are not part of this character set, and used as separators (for\n * example to separate the coordinates from the feature properties).\n * @const\n * @private\n */\nexports.CHAR64_ =\n    '.-_!*ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghjkmnpqrstuvwxyz';\n\n\n/**\n * @const\n * @private\n */\nexports.ACCURACY_ = 0.1;\n\n\n/**\n * Get features's properties.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, (string|number)>} The feature properties to\n * serialize.\n * @private\n */\nexports.defaultPropertiesFunction_ = function(feature) {\n  return feature.getProperties();\n};\n\n\n/**\n * Sign then encode a number.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeSignedNumber_ = function(num) {\n  let signedNum = num << 1;\n  if (num < 0) {\n    signedNum = ~(signedNum);\n  }\n  return exports.encodeNumber_(signedNum);\n};\n\n\n/**\n * Transform a number into a logical sequence of characters.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeNumber_ = function(num) {\n  let encodedNumber = '';\n  while (num >= 0x20) {\n    encodedNumber += exports.CHAR64_.charAt(\n      0x20 | (num & 0x1f));\n    num >>= 5;\n  }\n  encodedNumber += exports.CHAR64_.charAt(num);\n  return encodedNumber;\n};\n\n\n/**\n * For a type of geometry, transforms an array of {@link ol.style.Style} into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {Array.<ol.style.Style>} styles Styles.\n * @param {ol.geom.GeometryType} geometryType Geometry type.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyles_ = function(styles, geometryType, encodedStyles) {\n  const styleType = exports.StyleTypes_[geometryType];\n  googAsserts.assert(styleType !== undefined);\n  for (let i = 0; i < styles.length; ++i) {\n    const style = styles[i];\n    const fillStyle = style.getFill();\n    const imageStyle = style.getImage();\n    const strokeStyle = style.getStroke();\n    const textStyle = style.getText();\n    if (styleType == ngeoFormatFeatureHashStyleType.POLYGON) {\n      if (fillStyle !== null) {\n        exports.encodeStylePolygon_(\n          fillStyle, strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.LINE_STRING) {\n      if (strokeStyle !== null) {\n        exports.encodeStyleLine_(strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.POINT) {\n      if (imageStyle !== null) {\n        exports.encodeStylePoint_(imageStyle, encodedStyles);\n      }\n    }\n    if (textStyle !== null) {\n      exports.encodeStyleText_(textStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleLine_ = function(strokeStyle, encodedStyles) {\n  exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n};\n\n\n/**\n * Transform an {@link ol.style.Circle} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Image} imageStyle Image style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePoint_ = function(imageStyle, encodedStyles) {\n  if (imageStyle instanceof olStyleCircle) {\n    const radius = imageStyle.getRadius();\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`pointRadius*${radius}`));\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      exports.encodeStyleFill_(fillStyle, encodedStyles);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and an {@link ol.style.Stroke} into\n * a logical sequence of characters and put the result into the given\n * encoded styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePolygon_ = function(fillStyle, strokeStyle, encodedStyles) {\n  exports.encodeStyleFill_(fillStyle, encodedStyles);\n  if (strokeStyle !== null) {\n    exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and optionally its properties into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @param {string=} opt_propertyName Property name.\n * @private\n */\nexports.encodeStyleFill_ = function(fillStyle, encodedStyles, opt_propertyName) {\n  const propertyName = opt_propertyName !== undefined ?\n    opt_propertyName : 'fillColor';\n  const fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    const fillColorRgba = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColorRgba), 'fill color must be an array');\n    const fillColorHex = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(\n      encodeURIComponent(`${propertyName}*${fillColorHex}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleStroke_ = function(strokeStyle, encodedStyles) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    const strokeColorHex = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeColor*${strokeColorHex}`));\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeWidth*${strokeWidth}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Text} into a logical sequence of characters and\n * put the result into the given encoded styles's array.\n * @param {ol.style.Text} textStyle Text style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleText_ = function(textStyle, encodedStyles) {\n  const fontStyle = textStyle.getFont();\n  if (fontStyle !== undefined) {\n    const font = fontStyle.split(' ');\n    if (font.length >= 3) {\n      if (encodedStyles.length > 0) {\n        encodedStyles.push('\\'');\n      }\n      encodedStyles.push(encodeURIComponent(`fontSize*${font[1]}`));\n    }\n  }\n  const fillStyle = textStyle.getFill();\n  if (fillStyle !== null) {\n    exports.encodeStyleFill_(\n      fillStyle, encodedStyles, 'fontColor');\n  }\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.LineString}.\n * @param {string} text Text.\n * @return {ol.geom.LineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'l(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const lineString = new olGeomLineString(null);\n  lineString.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiLineString}.\n * @param {string} text Text.\n * @return {ol.geom.MultiLineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'L(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const lineStrings = text.split('\\'');\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(lineStrings[i], flatCoordinates);\n    ends[i] = flatCoordinates.length;\n  }\n  const multiLineString = new olGeomMultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return multiLineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Point}.\n * @param {string} text Text.\n * @return {ol.geom.Point} Point.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'p(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  googAsserts.assert(flatCoordinates.length === 2);\n  const point = new olGeomPoint(null);\n  point.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return point;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPoint}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPoint} MultiPoint.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'P(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const multiPoint = new olGeomMultiPoint(null);\n  multiPoint.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return multiPoint;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Polygon}.\n * @param {string} text Text.\n * @return {ol.geom.Polygon} Polygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'a(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const rings = text.split('\\'');\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(rings[i], flatCoordinates);\n    let end = flatCoordinates.length;\n    if (i === 0) {\n      flatCoordinates[end++] = flatCoordinates[0];\n      flatCoordinates[end++] = flatCoordinates[1];\n    } else {\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1]];\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1] + 1];\n    }\n    ends[i] = end;\n  }\n  const polygon = new olGeomPolygon(null);\n  polygon.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return polygon;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPolygon}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'A(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const endss = [];\n  const polygons = text.split(')(');\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const rings = polygons[i].split('\\'');\n    const ends = endss[i] = [];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      flatCoordinates = this.decodeCoordinates_(rings[j], flatCoordinates);\n      let end = flatCoordinates.length;\n      if (j === 0) {\n        flatCoordinates[end++] = flatCoordinates[0];\n        flatCoordinates[end++] = flatCoordinates[1];\n      } else {\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1]];\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1] + 1];\n      }\n      ends[j] = end;\n    }\n  }\n  const multipolygon = new olGeomMultiPolygon(null);\n  multipolygon.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, endss);\n  return multipolygon;\n};\n\n\n/**\n * DEPRECATED - Use the `ngeo.misc.FeatureHelper` instead in combination with the\n * `setStyle: false` option.\n *\n * Read a logical sequence of characters and apply the decoded style on the\n * given feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleInFeature_ = function(text, feature) {\n  if (text == '') {\n    return;\n  }\n  const properties = exports.getStyleProperties_(text, feature);\n  const fillColor = properties['fillColor'];\n  const fontSize = properties['fontSize'];\n  const fontColor = properties['fontColor'];\n  const pointRadius = properties['pointRadius'];\n  const strokeColor = properties['strokeColor'];\n  const strokeWidth = properties['strokeWidth'];\n\n  let fillStyle = null;\n  if (fillColor !== undefined) {\n    fillStyle = new olStyleFill({\n      color: /** @type {Array<number>|string} */ (fillColor)\n    });\n  }\n  let strokeStyle = null;\n  if (strokeColor !== undefined && strokeWidth !== undefined) {\n    strokeStyle = new olStyleStroke({\n      color: /** @type {Array<number>|string} */ (strokeColor),\n      width: /** @type {number} */ (strokeWidth)\n    });\n  }\n  let imageStyle = null;\n  if (pointRadius !== undefined) {\n    imageStyle = new olStyleCircle({\n      radius: /** @type {number} */ (pointRadius),\n      fill: fillStyle,\n      stroke: strokeStyle\n    });\n    fillStyle = strokeStyle = null;\n  }\n  let textStyle = null;\n  if (fontSize !== undefined && fontColor !== undefined) {\n    textStyle = new olStyleText({\n      font: `${fontSize} sans-serif`,\n      fill: new olStyleFill({\n        color: /** @type {Array<number>|string} */ (fontColor)\n      })\n    });\n  }\n  const style = new olStyleStyle({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle\n  });\n  feature.setStyle(style);\n};\n\n\n/**\n * Read a logical sequence of characters and apply the decoded result as\n * style properties for the feature. Legacy keys are converted to the new ones\n * for compatibility.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleProperties_ = function(text, feature) {\n\n  const properties = exports.getStyleProperties_(text, feature);\n  const geometry = feature.getGeometry();\n\n  // Deal with legacy properties\n  if (geometry instanceof olGeomPoint) {\n    if (properties['isLabel'] ||\n        properties[ngeoFormatFeatureProperties.IS_TEXT]) {\n      delete properties['strokeColor'];\n      delete properties['fillColor'];\n    } else {\n      delete properties['fontColor'];\n      delete properties['fontSize'];\n    }\n  } else {\n    delete properties['fontColor'];\n\n    if (geometry instanceof olGeomLineString) {\n      delete properties['fillColor'];\n      delete properties['fillOpacity'];\n    }\n  }\n\n  // Convert font size from px to pt\n  if (properties['fontSize']) {\n    let fontSize = parseFloat(properties['fontSize']);\n    if (properties['fontSize'].indexOf('px') !== -1) {\n      fontSize = Math.round(fontSize / 1.333333);\n    }\n    properties['fontSize'] = fontSize;\n  }\n\n  // Convert legacy properties\n  const clone = {};\n  for (const key in properties) {\n    const value = properties[key];\n    if (exports.LegacyProperties_[key]) {\n      clone[exports.LegacyProperties_[key]] = value;\n    } else {\n      clone[key] = value;\n    }\n  }\n\n  feature.setProperties(clone);\n};\n\n\n/**\n * Cast values in the correct type depending on the property.\n * @param {string} key Key.\n * @param {string} value Value.\n * @return {number|boolean|string} The casted value corresponding to the key.\n * @private\n */\nexports.castValue_ = function(key, value) {\n  const numProperties = [\n    ngeoFormatFeatureProperties.ANGLE,\n    ngeoFormatFeatureProperties.OPACITY,\n    ngeoFormatFeatureProperties.SIZE,\n    ngeoFormatFeatureProperties.STROKE,\n    'pointRadius',\n    'strokeWidth'\n  ];\n  const boolProperties = [\n    ngeoFormatFeatureProperties.IS_CIRCLE,\n    ngeoFormatFeatureProperties.IS_RECTANGLE,\n    ngeoFormatFeatureProperties.IS_TEXT,\n    ngeoFormatFeatureProperties.SHOW_MEASURE,\n    ngeoFormatFeatureProperties.SHOW_LABEL,\n    'isCircle',\n    'isRectangle',\n    'isLabel',\n    'showMeasure',\n    'showLabel'\n  ];\n\n  if (olArray.includes(numProperties, key)) {\n    return +value;\n  } else if (olArray.includes(boolProperties, key)) {\n    return (value === 'true') ? true : false;\n  } else {\n    return value;\n  }\n};\n\n\n/**\n * From a logical sequence of characters, create and return an object of\n * style properties for a feature. The values are cast in the correct type\n * depending on the property. Some properties are also deleted when they don't\n * match the geometry of the feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, boolean|number|string>} The style properties for\n *     the feature.\n * @private\n */\nexports.getStyleProperties_ = function(text, feature) {\n  const parts = text.split('\\'');\n  const properties = {};\n\n  for (let i = 0; i < parts.length; ++i) {\n    const part = decodeURIComponent(parts[i]);\n    const keyVal = part.split('*');\n    googAsserts.assert(keyVal.length === 2);\n    const key = keyVal[0];\n    const val = keyVal[1];\n\n    properties[key] = exports.castValue_(key, val);\n  }\n\n  return properties;\n};\n\n\n/**\n * Encode a {@link ol.geom.LineString} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomLineString);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `l(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode a {@link ol.geom.MultiLineString} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiLineString);\n  const ends = geometry.getEnds();\n  const lineStringCount = ends.length;\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  let offset = 0;\n  const textArray = ['L('];\n  for (let i = 0; i < lineStringCount; ++i) {\n    const end = ends[i];\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = end;\n  }\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode a {@link ol.geom.Point} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `p(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoint} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `P(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Helper to encode an {@link ol.geom.Polygon} geometry.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {Array.<string>} textArray Text array.\n * @return {number} The new offset.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.encodeRings_ = function(flatCoordinates, stride, offset, ends, textArray) {\n  const linearRingCount = ends.length;\n  for (let i = 0; i < linearRingCount; ++i) {\n    // skip the \"closing\" point\n    const end = ends[i] - stride;\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = ends[i];\n  }\n  return offset;\n};\n\n\n/**\n * Encode an {@link ol.geom.Polygon} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const ends = geometry.getEnds();\n  const offset = 0;\n  const textArray = ['a('];\n  exports.encodeRings_.call(this,\n    flatCoordinates, stride, offset, ends, textArray);\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoligon} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const endss = geometry.getEndss();\n  const polygonCount = endss.length;\n  let offset = 0;\n  const textArray = ['A'];\n  for (let i = 0; i < polygonCount; ++i) {\n    const ends = endss[i];\n    textArray.push('(');\n    offset = exports.encodeRings_.call(this,\n      flatCoordinates, stride, offset, ends, textArray);\n    textArray.push(')');\n  }\n  return textArray.join('');\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(string):ol.geom.Geometry>}\n */\nexports.GEOMETRY_READERS_ = {\n  'P': exports.readMultiPointGeometry_,\n  'L': exports.readMultiLineStringGeometry_,\n  'A': exports.readMultiPolygonGeometry_,\n  'l': exports.readLineStringGeometry_,\n  'p': exports.readPointGeometry_,\n  'a': exports.readPolygonGeometry_\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(ol.geom.Geometry):string>}\n */\nexports.GEOMETRY_WRITERS_ = {\n  'MultiLineString': exports.writeMultiLineStringGeometry_,\n  'MultiPoint': exports.writeMultiPointGeometry_,\n  'MultiPolygon': exports.writeMultiPolygonGeometry_,\n  'LineString': exports.writeLineStringGeometry_,\n  'Point': exports.writePointGeometry_,\n  'Polygon': exports.writePolygonGeometry_\n};\n\n\n/**\n * Read a logical sequence of characters and return (or complete then return)\n * an array of numbers. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * corresponding to a geometry's coordinates.\n * @param {string} text Text.\n * @param {Array.<number>=} opt_flatCoordinates Flat coordinates array.\n * @return {Array.<number>} Flat coordinates.\n * @private\n */\nexports.prototype.decodeCoordinates_ = function(text, opt_flatCoordinates) {\n  const len = text.length;\n  let index = 0;\n  const flatCoordinates = opt_flatCoordinates !== undefined ?\n    opt_flatCoordinates : [];\n  let i = flatCoordinates.length;\n  while (index < len) {\n    let b;\n    let shift = 0;\n    let result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dx = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevX_ += dx;\n    shift = 0;\n    result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dy = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevY_ += dy;\n    flatCoordinates[i++] = this.prevX_ * this.accuracy_;\n    flatCoordinates[i++] = this.prevY_ * this.accuracy_;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * Encode an array of number (corresponding to some coordinates) into a\n * logical sequence of characters. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @return {string} String.\n * @private\n */\nexports.prototype.encodeCoordinates_ = function(flatCoordinates, stride, offset, end) {\n  let encodedCoordinates = '';\n  for (let i = offset; i < end; i += stride) {\n    let x = flatCoordinates[i];\n    let y = flatCoordinates[i + 1];\n    x = Math.floor(x / this.accuracy_);\n    y = Math.floor(y / this.accuracy_);\n    const dx = x - this.prevX_;\n    const dy = y - this.prevY_;\n    this.prevX_ = x;\n    this.prevY_ = y;\n    encodedCoordinates += exports.encodeSignedNumber_(dx) +\n        exports.encodeSignedNumber_(dy);\n  }\n  return encodedCoordinates;\n};\n\n\n/**\n * Read a feature from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @protected\n * @override\n */\nexports.prototype.readFeatureFromText = function(text, opt_options) {\n  googAsserts.assert(text.length > 2);\n  googAsserts.assert(text[1] === '(');\n  googAsserts.assert(text[text.length - 1] === ')');\n  let splitIndex = text.indexOf('~');\n  const geometryText = splitIndex >= 0 ?\n    `${text.substring(0, splitIndex)})` : text;\n  const geometry = this.readGeometryFromText(geometryText, opt_options);\n  const feature = new olFeature(geometry);\n  if (splitIndex >= 0) {\n    const attributesAndStylesText = text.substring(\n      splitIndex + 1, text.length - 1);\n    splitIndex = attributesAndStylesText.indexOf('~');\n    const attributesText = splitIndex >= 0 ?\n      attributesAndStylesText.substring(0, splitIndex) :\n      attributesAndStylesText;\n    if (attributesText != '') {\n      const parts = attributesText.split('\\'');\n      for (let i = 0; i < parts.length; ++i) {\n        const part = decodeURIComponent(parts[i]);\n        const keyVal = part.split('*');\n        googAsserts.assert(keyVal.length === 2);\n        let key = keyVal[0];\n        const value = keyVal[1];\n        if (!this.setStyle_ && exports.LegacyProperties_[key]) {\n          key = exports.LegacyProperties_[key];\n        }\n        feature.set(key, exports.castValue_(key, value));\n      }\n    }\n    if (splitIndex >= 0) {\n      const stylesText = attributesAndStylesText.substring(splitIndex + 1);\n      if (this.setStyle_) {\n        exports.setStyleInFeature_(stylesText, feature);\n      } else {\n        exports.setStyleProperties_(stylesText, feature);\n      }\n    }\n  }\n  return feature;\n};\n\n\n/**\n * Read multiple features from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @protected\n * @override\n */\nexports.prototype.readFeaturesFromText = function(text, opt_options) {\n  googAsserts.assert(text[0] === 'F');\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  text = text.substring(1);\n  while (text.length > 0) {\n    const index = text.indexOf(')');\n    googAsserts.assert(index >= 0);\n    const feature = this.readFeatureFromText(\n      text.substring(0, index + 1), opt_options);\n    features.push(feature);\n    text = text.substring(index + 1);\n  }\n  return features;\n};\n\n\n/**\n * Read a geometry from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @protected\n * @override\n */\nexports.prototype.readGeometryFromText = function(text, opt_options) {\n  const geometryReader = exports.GEOMETRY_READERS_[text[0]];\n  googAsserts.assert(geometryReader !== undefined);\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryReader.call(this, text);\n};\n\n\n/**\n * Encode a feature into a logical sequence of characters.\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded feature.\n * @protected\n * @override\n */\nexports.prototype.writeFeatureText = function(feature, opt_options) {\n  const /** @type {Array.<string>} */ encodedParts = [];\n\n  // encode geometry\n\n  let encodedGeometry = '';\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    encodedGeometry = this.writeGeometryText(geometry, opt_options);\n  }\n\n  if (encodedGeometry.length > 0) {\n    // remove the final bracket\n    googAsserts.assert(encodedGeometry[encodedGeometry.length - 1] === ')');\n    encodedGeometry = encodedGeometry.substring(0, encodedGeometry.length - 1);\n    encodedParts.push(encodedGeometry);\n  }\n\n  // encode properties\n\n  const /** @type {Array.<string>} */ encodedProperties = [];\n  const propFunction = this.propertiesFunction_(feature);\n  for (const key in propFunction) {\n    const value = propFunction[key];\n    if (value !== undefined && value !== null && key !== feature.getGeometryName()) {\n      if (encodedProperties.length !== 0) {\n        encodedProperties.push('\\'');\n      }\n      const encoded = encodeURIComponent(\n        `${key.replace(/[()'*]/g, '_')}*${\n          value.toString().replace(/[()'*]/g, '_')}`);\n      encodedProperties.push(encoded);\n    }\n  }\n\n  if (encodedProperties.length > 0) {\n    encodedParts.push('~');\n    Array.prototype.push.apply(encodedParts, encodedProperties);\n  }\n\n  // encode styles\n\n  if (this.encodeStyles_) {\n    const styleFunction = feature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      let styles = styleFunction.call(feature, 0);\n      if (styles !== null) {\n        const encodedStyles = [];\n        styles = Array.isArray(styles) ? styles : [styles];\n        exports.encodeStyles_(\n          styles, geometry.getType(), encodedStyles);\n        if (encodedStyles.length > 0) {\n          encodedParts.push('~');\n          Array.prototype.push.apply(encodedParts, encodedStyles);\n        }\n      }\n    }\n  }\n\n  // append the closing bracket and return the encoded feature\n\n  encodedParts.push(')');\n  return encodedParts.join('');\n};\n\n\n/**\n * Encode an array of features into a logical sequence of characters.\n * @param {Array.<ol.Feature>} features Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded features.\n * @protected\n * @override\n */\nexports.prototype.writeFeaturesText = function(features, opt_options) {\n  const textArray = [];\n  if (features.length > 0) {\n    textArray.push('F');\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      textArray.push(this.writeFeatureText(features[i], opt_options));\n    }\n  }\n  return textArray.join('');\n};\n\n\n/**\n * Encode a geometry into a logical sequence of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded geometry.\n * @protected\n * @override\n */\nexports.prototype.writeGeometryText = function(geometry, opt_options) {\n  const geometryWriter = exports.GEOMETRY_WRITERS_[\n    geometry.getType()];\n  googAsserts.assert(geometryWriter !== undefined);\n  const transformedGeometry = /** @type {ol.geom.Geometry} */\n      (olFormatFeature.transformWithOptions(geometry, true, opt_options));\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryWriter.call(this, transformedGeometry);\n};\n\n\nexport default exports;\n","/**\n * @module app.permalink\n */\nconst exports = {};\n\nimport './permalink.css';\nimport ngeoFormatFeatureHash from 'ngeo/format/FeatureHash.js';\n\nimport ngeoMapModule from 'ngeo/map/module.js';\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport olMap from 'ol/Map.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceOSM from 'ol/source/OSM.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('app', [\n  'gettext',\n  ngeoMapModule.name,\n  ngeoMiscDebounce.name,\n  ngeoStatemanagerModule.name,\n]);\n\n/**\n * An application-specific map component that updates the URL in the browser\n * address bar when the map view changes. It also sets the initial view based\n * on the URL query params at init time.\n *\n * This component gets a reference to the map instance through the \"app-map\"\n * attribute.\n *\n * @type {!angular.Component}\n */\nexports.mapComponent = {\n  controller: 'AppMapController as ctrl',\n  bindings: {\n    'map': '=appMap'\n  },\n  template: '<div ngeo-map=ctrl.map></div>'\n};\n\n\nexports.module.component('appMap', exports.mapComponent);\n\n\n/**\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo Location service.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @constructor\n * @ngInject\n */\nexports.MapComponentController = function(ngeoLocation, ngeoDebounce) {\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n};\n\nexports.module.controller('AppMapController', exports.MapComponentController);\n\nexports.MapComponentController.prototype.$onInit = function() {\n  const view = this.map.getView();\n\n  let zoom = this.ngeoLocation_.getParam('z');\n  zoom = zoom !== undefined ? +zoom : 4;\n\n  const x = this.ngeoLocation_.getParam('x');\n  const y = this.ngeoLocation_.getParam('y');\n  const center = (x !== undefined) && (y !== undefined) ?\n    [+x, +y] : [0, 0];\n\n  view.setCenter(center);\n  view.setZoom(zoom);\n\n  this.ngeoLocation_.updateParams({\n    'z': zoom,\n    'x': Math.round(center[0]),\n    'y': Math.round(center[1])\n  });\n\n  view.on('propertychange',\n    this.ngeoDebounce_(\n      /**\n       * @param {ol.Object.Event} e Object event.\n       */\n      (e) => {\n        const center = view.getCenter();\n        const params = {\n          'z': view.getZoom(),\n          'x': Math.round(center[0]),\n          'y': Math.round(center[1])\n        };\n        this.ngeoLocation_.updateParams(params);\n      }, 300, /* invokeApply */ true));\n};\n\n/**\n * A draw component that adds a simple draw tool.\n *\n * @type {!angular.Component}\n */\nexports.drawComponent = {\n  controller: 'AppDrawController as ctrl',\n  bindings: {\n    'map': '=appDrawMap',\n    'layer': '=appDrawLayer'\n  },\n  template:\n      '<label>Enable drawing:' +\n      '<input type=\"checkbox\" ng-model=\"ctrl.interaction.active\" />' +\n      '</label><br>' +\n      '<button ng-click=\"ctrl.clearLayer()\">Clear layer</button>'\n};\n\n\nexports.module.component('appDraw', exports.drawComponent);\n\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @param {!ngeo.statemanager.Location} ngeoLocation ngeo Location service.\n * @constructor\n * @export\n * @ngInject\n */\nexports.DrawComponentController = function($scope, ngeoLocation) {\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {ol.layer.Vector}\n   */\n  this.layer;\n\n  /**\n   * @type {!ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.featureSeq_ = 0;\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.interaction;\n};\n\nexports.DrawComponentController.prototype.$onInit = function() {\n  const vectorSource = this.layer.getSource();\n\n  this.interaction = new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n    source: vectorSource\n  });\n\n  this.interaction.setActive(false);\n  this.map.addInteraction(this.interaction);\n  ngeoMiscDecorate.interaction(this.interaction);\n\n  this.interaction.on('drawend', function(e) {\n    e.feature.set('id', ++this.featureSeq_);\n  }, this);\n\n  // Deal with the encoding and decoding of features in the URL.\n\n  const fhFormat = new ngeoFormatFeatureHash();\n\n  vectorSource.on('addfeature', (e) => {\n    const feature = e.feature;\n    feature.setStyle(new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: [255, 0, 0, 1],\n        width: 2\n      })\n    }));\n    const features = vectorSource.getFeatures();\n    const encodedFeatures = fhFormat.writeFeatures(features);\n    this.scope_.$applyAsync(() => {\n      this.ngeoLocation_.updateParams({'features': encodedFeatures});\n    });\n  });\n\n  const encodedFeatures = this.ngeoLocation_.getParam('features');\n  if (encodedFeatures !== undefined) {\n    const features = fhFormat.readFeatures(encodedFeatures);\n    this.featureSeq_ = features.length;\n    vectorSource.addFeatures(features);\n  }\n};\n\n\n/**\n * Clear the vector layer.\n * @export\n */\nexports.DrawComponentController.prototype.clearLayer = function() {\n  this.layer.getSource().clear(true);\n  this.featureSeq_ = 0;\n  this.ngeoLocation_.deleteParam('features');\n};\n\nexports.module.controller('AppDrawController', exports.DrawComponentController);\n\n\n/**\n * @constructor\n */\nexports.MainController = function() {\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ]\n  });\n\n\n  const vectorSource = new olSourceVector();\n\n  /**\n   * @type {ol.layer.Vector}\n   * @export\n   */\n  this.vectorLayer = new olLayerVector({\n    source: vectorSource\n  });\n\n  // Use vectorLayer.setMap(map) rather than map.addLayer(vectorLayer). This\n  // makes the vector layer \"unmanaged\", meaning that it is always on top.\n  this.vectorLayer.setMap(this.map);\n\n};\n\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n"],"sourceRoot":""}