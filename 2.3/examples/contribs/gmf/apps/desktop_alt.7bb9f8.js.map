{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/goog.asserts.prod.js","webpack:///./src/GeometryType.js","webpack:///./src/format/FeatureProperties.js","webpack:///./src/format/AttributeType.js","webpack:///./contribs/gmf/src/theme/Themes.js","webpack:///./src/rule/Rule.js","webpack:///./src/datasource/OGC.js","webpack:///./contribs/gmf/src/index.js","webpack:///./src/misc/FeatureHelper.js","webpack:///./src/misc/ToolActivate.js","webpack:///./src/utils.js","webpack:///./src/message/Message.js","webpack:///./src/CustomEvent.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./src/rule/Geometry.js","webpack:///./src/map/LayerHelper.js","webpack:///./src/layertree/Controller.js","webpack:///./src/interaction/Measure.js","webpack:///./src/misc/filters.js","webpack:///./src/query/MapQuerent.js","webpack:///./contribs/gmf/src/layertree/TreeManager.js","webpack:///./src/misc/WMSTime.js","webpack:///./src/misc/decorate.js","webpack:///./src/misc/debounce.js","webpack:///./src/misc/EventHelper.js","webpack:///./contribs/gmf/src/layertree/SyncLayertreeMap.js","webpack:///./src/filter/Condition.js","webpack:///./src/rule/Date.js","webpack:///./src/rule/Text.js","webpack:///./src/filter/RuleHelper.js","webpack:///./src/datasource/File.js","webpack:///./src/datasource/FileGroup.js","webpack:///./src/datasource/OGCGroup.js","webpack:///./src/datasource/WMSGroup.js","webpack:///./contribs/gmf/src/datasource/ExternalDataSourcesManager.js","webpack:///./src/datasource/DataSources.js","webpack:///./contribs/gmf/src/editing/editFeatureComponent.js","webpack:///./contribs/gmf/src/theme/Manager.js","webpack:///./src/datasource/DataSource.js","webpack:///./src/rule/Select.js","webpack:///./src/misc/ToolActivateMgr.js","webpack:///./src/misc/btnComponent.js","webpack:///./src/statemanager/Service.js","webpack:///./src/interaction/common.js","webpack:///./contribs/gmf/src/authentication/Service.js","webpack:///./src/misc/Time.js","webpack:///./src/interaction/DrawAzimut.js","webpack:///./src/interaction/MeasureAzimut.js","webpack:///./src/message/popupComponent.js","webpack:///./src/message/Popup.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./src/format/XSDAttribute.js","webpack:///./src/datasource/Group.js","webpack:///./src/format/WFSAttribute.js","webpack:///./src/datasource/Helper.js","webpack:///./src/WFSDescribeFeatureType.js","webpack:///./src/query/Querent.js","webpack:///./contribs/gmf/src/editing/Snapping.js","webpack:///./src/interaction/Translate.js","webpack:///./src/interaction/Rotate.js","webpack:///./src/draw/features.js","webpack:///./src/Menu.js","webpack:///./src/statemanager/Location.js","webpack:///./src/download/service.js","webpack:///./contribs/gmf/src/datasource/DataSourceBeingFiltered.js","webpack:///./src/message/modalComponent.js","webpack:///./src/message/Notification.js","webpack:///./src/misc/php-date-formatter.js","webpack:///./contribs/gmf/src/permalink/ShareService.js","webpack:///./src/interaction/MeasureLength.js","webpack:///./src/interaction/MeasureArea.js","webpack:///./contribs/gmf/src/authentication/component.js","webpack:///./contribs/gmf/src/authentication/module.js","webpack:///./src/map/BackgroundLayerMgr.js","webpack:///./contribs/gmf/src/backgroundlayerselector/component.js","webpack:///./contribs/gmf/src/datasource/Helper.js","webpack:///./contribs/gmf/src/datasource/OGC.js","webpack:///./contribs/gmf/src/datasource/WFSAliases.js","webpack:///./contribs/gmf/src/datasource/Manager.js","webpack:///./contribs/gmf/src/datasource/module.js","webpack:///./src/message/Disclaimer.js","webpack:///./contribs/gmf/src/disclaimer/component.js","webpack:///./contribs/gmf/src/filters/SavedFilters.js","webpack:///./src/filter/ruleComponent.js","webpack:///./src/filter/component.js","webpack:///./contribs/gmf/src/filters/filterselectorComponent.js","webpack:///./contribs/gmf/src/filters/module.js","webpack:///./contribs/gmf/src/layertree/timeSliderComponent.js","webpack:///./contribs/gmf/src/layertree/module.js","webpack:///./contribs/gmf/src/permalink/module.js","webpack:///./src/map/component.js","webpack:///./src/map/scaleselector.js","webpack:///./src/map/module.js","webpack:///./contribs/gmf/src/map/component.js","webpack:///./contribs/gmf/src/map/mousepositionComponent.js","webpack:///./contribs/gmf/src/map/module.js","webpack:///./src/grid/Config.js","webpack:///./src/grid/component.js","webpack:///./contribs/gmf/src/query/gridComponent.js","webpack:///./src/misc/swipe.js","webpack:///./contribs/gmf/src/query/windowComponent.js","webpack:///./contribs/gmf/src/query/extraModule.js","webpack:///./contribs/gmf/src/search/module.js","webpack:///./contribs/gmf/src/theme/selectorComponent.js","webpack:///./contribs/gmf/src/theme/module.js","webpack:///./src/message/displaywindowComponent.js","webpack:///./src/misc/controlComponent.js","webpack:///./src/misc/filereaderComponent.js","webpack:///./src/misc/getBrowserLanguage.js","webpack:///./src/misc/extraModule.js","webpack:///./src/query/mapQueryComponent.js","webpack:///./src/statemanager/WfsPermalink.js","webpack:///./contribs/gmf/src/controllers/AbstractAppController.js","webpack:///./src/interaction/ModifyCircle.js","webpack:///./src/interaction/ModifyRectangle.js","webpack:///./src/interaction/Modify.js","webpack:///./contribs/gmf/src/import/wmsCapabilityLayertreeComponent.js","webpack:///./contribs/gmf/src/import/wmtsCapabilityLayertreeComponent.js","webpack:///./contribs/gmf/src/import/importdatasourceComponent.js","webpack:///./contribs/gmf/src/import/module.js","webpack:///./src/draw/Controller.js","webpack:///./src/draw/point.js","webpack:///./src/draw/rectangle.js","webpack:///./src/draw/text.js","webpack:///./src/measure/area.js","webpack:///./src/measure/azimut.js","webpack:///./src/measure/length.js","webpack:///./src/draw/component.js","webpack:///./contribs/gmf/src/editing/XSDAttributes.js","webpack:///./contribs/gmf/src/editing/EditFeature.js","webpack:///./contribs/gmf/src/raster/RasterService.js","webpack:///./src/proj/somerc.js","webpack:///./src/proj/EPSG21781.js","webpack:///./src/search/searchDirective.js","webpack:///./src/misc/colorpickerComponent.js","webpack:///./src/misc/AutoProjection.js","webpack:///./contribs/gmf/src/search/FulltextSearch.js","webpack:///./src/download/Csv.js","webpack:///./src/map/resizemap.js","webpack:///./contribs/gmf/src/permalink/shareComponent.js","webpack:///./contribs/gmf/src/layertree/datasourceGroupTreeComponent.js","webpack:///./src/statemanager/module.js","webpack:///./contribs/gmf/src/permalink/Permalink.js","webpack:///./src/misc/datepickerComponent.js","webpack:///./src/format/Attribute.js","webpack:///./contribs/gmf/src/editing/EnumerateAttribute.js","webpack:///./src/misc/File.js","webpack:///./contribs/gmf/src/controllers/AbstractDesktopController.js","webpack:///./src/format/FeatureHashStyleType.js","webpack:///./src/format/FeatureHash.js","webpack:///./contribs/gmf/src/contextualdata/component.js","webpack:///./contribs/gmf/src/contextualdata/module.js","webpack:///./src/print/VectorEncoder.js","webpack:///./src/print/Service.js","webpack:///./contribs/gmf/src/editing/editFeatureSelectorComponent.js","webpack:///./contribs/gmf/src/editing/module.js","webpack:///./src/search/createGeoJSONBloodhound.js","webpack:///./src/search/createLocationSearchBloodhound.js","webpack:///./src/search/module.js","webpack:///./contribs/gmf/src/drawing/featureStyleComponent.js","webpack:///./contribs/gmf/src/drawing/drawFeatureComponent.js","webpack:///./contribs/gmf/src/drawing/module.js","webpack:///./src/profile/d3Elevation.js","webpack:///./src/profile/elevationComponent.js","webpack:///./contribs/gmf/src/profile/component.js","webpack:///./contribs/gmf/src/profile/drawLineComponent.js","webpack:///./contribs/gmf/src/profile/module.js","webpack:///./src/query/bboxQueryComponent.js","webpack:///./contribs/gmf/src/raster/component.js","webpack:///./src/print/Utils.js","webpack:///./contribs/gmf/src/print/component.js","webpack:///./src/editing/createfeatureComponent.js","webpack:///./src/misc/datetimepickerComponent.js","webpack:///./src/editing/attributesComponent.js","webpack:///./src/editing/exportfeaturesComponent.js","webpack:///./src/misc/sortableComponent.js","webpack:///./src/message/popoverComponent.js","webpack:///./contribs/gmf/src/search/component.js","webpack:///./src/map/recenter.js","webpack:///./src/misc/syncArrays.js","webpack:///./src/layertree/component.js","webpack:///./src/olcs/constants.js","webpack:///./src/Popover.js","webpack:///./contribs/gmf/src/layertree/component.js","webpack:///./contribs/gmf/apps/appmodule.js","webpack:///./src/googlestreetview/component.js","webpack:///./src/googlestreetview/module.js","webpack:///./src/routing/NominatimService.js","webpack:///./src/routing/RoutingService.js","webpack:///./src/routing/NominatimInputComponent.js","webpack:///./src/routing/RoutingFeatureComponent.js","webpack:///./src/routing/RoutingComponent.js","webpack:///./src/routing/module.js","webpack:///./src/proj/EPSG2056.js","webpack:///./contribs/gmf/apps/desktop_alt/Controller.js","webpack:///./src/routing/routing.html","webpack:///./src/routing/routingfeature.html","webpack:///./src/routing/nominatiminput.html","webpack:///./src/googlestreetview/component.html","webpack:///./contribs/gmf/src/import/importdatasourceComponent.html","webpack:///./contribs/gmf/src/import/wmtsCapabilityLayertreeComponent.html","webpack:///./contribs/gmf/src/import/wmsCapabilityLayertreeComponent.html","webpack:///./contribs/gmf/src/raster/widgetComponent.html","webpack:///./contribs/gmf/src/profile/component.html","webpack:///./contribs/gmf/src/print/component.html","webpack:///./contribs/gmf/src/editing/editFeatureSelectorComponent.html","webpack:///./contribs/gmf/src/editing/editFeatureComponent.html","webpack:///./src/editing/attributescomponent.html","webpack:///./contribs/gmf/src/drawing/drawFeatureComponent.html","webpack:///./contribs/gmf/src/drawing/featureStyleComponent.html","webpack:///./src/message/displaywindowComponent.html","webpack:///./contribs/gmf/src/theme/selectorComponent.html","webpack:///./contribs/gmf/src/search/component.html","webpack:///./src/misc/colorpickerComponent.html","webpack:///./contribs/gmf/src/query/windowComponent.html","webpack:///./contribs/gmf/src/query/gridComponent.html","webpack:///./src/grid/component.html","webpack:///./contribs/gmf/src/map/mousepositionComponent.html","webpack:///./contribs/gmf/src/map/component.html","webpack:///./src/map/scaleselector.html","webpack:///./contribs/gmf/src/permalink/shareComponent.html","webpack:///./contribs/gmf/src/layertree/timesliderComponent.html","webpack:///./contribs/gmf/src/layertree/component.html","webpack:///./src/layertree/component.html","webpack:///./contribs/gmf/src/layertree/datasourceGroupTreeComponent.html","webpack:///./contribs/gmf/src/filters/filterselectorcomponent.html","webpack:///./src/filter/component.html","webpack:///./src/filter/rulecomponent.html","webpack:///./src/misc/datepickerComponent.html","webpack:///./src/message/popupcomponent.html","webpack:///./contribs/gmf/src/backgroundlayerselector/component.html","webpack:///./contribs/gmf/src/authentication/component.html"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","1","exports","module","l","m","c","d","name","getter","o","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","p","jsonpArray","window","oldJsonpFunction","bind","slice","condition","opt_message","var_args","type","__webpack_exports__","CIRCLE","LINE_STRING","MULTI_LINE_STRING","MULTI_POINT","MULTI_POLYGON","POINT","POLYGON","RECTANGLE","TEXT","ANGLE","COLOR","IS_CIRCLE","IS_RECTANGLE","IS_TEXT","NAME","SHOW_LABEL","OPACITY","AZIMUT","SHOW_MEASURE","SIZE","STROKE","BOOLEAN","DATE","DATETIME","TIME","GEOMETRY","NUMBER","SELECT","ol_layer_Tile_js__WEBPACK_IMPORTED_MODULE_6__","$http","$injector","$q","ngeoLayerHelper","gettextCatalog","gmfThemesOptions","ol_events_EventTarget_js__WEBPACK_IMPORTED_MODULE_5__","this","addBlankBackgroundLayer_","undefined","addBlankBackgroundLayer","$q_","$http_","treeUrl_","has","cacheVersion_","ngeoLocation_","layerHelper_","deferred_","defer","promise_","promise","loaded","bgLayerPromise_","ol_index_js__WEBPACK_IMPORTED_MODULE_2__","findGroupByLayerNodeName","themes","ii","theme","jj","children","group","childNodes","getFlatNodes","findObjectByName","findGroupByName","internalNodes","getFlatInternalNodes","objects","objectName","ol_array_js__WEBPACK_IMPORTED_MODULE_3__","findThemeByName","themeName","node","nodes","getBgLayers","_this","layerHelper","callback","item","layer","set","metadata","dimensions","ids","getIds","array","forEach","child","layerLayerCreationFn","ogcServers","gmfLayer","gmfLayerWMTS","goog_asserts_js__WEBPACK_IMPORTED_MODULE_0__","assert","url","createWMTSLayerFromCapabilitites","matrixSet","then","response","message","console","error","resolve","gmfLayerWMS","ogcServer","server","imageType","createBasicWMSLayer","layers","credential","fail","promiseSuccessFn","promises","background_layers","map","itemType","x","reverse","all","collection","filter","ol_Collection_js__WEBPACK_IMPORTED_MODULE_4__","createBasicGroup","layerGroupCreationFn","values","getString","label","thumbnail","getThemeObject","getThemesObject","getBackgroundLayersObject","getOgcServersObject","hasEditableLayers","hasEditableLayers_","_this2","some","hasNodeEditableLayers_","editable","getSnappingConfig","snappingConfig","getNodeMaxResolution","maxResolution","maxResolutionHint","getNodeMinResolution","minResolution","minResolutionHint","loadThemes","opt_roleId","_this3","params","role","cache_version","cache","withCredentials","errors","join","hasParam","alert","dispatchEvent","reject","NodeType","MIXED_GROUP","NOT_MIXED_GROUP","WMTS","WMS","angular","ngeo_map_LayerHelper_js__WEBPACK_IMPORTED_MODULE_1__","service","options","_classCallCheck","active_","active","expression","lowerBoundary_","lowerBoundary","operator_","operator","upperBoundary_","upperBoundary","isCustom_","isCustom","name_","operators_","operators","propertyName_","propertyName","type_","listenerKeys","getExpression","setExpression","reset","destroy","ol_events_js__WEBPACK_IMPORTED_MODULE_1__","_createClass","key","OperatorType","BETWEEN","TemporalOperatorType","DURING","EQUAL_TO","GREATER_THAN","GREATER_THAN_OR_EQUAL_TO","LESSER_THAN","LESSER_THAN_OR_EQUAL_TO","LIKE","NOT_EQUAL_TO","SpatialOperatorType","CONTAINS","INTERSECTS","WITHIN","BEGINS","ENDS","EQUALS","_possibleConstructorReturn","_ngeoDatasourceDataSo","dimensionsConfig_","dimensionsConfig","filterCondition_","filterCondition","ngeo_filter_Condition_js__WEBPACK_IMPORTED_MODULE_2__","AND","filterRules_","filterRules","filtrable_","filtrable","copyable_","copyable","dimensions_","geometryName_","geometryName","DEFAULT_GEOMETRY_NAME_","ogcImageType_","ogcImageType","ogcLayers_","ogcLayers","ogcServerType_","ogcServerType","ServerType","MAPSERVER","ogcType_","ogcType","Type","snappable_","snappable","snappingToEdges_","snappingToEdges","snappingToVertice_","snappingToVertice","snappingTolerance_","snappingTolerance","timeAttributeName_","timeAttributeName","timeLowerValue_","timeLowerValue","timeProperty_","timeProperty","timeUpperValue_","timeUpperValue","wfsFeatureNS_","wfsFeatureNS","WFSFeatureNS","wfsFeaturePrefix_","wfsFeaturePrefix","WFSFeaturePrefix","FEATURE","wfsOutputFormat_","wfsOutputFormat","WFSOutputFormat","GML3","wfsUrl_","wfsUrl","wmsInfoFormat_","wmsInfoFormat","WMSInfoFormat","GML","wmsIsSingleTile_","wmsIsSingleTile","wmsUrl_","wmsUrl","wmtsLayer_","wmtsLayer","wmtsUrl_","wmtsUrl","queryable","_iterator","_isArray","Array","isArray","_i","Symbol","iterator","_ref","next","done","ogcLayer","wfsFormat","supportsWFS","format","ol_format_GML3_js__WEBPACK_IMPORTED_MODULE_5__","GML2","ol_format_GML2_js__WEBPACK_IMPORTED_MODULE_4__","ol_format_WFS_js__WEBPACK_IMPORTED_MODULE_6__","featureNS","featureType","gmlFormat","wfsFormat_","wmsFormat","supportsWMS","ol_format_WMSGetFeatureInfo_js__WEBPACK_IMPORTED_MODULE_7__","wmsFormat_","_inherits","getAttributes","attributes","setAttributes","updateGeometryNameFromAttributes_","combinableWithDataSourceForWFS","dataSource","combinableForWFS","haveTheSameActiveDimensions","combinableWithDataSourceForWMS","combinableForWMS","isAnyOGCLayerInRange","res","queryableOnly","arguments","getInRangeOGCLayerNames","layerNames","_iterator2","_isArray2","_i2","_ref2","maxRes","minRes","getOGCLayerNames","_iterator3","_isArray3","_i3","_ref3","getFiltrableOGCLayerName","_iterator4","_isArray4","_i4","_ref4","attribute","ngeo_format_AttributeType_js__WEBPACK_IMPORTED_MODULE_3__","share","myActive","activeDimensions","itsActive","time","range","lower","upper","end","start","config","timeRangeValue","_iterator5","_isArray5","_i5","_ref5","ngeo_datasource_DataSource_js__WEBPACK_IMPORTED_MODULE_1__","guessServiceTypeByUrl","test","GEOSERVER","QGISSERVER","geoserver","mapserver","qgisserver","BG_LAYER","EXTERNAL_DATASOURCES_NAMES","EXTERNAL_DATASOURCES_URLS","FEATURES","MAP_CROSSHAIR","MAP_TOOLTIP","MAP_X","MAP_Y","MAP_Z","TREE_GROUPS","WFS_LAYER","WFS_NGROUPS","WFS_SHOW_FEATURES","ol_style_Text_js__WEBPACK_IMPORTED_MODULE_24__","$filter","$filter_","decimals_","precision_","numberFormat_","unitPrefixFormat_","ngeoNumberCoordinates_","pointFilterFn_","pointFilterArgs_","filterElements","split","filterName","assertFunction","projection_","download_","setProjection","projection","setStyle","feature","opt_select","styles","getStyle","supportsVertex_","getVertexStyle","unshift","getHaloStyle_","style","getType","ngeo_GeometryType_js__WEBPACK_IMPORTED_MODULE_4__","getLineStringStyle_","getPointStyle_","getPolygonStyle_","getTextStyle_","constructor","strokeWidth","getStrokeProperty","showLabel","getShowLabelProperty","showMeasure","getShowMeasureProperty","color","getRGBAColorProperty","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_23__","stroke","ol_style_Stroke_js__WEBPACK_IMPORTED_MODULE_22__","width","textLabelValues","getMeasure","getNameProperty","textLabelValue","text","createTextStyle_","size","getSizeProperty","image","ol_style_Circle_js__WEBPACK_IMPORTED_MODULE_19__","radius","fill","ol_style_Fill_js__WEBPACK_IMPORTED_MODULE_20__","offsetY","font_size","optNumber","attrib","assertNumber","getNumber","opacity","getOpacityProperty","fillColor","azimut","ngeo_format_FeatureProperties_js__WEBPACK_IMPORTED_MODULE_3__","line","getRadiusLine","ngeo_interaction_Measure_js__WEBPACK_IMPORTED_MODULE_5__","getFormattedLength","geometry","angle","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_14__","getLastCoordinate","offsetX","Math","cos","PI","sin","exceedLength","getAngleProperty","createEditingStyles","white","blue","geom","getGeometry","zIndex","Infinity","opt_incGeomFunc","incGeomFunc","ol_style_RegularShape_js__WEBPACK_IMPORTED_MODULE_21__","points","innerMultiCoordinates","multiCoordinates","coordinates","ol_geom_LineString_js__WEBPACK_IMPORTED_MODULE_11__","getCoordinates","ol_geom_MultiLineString_js__WEBPACK_IMPORTED_MODULE_12__","ol_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_15__","ol_geom_MultiPolygon_js__WEBPACK_IMPORTED_MODULE_16__","concat","ol_geom_MultiPoint_js__WEBPACK_IMPORTED_MODULE_13__","supported","ol_array_js__WEBPACK_IMPORTED_MODULE_7__","haloSize","getFilteredFeatureValues","properties","getProperties","getGeometryName","getColorProperty","assertString","ol_color_js__WEBPACK_IMPORTED_MODULE_8__","assertBoolean","export","features","formatType","FormatType","GPX","exportGPX","KML","exportKML","ol_format_GPX_js__WEBPACK_IMPORTED_MODULE_17__","export_","ol_format_KML_js__WEBPACK_IMPORTED_MODULE_18__","fileName","opt_mimeType","mimeType","clones","clone","ol_Feature_js__WEBPACK_IMPORTED_MODULE_10__","writeOptions","dataProjection","featureProjection","writeFeatures","rotation","font","measure","ngeo_interaction_MeasureAzimut_js__WEBPACK_IMPORTED_MODULE_6__","getFormattedAzimutRadius","getFormattedArea","getFormattedPoint","args","panMapToFeature","opt_panDuration","panDuration","getSize","assertArray","view","getView","extent","calculateExtent","intersectsExtent","mapCenter","getCenter","featureCenter","getCoordinateAt","getInteriorPoint","ol_extent_js__WEBPACK_IMPORTED_MODULE_9__","getExtent","animate","center","duration","y","endPoint","getNonSpatialProperties","nonSpatialProperties","clearNonSpatialProperties","ngeo_download_service_js__WEBPACK_IMPORTED_MODULE_2__","ngeo_misc_filters_js__WEBPACK_IMPORTED_MODULE_1__","toolContext","activePropertyName","getActive","setActive","newVal","ol_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_6__","multiGeom","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_5__","ol_geom_MultiPoint_js__WEBPACK_IMPORTED_MODULE_2__","appendPoint","ol_geom_LineString_js__WEBPACK_IMPORTED_MODULE_1__","ol_geom_MultiLineString_js__WEBPACK_IMPORTED_MODULE_3__","appendLineString","ol_geom_MultiPolygon_js__WEBPACK_IMPORTED_MODULE_4__","appendPolygon","navigator","userAgent","indexOf","hex","rgb","g","b","Error","colorZeroPadding","toString","queryString","queryData","substring","pair","indexOfEquals","decodeURIComponent","queryItem","encodeURIComponent","event","ol_events_condition_js__WEBPACK_IMPORTED_MODULE_0__","showMessage","show","getMessageObjects","ERROR","info","INFORMATION","success","SUCCESS","warn","WARNING","opt_type","msgObjects","msgObject","defaultType","msg","ol_events_Event_js__WEBPACK_IMPORTED_MODULE_1__","detail","ol_index_js__WEBPACK_IMPORTED_MODULE_0__","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_6__","featureUidToGroupIndex_","groups_","source_","ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_5__","useSpatialIndex","layer_","ol_layer_Vector_js__WEBPACK_IMPORTED_MODULE_3__","source","styleFunction_","updateWhileAnimating","updateWhileInteracting","addFeature","groupIndex","featureUid","removeFeature","clear","ol_obj_js__WEBPACK_IMPORTED_MODULE_4__","getLayer","getFeatureOverlay","styleFunction","ngeo_map_FeatureOverlay_js__WEBPACK_IMPORTED_MODULE_1__","init","setMap","defaultFunction","resolution","ngeo_format_AttributeType_js__WEBPACK_IMPORTED_MODULE_1__","_ngeoRuleRule","featureProperties","feature_","ol_Feature_js__WEBPACK_IMPORTED_MODULE_4__","format_","ol_format_GeoJSON_js__WEBPACK_IMPORTED_MODULE_5__","updatingExpression_","updatingGeometry_","geometryChangeListenerKey_","ol_events_js__WEBPACK_IMPORTED_MODULE_3__","handleFeatureGeometryChange_","setGeometryFromExpression_","registerGeometryChange_","writeGeometry","handleGeometryChange_","evt","assertInstanceof","target","ol_geom_Geometry_js__WEBPACK_IMPORTED_MODULE_6__","readGeometry","setGeometry","ngeo_rule_Rule_js__WEBPACK_IMPORTED_MODULE_2__","ol_uri_js__WEBPACK_IMPORTED_MODULE_10__","ngeoTilesPreloadingLimit","tilesPreloadingLimit_","GROUP_KEY","REFRESH_PARAM","sourceURL","sourceLayersName","sourceFormat","opt_serverType","opt_time","opt_params","opt_crossOrigin","FORMAT","LAYERS","olServerType","replace","ol_source_ImageWMS_js__WEBPACK_IMPORTED_MODULE_7__","serverType","crossOrigin","updateParams","ol_layer_Image_js__WEBPACK_IMPORTED_MODULE_4__","createBasicWMSLayerFromDataSource","setVisible","visible","id","capabilitiesURL","layerName","opt_matrixSet","opt_dimensions","parser","ol_format_WMTSCapabilities_js__WEBPACK_IMPORTED_MODULE_2__","ol_layer_Tile_js__WEBPACK_IMPORTED_MODULE_5__","preload","read","ol_source_WMTS_js__WEBPACK_IMPORTED_MODULE_9__","ol_obj_js__WEBPACK_IMPORTED_MODULE_6__","updateDimensions","setSource","ol_array_js__WEBPACK_IMPORTED_MODULE_1__","elt","index","createWMTSLayerFromCapabilititesObj","capabilities","layerCap","capabilitiesStyles","opt_layers","ol_layer_Group_js__WEBPACK_IMPORTED_MODULE_3__","setLayers","getGroupFromMap","groupName","getLayerGroup","getLayers","getArray","existingGroup","addLayer","getFlatLayers","getFlatLayers_","getLayerByName","found","sublayers","getWMTSLegendURL","legendURL","getWMSLegendURL","opt_scale","opt_legendRule","TRANSPARENT","SERVICE","VERSION","REQUEST","LAYER","isLayerVisible","getVisible","currentResolution","getResolution","getMinResolution","getMaxResolution","refreshWMSLayer","getSource","ol_source_TileWMS_js__WEBPACK_IMPORTED_MODULE_8__","getParams","random","setZIndexToFirstLevelChildren","element","ZIndex","innerLayer","setZIndex","updateWMSLayerState","names","getQuerySourceIds","ol_layer_Layer_js__WEBPACK_IMPORTED_MODULE_5__","$scope","$rootScope","$attrs","isRoot","nodeExpr","rootScope_","state_","$watch","oldVal","$eval","mapExpr","parent","$parent","$on","uid","depth","nodelayerExpr","nodelayerexprExpr","newNodelayerExpr","treeCtrl","ol_layer_Group_js__WEBPACK_IMPORTED_MODULE_4__","dataSource_","ngeo_misc_decorate_js__WEBPACK_IMPORTED_MODULE_1__","layerLoading","$broadcast","listenersExpr","listenersexprExpr","treeScope","getState","setState","state","opt_broadcast","setStateInternal_","refreshState","firstParents","getFirstParentTree","firstParent","newState","getCalculateState","childState","previousChildState","getSetActive","val","removeLayer","getDataSource","setDataSource","tree","VisitorDecision","STOP","SKIP","DESCEND","traverseDepthFirst","visitor","controller","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_13__","ol_interaction_Interaction_js__WEBPACK_IMPORTED_MODULE_8__","handleEvent","handleEvent_","helpTooltipElement_","helpTooltipOverlay_","measureTooltipElement_","measureTooltipOverlay_","measureTooltipOverlayCoord_","sketchFeature","continueMsg","decimals","precision","displayHelpTooltip_","displayHelpTooltip","startMsg","document","createElement","textContent","changeEventKey_","postcomposeEventKey_","ol_style_Fill_js__WEBPACK_IMPORTED_MODULE_11__","ol_style_Stroke_js__WEBPACK_IMPORTED_MODULE_12__","vectorLayer_","ol_layer_Vector_js__WEBPACK_IMPORTED_MODULE_9__","ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_10__","drawInteraction_","createDrawInteraction","sketchStyle","shouldHandleDrawInteractionActiveChange_","ol_events_js__WEBPACK_IMPORTED_MODULE_7__","handleDrawInteractionActiveChange_","onDrawStart_","onDrawEnd_","updateState_","polygon","transform","abs","ol_sphere_js__WEBPACK_IMPORTED_MODULE_6__","getFormattedCircleArea","circle","pow","getRadius","lineString","c1","ol_proj_js__WEBPACK_IMPORTED_MODULE_4__","c2","point","opt_template","dragging","helpMsg","ol_dom_js__WEBPACK_IMPORTED_MODULE_3__","appendChild","setPosition","coordinate","getDrawInteraction","prevMap","getMap","removeInteraction","addInteraction","createMeasureTooltip_","handleMeasure","coord","innerHTML","classList","add","setOffset","ngeo_CustomEvent_js__WEBPACK_IMPORTED_MODULE_1__","unlistenerEvent_","createHelpTooltip_","removeHelpTooltip_","ol_Overlay_js__WEBPACK_IMPORTED_MODULE_5__","offset","positioning","addOverlay","removeOverlay","parentNode","removeChild","removeMeasureTooltip_","stopEvent","getTooltipElement","ol_string_js__WEBPACK_IMPORTED_MODULE_1__","Scalify","numberFilter","filterFn","scale","Number","$locale","formats","NUMBER_FORMATS","number","opt_precision","groupSep","GROUP_SEP","decimalSep","DECIMAL_SEP","sign","nb_decimal","floor","log","factor","round","decimal","unit","str_number","groups","str_unit","UnitPrefix","standardPrefix","binaryPrefix","opt_unit","divisor","prefix","index_max","postfix","space","NumberCoordinates","opt_fractionDigits","template","fractionDigits","parseInt","DMSCoordinates","degreesToStringHDMS","degrees","hemispheres","normalizedDegrees","ol_math_js__WEBPACK_IMPORTED_MODULE_0__","dms","charAt","xdms","ydms","trustHtmlFilter","$sce","input","trustAsHtml","Duration","TimeUnits","freeze","SECONDS","MINUTES","HOURS","DAYS","pluralize","amount","formattedUnit","getPlural","output","remainder","ngeoDataSources","ngeoDataSourcesHelper","ngeoQuerent","ngeoQueryResult","dataSources_","ngeoDataSourcesHelper_","ngeoQuerent_","result_","limit_","limit","queryCountFirst_","queryCountFirst","tolerancePx_","tolerance","dataSourceNames_","$inject","issue","queryableDataSources","dataSources","getQueryableDataSources","tolerancePx","wfsCount","pending","handleResult_","total","sources","queried","tooManyResults","totalFeatureCount","_loop","idStr","querentResultItem","tooManyFeatures","typeSeparatedFeatures","filteredProperties","alias","unset","setProperties","featuresByType","ngeo_datasource_DataSources_js__WEBPACK_IMPORTED_MODULE_2__","ngeo_datasource_Helper_js__WEBPACK_IMPORTED_MODULE_3__","ngeo_query_Querent_js__WEBPACK_IMPORTED_MODULE_1__","ol_obj_js__WEBPACK_IMPORTED_MODULE_9__","$timeout","ngeoNotification","gmfThemes","ngeoStateManager","$timeout_","$injector_","gettextCatalog_","ngeoNotification_","gmfThemes_","root","rootCtrl","numberOfGroupsToAddInThisDigestLoop","groupsToAddInThisDigestLoop_","promiseForGroupsToAddInThisDigestLoop_","ngeoStateManager_","ogcServers_","ol_events_js__WEBPACK_IMPORTED_MODULE_8__","handleThemesChange_","refreshFirstLevelGroups_","setFirstLevelGroups","firstLevelGroups","deleteParam","gmf_index_js__WEBPACK_IMPORTED_MODULE_0__","PermalinkParam","addFirstLevelGroups","opt_add","opt_silent","groupNotAdded","addFirstLevelGroup_","notifyCantAddGroups_","updateTreeGroupsState_","treeGroupsParam","updateState","cleanParams","alreadyAdded","groupID","rootChild","grp","cancel","addGroupByName","_this4","gmf_theme_Themes_js__WEBPACK_IMPORTED_MODULE_1__","addGroupByLayerName","_this5","groupAdded","getTreeCtrlByNodeId","treeCtrlToActive","ngeo_layertree_Controller_js__WEBPACK_IMPORTED_MODULE_3__","removeGroup","removeAll","cloneGroupNode_","toggleNodeCheck_","_this6","childNode","isChecked","notify","ngeo_message_Message_js__WEBPACK_IMPORTED_MODULE_4__","correspondingTreeCtrl","getOgcServer","mixed","goog_asserts_js__WEBPACK_IMPORTED_MODULE_2__","firstLevelGroupCtrl","gmfGroup","_this7","firstLevelGroupsFullState","getFirstLevelGroupFullState_","nodesToRestore","nodeToRestore","fullState","setNodeMetadataFromFullState_","_this8","isExpanded","isLegendExpanded","nodeElement","$","hasClass","legendElement","is","_this9","ngeo_message_Notification_js__WEBPACK_IMPORTED_MODULE_5__","ngeo_statemanager_Service_js__WEBPACK_IMPORTED_MODULE_6__","ngeo_misc_Time_js__WEBPACK_IMPORTED_MODULE_1__","formatTimeValue","opt_useISOFormat","opt_toUTC","date","Date","utc","yearResolution","monthResolution","dayResolution","toISOString","formatWMSTimeParam","wmsTimeProperty","times","mode","ol_source_Tile_js__WEBPACK_IMPORTED_MODULE_6__","interaction","ol_interaction_Interaction_js__WEBPACK_IMPORTED_MODULE_1__","ol_layer_Base_js__WEBPACK_IMPORTED_MODULE_2__","getOpacity","setOpacity","incrementEvents","decrementEvents","incrementLoadCount_","increment_","load_count","decrementLoadCount_","decrement_","on","olEvent","ol_layer_Layer_js__WEBPACK_IMPORTED_MODULE_4__","ol_source_Image_js__WEBPACK_IMPORTED_MODULE_5__","$applyAsync","factory_","func","wait","invokeApply","timeout","_len","_key","context","factory","ol_events_js__WEBPACK_IMPORTED_MODULE_0__","listenerKeys_","addListenerKey","initListenerKey_","clearListenerKey","ngeoWMSTime","ngeoWMSTime_","ogcServersObject_","ogcServersObject","sync_","createLayer","dataLayerGroup","opt_position","createGroup_","createLeafInAMixedGroup_","initGmfLayerInANotMixedGroup_","updateLayerState_","goog_asserts_js__WEBPACK_IMPORTED_MODULE_1__","ol_layer_Image_js__WEBPACK_IMPORTED_MODULE_5__","groupNode","isFirstLevelGroup","printNativeAngle","createLayerFromGroup_","position","insertAt","isOneParentNotMixed_","timeParam","getTimeParam_","hasActiveChildren","ctrl","updateLayerReferences_","createWMTSLayer_","checked","leafNode","firstLevelGroup","getFirstLevelGroupCtrl_","newLayer","ol_index_js__WEBPACK_IMPORTED_MODULE_4__","querySourceIds","disclaimer","disclaimers","wmsTime","ngeo_layertree_Controller_js__WEBPACK_IMPORTED_MODULE_2__","timeValues","getOptions","isOneParentNotMix","gmf_theme_Themes_js__WEBPACK_IMPORTED_MODULE_0__","ngeo_misc_WMSTime_js__WEBPACK_IMPORTED_MODULE_3__","NOT","OR","rule_Date","AttributeType","Rule","Text","Text_classCallCheck","Text_possibleConstructorReturn","Text_inherits","RuleHelper_exports","ngeoFeatureHelper","RuleHelper_classCallCheck","ngeoFeatureHelper_","createRulesFromAttributes","opt_isCustom","rules","createRuleFromAttribute","rule","Geometry","Select","choices","goog_asserts_prod","createRules","optionsList","createRule","selectOptions","cloneRule","extendRule","sourceRule","destRule","serializeRules","serializeRule","obj","createFilter","mainFilter","conditions","createFilterFromRule_","srsName","Condition","format_filter","incTime","timeFilter","createTimeFilterFromDataSource_","createFilterString","filterString","filterNode","WFS","XMLSerializer","serializeToString","opt_srsName","rot","rsot","rtot","spatialTypes","numericTypes","beginValue","endValue","moment","subtract","selectedChoices","selectedChoice","numericExpression","stringExpression","String","momentEnd","startValue","FeatureHelper","WMSTime","datasource_File","featuresCollection_","Collection","source_Vector","wrapX","Vector","DataSource","FileGroup","FileGroup_classCallCheck","FileGroup_possibleConstructorReturn","_ngeoDatasourceGroup","injector","unregister_","FileGroup_inherits","addDataSource","registerDataSource_","handleDataSourceVisibleChange_","oldValue","removeDataSource","unregisterDataSource_","Group","OGCGroup","OGCGroup_classCallCheck","OGCGroup_possibleConstructorReturn","url_","OGCGroup_inherits","OGCGroup_createClass","WMSGroup","WMSGroup_classCallCheck","WMSGroup_possibleConstructorReturn","_ngeoDatasourceOGCGro","ngeoLayerHelper_","wmsDataSourceUnregister_","init_","WMSGroup_inherits","OGC","updateLayer_","unregister","WMSGroup_createClass","ExternalDataSourcesManager_exports","ngeoFile","ExternalDataSourcesManager_classCallCheck","injector_","q_","ngeoFile_","extDataSources_","files_","map_","fileGroup_","title","wmsGroupsCollection_","wmtsGroupsCollection_","wmtsCache_","events","handleDataSourcesRemove_","addWMSGroup_","wmsGroup","wmsGroupsCollection","removeWMSGroup_","remove","getWMSGroup","wmsGroups","addWMTSGroup_","wmtsGroup","wmtsGroupsCollection","removeWMTSGroup_","getWMTSGroup","wmtsGroups","isExternalDataSource","addLayer_","layerGroup","removeLayer_","createAndAddDataSourceFromWMSCapability","getId","req","includes","createAndAddDataSourceFromWMTSCapability","layerObj","handleWMTSDataSourceVisibleChange_","createAndAddDataSourceFromFile","file","getFileDataSource_","fileGroup","fit","rejections","content","readOptions","getProjection","isKml","readFeatures","isGpx","removeFileDataSource_","removeOGCDataSource_","ExternalDataSourcesManager_createClass","src","EXTERNALLAYERGROUP_NAME","ol","LayerHelper","File","DataSources","collection_","ol_Collection_js__WEBPACK_IMPORTED_MODULE_2__","handleDataSourcesAdd_","bindMap_","handleViewResolutionChange_","syncDataSourcesToResolution_","unbindMap_","ol_View_js__WEBPACK_IMPORTED_MODULE_4__","syncDataSourceToResolution_","supportsDynamicInRange","inRange","ol_style_Text_js__WEBPACK_IMPORTED_MODULE_36__","gmf_editing_EditFeature_js__WEBPACK_IMPORTED_MODULE_0__","gmf_editing_Snapping_js__WEBPACK_IMPORTED_MODULE_1__","gmf_editing_XSDAttributes_js__WEBPACK_IMPORTED_MODULE_2__","ngeo_editing_attributesComponent_js__WEBPACK_IMPORTED_MODULE_8__","ngeo_editing_createfeatureComponent_js__WEBPACK_IMPORTED_MODULE_9__","ngeo_map_LayerHelper_js__WEBPACK_IMPORTED_MODULE_15__","ngeo_message_modalComponent_js__WEBPACK_IMPORTED_MODULE_17__","ngeo_misc_btnComponent_js__WEBPACK_IMPORTED_MODULE_18__","ngeo_misc_EventHelper_js__WEBPACK_IMPORTED_MODULE_20__","ngeo_misc_FeatureHelper_js__WEBPACK_IMPORTED_MODULE_21__","ngeo_misc_ToolActivateMgr_js__WEBPACK_IMPORTED_MODULE_23__","run","$templateCache","put","component_","scope","dirty","editableTreeCtrl","vectorLayer","bindToController","templateUrl","directive","Controller_","$element","gmfEditFeature","gmfSnapping","gmfXSDAttributes","ngeoEventHelper","ngeoToolActivateMgr","element_","scope_","timeout_","gmfEditFeature_","gmfSnapping_","gmfXSDAttributes_","ngeoEventHelper_","ngeoToolActivateMgr_","editableNode_","editableWMSLayer_","confirmDeferred_","unsavedModificationsModalShown","createActive","createToolActivate","ngeo_misc_ToolActivate_js__WEBPACK_IMPORTED_MODULE_22__","mapSelectActive","mapSelectToolActivate","handleFeatureChange_","featureId","interactions_","ol_Collection_js__WEBPACK_IMPORTED_MODULE_26__","modify_","modifyToolActivate","menu_","ngeo_Menu_js__WEBPACK_IMPORTED_MODULE_16__","actions","cls","translate_","rotate_","rotateToolActivate","translateToolActivate","geomType","showServerError","serverErrorMessage","serverErrorType","$onInit","lang","getCurrentLanguage","datetimepicker","setLocale","setDateFormatter","ngeo_misc_php_date_formatter_js__WEBPACK_IMPORTED_MODULE_5__","getFeaturesCollection","gmf_layertree_SyncLayertreeMap_js__WEBPACK_IMPORTED_MODULE_3__","goog_asserts_js__WEBPACK_IMPORTED_MODULE_4__","ol_layer_Image_js__WEBPACK_IMPORTED_MODULE_32__","ol_layer_Tile_js__WEBPACK_IMPORTED_MODULE_33__","ol_interaction_Modify_js__WEBPACK_IMPORTED_MODULE_31__","deleteCondition","ngeo_utils_js__WEBPACK_IMPORTED_MODULE_10__","ngeo_interaction_Rotate_js__WEBPACK_IMPORTED_MODULE_13__","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_35__","ol_style_Fill_js__WEBPACK_IMPORTED_MODULE_34__","ngeo_interaction_Translate_js__WEBPACK_IMPORTED_MODULE_14__","initializeInteractions_","ensureSnapInteractionsOnTop","handleDestroy_","ol_index_js__WEBPACK_IMPORTED_MODULE_24__","ol_events_js__WEBPACK_IMPORTED_MODULE_27__","handleFeatureAdd_","handleMapSelectActiveChange_","newValue","State","STOP_EDITING_PENDING","confirmCancel","STOP_EDITING_EXECUTE","DEACTIVATE_PENDING","DEACTIVATE_EXECUTE","IDLE","setAttributes_","toggle_","save","setId","dateFormatter","parseDate","jsonFormat","setMinutes","getMinutes","getTimezoneOffset","formatDate","updateFeature","insertFeatures","handleEditFeature_","close","checkForModifications_","scopeApply","$apply","continueWithoutSaving","delete","confirm","deleteFeature","submit","find","click","resp","ol_format_GeoJSON_js__WEBPACK_IMPORTED_MODULE_30__","mask","geomAttr","ngeo_format_XSDAttribute_js__WEBPACK_IMPORTED_MODULE_11__","getGeometryAttribute","ol_Feature_js__WEBPACK_IMPORTED_MODULE_29__","keys","createUid","otherUid","toolMgr","handleMenuActionClick_","handleTranslateEnd_","handleRotateEnd_","registerTool","unregisterTool","mapDiv","getViewport","assertElement","handleMapClick_","handleMapContextMenu_","pixel","forEachFeatureAtPixel","ret","ol_array_js__WEBPACK_IMPORTED_MODULE_25__","hitTolerance","buffer","ol_extent_js__WEBPACK_IMPORTED_MODULE_28__","getFeaturesInExtent","handleGetFeatures_","getEventPixel","getCoordinateFromPixel","ngeo_GeometryType_js__WEBPACK_IMPORTED_MODULE_12__","open","preventDefault","stopPropagation","_this10","ngeo_misc_decorate_js__WEBPACK_IMPORTED_MODULE_19__","registerInteractions_","_this11","unregisterInteractions_","_this12","newFeature","oldFeature","_this13","handleFeaturePropertyChange_","action","ngeo_statemanager_Service_js__WEBPACK_IMPORTED_MODULE_2__","gmfTreeManagerModeFlush","gmfTreeManager","$rootScope_","modeFlush","gmfTreeManager_","themeName_","addTheme","setThemeName","getThemeName","isLoading","$emit","EventType","THEME_NAME_SET","gmf_layertree_TreeManager_js__WEBPACK_IMPORTED_MODULE_0__","inRange_","visible_","id_","identifierAttribute_","identifierAttribute","maxResolution_","minResolution_","ngeo_rule_Rule_js__WEBPACK_IMPORTED_MODULE_1__","ngeo_format_AttributeType_js__WEBPACK_IMPORTED_MODULE_0__","choices_","tool","opt_defaultActivate","entries","unlisten","deactivateTools_","activateDefault_","defaultTool","ENABLE_ASSERTS","defaultTools","entry","unregisterGroup","activateTool","deactivateTool","hasActiveTool","btnGroupComponent_","$parse","restrict","link","attrs","assign","buttons_","buttonModel","BtnGroupController","activate","expressionFn","addButton","btnComponent_","require","ctrls","buttonsCtrl","ngModelCtrl","indexInGroup","ngModelGet","ngModelSet","$setViewValue","$viewValue","$render","toggleClass","ngeo_statemanager_Location_js__WEBPACK_IMPORTED_MODULE_1__","ngeoLocation","ngeoUsedKeyRegexp","initialState","usedKeyRegexp","useLocalStorage_","setUseLocalStorage","paramKeys","getParamKeys","keyRegexp","match","localStorage","getParam","err","getInitialValue","getInitialStringValue","getInitialNumberValue","parseFloat","getInitialBooleanValue","RegExp","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_0__","authenticationBaseUrl","gmfUser","_olEventsEventTarget","baseUrl_","user_","noReloadRole_","load_","RouteSuffix","IS_LOGGED_IN","handleLogin_","changePassword","oldPwd","newPwd","confPwd","CHANGE_PASSWORD","post","param","oldPassword","newPassword","confirmNewPassword","headers","Content-Type","is_password_changed","$digest","login","pwd","LOGIN","password","logout","noReload","LOGOUT","resetUser_","resetPassword","RESET_PASSWORD","successFn","getFunctionalities","functionalities","getRoleId","role_id","checkingLoginStatus","respData","setUser_","ngeo_CustomEvent_js__WEBPACK_IMPORTED_MODULE_0__","user","emitEvent","username","role_name","minDate","minValue","maxDate","maxValue","minDefaultDate","minDefValue","maxDefaultDate","maxDefValue","defaultValues","getTime","getUTCDate","localDate","getUTCFullYear","getUTCMonth","DrawAzimut_exports","Pointer","handleDownEvent","handleDownEvent_","handleUpEvent","handleUpEvent_","downPx_","started_","sketchFeature_","sketchPoint_","squaredClickTolerance_","sketchLayer_","common","getDefaultDrawStyleFunction","downPx","clickPx","dx","dy","pass","handlePointerMove_","finishDrawing_","startDrawing_","mapBrowserEvent","modifyDrawing_","createOrUpdateSketchPoint_","Feature","Point","updateSketchFeatures_","sketchPointGeom","setCoordinates","sketchFeatures","addFeatures","LineString","Circle","GeometryCollection","CustomEvent","geometries","getGeometriesArray","last","setRadius","getLength","abortDrawing_","shouldStopEvent","functions","DrawAzimut","MeasureAzimut_exports","unitPrefixFormat","numberFormat","Measure","getGeometries","Projection","formatLength","formatAzimut","getFormattedAzimut","getAzimut","coords","rad","acos","sqrt","popupComponent_exports","directive_","ngeoPopupTemplateUrl","addClass","css","popupComponent","Popup_exports","$compile","$new","autoDestroy_","sce_","body","append","getOpen","setOpen","$destroy","setTitle","trustedTitle","setContent","opt_trusted","setUrl","setWidth","setHeight","height","setSize","setAutoDestroy","autoDestroy","Factory","manager","manager_","features_","index_","setFeatures","handleFeatureRemove_","ol_format_XML_js__WEBPACK_IMPORTED_MODULE_4__","ol_index_js__WEBPACK_IMPORTED_MODULE_3__","readFromDocument","doc","nodeType","Node","DOCUMENT_NODE","firstChild","nextSibling","ELEMENT_NODE","readFromNode","localName","elements","getElementsByTagName","readFromElementNode_","getAttribute","nillable","required","ngeo_format_Attribute_js__WEBPACK_IMPORTED_MODULE_1__","setGeometryType","setAttributeByXsdType_","enumerations","ngeo_format_AttributeType_js__WEBPACK_IMPORTED_MODULE_2__","restrictions","restrictionNode","maxLengths","maxLength","numType","NumberType","FLOAT","INTEGER","geomAttribute","dataSourcesCollection_","ol_Collection_js__WEBPACK_IMPORTED_MODULE_1__","title_","getDataSourceState","VisibilityState","ON","OFF","toggleVisibilityState","visibleToSet","visibilityState","INDETERMINATE","WFSAttribute","complexTypeElements","readFromComplexTypeElement_","Attribute","XSDAttribute","Helper_exports","Helper_classCallCheck","cache_","getDataSourceAttributes","wfsDescribeFeatureTypeDefer","wfsDescribeFeatureType","ogcLayerName","complexType","complexContent","Querent","WFSDescribeFeatureType_exports","XML","xml","PARSERS_","readElement_","objectStack","len","pop","readComplexType_","COMPLEX_TYPE_PARSERS_","readComplexContent_","COMPLEX_CONTENT_PARSERS_","readExtension_","EXTENSION_PARSERS_","readSequence_","SEQUENCE_PARSERS_","NAMESPACE_URIS_","extension","sequence","WFSDescribeFeatureType","Querent_exports","ngeoRuleHelper","http_","ngeoRuleHelper_","requestCancelers_","wmsGetCapabilitiesPromises_","wmtsGetCapabilitiesPromises_","cancelStillRunningRequests_","combinedWFSDataSources","getCombinableWFSDataSources_","wfs","issueCombinedWFS_","combinedWMSDataSources","getCombinableWMSDataSources_","wms","issueCombinedWMS_","handleCombinedQueryResult_","isDataSourceQueryable_","supportsAttributes","ogcLayerNames","uri","TYPENAME","wmsFindLayerCapability","layerCapabilities","layerCapability","wmsGetCapabilities","baseUrl","opt_cache","WMSCapabilities","wmtsFindLayerCapability","wmtsGetCapabilities","WMTSCapabilities","combinedHash","hash","dataSourceIdStr","dataSourceId","handleQueryResult_","readAndTypeFeatures_","setUniqueIds_","featureTypes","getSetOlFormatTypes_","opt_types","types","setFeatureType","getFeatureType","combinedDataSources","maxFeatures","getCode","bbox","xmlSerializer","getFeatureCommonOptions","_iterator7","_isArray7","_i7","_ref7","featurePrefix","outputFormat","getFeatureDefer","countPromise","getCountOptions","resultType","featureCountXml","writeGetFeature","featureCountRequest","canceler","registerCanceler_","readFeatureCollectionMetadata","numberOfFeatures","getFeatureOptions","featureRequestXml","featureRequest","_iterator6","_isArray6","_i6","_ref6","FEATURE_COUNT","projCode","_iterator8","_isArray8","_i8","_ref8","INFO_FORMAT","activeDimensionsSet","filtrableLayerName","_iterator9","_isArray9","_i9","_ref9","filterParamValue","filterParamValues","wmsSource","ImageWMS","wmsGetFeatureInfoUrl","getGetFeatureInfoUrl","combinableDataSources","notCombinableDataSources","_iterator10","_isArray10","_i10","_ref10","combined","_iterator11","_isArray11","_i11","_ref11","combinableDataSource","_iterator12","_isArray12","_i12","_ref12","_iterator13","_isArray13","_i13","_ref13","ds","_iterator14","_isArray14","_i14","_ref14","CombinedDataSources","RuleHelper","ol_interaction_Snap_js__WEBPACK_IMPORTED_MODULE_8__","mapViewChangePromise_","treeCtrlsUnregister_","unregisterAllTreeCtrl_","ol_events_js__WEBPACK_IMPORTED_MODULE_5__","$watchCollection","registerTreeCtrl_","handleMapMoveEnd_","wfsConfig","getWFSConfig_","stateWatcherUnregister","handleTreeCtrlStateChange_","ol_Collection_js__WEBPACK_IMPORTED_MODULE_6__","requestDeferred","deactivateItem_","childLayers","ogcServerName","wfsSupport","urlWfs","activateItem_","edge","pixelTolerance","vertex","loadItemFeatures_","loadAllItems_","ol_format_WFS_js__WEBPACK_IMPORTED_MODULE_7__","extend","ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_11__","featureListenerKeys_","keyPressListenerKey_","myFeatures_","vectorSource_","ol_layer_Vector_js__WEBPACK_IMPORTED_MODULE_10__","centerFeatures_","ol_interaction_Translate_js__WEBPACK_IMPORTED_MODULE_9__","ol_index_js__WEBPACK_IMPORTED_MODULE_1__","ol_events_js__WEBPACK_IMPORTED_MODULE_4__","handleKeyUp_","setState_","addFeature_","handleFeaturesAdd_","handleFeaturesRemove_","getTargetElement","cursor","removeFeature_","ol_Feature_js__WEBPACK_IMPORTED_MODULE_3__","ol_geom_Geometry_js__WEBPACK_IMPORTED_MODULE_5__","getGeometryCenterPoint_","centerFeature","ol_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_8__","ol_geom_LineString_js__WEBPACK_IMPORTED_MODULE_6__","ol_extent_js__WEBPACK_IMPORTED_MODULE_2__","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_7__","keyCode","ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_13__","modified_","changingFeature_","pixelTolerance_","coordinate_","centerCoordinate_","overlay_","ol_layer_Vector_js__WEBPACK_IMPORTED_MODULE_12__","ngeo_interaction_common_js__WEBPACK_IMPORTED_MODULE_1__","getDefaultModifyStyleFunction","ol_interaction_Pointer_js__WEBPACK_IMPORTED_MODULE_7__","handleDown_","handleDragEvent","handleDrag_","handleUp_","ol_events_js__WEBPACK_IMPORTED_MODULE_6__","ol_geom_Geometry_js__WEBPACK_IMPORTED_MODULE_8__","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_9__","getCenterCoordinate_","ol_Feature_js__WEBPACK_IMPORTED_MODULE_5__","willModifyFeatures_","ngeo_CustomEvent_js__WEBPACK_IMPORTED_MODULE_2__","f","ol_geom_LineString_js__WEBPACK_IMPORTED_MODULE_10__","getFlatMidpoint","ol_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_11__","getFlatInteriorPoint","ol_extent_js__WEBPACK_IMPORTED_MODULE_4__","oldX","oldY","centerX","centerY","dx1","dy1","dx0","dy0","a0","atan2","rotate","ol_Collection_js__WEBPACK_IMPORTED_MODULE_0__","ol_OverlayPositioning_js__WEBPACK_IMPORTED_MODULE_5__","menuOptions","opt_overlayOptions","TOP_LEFT","clickOutListenerKey_","contentEl","class","autoClose_","autoClose","headerEl","appendTo","actionsEl","actions_","data-name","prepend","ol_Overlay_js__WEBPACK_IMPORTED_MODULE_4__","handleActionClick_","handleMapPointerMove_","documentElement","handleClickOut_","getElement","closest","originalEvent","Element","contains","ngeo_utils_js__WEBPACK_IMPORTED_MODULE_1__","location","history","history_","schema_","protocol","domain_","hostname","port_","port","path_","pathname","queryData_","decodeQueryString","search","fragment_","replaceState","getPath","getUriString","out","encodedQueryData","encodeQueryString","encodedFragment","hasFragmentParam","getFragmentParam","getParamAsInt","valueAsInt","isNaN","getParamAsFloat","valueAsFloat","getFragmentParamAsInt","getFragmentParamKeys","getParamKeysWithPrefix","getFragmentParamKeysWithPrefix","updateFragmentParams","deleteFragmentParam","refresh","setPath","path","LocationFactory","$window","lastUri","newUri","$evalAsync","MockProvider","$locationProvider","absUrl","opt_path","host","opt_search","opt_paramValue","opt_url","file_saver__WEBPACK_IMPORTED_MODULE_1__","opt_fileType","fileType","ngeo_utils_js__WEBPACK_IMPORTED_MODULE_0__","isSafari","blob","Blob","ngModel","transclude","bindings","resizable","closable","component","_class","$element_","$scope_","modal_","attr","dialog","draggable","modal","e","$onDestroy","ngeo_message_Message_js__WEBPACK_IMPORTED_MODULE_2__","container","container_","DEFAULT_DELAY_","clearMessageByCacheItem_","classNames","el","html","delay","_compare","str1","str2","toLowerCase","_lpad","char","chr","_indexOf","arr","defaultSettings","dateSettings","days","daysShort","months","monthsShort","meridiem","ordinal","suffixes","2","3","separators","validParts","intParts","tzParts","tzClip","DateFormatter","_extend","_typeof","getMonth","vDate","vFormat","year","month","day","hour","min","sec","vSettings","vDateFlag","vTimeFlag","vDatePart","iDatePart","vMonth","vMeriIndex","vMeriOffset","mer","vFormatParts","vDateParts","guessDate","vDateStr","vParts","iPart","iSec","vYear","vDigit","substr","setMonth","setDate","getFullYear","setFullYear","setHours","setSeconds","parseFormat","vChar","fmt","self","backslash","doFormat","t","D","w","getDate","N","getDay","z","a","Y","W","F","M","L","A","G","B","H","getUTCHours","getUTCMinutes","getUTCSeconds","getHours","h","getSeconds","u","getMilliseconds","exec","I","UTC","O","tzo","P","T","Z","U","str","gmfShortenerCreateUrl","gmfShortenerCreateUrl_","getShortUrl","postShortUrl_","short_url","status","sendShortUrl","shortUrl","email","URL_MAX_LEN","URL_PATH_MAX_LEN","ol_interaction_Draw_js__WEBPACK_IMPORTED_MODULE_4__","ngeo_interaction_Measure_js__WEBPACK_IMPORTED_MODULE_1__","br","ol_geom_LineString_js__WEBPACK_IMPORTED_MODULE_3__","proj","ol_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_3__","component_exports","Service","Notification","modalComponent","gmfAuthenticationTemplateUrl","gmfAuthenticationTemplateUrl_","allowPasswordReset","allowPasswordChange","passwordValidator","forcePasswordChange","AuthenticationController_","gmfAuthenticationService","gmfAuthenticationService_","notification_","changingPassword","changePasswordModalShown","resetPasswordModalShown","loginVal","pwdVal","oldPwdVal","newPwdVal","newPwdConfVal","setError_","isPasswordValid","notValidMessage","changePasswordReset","resetError_","resetPasswordSuccessFn","userMustChangeItsPassword","Message","authentication_module","BackgroundLayerMgr_exports","Observable","mapUids_","BACKGROUNDLAYERGROUP_NAME","mapUid","previous","bgGroup","setAt","removeAt","current","getOpacityBgLayer","setOpacityBgLayer","baseBgLayer","Layer","hasUpdates","updatedDimensions","TileWMS","BackgroundLayerMgr","backgroundlayerselector_component_exports","Themes","gmfBackgroundlayerselectorTemplateUrl","opacityOptions","select","ngeoBackgroundLayerMgr","bgLayer","bgLayers","opacityLayer","backgroundLayerMgr_","indexOpa","findIndex","getSetBgLayerOpacity","setLayer","backgroundlayerselector_component","gmfEnumerateAttribute","gmfEnumerateAttribute_","prepareFiltrableDataSource","prepareFiltrableDataSourceDefer","enumAttributes","enumeratedAttributes","getAttributeValues","choice","Helper","EnumerateAttribute","datasource_Helper","datasource_OGC","OGC_classCallCheck","_ngeoDatasourceOGC","gmfLayer_","OGC_createClass","WFSAliases_exports","WFSAliases_classCallCheck","describe","WFSAliases","Manager_exports","gmfWFSAliases","Manager_classCallCheck","ngeoBackgroundLayerMgr_","ngeoDataSources_","gmfWFSAliases_","dataSourcesCache_","treeCtrlCache_","handleNgeoBackgroundLayerChange_","setDatasourceMap","setDimensions","clearDataSources_","clearTreeCtrlCache_","promiseThemes","createDataSource_","promiseBgLayers","backgroundLayers","backgroundLayer","handleTreeManagerRootChildrenChange_","newTreeCtrls","treeCtrls","newTreeCtrl","getTreeCtrlCacheItem_","addTreeCtrlToCache_","removeTreeCtrlCacheItem_","ol_obj","meta","queryLayers","wmsLayers","childLayer","isSingleTile","identifierAttributeField","timeAttribute","filterRulesWatcherUnregister","hasFilters","isVisible","handleDataSourceFilterRulesChange_","timeLowerValueWatcherUnregister","timeUpperValueWatcherUnregister","wmsLayer","handleDataSourceTimeValueChange_","SyncLayertreeMap","Image","treeDataSource","siblingDataSourceIds","_source$updateParams","Tile","layersList","previousBackgroundLayer","currentBackgroundLayer","TreeManager","Manager","datasource_module","DataSourceBeingFiltered","ExternalDataSourcesManager","Disclaimer_exports","ngeoCreatePopup","createPopup_","messages_","closeMessage_","getMessageUid_","popup","button","Popup","Disclaimer","disclaimer_component_exports","EventHelper","ngeoDisclaimer","external","visibility","msgs_","disclaimer_","eventHelper_","dataLayerGroup_","DATALAYERGROUP_NAME","registerLayer_","handleLayersAdd_","Base","handleLayersRemove_","unregisterLayer_","layerUid","showDisclaimerMessage_","closeDisclaimerMessage_","disclaimer_component","SavedFilters_exports","SavedFilters_classCallCheck","currentDataSourceId_","currentDataSourceItems_","localStorageKey_","items_","items","rePopulateCurrentDataSourceItems_","loadItemsFromLocalStorage_","JSON","parse","indexOfItem","idx","saveItemsInLocalStorage_","stringify","SavedFilters_createClass","Item","customRules","directedRules","SavedFilters","ruleComponent_exports","draw_component","FeatureOverlay","datepickerComponent","ToolActivateMgr","ngeoRuleTemplateUrl","RuleController_","_operators","_operatorsShortFormat","ruleComponent_classCallCheck","featureOverlay","toolGroup","operatorType","spatialOperatorType","temporalOperatorType","operatorsShortFormat","timeRangeMode","widget","createDate_","createWeekAgoDate_","interval","timeValueMode","toolActivate_","unlisteners_","drawActive","drawToolActivate","ToolActivate","drawnFeatures","selectedFeatures","Modify","Rotate","Style","Fill","Translate","handleActiveChange_","supportedTypes","GeometryType","hasExpression","isActive","editToolIsActive","toggle","toggleChoiceSelection","onDateSelected","onDateRangeSelected","opt_timeDelta","setTime","timeToDate","toLocaleDateString","oldActive","ruleFeature","cloneFeature","decorate","drawnFeature","geom_Geometry","getRuleGeometryType","removeMenu_","Menu","ruleComponent","filter_component_exports","MapQuerent","ngeoFilterTemplateUrl","aRuleIsActive","datasource","FilterController_","ngeoMapQuerent","component_classCallCheck","ngeoMapQuerent_","geometryAttributes","otherAttributes","ruleUnlisteners_","handleARuleIsActiveChange_","registerRule_","hasARule","getRulesWithValue_","getData","createAndAddCustomRule","setCondition","removeCustomRule","unregisterRule_","handleRuleActiveChange_","unlistener","filter_component","filterselectorComponent_exports","FeatureOverlayMgr","gmfFilterselectorTemplateUrl","gmfDataSourceBeingFiltered","gmfDataSourcesHelper","gmfSavedFilters","ngeoFeatureOverlayMgr","filterselectorComponent_classCallCheck","handleSelectedDataSourceChange_","gmfDataSourcesHelper_","currentDataSourceItems","saveFilterManageModalShown","gmfUser_","handleGmfUserFunctionalitiesChange_","filtrableDataSources","filtrableLayerNodeNames_","gmfDataSources_","readyDataSource","ruleCache_","saveFilterSaveModalShown","saveFilterName","enableDataSourceRegistration_","handleEnableDataSourceRegistrationChange_","defaultFiltrableDataSourceName_","toggleDataSourceRegistration_","usrFunc","newDataSourceRegistration","register","isDataSourceFiltrable_","opt_notify","gettext","msgs","p1","p2","p3","currentDataSourceId","getRuleCacheItem_","setRuleCacheItem_","directedFilterAttributes","directedAttributes","saveFilterShowModal","saveFilterSave","alreadyExist","saveFilterLoadItem","filterItem","cacheItem","saveFilterManage","saveFilterRemoveItem","RuleCache","RuleCacheItem","filterselectorComponent","filters_module","timeSliderComponent_exports","pre","computeDates_","sliderUi","sDate","eDate","wmstime","getClosestValue_","dates","sliderOptions","isModeRange","timeValueList","getTimeValueList_","initialOptions_","max","endDate","nextDate","timestamp","leftIndex","rightIndex","leftDistance","rightDistance","targetDate","startDate","bestDate","bestDistance","distance","getLocalizedDate","timeSliderComponent","layertree_module","layertree_component","datasourceGroupTreeComponent","permalink_module","Permalink","ShareService","shareComponent","map_component_exports","prop","Map","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","map_component","scaleselector_exports","ngeoScaleselectorTemplateUrl","scaleselector_ScaleselectorController","ScaleselectorController","scalesExpr","scales","zoomLevels","newLength","sort","optionsExpr","getOptions_","resolutionChangeKey_","currentScale","currentZoom","getZoom","getScale","handleViewChange_","registerResolutionChangeListener_","dropup","zoom","changeZoom","setZoom","handleResolutionChange_","scaleselector","map_module","recenter","resizemap","src_map_component_exports","Snapping","manageResize","gmfPermalink","ngeoFeatureOverlayMgr_","gmfPermalink_","src_map_component","mousepositionComponent_exports","misc_filters","gmfMapMousepositionTemplateUrl","projections","control_","initOlControl_","removeControl","MousePosition","className","coordinateFormat","filterAndArgs","undefinedHTML","addControl","code","mousepositionComponent","src_map_module","Config_exports","columnDefs","selectedRows","getRowUid","isRowSelected","getSelectedCount","getSelectedRows","row","selectRow","toggleRow","selectAll","unselectAll","rowId","invertSelection","Config","grid_component_exports","ngeoGridTemplateUrl","configuration","sortedBy","sortAscending","floatTheadConfig","scrollContainer","$table","columnName","asc","attributes1","attributes2","clickRow","shiftKey","isShiftKeyOnly_","platformModifierKey","isPlatformModifierKeyOnly_","clickRow_","selectRange_","isSelected","targetUid","posClickedRow","posSelectedRows","currentRow","posClosestRow","currentPos","currentDistance","rangeEnd","preventTextSelection","altKey","metaKey","ctrlKey","grid_component","gridComponent_exports","Csv","gmfDisplayquerygridTemplateUrl","featuresStyleFn","selectedFeatureStyleFn","getMapFn","removeEmptyColumnsFn","maxResultsFn","maxRecenterZoomFn","mergeTabs","ngeoCsvDownload","queryOptions","ngeoCsvDownload_","maxResults","gridSources","loadedGridSources","selectedTab","removeEmptyColumns_","maxRecenterZoom","featuresForSources_","highlightFeatures_","filename_","newQueryResult","oldQueryResult","updateData_","unregisterSelectWatcher_","featuresOverlay","featuresStyle","highlightFeaturesOverlay","highlightFeatureStyle","Stroke","mapFn","getGridSources","sourceLabel","hasOneWithTooManyResults_","getMergedSources_","makeGrid_","escapeValue","collectData_","firstSourceId","selectTab","isInteger","toEscape","gridSource","allSources","mergedSources","mergedSourceId","getMergedSource_","mergeSourceId","currentMergeSourceId","mergeSource","allProperties","featureGeometriesNames","featuresForSource","featureGeometryName","cleanProperties_","removeEmptyColumnsFn_","keysToKeep","keyToRemove","gridConfig","getGridConfiguration_","ol_uid","column","newSelected","oldSelectedRows","onSelectionChanged_","updateFeatures_","reflowGrid_","activePane","removeClass","getActiveGridSource","isOneSelected","getSelectedRowCount","zoomToSelection","ol_extent","maxZoom","downloadCsv","startDownload","gridComponent","swipe_exports","POINTER_EVENTS","mouse","move","touch","pointer","touches","changedTouches","clientX","clientY","getEvents","pointerTypes","eventType","pointerType","eventName","eventHandlers","totalX","totalY","startCoords","lastPos","makeSwipeDirective_","directiveName","direction","$verticalSwipe","MAX_HORIZONTAL_DISTANCE","MAX_HORIZONTAL_RATIO","MIN_VERTICAL_DISTANCE","swipeHandler","valid","isDefined","deltaY","deltaX","validSwipe","triggerHandler","$event","swipe","windowComponent_exports","gmfDisplayquerywindowTemplateUrl","$animateProvider","classNameFilter","draggableContainment","defaultCollapsedFn","desktop","showUnqueriedLayers","collapsed","showUnqueriedLayers_","sourcesFilter","selectedSource","currentResult","isNext","updateQueryResult_","containment","minHeight","minWidth","setCurrentResult_","collectFeatures_","highlightCurrentFeature_","setHighlight","hasChanged","lastFeature","getResultLength","animate_","queryResult","isFirst","isLast","getFeatureValues","opt_lastFeature","setSelectedSource","windowComponent","extraModule","search_module","search_component","FulltextSearch","selectorComponent_exports","theme_Manager","gmfThemeSelectorTemplateUrl","gmfThemeManager","setThemes_","setTheme","selectorComponent","theme_module","displaywindowComponent_exports","ngeoMessageDisplaywindowTemplateUrl","displaywindowComponent_classCallCheck","clearOnClose","contentTemplate","contentScope","compile_","handle","compiled","clear_","displaywindowComponent_createClass","trustAsResourceUrl","displaywindowComponent","controlComponent_exports","control","Control","controlComponent","filereaderComponent_exports","fileContent","changeEvent","fileReader","FileReader","onload","readAsText","files","filereaderComponent","getBrowserLanguage_exports","availableLanguages","nav","browserLanguages","languages","language","browserLanguage","systemLanguage","userLanguage","getBrowserLanguage","misc_extraModule","AutoProjection","btnComponent","debounce","sortableComponent","Time","mapQueryComponent_exports","elem","clickEventKey_","pointerMoveEventKey_","hit","forEachLayerAtPixel","sourceids","cursorHover","mapQueryComponent","WfsPermalink_WfsPermalinkService","ngeoWfsPermalinkOptions","maxFeatures_","wfsTypes_","wfsTypes","wfsType","defaultFeatureNS_","defaultFeatureNS","defaultFeaturePrefix_","defaultFeaturePrefix","pointRecenterZoom_","pointRecenterZoom","clearResult_","typeName","filters","createFilters_","filterGroups","issueRequest_","showFeatures","getExtent_","padding","resultSource","reduce","or_","filterGroup","filterDef","cond","equalTo","and_","joinFilters_","joinFn","combinedFilters","currentFilter","WfsPermalink","AbstractAppController_exports","permalink_","gmfAuthentication","updateHasEditableLayers_","userChange","roleId","open_panel","filterSelectorActive","previousThemeName","updateCurrentTheme_","searchDatasources","labelKey","groupValues","groupActions","srid","gmfDataSourcesManager","defaultDimensions","dim","leftNavVisible","rightNavVisible","queryFill","queryStroke","queryFeatureStyle","queryActive","queryAutoClear","printPanelActive","printActive","measurePointActive","measureLengthActive","drawFeatureActive","drawProfilePanelActive","stateManager","tmhDynamicLocale","defaultLang","langUrls","initLanguage","mapToolsGroup","queryToolActivate","measurePointActivate","measureLengthActivate","drawFeatureActivate","drawProfilePanelActivate","printPanelActivate","$root","setDefaultBackground_","updateCurrentBackgroundLayer_","skipPermalink","background","getBackgroundLayer","defaultBasemapArray","default_basemap","defaultBasemapLabel","gmfx","openIframePopup","opt_width","opt_height","opt_apply","displaywindowUrl","openPopup_","openTextPopup","displaywindowContent","displaywindowTitle","displaywindowOpen","displaywindowWidth","displaywindowHeight","cgxp","tools","openInfoWindow","displaywindowDraggableContainment","getLayerByLabels","labels","switchLanguage","setCurrentLanguage","loadRemote","urlLanguage","fallbackThemeName","defaultThemeNameFromFunctionalities","getLocationIcon","arrow","arrowWrapper","statemanager_module","tmhDynamicLocaleProvider","angularLocaleScript","localeLocationPattern","ModifyCircle_exports","handleDragEvent_","vertexFeature_","lastPixel_","rBush_","RBush","snappedToVertex_","dragSegments_","FeatureProperties","writeCircleGeometry_","handlePointerAtPixel_","removeFeatureSegmentData_","rBush","nodesToRemove","rings","segment","segmentData","insert","createOrUpdateVertexFeature_","vertexFeature","compareIndexes_","vertexExtent","segmentDataMatches","getInExtent","componentSegments","segmentDataMatch","Polygon","setGeometryCoordinates_","MeasureAzimut","MapBrowserPointerEvent","getInteracting","handlingDownUpSequence","pixelCoordinate","lowerLeft","upperRight","box","closestSegment","vertexPixel","getPixelFromCoordinate","pixel1","pixel2","squaredDist1","squaredDist2","dist","vertexSegments","ModifyCircle","ModifyRectangle_exports","vectorPoints_","params_","featureGeom","pointSource","corners","pointFeatures","cornerPoint","cornerFeature","corner","siblingX","siblingY","boxFeature","previousFeature","nextFeature","initializeParams_","origin","originPoint","originCoordinate","originPixel","siblingXPoint","siblingXCoordinate","siblingXPixel","vectorX","vectorXMagnitude","siblingYPoint","siblingYCoordinate","siblingYPixel","vectorY","vectorYMagnitude","destinationPixel","b2Pixel","calculateNewPixel_","b2Coordinate","c2Pixel","c2Coordinate","destination","vector","aVector","abScalarProduct","deltaVector","ModifyRectangle","Modify_exports","otherFeatures_","utils","circleFeatures_","rectangleFeatures_","Interaction","interactions","currentMap","getFeatureCollection_","isCircle","isRectangle","wmsCapabilityLayertreeComponent_exports","gmfWmscapabilitylayertreenodeTemplateUrl","gmfExternalDataSourcesManager","gmfExternalDataSourcesManager_","createAndAddDataSource","getUid","wmsCapabilityLayertreeComponent","wmtsCapabilityLayertreeComponent_exports","gmfWmtscapabilitylayertreTemplateUrl","wmtsCapabilityLayertreeComponent_classCallCheck","wmtsCapabilityLayertreeComponent","importdatasourceComponent_exports","gmfImportdatasourceTemplateUrl","importdatasourceComponent_classCallCheck","fileInput_","hasError","hasErrorPromise_","Mode","ONLINE","modes","LOCAL","wmsCapabilities","wmtsCapabilities","serversEngine_","servers","serverUrls","Bloodhound","datumTokenizer","datum","originalDatumTokenizers","tokenizers","whitespace","datumTokenizers","originalDatumTokenizer","queryTokenizer","identify","local","$urlInput","$connectBtn","typeahead","hint","highlight","minLength","ttAdapter","ev","suggestion","focus","browse","connect","serviceType","startWorking_","stopWorking_","load","opt_hasError","nameAndSize","fileSize","importdatasourceComponent","module_exports","Controller_exports","ngeoFeatures","featureHelper_","ngeoFeatures_","drawPoint","measureLength","measureArea","measureAzimut","drawRectangle","drawText","registerInteraction","handleActiveChange","handleDrawEnd","sketch","draw_features","Controller","point_exports","drawFeatureCtrl","Draw","rectangle_exports","geometryFunction","maxPoints","rectangle","text_exports","draw_text","area_exports","contMsg","MeasureArea","measure_area","azimut_exports","measure_azimut","length_exports","MeasureLength","measure_length","ngeo_format_XSDAttribute_js__WEBPACK_IMPORTED_MODULE_0__","gmfLayersUrl","promises_","handleGetAttributes_","ol_uri_js__WEBPACK_IMPORTED_MODULE_1__","layerIds","getFeaturesWithComparisonFilters","ol_format_GeoJSON_js__WEBPACK_IMPORTED_MODULE_0__","layerId","geoJSON","writeFeature","gmfRasterUrl","getRaster","Param","X","handleGetRaster_","proj4_projections_somerc_js__WEBPACK_IMPORTED_MODULE_1__","proj4__WEBPACK_IMPORTED_MODULE_0__","Proj","proj4__WEBPACK_IMPORTED_MODULE_3__","epsg21781def","ngeo_proj_somerc_js__WEBPACK_IMPORTED_MODULE_2__","defs","ol_proj_proj4_js__WEBPACK_IMPORTED_MODULE_1__","ol_proj_js__WEBPACK_IMPORTED_MODULE_0__","setExtent","typeaheadOptionsExpr","typeaheadOptions","typeaheadDatasetsExpr","typeaheadListenersExpr","typeaheadListeners_","typeaheadListeners","adaptListeners_","dataset","cursorchange","autocomplete","query","empty","datasetsempty","ngeoColorpickerTemplateUrl","colors","DEFAULT_COLORS","setColor","ol_extent_js__WEBPACK_IMPORTED_MODULE_1__","stringToCoordinates","getProjectionList","projectionsCodes","toUpperCase","tryProjections","viewProjection","opt_projections","tryProjectionsWithInversion","defaultParams_","queryParams","Promise","catch","ngeo_download_service_js__WEBPACK_IMPORTED_MODULE_0__","encoding_","extension_","includeHeader_","quote_","separator_","generateCsv","translatedColumnHeaders","columnHeader","header","getRow_","dataRows","rowValues","matchAllQuotesRegex","doubleQuote","ol_Map_js__WEBPACK_IMPORTED_MODULE_1__","stateExpr","animationDelayKey","animationDelay","cancelAnimationFrame","gmf_permalink_ShareService_js__WEBPACK_IMPORTED_MODULE_0__","gmfPermalinkShareTemplateUrl","enableEmail","ShareComponentController","gmfShareService","gmfShareService_","shortLink","showLengthWarning","successfullySent","errorOnsend","errorOnGetShortUrl","when","permalink","$valid","ngeo_datasource_DataSources_js__WEBPACK_IMPORTED_MODULE_0__","gmfLayertreeDatasourceGroupTreeTemplateUrl","getGroupUid","toggleDataSource","ngeo_statemanager_Service_js__WEBPACK_IMPORTED_MODULE_1__","ngeo_statemanager_Location_js__WEBPACK_IMPORTED_MODULE_0__","ol_layer_Group_js__WEBPACK_IMPORTED_MODULE_24__","ngeoDebounce","mapViewPropertyChangeEventKey_","ngeoDebounce_","featureOverlay_","gmfPermalinkOptions","useLocalStorage","crosshairEnabledByDefault_","crosshairEnabledByDefault","gmfObjectEditingManager_","gmfThemeManager_","defaultTheme_","ngeoWfsPermalink_","ngeoAutoProjection_","sourceProjections_","projectionCodes","crosshairFeature_","crosshairStyle_","crosshairStyle","ol_style_RegularShape_js__WEBPACK_IMPORTED_MODULE_22__","ol_style_Stroke_js__WEBPACK_IMPORTED_MODULE_21__","radius2","mapTooltip_","featureHashFormat_","ngeo_format_FeatureHash_js__WEBPACK_IMPORTED_MODULE_8__","encodeStyles","propertiesType","ngeo_format_FeatureProperties_js__WEBPACK_IMPORTED_MODULE_9__","fillOpacity","fontColor","fontSize","isBox","isLabel","pointRadius","strokeColor","ol_events_js__WEBPACK_IMPORTED_MODULE_18__","handleBackgroundLayerManagerChange_","goog_asserts_js__WEBPACK_IMPORTED_MODULE_15__","ParamPrefix","TREE_ENABLE","gmfLayerNames","TREE_GROUP_LAYERS","TREE_OPACITY","TREE_GROUP_OPACITY","getFeatures","addNgeoFeature_","handleNgeoFeaturesAdd_","handleNgeoFeaturesRemove_","gmf_theme_Manager_js__WEBPACK_IMPORTED_MODULE_1__","setThemeInUrl_","setExternalDataSourcesStatePromise_","initExternalDataSources_","handleExternalDSGroupCollectionAdd_","handleExternalDSGroupCollectionRemove_","registerExternalDSGroup_","initLayers_","getMapCenter","targetProjection","reprojectedCenter","getMapZoom","getMapCrosshair","crosshair","setMapCrosshair","opt_center","crosshairCoordinate","ol_Feature_js__WEBPACK_IMPORTED_MODULE_19__","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_20__","getMapTooltip","setMapTooltip","tooltipText","tooltipPosition","div","ngeo_Popover_js__WEBPACK_IMPORTED_MODULE_3__","DIMENSIONS","unregisterMap_","getFeature","registerMap_","oeFeature","ngeo_olcs_constants_js__WEBPACK_IMPORTED_MODULE_7__","Permalink3dParam","ENABLED","setCenter","wfsPermalinkData","getWfsPermalinkData_","refreshFirstLevelGroups","orderedNames","themeInUrl_","pathElements","indexOfTheme","defaultThemeName","tn","defaultTheme","default_theme","groupsNames","gmf_theme_Themes_js__WEBPACK_IMPORTED_MODULE_2__","enable","groupLayers","groupLayersArray","ol_array_js__WEBPACK_IMPORTED_MODULE_17__","ngeo_layertree_Controller_js__WEBPACK_IMPORTED_MODULE_14__","removeNgeoFeature_","ol_index_js__WEBPACK_IMPORTED_MODULE_16__","handleNgeoFeaturesChange_","wfsLayer","numGroups","createFilterGroup_","showFeaturesParam","paramKey","gmfExtDSManager","layerNamesString","urlsString","ExtDSSeparator","LIST","urls","groupLayerNamesString","groupLayerNames","NAMES","ngeo_datasource_OGC_js__WEBPACK_IMPORTED_MODULE_6__","getCapabilitiesDefer","responses","ngeo_datasource_Group_js__WEBPACK_IMPORTED_MODULE_5__","setExternalDataSourcesState_","dataSourcesCollection","containsLayerName","unregisterExternalDSGroup_","_this8$ngeoStateManag","wmsGroupLayerNames","wmsDataSource","wmtsGroupLayerNames","wmtsDataSource","startsWith","_iterator15","_isArray15","_i15","_ref15","ngeo_draw_features_js__WEBPACK_IMPORTED_MODULE_4__","ngeo_misc_debounce_js__WEBPACK_IMPORTED_MODULE_10__","ngeo_misc_EventHelper_js__WEBPACK_IMPORTED_MODULE_11__","ngeo_statemanager_module_js__WEBPACK_IMPORTED_MODULE_12__","OpenLayersLayerProperties","regexp","key1","key2","ngeo_statemanager_Service_js__WEBPACK_IMPORTED_MODULE_13__","ngeoDatePickerTemplateUrl","sdateOptions","initialMinDate","initialMaxDate","onClose","selectedDate","datepicker","edateOptions","dp","ngeoTime","ngeoTime_","changeMonth","changeYear","sdate","edate","$watchGroup","newDates","oldDates","isDate","promiseId","handleGetAttributeValues_","isValidFileSize","isWmsGetCap","isWmtsGetCap","readyState","LOADING","abort","onerror","reason","onprogress","opt_cancelP","ol_style_Text_js__WEBPACK_IMPORTED_MODULE_28__","viewConfig","ol_proj_js__WEBPACK_IMPORTED_MODULE_14__","ol_obj_js__WEBPACK_IMPORTED_MODULE_15__","mapViewConfig","gmf_controllers_AbstractAppController_js__WEBPACK_IMPORTED_MODULE_0__","ol_Map_js__WEBPACK_IMPORTED_MODULE_17__","pixelRatio","mapPixelRatio","ol_View_js__WEBPACK_IMPORTED_MODULE_18__","controls","mapControls","ol_control_ScaleLine_js__WEBPACK_IMPORTED_MODULE_19__","getElementById","ol_control_Zoom_js__WEBPACK_IMPORTED_MODULE_20__","zoomInTipLabel","zoomOutTipLabel","ol_control_Rotate_js__WEBPACK_IMPORTED_MODULE_21__","tipLabel","mapInteractions","ol_interaction_js__WEBPACK_IMPORTED_MODULE_22__","pinchRotate","altShiftDragRotate","loadTilesWhileAnimating","loadTilesWhileInteracting","loginActive","toolsActive","modalShareShown","editFeatureActive","routingfeatureActive","googleStreetViewActive","googleStreetViewStyle","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_27__","ol_style_Fill_js__WEBPACK_IMPORTED_MODULE_25__","ol_style_Stroke_js__WEBPACK_IMPORTED_MODULE_26__","importDataSourceActive","tooltip","trigger","selector","off","drawFeatureLayer","editFeatureVectorLayer","ol_layer_Vector_js__WEBPACK_IMPORTED_MODULE_23__","ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_24__","ol_Collection_js__WEBPACK_IMPORTED_MODULE_16__","editFeatureActivate","ngeo_misc_ToolActivate_js__WEBPACK_IMPORTED_MODULE_10__","googleStreetViewActivate","scaleSelectorOptions","profileLine","ol_index_js__WEBPACK_IMPORTED_MODULE_13__","gmf_contextualdata_module_js__WEBPACK_IMPORTED_MODULE_1__","gmf_drawing_module_js__WEBPACK_IMPORTED_MODULE_2__","gmf_editing_module_js__WEBPACK_IMPORTED_MODULE_3__","gmf_permalink_shareComponent_js__WEBPACK_IMPORTED_MODULE_4__","gmf_print_component_js__WEBPACK_IMPORTED_MODULE_5__","gmf_profile_module_js__WEBPACK_IMPORTED_MODULE_6__","gmf_raster_component_js__WEBPACK_IMPORTED_MODULE_7__","ngeo_draw_features_js__WEBPACK_IMPORTED_MODULE_8__","ngeo_map_resizemap_js__WEBPACK_IMPORTED_MODULE_9__","ngeo_query_bboxQueryComponent_js__WEBPACK_IMPORTED_MODULE_11__","gmf_import_module_js__WEBPACK_IMPORTED_MODULE_12__","FeatureHashStyleType","FeatureHash_exports","opt_options","TextFeature","accuracy_","accuracy","ACCURACY_","encodeStyles_","propertiesFunction_","defaultPropertiesFunction_","setStyle_","prevX_","prevY_","LegacyProperties_","StyleTypes_","MultiLineString","MultiPoint","MultiPolygon","readFeature","CHAR64_","encodeSignedNumber_","num","signedNum","encodeNumber_","encodedNumber","geometryType","encodedStyles","styleType","fillStyle","getFill","imageStyle","getImage","strokeStyle","getStroke","textStyle","getText","encodeStylePolygon_","encodeStyleLine_","encodeStylePoint_","encodeStyleText_","encodeStyleStroke_","encodeStyleFill_","opt_propertyName","getColor","fillColorRgba","fillColorHex","rgbArrayToHex","strokeColorRgba","strokeColorHex","getWidth","fontStyle","getFont","readLineStringGeometry_","flatCoordinates","decodeCoordinates_","setFlatCoordinates","GeometryLayout","XY","readMultiLineStringGeometry_","ends","lineStrings","multiLineString","readPointGeometry_","readMultiPointGeometry_","multiPoint","readPolygonGeometry_","readMultiPolygonGeometry_","endss","polygons","multipolygon","setStyleInFeature_","getStyleProperties_","setStyleProperties_","castValue_","numProperties","boolProperties","parts","keyVal","writeLineStringGeometry_","getFlatCoordinates","stride","getStride","encodeCoordinates_","writeMultiLineStringGeometry_","getEnds","lineStringCount","textArray","writePointGeometry_","writeMultiPointGeometry_","encodeRings_","linearRingCount","writePolygonGeometry_","writeMultiPolygonGeometry_","getEndss","polygonCount","GEOMETRY_READERS_","GEOMETRY_WRITERS_","opt_flatCoordinates","encodedCoordinates","readFeatureFromText","splitIndex","geometryText","readGeometryFromText","attributesAndStylesText","attributesText","stylesText","readFeaturesFromText","geometryReader","writeFeatureText","encodedParts","encodedGeometry","writeGeometryText","encodedProperties","propFunction","encoded","getStyleFunction","writeFeaturesText","geometryWriter","transformedGeometry","format_Feature","RasterService","gmfRaster","$compile_","gmfRaster_","hidePopover","preparePopover_","setContent_","showPopover","content_","mapProjection","ol_proj","getRasterSuccess","setAttribute","Overlay","autoPan","autoPanAnimation","contentDirective_","gmfContextualdatacontentTemplateUrl","VectorEncoder_exports","geojsonFormat","GeoJSON","PrintStyleTypes_","PrintStyleType","encodeVectorLayer","geojsonFeatures","mapfishStyleObject","version","originalFeature","styleData","origGeojsonFeature","writeFeatureObject","isOriginalFeatureAdded","styleId","geojsonFeature","styledFeature","featureStyleProp","encodeVectorStyle","geoJson","styleObject","symbolizers","encodeVectorStylePolygon","encodeVectorStyleLine","encodeVectorStylePoint","encodeTextStyle","encodeVectorStyleFill","symbolizer","encodeVectorStyleStroke","Icon","getSrc","externalGraphic","graphicOpacity","graphicWidth","graphicHeight","getRotation","math","RegularShape","getPoints","graphicName","sizeShape","rotationShape","opacityShape","strokeShape","fillShape","strokeOpacity","strokeDashstyle","getLineDash","getLineCap","strokeLinecap","xAlign","yAlign","olTextAlign","getTextAlign","olTextBaseline","getTextBaseline","labelAlign","labelRotation","fontWeight","fontFamily","haloColor","haloOpacity","haloRadius","labelXOffset","getOffsetX","labelYOffset","getOffsetY","VectorEncoder","Service_exports","vectorEncoder_","printNativeAngle_","ref","opt_httpConfig","httpConfig","createSpec","dpi","layout","customAttributes","specMap","encodeMap_","viewCenter","viewResolution","viewRotation","mapLayerGroup","layer_a","layer_b","getZIndex","encodeLayer","encodeImageLayer_","encodeTileLayer_","layer_Vector","encodeImageWmsLayer_","getUrl","encodeWmsLayer_","url_url","URL","customParams","searchParams","baseURL","getAbsoluteUrl_","imageFormat","useNativeAngle","href","encodeURI","decodeURI","encodeTileWmtsLayer_","encodeTileWmsLayer_","tileGrid","getTileGrid","tilegrid_WMTS","matrixIds","getMatrixIds","matrices","tileRange","getFullTileRange","identifier","scaleDenominator","getMetersPerUnit","tileSize","ol_size","getTileSize","topLeftCorner","getOrigin","matrixSize","maxX","minX","maxY","minY","getDimensions","dimensionKeys","getWmtsUrl_","dimensionParams","getFormat","getMatrixSet","requestEncoding","getRequestEncoding","getVersion","getUrls","createReport","printSpec","getStatus","getReportUrl","getCapabilities","createPrintServiceFactory","editFeatureSelectorComponent_exports","editFeatureComponent","treeCtrlsWatcherUnregister_","editables","editableTreeCtrls","selectedEditableTreeCtrl","stopEditing","selectedEditableNode","editFeatureSelectorComponent","EditFeature","XSDAttributes","createGeoJSONBloodhound_exports","opt_filter","opt_featureProjection","opt_dataProjection","opt_remoteOptions","bloodhoundOptions","remote","prepare","settings","parsedResponse","featureCollection","remoteOptions","createGeoJSONBloodhound","createLocationSearchBloodhound_exports","sourceProjection","EPSG21781","origins","results","parseBbox","geom_st_box2d","removeHtmlTags","extractName","bhOptions","createLocationSearchBloodhound","searchDirective","featureStyleComponent_exports","colorpickerComponent","handleColorSet_","handleFeatureSet_","propName","newColor","getSetAngle","getSetProperty_","getSetName","getSetShowLabel","getSetOpacity","getSetShowMeasure","getSetSize","getSetStroke","featureStyleComponent","drawFeatureComponent_exports","exportfeaturesComponent","longPressTimeout_","selectedFeature","listSelectionInProgress_","nameProperty","drawUid","selectFeatureFromList","getFeaturesArray","clearFeatures","handleMapTouchStart_","handleMapTouchEnd_","setTimeout","clearTimeout","drawFeatureComponent","d3","bisector","d3_array","axisBottom","d3_axis","axisLeft","scaleLinear","d3_scale","d3_selection","area","d3_shape","d3Elevation","light","margin","top","right","bottom","left","hoverCallback","outCallback","distanceExtractor","linesConfiguration","numberOfLines","bisectDistance","poiExtractor","styleDefs","poiLabelAngle","i18n","xAxisLabel","xAxis","yAxisLabel","yAxis","formatter","xhover","units","toPrecision","yhover","ele","xtick","ytick","lightXAxis","svg","scaleModifier","xFactor","xUnits","xDomain","profile","selection","each","clientWidth","clientHeight","y0","y1","firstLineName","zExtractor","svgEnter","enter","gEnter","clearPois","xHover","domain","yDomain","elevationsValues","transition","yHover","tickFormat","tickValues","ticks","tickSize","clearHighlight","mouseX","x0","invert","showPois","elevation","elevations","elevationsRef","lineName","xtranslate","pois","pe","profileData","poiEnterG","exit","elevationComponent_d3","elevationComponent_exports","optionsAttr","elevationData","poiData","refreshData","origHoverCallback","origOutCallback","elevationComponent","gmfProfileTemplateUrl","getLinesConfigurationFn","getHoverPointStyleFn","getNbPointsFn","getOptionsFn","gmfProfileJsonUrl","pointHoverOverlay_","gmfProfileJsonUrl_","linesConfiguration_","layersNames_","nbPoints_","currentPoint","yUnits","profileHighlight","measureTooltip_","snappedPoint_","profileLabels_","profileOptions","pointerMoveKey_","isErrored","updateEventsListening_","newLine","oldLine","update_","hoverPointStyle","hoverPointStyleFn","getZFactory_","getDist_","hoverCallback_","outCallback_","optionsFn","assertObject","getJsonProfile_","onPointerMove_","getEventCoordinate","closestPoint","getClosestPoint","pixelDist","getDistanceOnALine_","pointOnLine","distOnLine","fakeExtent","forEachSegment","firstPoint","lastPoint","getTooltipHTML_","elevationName","translatedElevationName","DistDecimal","lineConfiguration","getLayersNames","nbPoints","method","paramSerializer","getProfileDataSuccess_","getProfileDataError_","hasDistance","rows","drawLineComponent_exports","getStyleFn","overlay","styleFn","drawLineComponent","ol_events_condition_js__WEBPACK_IMPORTED_MODULE_2__","ngeo_query_MapQuerent_js__WEBPACK_IMPORTED_MODULE_0__","ol_interaction_DragBox_js__WEBPACK_IMPORTED_MODULE_1__","gmf_raster_RasterService_js__WEBPACK_IMPORTED_MODULE_0__","ngeo_misc_debounce_js__WEBPACK_IMPORTED_MODULE_2__","gmfElevationwidgetTemplateUrl","loading","toggleActive_","inViewport_","pointerStop_","getRasterSuccess_","getRasterError_","widgetComponent_","WidgetController_","selectedElevationLayer","ol_math_js__WEBPACK_IMPORTED_MODULE_1__","extentHalfHorizontalDistance_","extentHalfVerticalDistance_","INCHES_PER_METER_","DOTS_PER_INCH_","createPrintMaskPostcompose","opt_rotation","frameState","viewState","viewportWidth","viewportHeight","ol_has_js__WEBPACK_IMPORTED_MODULE_0__","ppi","ipm","extentHalfWidth","extentHalfHeight","beginPath","moveTo","lineTo","closePath","drawPrintZoneWithRotation_","drawPrintZone_","minx","miny","maxx","maxy","diagonal","gamma","atan","omega","x1","x2","y2","x3","y3","x4","y4","getOptimalScale","mapSize","mapResolution","printMapSize","printMapScales","mapWidth","mapHeight","scaleWidth","scaleHeight","optimal","getOptimalResolution","printMapScale","dotsPerMeter","resolutionX","resolutionY","getBottomLeftCorner","getBottomRightCorner","getUpLeftCorner","getUpRightCorner","gmf_authentication_Service_js__WEBPACK_IMPORTED_MODULE_1__","ngeo_map_LayerHelper_js__WEBPACK_IMPORTED_MODULE_4__","ngeo_map_FeatureOverlayMgr_js__WEBPACK_IMPORTED_MODULE_5__","ngeo_misc_FeatureHelper_js__WEBPACK_IMPORTED_MODULE_6__","ngeo_print_Service_js__WEBPACK_IMPORTED_MODULE_7__","ngeo_print_Utils_js__WEBPACK_IMPORTED_MODULE_8__","ngeo_query_MapQuerent_js__WEBPACK_IMPORTED_MODULE_9__","gmfPrintTemplateUrl","PrintStateEnum","NOT_IN_USE","PRINTING","ERROR_ON_REPORT","CAPABILITIES_NOT_LOADED","ERROR_ON_GETCAPABILITIES","rotateMask","fieldValues","hiddenAttributeNames","attributesOut","ngeoPrintUtils","ngeoCreatePrint","gmfPrintUrl","gmfPrintState","gmfPrintState_","featureOverlayLayer_","ngeoPrintUtils_","ngeoPrint_","ngeoQueryResult_","scaleInput","requestCanceler_","statusTimeoutPromise_","onDragPreviousMousePosition_","rotationTimeoutPromise_","postComposeListenerKey_","pointerDragListenerKey_","mapViewResolutionChangeKey_","curRef_","formats_","layouts_","layout_","paperSize_","layoutInfo","scaleManuallySelected_","rotationInput_","setRotation","postcomposeListener_","capabilities_","currentThemes_","togglePrintPanel_","print","currentThemes","getRotationFn","getScaleFn","goog_asserts_js__WEBPACK_IMPORTED_MODULE_3__","ol_array_js__WEBPACK_IMPORTED_MODULE_10__","getOptimalScale_","getCapabilities_","parseCapabilities_","ol_events_js__WEBPACK_IMPORTED_MODULE_11__","onPointerDrag_","render","layouts","updateFields_","mapInfo","isAttributeInCurrentLayout_","clientInfo","updateCustomFields_","legend","dpis","rawType","simpleAttributes","previousAttributes","defaultValue","default","ol_math_js__WEBPACK_IMPORTED_MODULE_16__","p0x","p0y","p1x","p1y","centerToP0","centerToP1","boost","increment","getDataSource_","currentLanguage","field","getLegend_","ol_Map_js__WEBPACK_IMPORTED_MODULE_15__","setView","ol_layers","new_ol_layers","print_native_angle","server_name","layer_names","printLayers","ol_layer_Image_js__WEBPACK_IMPORTED_MODULE_12__","setLayerGroup","ol_layer_Group_js__WEBPACK_IMPORTED_MODULE_14__","spec","handleCreateReportSuccess_","handleCreateReportError_","resetPrintStates_","opt_printState","datasourceObj","columns","datasourceArr","table","getStatus_","handleGetStatusSuccess_","mfResp","classes","icons","ol_layer_Tile_js__WEBPACK_IMPORTED_MODULE_13__","getMetadataLegendImage_","legendImage","setLayout","layoutName","getSetScale","contrainRes","constrainResolution","setResolution","setDpi","isState","stateEnumKey","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_12__","ngeo_misc_EventHelper_js__WEBPACK_IMPORTED_MODULE_5__","filter_","interaction_","ngeo_GeometryType_js__WEBPACK_IMPORTED_MODULE_2__","ol_interaction_Draw_js__WEBPACK_IMPORTED_MODULE_11__","ngeo_interaction_MeasureLength_js__WEBPACK_IMPORTED_MODULE_4__","ngeo_interaction_MeasureArea_js__WEBPACK_IMPORTED_MODULE_3__","ol_index_js__WEBPACK_IMPORTED_MODULE_7__","ol_events_js__WEBPACK_IMPORTED_MODULE_9__","handleDrawEnd_","ngeo_utils_js__WEBPACK_IMPORTED_MODULE_6__","toMulti","ol_Collection_js__WEBPACK_IMPORTED_MODULE_8__","ngeo_misc_php_date_formatter_js__WEBPACK_IMPORTED_MODULE_0__","fromJson","ngeo_misc_datetimepickerComponent_js__WEBPACK_IMPORTED_MODULE_3__","ngeo_misc_EventHelper_js__WEBPACK_IMPORTED_MODULE_2__","ngeoAttributesTemplateUrl","disabled","form","updating_","handleInputChange","ngeo_misc_FeatureHelper_js__WEBPACK_IMPORTED_MODULE_0__","$menu","aria-labelledby","$item","handleMenuItemClick_","handleElementClick_","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_2__","parentElement","sortable","resetUpDragDrop","handleClassName","callbackFn","callbackCtx","sortableElement","sortableOptions","axis","ui-sortable-helper","ui","oldIndex","newIndex","Function","ngeoPopoverCtrl","anchorElm","bodyElm","shown","popover","placement","dismissPopover","unbind","anchorComponent","contentComponent","hide","PopoverController_","onMouseDown","clickEvent","gmf_layertree_TreeManager_js__WEBPACK_IMPORTED_MODULE_1__","gmf_search_FulltextSearch_js__WEBPACK_IMPORTED_MODULE_2__","gmf_theme_Themes_js__WEBPACK_IMPORTED_MODULE_3__","ngeo_misc_AutoProjection_js__WEBPACK_IMPORTED_MODULE_6__","ngeo_misc_colorpickerComponent_js__WEBPACK_IMPORTED_MODULE_7__","ngeo_search_module_js__WEBPACK_IMPORTED_MODULE_9__","ngeo_message_popoverComponent_js__WEBPACK_IMPORTED_MODULE_8__","gmfSearchTemplateUrl","gmfSearchTemplateUrl_","inputValue","placeholder","datasources","featuresStyles","clearButton","colorChooser","coordinatesProjections","additionalListeners","onInitCallback","SearchController_","ngeoAutoProjection","ngeoSearchCreateGeoJSONBloodhound","gmfSearchFulltextSearch","fullTextSearch_","ngeoSearchCreateGeoJSONBloodhound_","styles_","datasets","displayColorPicker","listeners","coordProj","initStyles_","getSearchStyle_","ol_obj_js__WEBPACK_IMPORTED_MODULE_13__","initDatasets_","setStyleColor","mergeListeners_","select_","close_","datasetsempty_","searchQuery","resultIndex","mapZoom","fulltextsearch_","filterLayername_","filterAction_","createDataset_","datasetTitle","groupsKey","typeaheadDatasetOptions","createSearchCoordinates_","display","templates","componentScope","compile","typeaheadDataset","createAndInitBloodhound_","act","opt_layerName","featureLayerName","mapProjectionCode","getBloodhoudRemoteOptions_","bloodhound","ol_proj_js__WEBPACK_IMPORTED_MODULE_15__","initialize","rateLimitWait","xhrFields","ol_uri_js__WEBPACK_IMPORTED_MODULE_21__","interface","suggestions","tt_source","COORDINATES_LAYER_NAME","ol_style_Style_js__WEBPACK_IMPORTED_MODULE_20__","ol_style_RegularShape_js__WEBPACK_IMPORTED_MODULE_18__","ol_style_Stroke_js__WEBPACK_IMPORTED_MODULE_19__","ol_style_Fill_js__WEBPACK_IMPORTED_MODULE_17__","ol_style_Circle_js__WEBPACK_IMPORTED_MODULE_16__","customStyles","ol_color_js__WEBPACK_IMPORTED_MODULE_11__","setImage","changed","setTTDropdownVisibility_","ttDropdown","onClearButton","ttmenu","inputs","blur","ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_12__","layer_name","leaveSearch_","selectFromGMF_","featureGeometry","_loop2","actionName","actionData","datasourcesActionsHaveAddLayer","groupAction","silent","fitArray","menu","opt_zoom","ol_format_GeoJSON_js__WEBPACK_IMPORTED_MODULE_14__","fitOptions","selected","selectedIndex","arr1","arr2","dereg1","dereg2","ngeo_layertree_Controller_js__WEBPACK_IMPORTED_MODULE_0__","ngeoLayertreeTemplateUrl","ol_Overlay_js__WEBPACK_IMPORTED_MODULE_1__","originalEl","closeEl_","contentEl_","one","gmf_datasource_DataSourceBeingFiltered_js__WEBPACK_IMPORTED_MODULE_1__","gmf_datasource_ExternalDataSourcesManager_js__WEBPACK_IMPORTED_MODULE_2__","gmf_permalink_Permalink_js__WEBPACK_IMPORTED_MODULE_3__","gmf_layertree_datasourceGroupTreeComponent_js__WEBPACK_IMPORTED_MODULE_4__","gmf_layertree_SyncLayertreeMap_js__WEBPACK_IMPORTED_MODULE_5__","gmf_layertree_TreeManager_js__WEBPACK_IMPORTED_MODULE_6__","gmf_theme_Themes_js__WEBPACK_IMPORTED_MODULE_7__","ngeo_layertree_component_js__WEBPACK_IMPORTED_MODULE_10__","ngeo_layertree_Controller_js__WEBPACK_IMPORTED_MODULE_11__","ngeo_map_LayerHelper_js__WEBPACK_IMPORTED_MODULE_12__","ngeo_misc_WMSTime_js__WEBPACK_IMPORTED_MODULE_14__","gmfLayertreeTemplate","openLinksInNewWindow","gmfSyncLayertreeMap","goog_asserts_js__WEBPACK_IMPORTED_MODULE_8__","gmfSyncLayertreeMap_","groupNodeStates_","ngeo_misc_syncArrays_js__WEBPACK_IMPORTED_MODULE_13__","updateDimensions_","ol_layer_Layer_js__WEBPACK_IMPORTED_MODULE_16__","updateLayerDimensions_","ol_obj_js__WEBPACK_IMPORTED_MODULE_17__","ol_source_WMTS_js__WEBPACK_IMPORTED_MODULE_20__","ol_source_TileWMS_js__WEBPACK_IMPORTED_MODULE_19__","ol_source_ImageWMS_js__WEBPACK_IMPORTED_MODULE_18__","once","toggleActive","getNodeState","updateWMSTimeLayerState","layertreeCtrl","ngeo_datasource_OGC_js__WEBPACK_IMPORTED_MODULE_9__","getLegendIconURL","iconUrl","legendRule","gmfOgcServer","getLegendsObject","legendsObject","gmfLayerDefaultName","ol_layer_Tile_js__WEBPACK_IMPORTED_MODULE_15__","wmtsLegendURL","layersNames","getScale_","getNumberOfLegendsObject","displayMetadata","metadataURL","afterReorder","groupNodes","currentTreeCtrls","removeNode","removeAllNodes","nodesCount","getResolutionStyle","zoomToResolution","toggleNodeLegend","legendNodeId","toggleFiltrableDataSource","isNodeLegendVisible","supportsCustomization","supportsLegend","supportsOpacityChange","appmodule_exports","$compileProvider","debugInfoEnabled","appmodule","ngeoGooglestreetviewTemplateUrl","featureStyle","noDataAtLocation","panorama_","google","maps","StreetViewPanorama","pov","heading","pitch","panoramaListener_","point_","streetViewService_","StreetViewService","panoramaPositionChanging_","handleLocationChange_","hasLocation","handleReadyChange_","hasData","oldShow","addListener","handlePanoramaPositionChange_","removeListener","oldLocation","lonLat","toLonLat_","getPanorama","lat","lng","handleStreetViewServiceGetPanorama_","ready","oldReady","panorama","StreetViewStatus","OK","latLng","getPosition","fromLonLat_","googlestreetview_module","NominatimService_exports","nominatimUrl_","searchDefaultParams_","typeaheadDebounceDelay_","typeaheadSourceDebounced","typeaheadSource_","option","syncResults","asyncResults","lon","display_name","NominatimService","RoutingService_exports","routingOptions_","ngeoOsrmBackendUrl_","backendUrl","protocolVersion_","getRoute","getNearest","RoutingService","NominatimInputComponent_exports","ngeoRoutingNominatimInputComponentTemplateUrl","ngeoNominatimService","onSelect","NominatimInputComponent_component","NominatimInputComponent","RoutingFeatureComponent_exports","ngeoRoutingFeatureTemplateUrl","ngeoNominatimService_","featureLabel","onChange","vectorFeatures_","modifyFeature_","draw_","onSelect_","errorMessage","snapFeature_","onFeatureChange_","setFeature_","transformedCoordinate","newCoordinates","getLonLatFromPoint_","onSuccess","onError","RoutingFeatureComponent","RoutingComponent_exports","ngeoRoutingTemplateUrl","ngeoRoutingService","ngeoRoutingService_","routingProfiles","profiles","selectedRoutingProfile","calculateRoute","startFeature_","targetFeature_","viaArray","start.fill","start.stroke","destination.fill","destination.stroke","via.fill","via.stroke","routeSource_","routeLayer_","routeDistance","routeDuration","regexIsFormattedCoord","handleChange","clearRoute","reverseRoute","tmpFeature","parseRoute_","route","parsedRoutes","formatConfig","legs","leg","steps","step","coordFrom","coordTo","vias","via","onSuccess_","routes","startRoute","endRoute","startToRoute","routeToEnd","routeConnections","onError_","addVia","deleteVia","RoutingComponent","routing_module","epsg2056def","somerc","lib","proj4","AbstractDesktopController","resolutions","searchCoordinatesProjections","searchDelay","showInfobar","scaleSelectorValues","elevationLayers","profileLinesconfiguration","srtm","mousePositionProjections","gridMergeTabs","OSM_time_merged","transport (merged)","Learning [merged]","bgOpacityOptions","onKeydown","import_module"],"mappings":"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","file":"desktop_alt.7bb9f8.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([348,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","const exports = {};\n\nexports.assert = function(condition, opt_message, var_args) {\n  return condition;\n};\n\nexports.assertNumber = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertString = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertFunction = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertObject = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertArray = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertBoolean = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertElement = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertInstanceof = function(value, type, opt_message, var_args) {\n  return value;\n};\n\nexports.assertObjectPrototypeIsIntact = function() {};\n\nexport default exports;\n","/**\n * @module ngeo.GeometryType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  CIRCLE: 'Circle',\n  /**\n   * @type {string}\n   * @export\n   */\n  LINE_STRING: 'LineString',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_LINE_STRING: 'MultiLineString',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_POINT: 'MultiPoint',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_POLYGON: 'MultiPolygon',\n  /**\n   * @type {string}\n   * @export\n   */\n  POINT: 'Point',\n  /**\n   * @type {string}\n   * @export\n   */\n  POLYGON: 'Polygon',\n  /**\n   * @type {string}\n   * @export\n   */\n  RECTANGLE: 'Rectangle',\n  /**\n   * @type {string}\n   * @export\n   */\n  TEXT: 'Text'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.FeatureProperties\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ANGLE: 'a',\n  /**\n   * @type {string}\n   * @export\n   */\n  COLOR: 'c',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_CIRCLE: 'l',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_RECTANGLE: 'r',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_TEXT: 't',\n  /**\n   * @type {string}\n   * @export\n   */\n  NAME: 'n',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_LABEL: 'b',\n  /**\n   * @type {string}\n   * @export\n   */\n  OPACITY: 'o',\n  /**\n   * @type {number}\n   * @export\n   */\n  AZIMUT: 'z',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_MEASURE: 'm',\n  /**\n   * @type {string}\n   * @export\n   */\n  SIZE: 's',\n  /**\n   * @type {string}\n   * @export\n   */\n  STROKE: 'k'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.AttributeType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   */\n  BOOLEAN: 'boolean',\n  /**\n   * @type {string}\n   */\n  DATE: 'date',\n  /**\n   * @type {string}\n   */\n  DATETIME: 'datetime',\n  /**\n   * @type {string}\n   */\n  TIME: 'time',\n  /**\n   * @type {string}\n   */\n  GEOMETRY: 'geometry',\n  /**\n   * @type {string}\n   */\n  NUMBER: 'number',\n  /**\n   * @type {string}\n   */\n  SELECT: 'select',\n  /**\n   * @type {string}\n   */\n  TEXT: 'text'\n};\n\n\nexport default exports;\n","/**\n * @module gmf.theme.Themes\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * The Themes service. This service interacts\n * with c2cgeoportal's \"themes\" web service and exposes functions that return\n * objects in the tree returned by the \"themes\" web service.\n *\n * @constructor\n * @struct\n * @extends {ol.events.EventTarget}\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$q} $q Angular q service\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmfx.ThemesOptions} gmfThemesOptions Themes options.\n * @ngInject\n * @ngdoc service\n * @ngname gmfThemes\n */\nconst exports = function($http, $injector, $q, ngeoLayerHelper, gettextCatalog, gmfThemesOptions) {\n\n  olEventsEventTarget.call(this);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.addBlankBackgroundLayer_ = true;\n  if (gmfThemesOptions.addBlankBackgroundLayer !== undefined) {\n    this.addBlankBackgroundLayer_ = gmfThemesOptions.addBlankBackgroundLayer;\n  }\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.treeUrl_ = undefined;\n  if ($injector.has('gmfTreeUrl')) {\n    this.treeUrl_ = $injector.get('gmfTreeUrl');\n  }\n\n  this.cacheVersion_ = '0';\n  if ($injector.has('cacheVersion')) {\n    this.cacheVersion_ = $injector.get('cacheVersion');\n  }\n\n  /**\n   * @type {?ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = null;\n  if ($injector.has('ngeoLocation')) {\n    this.ngeoLocation_ = $injector.get('ngeoLocation');\n  }\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog = gettextCatalog;\n\n  /**\n   * @type {angular.$q.Deferred}\n   * @private\n   */\n  this.deferred_ = $q.defer();\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promise_ = this.deferred_.promise;\n\n  /**\n   * @type {boolean}\n   */\n  this.loaded = false;\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.bgLayerPromise_ = null;\n};\n\nolBase.inherits(exports, olEventsEventTarget);\n\n\n/**\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The layer name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByLayerNodeName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const childNodes = [];\n      exports.getFlatNodes(group, childNodes);\n      if (exports.findObjectByName(childNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n/**\n * Find a layer group object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The group name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const internalNodes = [];\n      exports.getFlatInternalNodes(group, internalNodes);\n      if (exports.findObjectByName(internalNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Find an object by its name. Return null if not found.\n * @param {Array.<T>} objects Array of objects with a 'name' attribute.\n * @param {string} objectName The object name.\n * @return {T} The object or null.\n * @template T\n */\nexports.findObjectByName = function(objects, objectName) {\n  return olArray.find(objects, object => object['name'] === objectName);\n};\n\n\n/**\n * Find a theme object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} themeName The theme name.\n * @return {gmfThemes.GmfTheme} The theme object or null.\n */\nexports.findThemeByName = function(themes, themeName) {\n  return exports.findObjectByName(themes, themeName);\n};\n\n\n/**\n * Fill the given \"nodes\" array with all internal nodes (non-leaf nones) in\n * the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatInternalNodes = function(node, nodes) {\n  const children = node.children;\n  if (children !== undefined) {\n    nodes.push(node);\n    for (let i = 0; i < children.length; i++) {\n      exports.getFlatInternalNodes(children[i], nodes);\n    }\n  }\n};\n\n\n/**\n * Fill the given \"nodes\" array with all leaf nodes in the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatNodes = function(node, nodes) {\n  let i;\n  const children = node.children;\n  if (children !== undefined) {\n    for (i = 0; i < children.length; i++) {\n      exports.getFlatNodes(children[i], nodes);\n    }\n  } else {\n    nodes.push(node);\n  }\n};\n\n\n/**\n * Get background layers.\n * @return {!angular.$q.Promise.<!Array.<!ol.layer.Base>>} Promise.\n */\nexports.prototype.getBgLayers = function() {\n  const gettextCatalog = this.gettextCatalog;\n  if (this.bgLayerPromise_) {\n    return this.bgLayerPromise_;\n  }\n  const $q = this.$q_;\n  const layerHelper = this.layerHelper_;\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item A group or a leaf.\n   * @param {Array.<number>} array Array of ids;\n   */\n  const getIds = function(item, array) {\n    array.push(olBase.getUid(item));\n    const children = item.children || [];\n    children.forEach((child) => {\n      getIds(child, array);\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item The item.\n   * @param {ol.layer.Base} layer The layer.\n   * @return {ol.layer.Base} the provided layer.\n   */\n  const callback = function(item, layer) {\n    layer.set('label', item.name);\n    layer.set('metadata', item.metadata);\n    layer.set('dimensions', item.dimensions);\n    const ids = [];\n    getIds(item, ids);\n    layer.set('querySourceIds', ids);\n    return layer;\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} gmfLayer The item.\n   * @return {angular.$q.Promise.<ol.layer.Base>|ol.layer.Base} the created layer.\n   */\n  const layerLayerCreationFn = function(ogcServers, gmfLayer) {\n    if (gmfLayer.type === 'WMTS') {\n      const gmfLayerWMTS = /** @type gmfThemes.GmfLayerWMTS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMTS.url, 'Layer URL is required');\n      return layerHelper.createWMTSLayerFromCapabilitites(\n        gmfLayerWMTS.url,\n        gmfLayerWMTS.layer || '',\n        gmfLayerWMTS.matrixSet,\n        gmfLayer.dimensions\n      ).then(callback.bind(null, gmfLayer)).then(null, (response) => {\n        let message = `Unable to build layer \"${gmfLayerWMTS.layer}\" from WMTSCapabilities: ${gmfLayerWMTS.url}\\n`;\n        message += `OpenLayers error is \"${response['message']}`;\n        console.error(message);\n        // Continue even if some layers have failed loading.\n        return $q.resolve(undefined);\n      });\n    } else if (gmfLayer.type === 'WMS') {\n      const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMS.ogcServer, 'An OGC server is required');\n      const server = ogcServers[gmfLayerWMS.ogcServer];\n      googAsserts.assert(server, 'The OGC server was not found');\n      googAsserts.assert(server.url, 'The server URL is required');\n      googAsserts.assert(server.imageType, 'The server image type is required');\n      return callback(gmfLayer, layerHelper.createBasicWMSLayer(\n        server.url,\n        gmfLayerWMS.layers || '',\n        server.imageType,\n        server.type,\n        undefined, // time\n        gmfLayer.dimensions,\n        server.credential ? 'use-credentials' : 'anonymous'\n      ));\n    }\n    googAsserts.fail(`Unsupported type: ${gmfLayer.type}`);\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup} item The item.\n   * @return {angular.$q.Promise.<ol.layer.Group>} the created layer.\n   */\n  const layerGroupCreationFn = function(ogcServers, item) {\n    // We assume no child is a layer group.\n    const orderedChildren = item.children.map(x => x).reverse(); // the order of insertion in OL3 is the contrary of the theme\n    const promises = orderedChildren.map(layerLayerCreationFn.bind(null, ogcServers));\n    return $q.all(promises).then((layers) => {\n      let collection;\n      if (layers) {\n        layers = layers.filter(l => l);\n        collection = new olCollection(layers);\n      }\n      const group = layerHelper.createBasicGroup(collection);\n      callback(item, group);\n      return group;\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n   *     response.\n   * @return {angular.$q.Promise.<Array.<ol.layer.Base>>} Promise.\n   */\n  const promiseSuccessFn = function(data) {\n    const promises = data.background_layers.map((item) => {\n      const itemType = item.type;\n      if (itemType === 'WMTS' || itemType === 'WMS') {\n        return layerLayerCreationFn(data.ogcServers, item);\n      } else if (item.children) {\n        // group of layers\n        return layerGroupCreationFn(data.ogcServers, item);\n      } else {\n        return undefined;\n      }\n    }, this);\n    return $q.all(promises);\n  }.bind(this);\n\n  this.bgLayerPromise_ = this.promise_.then(promiseSuccessFn).then((values) => {\n    const layers = [];\n\n    // (1) add a blank layer\n    if (this.addBlankBackgroundLayer_) {\n      // For i18n string collection\n      gettextCatalog.getString('blank');\n      layers.push(new olLayerTile({\n        'label': 'blank',\n        'metadata': {'thumbnail': ''}\n      }));\n    }\n\n    // (2) add layers that were returned\n    values.forEach((layer) => {\n      if (layer) {\n        layers.push(layer);\n      }\n    });\n    return layers;\n  });\n\n  return this.bgLayerPromise_;\n};\n\n\n/**\n * Get a theme object by its name.\n * @param {string} themeName Theme name.\n * @return {angular.$q.Promise.<gmfThemes.GmfTheme>} Promise.\n * @export\n */\nexports.prototype.getThemeObject = function(themeName) {\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfTheme?} The theme object for themeName, or null\n       *     if not found.\n       */\n    data => exports.findThemeByName(data.themes, themeName));\n};\n\n\n/**\n * Get an array of theme objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfTheme>>} Promise.\n * @export\n */\nexports.prototype.getThemesObject = function() {\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfTheme>} The themes object.\n       */\n    data => data.themes);\n};\n\n\n/**\n * Get an array of background layer objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfLayer>>} Promise.\n */\nexports.prototype.getBackgroundLayersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfLayer>} The background layers object.\n       */\n    data => data.background_layers\n  );\n};\n\n\n/**\n * Get the `ogcServers` object.\n * @return {angular.$q.Promise.<!gmfThemes.GmfOgcServers>} Promise.\n * @export\n */\nexports.prototype.getOgcServersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfOgcServers} The `ogcServers` object.\n       */\n    data => data.ogcServers);\n};\n\n\n/**\n * Returns a promise to check if one of the layers in the themes is editable.\n * @return {angular.$q.Promise.<boolean>} Promise.\n */\nexports.prototype.hasEditableLayers = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(this.hasEditableLayers_.bind(this));\n};\n\n\n/**\n * Returns if one of the layers in the themes is editable.\n * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service response.\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasEditableLayers_ = function(data) {\n  return data.themes.some((theme) => {\n    const hasEditableLayers = theme.children.some(this.hasNodeEditableLayers_.bind(this));\n    return hasEditableLayers;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Theme node\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasNodeEditableLayers_ = function(node) {\n  if (node.editable) {\n    return true;\n  }\n\n  let hasEditableLayers = false;\n  const children = node.children;\n  if (children && children.length) {\n    hasEditableLayers = children.some(this.hasNodeEditableLayers_.bind(this));\n  }\n  return hasEditableLayers;\n};\n\n\n/**\n * Get the snapping configuration object from a Layertree controller\n * @param {gmfThemes.GmfLayer} node Layer node from the theme.\n * @return {?gmfThemes.GmfSnappingConfig} Snapping configuration, if found.\n * @export\n */\nexports.getSnappingConfig = function(node) {\n  const config = (node.metadata && node.metadata.snappingConfig !== undefined) ?\n    node.metadata.snappingConfig : null;\n  return config;\n};\n\n\n/**\n * Get the maximal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a maxResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the max resolution or undefined if any.\n */\nexports.getNodeMaxResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let maxResolution = gmfLayer.maxResolutionHint;\n  if (maxResolution === undefined && metadata !== undefined) {\n    maxResolution = metadata.maxResolution;\n  }\n  return maxResolution;\n};\n\n\n/**\n * Get the minimal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the min resolution or undefined if any.\n */\nexports.getNodeMinResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let minResolution = gmfLayer.minResolutionHint;\n  if (minResolution === undefined && metadata !== undefined) {\n    minResolution = metadata.minResolution;\n  }\n  return minResolution;\n};\n\n\n/**\n * @param {number=} opt_roleId The role id to send in the request.\n * Load themes from the \"themes\" service.\n * @export\n */\nexports.prototype.loadThemes = function(opt_roleId) {\n\n  googAsserts.assert(this.treeUrl_, 'gmfTreeUrl should be defined.');\n\n  if (this.loaded) {\n    // reload the themes\n    this.deferred_ = this.$q_.defer();\n    this.promise_ = this.deferred_.promise;\n    this.bgLayerPromise_ = null;\n    this.loaded = false;\n  }\n\n  this.$http_.get(this.treeUrl_, {\n    params: opt_roleId !== undefined ? {\n      'role': opt_roleId,\n      'cache_version': this.cacheVersion_\n    } : {\n      'cache_version': this.cacheVersion_\n    },\n    cache: false,\n    withCredentials: true\n  }).then((response) => {\n    if (response.data.errors.length != 0) {\n      const message = `The themes contain some errors:\\n${\n        response.data.errors.join('\\n')}`;\n      console.error(message);\n      if (this.ngeoLocation_ !== null && this.ngeoLocation_.hasParam('debug')) {\n        window.alert(message);\n      }\n    }\n    this.deferred_.resolve(response.data);\n    this.dispatchEvent('change');\n    this.loaded = true;\n  }, (response) => {\n    this.deferred_.reject(response);\n  });\n};\n\n\n/**\n * @enum {string}\n */\nexports.NodeType = {\n  MIXED_GROUP: 'MixedGroup',\n  NOT_MIXED_GROUP: 'NotMixedGroup',\n  WMTS: 'WMTS',\n  WMS: 'WMS'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemes', [\n  ngeoMapLayerHelper.module.name,\n]);\nexports.module.value('gmfThemesOptions', {});\nexports.module.service('gmfThemes', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Rule\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\n\n/**\n * @implements {ngeox.rule.Rule}\n */\nconst exports = class {\n\n  /**\n   * The abstract class for all filter rules.\n   *\n   * Rules are used to define filters that can be applied on data sources.\n   * A rule is usually a combination of 3 things:\n   *\n   * - a property name, for example 'city_name'\n   * - an operator, for example 'is equal to'\n   * - and an expression, for example 'Chicoutimi'.\n   *\n   * A rule is useful to hold those properties and change them on the fly.\n   * For example, changing an operator from 'is equal to' to 'like'.\n   *\n   * Also, a rule is especially useful for its `value` getter, which returns\n   * the combination of properties described above or `null` if there are some\n   * missing.  The `value` getter can be watched and used when the value is\n   * not null.\n   *\n   * When the operator is `between`, the `lowerBoundary` and `upperBoundary`\n   * properties are used instead of `expression`.\n   *\n   * @struct\n   * @param {!ngeox.rule.RuleOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * Whether the rule is active or not. Used by the `ngeo-rule` component.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.active_ = options.active === true;\n\n    /**\n     * The expression of the rule. The expression and boundaries are mutually\n     * exclusives.\n     *\n     * Note: exported (instead of private) due to the problem with the\n     * compiler. See the getter/setter methods below...  As a setter, the\n     * `expression` property would support being bond to an `ng-model`. Without\n     * it, it can't unless we expose the property directly.\n     *\n     * @type {?number|string}\n     * @export\n     */\n    this.expression = options.expression !== undefined ?\n      options.expression : null;\n\n    /**\n     * The lower boundary of the rule. The expression and boundaries are\n     * mutually exclusives.\n     * @type {?number}\n     * @private\n     */\n    this.lowerBoundary_ = options. lowerBoundary !== undefined ?\n      options.lowerBoundary : null;\n\n    /**\n     * The rule operator.\n     * @type {?string}\n     * @private\n     */\n    this.operator_ = options.operator || null;\n\n    /**\n     * The upper boundary of the rule. The expression and boundaries are\n     * mutually exclusives.\n     * @type {?number}\n     * @private\n     */\n    this.upperBoundary_ = options. upperBoundary !== undefined ?\n      options.upperBoundary : null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the rule is a custom one or not.\n     * @type {boolean}\n     * @private\n     */\n    this.isCustom_ = options.isCustom !== false;\n\n    /**\n     * The human-readable name of the rule.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n\n    /**\n     * A list of rule operators.\n     * @type {?Array.<string>}\n     * @private\n     */\n    this.operators_ = options.operators || null;\n\n    /**\n     * The property name (a.k.a. the attribute name).\n     * @type {string}\n     * @private\n     */\n    this.propertyName_ = options.propertyName;\n\n    /**\n     * The type of rule.\n     * @type {string}\n     * @private\n     */\n    this.type_ = googAsserts.assert(options.type);\n\n\n    // === Other properties ===\n\n    /**\n     * @type {Array.<!ol.EventsKey>}\n     * @protected\n     */\n    this.listenerKeys = [];\n\n  }\n\n  // === Dynamic property getters/setters ===\n\n  /**\n   * @return {boolean} Active\n   * @export\n   */\n  get active() {\n    return this.active_;\n  }\n\n  /**\n   * @param {boolean} active Active\n   * @export\n   */\n  set active(active) {\n    this.active_ = active;\n  }\n\n  /**\n   * The `expression` property does not have conventionnal getter/setters\n   * method because of a limitation of the compiler. It doesn't support\n   * yet having such methods being extended in child classes.\n   *\n   * See: https://github.com/google/closure-compiler/issues/1089\n   *\n   * @return {?number|string} Expression\n   * @export\n   */\n  getExpression() {\n    return this.expression;\n  }\n\n  /**\n   * @param {?number|string} expression Expression\n   * @export\n   */\n  setExpression(expression) {\n    this.expression = expression;\n  }\n\n  /**\n   * @return {?number} Lower boundary\n   * @export\n   */\n  get lowerBoundary() {\n    return this.lowerBoundary_;\n  }\n\n  /**\n   * @param {?number} lowerBoundary Lower boundary\n   * @export\n   */\n  set lowerBoundary(lowerBoundary) {\n    this.lowerBoundary_ = lowerBoundary;\n  }\n\n  /**\n   * @return {?string} Operator\n   * @export\n   */\n  get operator() {\n    return this.operator_;\n  }\n\n  /**\n   * @param {?string} operator Operator\n   * @export\n   */\n  set operator(operator) {\n    this.operator_ = operator;\n  }\n\n  /**\n   * @return {?number} Upper boundary\n   * @export\n   */\n  get upperBoundary() {\n    return this.upperBoundary_;\n  }\n\n  /**\n   * @param {?number} upperBoundary Upper boundary\n   * @export\n   */\n  set upperBoundary(upperBoundary) {\n    this.upperBoundary_ = upperBoundary;\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {boolean} Is custom.\n   * @export\n   */\n  get isCustom() {\n    return this.isCustom_;\n  }\n\n  /**\n   * @return {string} name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n  /**\n   * @return {?Array.<string>} Operators\n   * @export\n   */\n  get operators() {\n    return this.operators_;\n  }\n\n  /**\n   * @return {string} Property name\n   * @export\n   */\n  get propertyName() {\n    return this.propertyName_;\n  }\n\n  /**\n   * @return {string} Type\n   * @export\n   */\n  get type() {\n    return this.type_;\n  }\n\n  // === Calculated property getters ===\n\n  /**\n   * @return {?ngeox.rule.RuleSimpleValue|ngeox.rule.RuleRangeValue} Value.\n   * @export\n   */\n  get value() {\n    let value = null;\n\n    const expression = this.getExpression();\n    const lowerBoundary = this.lowerBoundary;\n    const operator = this.operator;\n    const propertyName = this.propertyName;\n    const upperBoundary = this.upperBoundary;\n\n    if (operator) {\n      if (operator === exports.OperatorType.BETWEEN ||\n          operator === exports.TemporalOperatorType.DURING) {\n        if (lowerBoundary !== null && upperBoundary !== null) {\n          value = {\n            operator,\n            lowerBoundary,\n            propertyName,\n            upperBoundary\n          };\n        }\n      } else {\n        if (expression !== null) {\n          value = {\n            expression,\n            operator,\n            propertyName\n          };\n        }\n      }\n    }\n\n    return value;\n  }\n\n  // === Other utility methods ===\n\n  /**\n   * Reset the following properties to `null`: expression, lowerBoundary,\n   * upperBoundary.\n   * @export\n   */\n  reset() {\n    if (this.getExpression() !== null) {\n      this.setExpression(null);\n    }\n    if (this.lowerBoundary !== null) {\n      this.lowerBoundary = null;\n    }\n    if (this.upperBoundary !== null) {\n      this.upperBoundary = null;\n    }\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.listenerKeys.forEach(olEvents.unlistenByKey);\n    this.listenerKeys.length = 0;\n  }\n\n};\n\n\n/**\n * @enum {string}\n */\nexports.OperatorType = {\n  BETWEEN: '..',\n  EQUAL_TO: '=',\n  GREATER_THAN: '>',\n  GREATER_THAN_OR_EQUAL_TO: '>=',\n  LESSER_THAN: '<',\n  LESSER_THAN_OR_EQUAL_TO: '<=',\n  LIKE: '~',\n  NOT_EQUAL_TO: '!='\n};\n\n\n/**\n * @enum {string}\n */\nexports.SpatialOperatorType = {\n  CONTAINS: 'contains',\n  INTERSECTS: 'intersects',\n  WITHIN: 'within'\n};\n\n\n/**\n * @enum {string}\n */\nexports.TemporalOperatorType = {\n  BEGINS: 'time_start',\n  DURING: 'time_during',\n  ENDS: 'time_end',\n  EQUALS: 'time_equal'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.OGC\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport olFormatGML2 from 'ol/format/GML2.js';\nimport olFormatGML3 from 'ol/format/GML3.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo.js';\n\n/**\n * @implements {ngeox.datasource.OGC}\n */\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source contains information of a single source of data that can\n   * show or fetch the data using an OGC server. Several OGC service types are\n   * supported by this data source: WMS, WMTS and even WFS.\n   *\n   * You can use the information stored within an OGC data source to do all\n   * sorts of things:\n   * - issue WMS/WFS queries\n   * - apply filter rules on it\n   * - create `ol.layer.Layer` objects using the WMS, WMTS or event WFS\n   *   information\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === DYNAMIC properties (i.e. that can change / be watched) ===\n\n    /**\n     * The dimensions configuration for the data source.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensionsConfig_ = options.dimensionsConfig || null;\n\n    /**\n     * The filter condition to apply to the filter rules (if any).\n     * @type {string}\n     * @private\n     */\n    this.filterCondition_ = options.filterCondition || ngeoFilterCondition.AND;\n\n    /**\n     * A list of filter rules to apply to this data source using the filter\n     * condition.\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @private\n     */\n    this.filterRules_ = options.filterRules || null;\n\n    /**\n     * Whether the data source is filtrable or not. When `null`, that means\n     * that we do not know if the data source if filtrable or not, yet. In\n     * that case, the value of the property needs to be determined from an\n     * external way.\n     * @type {?boolean}\n     * @private\n     */\n    this.filtrable_ = options.filtrable || null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the geometry from this data source can be copied to other data\n     * sources or not. Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.copyable_ = options.copyable === true;\n\n    /**\n     * A reference to the dimensions object.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensions_ = options.dimensions || null;\n\n    /**\n     * The name of the geometry attribute.\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = options.geometryName ||\n      exports.DEFAULT_GEOMETRY_NAME_;\n\n    /**\n     * The type of images to fetch by queries by the (WMS) or (WMTS) .\n     * @type {string}\n     * @private\n     */\n    this.ogcImageType_ = options.ogcImageType || 'image/png';\n\n    /**\n     * A list of layer definitions that are used by (WMS) and (WFS) queries.\n     * These are **not** used by the (WMTS) queries (the wmtsLayers is used\n     * by WMTS queries).\n     * @type {?Array.<!ngeox.datasource.OGCLayer>}\n     * @private\n     */\n    this.ogcLayers_ = options.ogcLayers || null;\n\n    /**\n     * The type of OGC server making the requests.\n     * @type {string}\n     * @private\n     */\n    this.ogcServerType_ = options.ogcServerType ||\n      exports.ServerType.MAPSERVER;\n\n    /**\n     * The type data source. Can be: 'WMS' or 'WMTS'.\n     * @type {string}\n     * @private\n     */\n    this.ogcType_ = options.ogcType || exports.Type.WMS;\n\n    /**\n     * Whether the geometry from this data source can be used to snap the\n     * geometry of features from other data sources that are being edited.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.snappable_ = options.snappable === true;\n\n    /**\n     * Determines whether external features can be snapped to the edges of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToEdges_ = options.snappingToEdges !== false;\n\n    /**\n     * Determines whether external features can be snapped to the vertice of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToVertice_ = options.snappingToVertice !== false;\n\n    /**\n     * The tolerance in pixels the snapping should occur. Defaults to `10`.\n     * @type {number}\n     * @private\n     */\n    this.snappingTolerance_ = options.snappingTolerance !== undefined ?\n      options.snappingTolerance : 10;\n\n    /**\n     * The name of the time attribute.\n     * @type {string|undefined}\n     * @private\n     */\n    this.timeAttributeName_ = options.timeAttributeName;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeLowerValue_ = options.timeLowerValue;\n\n    /**\n     * @type {?ngeox.TimeProperty}\n     * @private\n     */\n    this.timeProperty_ = options.timeProperty !== undefined ?\n      options.timeProperty : null;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeUpperValue_ = options.timeUpperValue;\n\n    /**\n     * The feature namespace to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeatureNS_ = options.wfsFeatureNS ||\n      exports.WFSFeatureNS[this.ogcServerType_];\n\n    /**\n     * The feature prefix to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeaturePrefix_ = options.wfsFeaturePrefix ||\n      exports.WFSFeaturePrefix.FEATURE;\n\n    /**\n     * The OutputFormat to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsOutputFormat_ = options.wfsOutputFormat ||\n      exports.WFSOutputFormat.GML3;\n\n    /**\n     * The url to use for (WFS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wfsUrl_ = options.wfsUrl;\n\n    /**\n     * The InfoFormat to use with WMS requests.\n     * @type {string}\n     * @private\n     */\n    this.wmsInfoFormat_ = options.wmsInfoFormat ||\n      exports.WMSInfoFormat.GML;\n\n    /**\n     * Whether the (WMS) images returned by this data source\n     * should be single tiles or not.\n     * @type {boolean}\n     * @private\n     */\n    this.wmsIsSingleTile_ = options.wmsIsSingleTile === true;\n\n    /**\n     * The url to use for (WMS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmsUrl_ = options.wmsUrl;\n\n    /**\n     * The layer name to use for the (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsLayer_ = options.wmtsLayer;\n\n    /**\n     * The url to use for (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsUrl_ = options.wmtsUrl;\n\n\n    // === Calculated properties ===\n\n    // Get queryable ogc layer names\n    const layers = [];\n    if (this.queryable && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable) {\n          layers.push(ogcLayer.name);\n        }\n      }\n    }\n\n    let wfsFormat = null;\n    if (this.supportsWFS && layers.length) {\n      let format = undefined;\n      if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML3) {\n        format = new olFormatGML3();\n      } else if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML2) {\n        format = new olFormatGML2();\n      }\n      googAsserts.assert(format);\n      wfsFormat = new olFormatWFS({\n        featureNS: this.wfsFeatureNS,\n        featureType: layers,\n        gmlFormat: format\n      });\n    }\n\n    /**\n     * @type {?ol.format.WFS}\n     * @private\n     */\n    this.wfsFormat_ = wfsFormat;\n\n    let wmsFormat = null;\n    if (this.supportsWMS && layers.length) {\n      if (this.wmsInfoFormat === exports.WMSInfoFormat.GML) {\n        wmsFormat = new olFormatWMSGetFeatureInfo({\n          layers\n        });\n      }\n      // Todo, support more formats for WMS\n    }\n\n    /**\n     * @type {?ol.format.WMSGetFeatureInfo}\n     * @private\n     */\n    this.wmsFormat_ = wmsFormat;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {?ngeox.Dimensions} Dimensions configuration for this data source\n   * @export\n   */\n  get dimensionsConfig() {\n    return this.dimensionsConfig_;\n  }\n\n  /**\n   * @param {?ngeox.Dimensions} dimensionsConfig Dimensions configuration\n   * @export\n   */\n  set dimensionsConfig(dimensionsConfig) {\n    this.dimensionsConfig_ = dimensionsConfig;\n  }\n\n  /**\n   * @return {string} Filter condition\n   * @export\n   */\n  get filterCondition() {\n    return this.filterCondition_;\n  }\n\n  /**\n   * @param {string} filterCondition Filter condition\n   * @export\n   */\n  set filterCondition(filterCondition) {\n    this.filterCondition_ = filterCondition;\n  }\n\n  /**\n   * @return {?Array.<!ngeo.rule.Rule>} Filter rules\n   * @export\n   */\n  get filterRules() {\n    return this.filterRules_;\n  }\n\n  /**\n   * @param {?Array.<!ngeo.rule.Rule>} filterRules Filter rules\n   * @export\n   */\n  set filterRules(filterRules) {\n    this.filterRules_ = filterRules;\n  }\n\n  /**\n   * @return {number|undefined} Time lower value\n   * @export\n   */\n  get timeLowerValue() {\n    return this.timeLowerValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time lower value\n   * @export\n   */\n  set timeLowerValue(time) {\n    this.timeLowerValue_ = time;\n  }\n\n  /**\n   * @return {?ngeox.TimeRange} Time range value\n   * @export\n   */\n  get timeRangeValue() {\n    let range = null;\n    const lower = this.timeLowerValue;\n    const upper = this.timeUpperValue;\n    if (lower !== undefined) {\n      range = {\n        end: upper,\n        start: lower\n      };\n    }\n    return range;\n  }\n\n  /**\n   * @param {?ngeox.TimeRange} range Time range value\n   * @export\n   */\n  set timeRangeValue(range) {\n    if (range) {\n      this.timeUpperValue = range.end;\n      this.timeLowerValue = range.start;\n    } else {\n      this.timeUpperValue = undefined;\n      this.timeLowerValue = undefined;\n    }\n  }\n\n  /**\n   * @return {number|undefined} Time upper value\n   * @export\n   */\n  get timeUpperValue() {\n    return this.timeUpperValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time upper value\n   * @export\n   */\n  set timeUpperValue(time) {\n    this.timeUpperValue_ = time;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @inheritDoc\n   */\n  getAttributes() {\n    return super.attributes;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setAttributes(attributes) {\n    super.setAttributes(attributes);\n    this.updateGeometryNameFromAttributes_();\n  }\n\n  /**\n   * @return {boolean} Copyable\n   * @export\n   */\n  get copyable() {\n    return this.copyable_;\n  }\n\n  /**\n   * @return {?boolean} Filtrable.\n   * @export\n   */\n  get filtrable() {\n    return this.filtrable_;\n  }\n\n  /**\n   * @param {?boolean} filtrable Filtrable.\n   * @export\n   */\n  set filtrable(filtrable) {\n    this.filtrable_ = filtrable;\n  }\n\n  /**\n   * @return {string} Geometry name\n   * @export\n   */\n  get geometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * @return {string} OGC image type\n   * @export\n   */\n  get ogcImageType() {\n    return this.ogcImageType_;\n  }\n\n  /**\n   * @return {?Array.<!ngeox.datasource.OGCLayer>} OGC layers\n   * @export\n   */\n  get ogcLayers() {\n    return this.ogcLayers_;\n  }\n\n  /**\n   * @return {string} OGC server type\n   * @export\n   */\n  get ogcServerType() {\n    return this.ogcServerType_;\n  }\n\n  /**\n   * @return {string} OGC type\n   * @export\n   */\n  get ogcType() {\n    return this.ogcType_;\n  }\n\n  /**\n   * @return {boolean} Snappable\n   * @export\n   */\n  get snappable() {\n    return this.snappable_;\n  }\n\n  /**\n   * @return {boolean} Snapping to edges\n   * @export\n   */\n  get snappingToEdges() {\n    return this.snappingToEdges_;\n  }\n\n  /**\n   * @return {boolean} Snapping to vertices\n   * @export\n   */\n  get snappingToVertice() {\n    return this.snappingToVertice_;\n  }\n\n  /**\n   * @return {number} Snapping tolerance\n   * @export\n   */\n  get snappingTolerance() {\n    return this.snappingTolerance_;\n  }\n\n  /**\n   * @return {string|undefined} Time attribute name\n   * @export\n   */\n  get timeAttributeName() {\n    return this.timeAttributeName_;\n  }\n\n  /**\n   * @return {?ngeox.TimeProperty} Time property\n   * @export\n   */\n  get timeProperty() {\n    return this.timeProperty_;\n  }\n\n  /**\n   * @return {string} WFS feature namespace\n   * @export\n   */\n  get wfsFeatureNS() {\n    return this.wfsFeatureNS_;\n  }\n\n  /**\n   * @return {string} WFS feature prefix\n   * @export\n   */\n  get wfsFeaturePrefix() {\n    return this.wfsFeaturePrefix_;\n  }\n\n  /**\n   * @return {string} WFS output format\n   * @export\n   */\n  get wfsOutputFormat() {\n    return this.wfsOutputFormat_;\n  }\n\n  /**\n   * @export\n   * @return {string|undefined} WFS url\n   */\n  get wfsUrl() {\n    return this.wfsUrl_;\n  }\n\n  /**\n   * @return {string} WMS info format\n   * @export\n   */\n  get wmsInfoFormat() {\n    return this.wmsInfoFormat_;\n  }\n\n  /**\n   * @return {boolean} WMS is single tile\n   * @export\n   */\n  get wmsIsSingleTile() {\n    return this.wmsIsSingleTile_;\n  }\n\n  /**\n   * @return {string|undefined} WMS url\n   * @export\n   * @override\n   */\n  get wmsUrl() {\n    return this.wmsUrl_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS layer\n   * @export\n   */\n  get wmtsLayer() {\n    return this.wmtsLayer_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS url\n   * @export\n   * @override\n   */\n  get wmtsUrl() {\n    return this.wmtsUrl_;\n  }\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {!ngeox.DimensionsActive} Active dimensions\n   * @export\n   */\n  get activeDimensions() {\n    const active = {};\n    const dimensions = this.dimensions_ || {};\n    const config = this.dimensionsConfig || {};\n\n    for (const key in config) {\n      if (config[key] === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          active[key] = dimensions[key];\n        }\n      } else {\n        active[key] = config[key];\n      }\n    }\n\n    return active;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WFS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  get combinableForWFS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WMS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  get combinableForWMS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * Whether the data source is queryable or not. For an OGC data source to be\n   * queryable, it requires the support of WFS or WMS and at least one ogc\n   * layer to be querable.\n   * @export\n   */\n  get queryable() {\n    let queryable = false;\n    const supportsOGCQueries = this.supportsWMS || this.supportsWFS;\n    if (supportsOGCQueries && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable === true) {\n          queryable = true;\n          break;\n        }\n      }\n    }\n    return queryable;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WFS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWFS() {\n    return this.wfsUrl !== undefined;\n  }\n\n  /**\n   * To be able to do advanced operations on a data source, such as editing\n   * or filtering, a data source must be bound to 1 set of attributes.\n   * These attributes are the ones defined by an ogcLayer.  This means that\n   * to be considered to support having attributes defined, you either need\n   * to define them directly when creating the data source, or if you let\n   * the querent service get them for you using a WFS DescribeFeatureType\n   * request, the data source must have only 1 ogcLayer set, which must\n   * be queryable.\n   * @return {boolean} Supports attributes.\n   * @export\n   */\n  get supportsAttributes() {\n    return this.attributes !== null || (\n      this.supportsWFS &&\n      this.ogcLayers !== null &&\n      this.ogcLayers.length === 1 &&\n      this.ogcLayers[0].queryable === true\n    );\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WMS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWMS() {\n    return this.wmsUrl !== undefined;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WTMS requests\n   *     or not.\n   * @export\n   */\n  get supportsWMTS() {\n    return this.wmtsUrl !== undefined;\n  }\n\n  /**\n   * @return {?ol.format.WFS} WFS format.\n   * @export\n   */\n  get wfsFormat() {\n    return this.wfsFormat_;\n  }\n\n  /**\n   * @return {?ol.format.WMSGetFeatureInfo} WMS format.\n   * @export\n   */\n  get wmsFormat() {\n    return this.wmsFormat_;\n  }\n\n  // ============================\n  // === Other public methods ===\n  // ============================\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWFS(dataSource) {\n    return this.combinableForWFS && dataSource.combinableForWFS &&\n      this.supportsWFS && dataSource.supportsWFS &&\n      this.queryable && dataSource.queryable &&\n      this.wfsUrl === dataSource.wfsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWMS(dataSource) {\n    return this.combinableForWMS && dataSource.combinableForWMS &&\n      this.supportsWMS && dataSource.supportsWMS &&\n      this.queryable && dataSource.queryable &&\n      this.wmsUrl === dataSource.wmsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * Check if there's at least one OGC layer in range of a given resolution.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {boolean} At least one OGC layer is in range.\n   * @export\n   */\n  isAnyOGCLayerInRange(res, queryableOnly = false) {\n    return !!(this.getInRangeOGCLayerNames(res, queryableOnly).length);\n  }\n\n  /**\n   * Returns a list of OGC layer names that are in range of a given resolution.\n   * If there's no OGC layers defined, an empty array is returned.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names that are in range.\n   * @export\n   */\n  getInRangeOGCLayerNames(res, queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        const maxRes = ogcLayer.maxResolution;\n        const minRes = ogcLayer.minResolution;\n        const inMinRange = minRes === undefined || res >= minRes;\n        const inMaxRange = maxRes === undefined || res <= maxRes;\n        const inRange = inMinRange && inMaxRange;\n\n        if (inRange && (!queryableOnly || ogcLayer.queryable)) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the list of OGC layer names.\n   * @param {boolean} queryableOnly Whether to additionally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names.\n   * @export\n   */\n  getOGCLayerNames(queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (!queryableOnly || ogcLayer.queryable) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the filtrable OGC layer name. This methods asserts that\n   * the name exists and is filtrable.\n   * @return {string} OGC layer name.\n   * @export\n   */\n  getFiltrableOGCLayerName() {\n    googAsserts.assert(this.filtrable);\n    const layerNames = this.getOGCLayerNames();\n    googAsserts.assert(layerNames.length === 1);\n    return layerNames[0];\n  }\n\n  /**\n   * Loop in the attributes of the data source. Update the `geometryName`\n   * property on the first geometry attribute found. If none is found, then\n   * the default geometry name is set.\n   * @private\n   */\n  updateGeometryNameFromAttributes_() {\n    let geometryName = exports.DEFAULT_GEOMETRY_NAME_;\n\n    if (this.attributes) {\n      for (const attribute of this.attributes) {\n        if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n          geometryName = attribute.name;\n          break;\n        }\n      }\n    }\n\n    this.geometryName_ = geometryName;\n  }\n\n  /**\n   * @param {!ngeox.datasource.OGC} dataSource Remote data source to\n   *     compare with this one.\n   * @return {boolean} Whether the two data sources have the same active\n   *     dimensions. If both have no dimensions, they are considered to be\n   *     sharing the same dimensions.\n   * @export\n   * @override\n   */\n  haveTheSameActiveDimensions(dataSource) {\n    let share = true;\n\n    const myActive = this.activeDimensions;\n    const itsActive = dataSource.activeDimensions;\n\n    for (const key in myActive) {\n      if (myActive[key] !== itsActive[key]) {\n        share = false;\n        break;\n      }\n    }\n\n    if (share) {\n      for (const key in itsActive) {\n        if (itsActive[key] !== myActive[key]) {\n          share = false;\n          break;\n        }\n      }\n    }\n\n    return share;\n  }\n};\n\n\n/**\n * Guess the type of OGC service from a given url. Default returned value is\n * WMS.\n * @param {string} url Url\n * @return {string} Guessed OGC service type.\n */\nexports.guessServiceTypeByUrl = function(url) {\n  let type;\n\n  if (/(wmts)/i.test(url)) {\n    type = exports.Type.WMTS;\n  } else {\n    type = exports.Type.WMS;\n  }\n\n  return type;\n};\n\n\n/**\n * Default name of the geometry attribute.\n * @type {string}\n * @private\n */\nexports.DEFAULT_GEOMETRY_NAME_ = 'the_geom';\n\n\n/**\n * Available OGC server types.\n * @enum {string}\n */\nexports.ServerType = {\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGISSERVER: 'qgisserver'\n};\n\n\n/**\n * Available OGC types.\n * @enum {string}\n */\nexports.Type = {\n  WMS: 'WMS',\n  WMTS: 'WMTS'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @const {Object.<string, string>}\n */\nexports.WFSFeatureNS = {\n  'geoserver': 'http://www.opengis.net/gml/3.2',\n  'mapserver': 'http://mapserver.gis.umn.edu/mapserver',\n  'qgisserver': 'http://www.qgis.org/gml'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @enum {string}\n */\nexports.WFSFeaturePrefix = {\n  FEATURE: 'feature'\n};\n\n\n/**\n * Available OutputFormat for WFS requests.\n * @enum {string}\n */\nexports.WFSOutputFormat = {\n  GML2: 'GML2',\n  GML3: 'GML3'\n};\n\n\n/**\n * Available InfoFormat for WMS requests.\n * @enum {string}\n */\nexports.WMSInfoFormat = {\n  GML: 'application/vnd.ogc.gml'\n};\n\n\nexport default exports;\n","/**\n * @module gmf\n */\nconst exports = {};\n\n/**\n * The default template base URL for modules, used as-is by the template cache.\n * @type {string}\n */\n\n/**\n * @const\n * @export\n */\nexports.DATALAYERGROUP_NAME = 'data';\n\n/**\n * @const\n * @export\n */\nexports.EXTERNALLAYERGROUP_NAME = 'external';\n\n/**\n * @const\n * @export\n */\nexports.COORDINATES_LAYER_NAME = 'gmfCoordinatesLayerName';\n\n\n/**\n * @enum {string}\n */\nexports.PermalinkParam = {\n  BG_LAYER: 'baselayer_ref',\n  EXTERNAL_DATASOURCES_NAMES: 'eds_n',\n  EXTERNAL_DATASOURCES_URLS: 'eds_u',\n  FEATURES: 'rl_features',\n  MAP_CROSSHAIR: 'map_crosshair',\n  MAP_TOOLTIP: 'map_tooltip',\n  MAP_X: 'map_x',\n  MAP_Y: 'map_y',\n  MAP_Z: 'map_zoom',\n  TREE_GROUPS: 'tree_groups',\n  WFS_LAYER: 'wfs_layer',\n  WFS_NGROUPS: 'wfs_ngroups',\n  WFS_SHOW_FEATURES: 'wfs_showFeatures'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.FeatureHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olArray from 'ol/array.js';\nimport * as olColor from 'ol/color.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olFormatGPX from 'ol/format/GPX.js';\nimport olFormatKML from 'ol/format/KML.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * Provides methods for features, such as:\n *  - style setting / getting\n *  - measurement\n *  - export\n *\n * @constructor\n * @struct\n * @param {!angular.$injector} $injector Main injector.\n * @param {!angular.$filter} $filter Angular filter.\n * @ngdoc service\n * @ngname ngeoFeatureHelper\n * @ngInject\n */\nconst exports = function($injector, $filter) {\n\n  /**\n   * @type {!angular.$filter}\n   * @private\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.decimals_ = undefined;\n  if ($injector.has('ngeoMeasureDecimals')) {\n    this.decimals_ = $injector.get('ngeoMeasureDecimals');\n  }\n\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.precision_ = undefined;\n  if ($injector.has('ngeoMeasurePrecision')) {\n    this.precision_ = $injector.get('ngeoMeasurePrecision');\n  }\n\n  /**\n   * @type {!ngeox.number}\n   */\n  this.numberFormat_ = /** @type {ngeox.number} */ ($filter('number'));\n\n  /**\n   * @type {!ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat_ = /** @type {ngeox.unitPrefix} */ ($filter('ngeoUnitPrefix'));\n\n  /**\n   * @type {!ngeox.numberCoordinates}\n   */\n  this.ngeoNumberCoordinates_ = /** @type {ngeox.numberCoordinates} */ ($filter('ngeoNumberCoordinates'));\n\n  /**\n   * Filter function to display point coordinates or null to don't use any filter.\n   * @type {function(*):string|null}\n   * @private\n   */\n  this.pointFilterFn_ = null;\n\n  /**\n   * Arguments to apply to the point filter function.\n   * @type {Array.<*>}\n   * @private\n   */\n  this.pointFilterArgs_ = [];\n\n  if ($injector.has('ngeoPointfilter')) {\n    const filterElements = $injector.get('ngeoPointfilter').split(':');\n    const filterName = filterElements.shift();\n    const filter = this.$filter_(filterName);\n    googAsserts.assertFunction(filter);\n    this.pointFilterFn_ = filter;\n    this.pointFilterArgs_ = filterElements;\n  } else {\n    this.pointFilterFn_ = null;\n  }\n\n  /**\n   * @type {!ol.proj.Projection}\n   * @private\n   */\n  this.projection_;\n\n  /**\n   * Download service.\n   * @type {ngeox.Download}\n   * @private\n   */\n  this.download_ = $injector.get('ngeoDownload');\n\n};\n\n\n/**\n * @param {!ol.proj.Projection} projection Projection.\n * @export\n */\nexports.prototype.setProjection = function(projection) {\n  this.projection_ = projection;\n};\n\n\n// === STYLE METHODS ===\n\n\n/**\n * Set the style of a feature using its inner properties and depending on\n * its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @param {boolean=} opt_select Whether the feature should be rendered as\n *     selected, which includes additional vertex and halo styles.\n * @export\n */\nexports.prototype.setStyle = function(feature, opt_select) {\n  const styles = this.getStyle(feature);\n  if (opt_select) {\n    if (this.supportsVertex_(feature)) {\n      styles.push(this.getVertexStyle());\n    }\n    styles.unshift(this.getHaloStyle_(feature));\n  }\n  feature.setStyle(styles);\n};\n\n\n/**\n * Create and return a style object from a given feature using its inner\n * properties and depending on its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @return {!Array.<!ol.style.Style>} The style object.\n * @export\n */\nexports.prototype.getStyle = function(feature) {\n  const type = this.getType(feature);\n  let style;\n\n  switch (type) {\n    case ngeoGeometryType.LINE_STRING:\n      style = this.getLineStringStyle_(feature);\n      break;\n    case ngeoGeometryType.POINT:\n      style = this.getPointStyle_(feature);\n      break;\n    case ngeoGeometryType.CIRCLE:\n    case ngeoGeometryType.POLYGON:\n    case ngeoGeometryType.RECTANGLE:\n      style = this.getPolygonStyle_(feature);\n      break;\n    case ngeoGeometryType.TEXT:\n      style = this.getTextStyle_(feature);\n      break;\n    default:\n      break;\n  }\n\n  googAsserts.assert(style, 'Style should be thruthy');\n\n  let styles;\n  if (style.constructor === Array) {\n    styles = /** @type {!Array.<!ol.style.Style>}*/ (style);\n  } else {\n    styles = [style];\n  }\n\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with linestring geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getLineStringStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n\n  const styles = [new olStyleStyle({\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  //Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPointStyle_ = function(feature) {\n  const size = this.getSizeProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const styles = [new olStyleStyle({\n    image: new olStyleCircle({\n      radius: size,\n      fill: new olStyleFill({\n        color: color\n      })\n    })\n  })];\n  // Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    const font_size = 10;\n    // https://reeddesign.co.uk/test/points-pixels.html\n    const point_to_px = 1.3;\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue,\n        size: font_size,\n        offsetY: -(size + (font_size / 2) * textLabelValues.length * point_to_px + 4)\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * Get an optional number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number|undefined}, The attribute value\n */\nexports.prototype.optNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (value !== undefined) {\n    if (typeof value == 'string') {\n      return +value;\n    } else {\n      return googAsserts.assertNumber(value);\n    }\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Get a number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number}, The attribute value\n */\nexports.prototype.getNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (typeof value == 'string') {\n    return +value;\n  } else {\n    return googAsserts.assertNumber(value);\n  }\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with polygon geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPolygonStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const opacity = this.getOpacityProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n\n  // fill color with opacity\n  const fillColor = color.slice();\n  fillColor[3] = opacity;\n\n  const azimut = this.optNumber(feature, ngeoFormatFeatureProperties.AZIMUT);\n\n  const styles = [new olStyleStyle({\n    fill: new olStyleFill({\n      color: fillColor\n    }),\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  if (showMeasure || showLabel) {\n    if (showMeasure && azimut !== undefined) {\n      // Radius style:\n      const line = this.getRadiusLine(feature, azimut);\n      const length = ngeoInteractionMeasure.getFormattedLength(\n        line, this.projection_, this.precision_, this.unitPrefixFormat_);\n\n      styles.push(new olStyleStyle({\n        geometry: line,\n        fill: new olStyleFill({\n          color: fillColor\n        }),\n        stroke: new olStyleStroke({\n          color: color,\n          width: strokeWidth\n        }),\n        text: this.createTextStyle_({\n          text: length,\n          angle: ((azimut % 180) + 180) % 180 - 90\n        })\n      }));\n\n      // Azimut style\n      styles.push(new olStyleStyle({\n        geometry: new olGeomPoint(line.getLastCoordinate()),\n        text: this.createTextStyle_({\n          text: `${this.numberFormat_(azimut, this.decimals_)}°`,\n          size: 10,\n          offsetX: Math.cos((azimut - 90) * Math.PI / 180) * 20,\n          offsetY: Math.sin((azimut - 90) * Math.PI / 180) * 20\n        })\n      }));\n\n      //Label Style\n      if (showLabel) {\n        styles.push(new olStyleStyle({\n          text: this.createTextStyle_({\n            text: this.getNameProperty(feature),\n            offsetY: -8,\n            exceedLength: true\n          })\n        }));\n      }\n    } else {\n      //Label Style\n      const textLabelValues = [];\n      if (showMeasure) {\n        textLabelValues.push(this.getMeasure(feature));\n      }\n      if (showLabel) {\n        textLabelValues.push(this.getNameProperty(feature));\n      }\n      if (showLabel ||  showMeasure) {\n        // display both label using  \\n\n        const textLabelValue = textLabelValues.join('\\n');\n        styles.push(new olStyleStyle({\n          text: this.createTextStyle_({\n            text: textLabelValue,\n            exceedLength: true\n          })\n        }));\n      }\n    }\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry, rendered as text.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getTextStyle_ = function(feature) {\n\n  return new olStyleStyle({\n    text: this.createTextStyle_({\n      text: this.getNameProperty(feature),\n      size: this.getSizeProperty(feature),\n      angle: this.getAngleProperty(feature),\n      color: this.getRGBAColorProperty(feature),\n      width: this.getStrokeProperty(feature)\n    })\n  });\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature to create the editing styles with.\n * @return {!Array.<!ol.style.Style>} List of style.\n * @export\n */\nexports.prototype.createEditingStyles = function(feature) {\n  // (1) Style definition depends on geometry type\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  const styles = [];\n\n  const geom = feature.getGeometry();\n  console.assert(geom);\n  const type = geom.getType();\n\n  if (type === 'Point') {\n    styles.push(\n      new olStyleStyle({\n        image: new olStyleCircle({\n          radius: width * 2,\n          fill: new olStyleFill({\n            color: blue\n          }),\n          stroke: new olStyleStroke({\n            color: white,\n            width: width / 2\n          })\n        }),\n        zIndex: Infinity\n      })\n    );\n  } else {\n    if (type === 'LineString') {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: white,\n            width: width + 2\n          })\n        })\n      );\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width\n          })\n        })\n      );\n    } else {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width / 2\n          }),\n          fill: new olStyleFill({\n            color: [255, 255, 255, 0.5]\n          })\n        })\n      );\n    }\n\n    // (2) Anything else than 'Point' requires the vertex style as well\n    styles.push(this.getVertexStyle(true));\n  }\n\n  return styles;\n};\n\n\n/**\n * Create and return a style object to be used for vertex.\n * @param {boolean=} opt_incGeomFunc Whether to include the geometry function\n *     or not. One wants to use the geometry function when you want to draw\n *     the vertex of features that don't have point geometries. One doesn't\n *     want to include the geometry function if you just want to have the\n *     style object itself to be used to draw features that have point\n *     geometries. Defaults to `true`.\n * @return {!ol.style.Style} Style.\n * @export\n */\nexports.prototype.getVertexStyle = function(opt_incGeomFunc) {\n  const incGeomFunc = opt_incGeomFunc !== undefined ? opt_incGeomFunc : true;\n\n  const options = {\n    image: new olStyleRegularShape({\n      radius: 6,\n      points: 4,\n      angle: Math.PI / 4,\n      fill: new olStyleFill({\n        color: [255, 255, 255, 0.5]\n      }),\n      stroke: new olStyleStroke({\n        color: [0, 0, 0, 1]\n      })\n    })\n  };\n\n  if (incGeomFunc) {\n    options.geometry = function(feature) {\n      const geom = feature.getGeometry();\n\n      if (geom.getType() == 'Point') {\n        return;\n      }\n\n      let innerMultiCoordinates;\n      let multiCoordinates = [];\n      let coordinates = [];\n      let i, ii;\n      if (geom instanceof olGeomLineString) {\n        coordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomMultiLineString) {\n        multiCoordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomPolygon) {\n        coordinates = geom.getCoordinates()[0];\n      } else if (geom instanceof olGeomMultiPolygon) {\n        innerMultiCoordinates = geom.getCoordinates();\n      }\n\n      if (innerMultiCoordinates) {\n        for (i = 0, ii = innerMultiCoordinates.length; i < ii; i++) {\n          multiCoordinates = multiCoordinates.concat(innerMultiCoordinates[i]);\n        }\n      }\n      for (i = 0, ii = multiCoordinates.length; i < ii; i++) {\n        coordinates = coordinates.concat(multiCoordinates[i]);\n      }\n\n      if (coordinates.length) {\n        return new olGeomMultiPoint(coordinates);\n      } else {\n        return geom;\n      }\n    };\n  }\n\n  return new olStyleStyle(options);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Whether the feature supports vertex or not.\n * @private\n */\nexports.prototype.supportsVertex_ = function(feature) {\n  const supported = [\n    ngeoGeometryType.LINE_STRING,\n    ngeoGeometryType.POLYGON,\n    ngeoGeometryType.RECTANGLE\n  ];\n  const type = this.getType(feature);\n  return olArray.includes(supported, type);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getHaloStyle_ = function(feature) {\n  const type = this.getType(feature);\n  let style;\n  const haloSize = 3;\n\n  switch (type) {\n    case ngeoGeometryType.POINT:\n      const size = this.getSizeProperty(feature);\n      style = new olStyleStyle({\n        image: new olStyleCircle({\n          radius: size + haloSize,\n          fill: new olStyleFill({\n            color: [255, 255, 255, 1]\n          })\n        })\n      });\n      break;\n    case ngeoGeometryType.LINE_STRING:\n    case ngeoGeometryType.CIRCLE:\n    case ngeoGeometryType.POLYGON:\n    case ngeoGeometryType.RECTANGLE:\n      const strokeWidth = this.getStrokeProperty(feature);\n      style = new olStyleStyle({\n        stroke: new olStyleStroke({\n          color: [255, 255, 255, 1],\n          width: strokeWidth + haloSize * 2\n        })\n      });\n      break;\n    case ngeoGeometryType.TEXT:\n      style = new olStyleStyle({\n        text: this.createTextStyle_({\n          text: this.getNameProperty(feature),\n          size: this.getSizeProperty(feature),\n          angle: this.getAngleProperty(feature),\n          width: haloSize * 3\n        })\n      });\n      break;\n    default:\n      break;\n  }\n\n  googAsserts.assert(style, 'Style should be thruthy');\n\n  return style;\n};\n\n\n// === PROPERTY GETTERS ===\n\n/**\n * Delete the unwanted ol3 properties from the current feature then return the\n * properties.\n * Also delete the 'ngeo_feature_type_' from the ngeo query system.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Filtered properties of the current feature.\n * @export\n */\nexports.getFilteredFeatureValues = function(feature) {\n  const properties = feature.getProperties();\n  delete properties['boundedBy'];\n  delete properties[feature.getGeometryName()];\n  delete properties['ngeo_feature_type_'];\n  return properties;\n};\n\n/**\n * @param {ol.Feature} feature Feature.\n * @return {number} Angle.\n * @export\n */\nexports.prototype.getAngleProperty = function(feature) {\n  const angle = +(/** @type {string} */ (\n    feature.get(ngeoFormatFeatureProperties.ANGLE)));\n  googAsserts.assertNumber(angle);\n  return angle;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Color.\n * @export\n */\nexports.prototype.getColorProperty = function(feature) {\n\n  const color = googAsserts.assertString(feature.get(ngeoFormatFeatureProperties.COLOR));\n\n  googAsserts.assertString(color);\n\n  return color;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {ol.Color} Color.\n * @export\n */\nexports.prototype.getRGBAColorProperty = function(feature) {\n  return olColor.fromString(this.getColorProperty(feature));\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Name.\n * @export\n */\nexports.prototype.getNameProperty = function(feature) {\n  const name = googAsserts.assertString(feature.get(ngeoFormatFeatureProperties.NAME));\n  googAsserts.assertString(name);\n  return name;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Opacity.\n * @export\n */\nexports.prototype.getOpacityProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.OPACITY);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show measure.\n * @export\n */\nexports.prototype.getShowMeasureProperty = function(feature) {\n  let showMeasure = feature.get(ngeoFormatFeatureProperties.SHOW_MEASURE);\n  if (showMeasure === undefined) {\n    showMeasure = false;\n  } else if (typeof showMeasure === 'string') {\n    showMeasure = (showMeasure === 'true') ? true : false;\n  }\n  return googAsserts.assertBoolean(showMeasure);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show feature label.\n * @export\n */\nexports.prototype.getShowLabelProperty = function(feature) {\n  let showLabel = feature.get(ngeoFormatFeatureProperties.SHOW_LABEL);\n  if (showLabel === undefined) {\n    showLabel = false;\n  } else if (typeof showLabel === 'string') {\n    showLabel = (showLabel === 'true') ? true : false;\n  }\n  return googAsserts.assertBoolean(showLabel);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Size.\n * @export\n */\nexports.prototype.getSizeProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.SIZE);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Stroke.\n * @export\n */\nexports.prototype.getStrokeProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.STROKE);\n};\n\n\n// === EXPORT ===\n\n\n/**\n * Export features in the given format. The projection of the exported features\n * is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {string} formatType Format type to export the features.\n * @export\n */\nexports.prototype.export = function(features, formatType) {\n  switch (formatType) {\n    case exports.FormatType.GPX:\n      this.exportGPX(features);\n      break;\n    case exports.FormatType.KML:\n      this.exportKML(features);\n      break;\n    default:\n      break;\n  }\n};\n\n\n/**\n * Export features in GPX and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportGPX = function(features) {\n  const format = new olFormatGPX();\n  const mimeType = 'application/gpx+xml';\n  const fileName = 'export.gpx';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features in KML and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportKML = function(features) {\n  const format = new olFormatKML();\n  const mimeType = 'application/vnd.google-earth.kml+xml';\n  const fileName = 'export.kml';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features using a given format to a specific filename and download\n * the result to the browser. The projection of the exported features is:\n * `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {!ol.format.Feature} format Format\n * @param {string} fileName Name of the file.\n * @param {string=} opt_mimeType Mime type. Defaults to 'text/plain'.\n * @private\n */\nexports.prototype.export_ = function(features, format, fileName, opt_mimeType) {\n  const mimeType = opt_mimeType !== undefined ? opt_mimeType : 'text/plain';\n\n  // clone the features to apply the original style to the clone\n  // (the original may have select style active)\n  const clones = [];\n  let clone;\n  features.forEach((feature) => {\n    clone = new olFeature(feature.getProperties());\n    this.setStyle(clone, false);\n    clones.push(clone);\n  });\n\n  const writeOptions = this.projection_ ? {\n    dataProjection: 'EPSG:4326',\n    featureProjection: this.projection_\n  } : {};\n\n  const data = format.writeFeatures(clones, writeOptions);\n  this.download_(\n    data, fileName, `${mimeType};charset=utf-8`);\n};\n\n\n// === OTHER UTILITY METHODS ===\n\n\n/**\n * @param {!ngeox.style.TextOptions} options Options.\n * @return {!ol.style.Text} Style.\n * @private\n */\nexports.prototype.createTextStyle_ = function(options) {\n  if (options.angle) {\n    const angle = options.angle !== undefined ? options.angle : 0;\n    const rotation = angle * Math.PI / 180;\n    options.rotation = rotation;\n    delete options.angle;\n  }\n\n  options.font = ['normal', `${options.size || 10}pt`, 'Arial'].join(' ');\n\n  if (options.color) {\n    options.fill = new olStyleFill({color: options.color || [0, 0, 0, 1]});\n    delete options.color;\n  }\n\n  options.stroke = new olStyleStroke({\n    color: [255, 255, 255, 1],\n    width: options.width || 3\n  });\n  delete options.width;\n\n  return new olStyleText(options);\n};\n\n\n/**\n * Get the measure of the given feature as a string. For points, you can format\n * the result by setting a filter to apply on the coordinate with the function\n * {@link ngeo.misc.FeatureHelper.prototype.setPointFilterFn}.\n * @param {!ol.Feature} feature Feature.\n * @return {string} Measure.\n * @export\n */\nexports.prototype.getMeasure = function(feature) {\n\n  const geometry = feature.getGeometry();\n  googAsserts.assert(geometry, 'Geometry should be truthy');\n\n  let measure = '';\n\n  if (geometry instanceof olGeomPolygon) {\n    if (this.getType(feature) === ngeoGeometryType.CIRCLE) {\n      const azimut = this.optNumber(feature, ngeoFormatFeatureProperties.AZIMUT);\n      googAsserts.assertNumber(azimut);\n      const line = this.getRadiusLine(feature, azimut);\n\n      measure = ngeoInteractionMeasureAzimut.getFormattedAzimutRadius(\n        line, this.projection_, this.decimals_, this.precision_, this.unitPrefixFormat_, this.numberFormat_);\n    } else {\n      measure = ngeoInteractionMeasure.getFormattedArea(\n        geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n    }\n  } else if (geometry instanceof olGeomLineString) {\n    measure = ngeoInteractionMeasure.getFormattedLength(\n      geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n  } else if (geometry instanceof olGeomPoint) {\n    if (this.pointFilterFn_ === null) {\n      measure = ngeoInteractionMeasure.getFormattedPoint(\n        geometry, this.decimals_, this.ngeoNumberCoordinates_);\n    } else {\n      const coordinates = geometry.getCoordinates();\n      const args = this.pointFilterArgs_.slice(0);\n      args.unshift(coordinates);\n      measure = this.pointFilterFn_(...args);\n    }\n  }\n\n  return measure;\n};\n\n\n/**\n * Return the type of geometry of a feature using its geometry property and\n * some inner properties.\n * @param {!ol.Feature} feature Feature.\n * @return {string} The type of geometry.\n * @export\n */\nexports.prototype.getType = function(feature) {\n  const geometry = feature.getGeometry();\n  googAsserts.assert(geometry, 'Geometry should be thruthy');\n\n  let type;\n\n  if (geometry instanceof olGeomPoint) {\n    if (feature.get(ngeoFormatFeatureProperties.IS_TEXT)) {\n      type = ngeoGeometryType.TEXT;\n    } else {\n      type = ngeoGeometryType.POINT;\n    }\n  } else if (geometry instanceof olGeomMultiPoint) {\n    type = ngeoGeometryType.MULTI_POINT;\n  } else if (geometry instanceof olGeomPolygon) {\n    if (feature.get(ngeoFormatFeatureProperties.IS_CIRCLE)) {\n      type = ngeoGeometryType.CIRCLE;\n    } else if (feature.get(ngeoFormatFeatureProperties.IS_RECTANGLE)) {\n      type = ngeoGeometryType.RECTANGLE;\n    } else {\n      type = ngeoGeometryType.POLYGON;\n    }\n  } else if (geometry instanceof olGeomMultiPolygon) {\n    type = ngeoGeometryType.MULTI_POLYGON;\n  } else if (geometry instanceof olGeomLineString) {\n    type = ngeoGeometryType.LINE_STRING;\n  } else if (geometry instanceof olGeomMultiLineString) {\n    type = ngeoGeometryType.MULTI_LINE_STRING;\n  }\n\n  googAsserts.assert(type, 'Type should be thruthy');\n\n  return type;\n};\n\n\n/**\n * This method first checks if a feature's extent intersects with the map view\n * extent. If it doesn't, then the view gets recentered with an animation to\n * the center of the feature.\n * @param {!ol.Feature} feature Feature.\n * @param {!ol.Map} map Map.\n * @param {number=} opt_panDuration Pan animation duration. Defaults to `250`.\n * @export\n */\nexports.prototype.panMapToFeature = function(feature, map,\n  opt_panDuration) {\n\n  const panDuration = opt_panDuration !== undefined ? opt_panDuration : 250;\n  const size = map.getSize();\n  googAsserts.assertArray(size);\n  const view = map.getView();\n  const extent = view.calculateExtent(size);\n  const geometry = feature.getGeometry();\n\n  if (!geometry.intersectsExtent(extent)) {\n    const mapCenter = view.getCenter();\n    googAsserts.assertArray(mapCenter);\n\n    let featureCenter;\n    if (geometry instanceof olGeomLineString) {\n      featureCenter = geometry.getCoordinateAt(0.5);\n    } else if (geometry instanceof olGeomPolygon) {\n      featureCenter = geometry.getInteriorPoint().getCoordinates();\n    } else if (geometry instanceof olGeomPoint) {\n      featureCenter = geometry.getCoordinates();\n    } else {\n      featureCenter = olExtent.getCenter(geometry.getExtent());\n    }\n\n    view.animate({\n      center: mapCenter,\n      duration: panDuration\n    }, {\n      center: featureCenter,\n      duration: panDuration\n    });\n  }\n};\n\n\n/**\n * This method generates a line string geometry that represents the radius for\n * a given azimut. It expects the input geometry to be a circle.\n * @param {!ol.Feature} feature Feature.\n * @param {number} azimut Azimut in degrees.\n * @return {!ol.geom.LineString} The line geometry.\n */\nexports.prototype.getRadiusLine = function(feature, azimut) {\n  const geometry = feature.getGeometry();\n  // Determine the radius for the circle\n  const extent = geometry.getExtent();\n  const radius = (extent[3] - extent[1]) / 2;\n\n  const center = olExtent.getCenter(geometry.getExtent());\n\n  const x = Math.cos((azimut - 90) * Math.PI / 180) * radius;\n  const y = -Math.sin((azimut - 90) * Math.PI / 180) * radius;\n  const endPoint = [x + center[0], y + center[1]];\n  return new olGeomLineString([center, endPoint]);\n};\n\n\n/**\n * Return the properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Object.\n * @export\n */\nexports.prototype.getNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const nonSpatialProperties = {};\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      nonSpatialProperties[key] = properties[key];\n    }\n  }\n  return nonSpatialProperties;\n};\n\n\n/**\n * Clear all properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @export\n */\nexports.prototype.clearNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      feature.set(key, undefined);\n    }\n  }\n};\n\n\n// === FORMAT TYPES ===\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.FormatType = {\n  /**\n   * @type {string}\n   * @export\n   */\n  GPX: 'GPX',\n  /**\n   * @type {string}\n   * @export\n   */\n  KML: 'KML'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureHelper', [\n  ngeoDownloadService.name,\n  ngeoMiscFilters.name,\n]);\nexports.module.service('ngeoFeatureHelper', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.ToolActivate\n */\n/**\n * A simple object that can be managed by `ngeo.misc.ToolActivateMgr`.\n *\n * See our live examples:\n * [../examples/mapquery.html](../examples/mapquery.html)\n * [../examples/toolActivate.html](../examples/toolActivate.html)\n *\n * @param {Object} toolContext An object which acts as the context for the tool.\n * @param {string} activePropertyName The name of a boolean property on\n *      `toolContext` which represents the active state of the tool.\n * @constructor\n * @struct\n * @ngname ngeoToolActivate\n * @export\n */\nconst exports = function(toolContext, activePropertyName) {\n\n  /**\n   * A getter function to get the active state of the tool.\n   * @return {boolean} Is active.\n   * @export\n   */\n  this.getActive = function() {\n    return toolContext[activePropertyName];\n  };\n\n  /**\n   * A setter function to set the active state of the tool.\n   * @param {boolean} newVal New active state.\n   * @export\n   */\n  this.setActive = function(newVal) {\n    toolContext[activePropertyName] = newVal;\n  };\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.utils\n */\nconst exports = {};\nimport * as olEventsCondition from 'ol/events/condition.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n  }\n  return queryItem.join('&');\n};\n\n\n/**\n * Delete condition passed to the modify interaction\n * @param {ol.MapBrowserEvent} event Browser event.\n * @return {boolean} The result.\n */\nexports.deleteCondition = function(event) {\n  return olEventsCondition.noModifierKeys(event) && olEventsCondition.singleClick(event);\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Message\n */\n/**\n * Abstract class for services that display messages.\n *\n * @constructor\n * @struct\n * @abstract\n */\nconst exports = function() {};\n\n\n/**\n * Show the message.\n *\n * @abstract\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.showMessage = function(message) {};\n\n\n/**\n * Show disclaimer message string or object or list of disclame message\n * strings or objects.\n *\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.show = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.showMessage, this);\n};\n\n\n/**\n * Display the given error message or list of error messages.\n *\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.error = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.ERROR));\n};\n\n\n/**\n * Display the given info message or list of info messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.info = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.INFORMATION));\n};\n\n\n/**\n * Display the given success message or list of success messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.success = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.SUCCESS));\n};\n\n\n/**\n * Display the given warning message or list of warning messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.warn = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.WARNING));\n};\n\n\n/**\n * Returns an array of message object from any given message string, list of\n * message strings, message object or list message objects. The type can be\n * overridden here as well OR defined (if the message(s) is/are string(s),\n * defaults to 'information').\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @param {string=} opt_type The type of message to override the messages with.\n * @return {Array.<ngeox.Message>} List of message objects.\n * @protected\n */\nexports.prototype.getMessageObjects = function(object, opt_type) {\n  const msgObjects = [];\n  let msgObject = null;\n  const defaultType = exports.Type.INFORMATION;\n\n  if (typeof object === 'string') {\n    msgObjects.push({\n      msg: object,\n      type: opt_type !== undefined ? opt_type : defaultType\n    });\n  } else if (Array.isArray(object)) {\n    object.forEach((msg) => {\n      if (typeof object === 'string') {\n        msgObject = {\n          msg: msg,\n          type: opt_type !== undefined ? opt_type : defaultType\n        };\n      } else {\n        msgObject = msg;\n        if (opt_type !== undefined) {\n          msgObject.type = opt_type;\n        }\n      }\n      msgObjects.push(msgObject);\n    }, this);\n  } else {\n    msgObject = object;\n    if (opt_type !== undefined) {\n      msgObject.type = opt_type;\n    }\n    if (msgObject.type === undefined) {\n      msgObject.type = defaultType;\n    }\n    msgObjects.push(msgObject);\n  }\n\n  return msgObjects;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Type = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR: 'error',\n  /**\n   * @type {string}\n   * @export\n   */\n  INFORMATION: 'information',\n  /**\n   * @type {string}\n   * @export\n   */\n  SUCCESS: 'success',\n  /**\n   * @type {string}\n   * @export\n   */\n  WARNING: 'warning'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.CustomEvent\n */\nimport * as olBase from 'ol/index.js';\nimport olEventsEvent from 'ol/events/Event.js';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.FeatureOverlayMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle, {toFunction as toStyleFunction, createDefaultStyle as olStyleDefaultFunction} from 'ol/style/Style.js';\n\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleDefaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : toStyleFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Geometry\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A rule bound to the geometry of a `ol.Feature` object. Changes made\n   * to the geometry are applied to the `expression` property of the rule.\n   *\n   * @struct\n   * @param {!ngeox.rule.GeometryOptions} options Options.\n   */\n  constructor(options) {\n\n    options.type = ngeoFormatAttributeType.GEOMETRY;\n\n    super(options);\n\n    // === STATIC properties ===\n\n    const properties = options.featureProperties || {};\n\n    /**\n     * @type {!ol.Feature}\n     * @private\n     */\n    this.feature_ = new olFeature(properties);\n\n    /**\n     * @type {!ol.format.GeoJSON}\n     * @private\n     */\n    this.format_ = new olFormatGeoJSON();\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updatingExpression_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updatingGeometry_ = false;\n\n    /**\n     * @type {?ol.EventsKey}\n     * @private\n     */\n    this.geometryChangeListenerKey_ = null;\n\n    this.listenerKeys.push(\n      olEvents.listen(\n        this.feature_,\n        `change:${this.feature.getGeometryName()}`,\n        this.handleFeatureGeometryChange_,\n        this\n      )\n    );\n\n    this.setGeometryFromExpression_();\n\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {!ol.Feature} Feature.\n   * @export\n   */\n  get feature() {\n    return this.feature_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setExpression(expression) {\n    this.updatingExpression_ = true;\n    super.setExpression(expression);\n\n    if (!this.updatingGeometry_) {\n      this.setGeometryFromExpression_();\n    }\n\n    this.registerGeometryChange_();\n\n    this.updatingExpression_ = false;\n  }\n\n  // === Calculated property getters/setters ===\n\n  /**\n   * @return {?ol.geom.Geometry} Geometry\n   * @export\n   */\n  get geometry() {\n    return this.feature_.getGeometry() || null;\n  }\n\n  /**\n   * @param {?ol.geom.Geometry} geometry Geometry\n   * @export\n   */\n  set geometry(geometry) {\n    this.feature_.setGeometry(geometry);\n  }\n\n  // === Other methods ===\n\n  /**\n   * Called when the geometry property in the feature changes. Update the\n   * expression accordingly.\n   * @private\n   */\n  handleFeatureGeometryChange_() {\n    if (this.updatingExpression_) {\n      return;\n    }\n\n    this.updatingGeometry_ = true;\n\n    const geometry = this.feature_.getGeometry();\n    if (geometry) {\n      this.expression = this.format_.writeGeometry(geometry);\n    } else {\n      this.expression = null;\n    }\n\n    this.registerGeometryChange_();\n\n    this.updatingGeometry_ = false;\n  }\n\n  /**\n   * Called when the geometry of the features changes. Update the expression\n   * accordingly.\n   * @param {ol.Object.Event} evt Event\n   * @private\n   */\n  handleGeometryChange_(evt) {\n    const geometry = googAsserts.assertInstanceof(\n      evt.target, olGeomGeometry\n    );\n    this.updatingGeometry_ = true;\n    this.expression = this.format_.writeGeometry(geometry);\n    this.updatingGeometry_ = false;\n  }\n\n  /**\n   * Set geometry property using the expression property.\n   * @private\n   */\n  setGeometryFromExpression_() {\n    let geometry = null;\n    if (this.expression) {\n      // An expression can only have a string value with a geometry rule.\n      const expression = googAsserts.assertString(this.expression);\n      geometry = this.format_.readGeometry(expression);\n    }\n    this.geometry = geometry;\n  }\n\n  /**\n   * Unlisten the feature geometry change event, then listen to it if the\n   * feature has a geometry.\n   * @private\n   */\n  registerGeometryChange_() {\n\n    // (1) Unlisten\n    if (this.geometryChangeListenerKey_ !== null) {\n      olEvents.unlistenByKey(this.geometryChangeListenerKey_);\n      this.geometryChangeListenerKey_ = null;\n    }\n\n    // (2) Listen, if geom\n    const geometry = this.feature_.getGeometry();\n    if (geometry) {\n      this.geometryChangeListenerKey_ = olEvents.listen(\n        geometry,\n        'change',\n        this.handleGeometryChange_,\n        this\n      );\n    }\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.map.LayerHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS, {optionsFromCapabilities} from 'ol/source/WMTS.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Provides help functions that helps you to create and manage layers.\n * @param {angular.$q} $q Angular promises/deferred service.\n * @param {angular.$http} $http Angular http service.\n * @param {number} ngeoTilesPreloadingLimit Load tiles up to preload levels. By default preload is Infinity,\n *     which means load all tiles on the top of the visible level. See also preload value\n *     in documentation for ol.Layer.Tile.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLayerHelper\n * @ngInject\n */\nconst exports = function($q, $http, ngeoTilesPreloadingLimit) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * The Tiles Preloading Limit value\n   * @type {number}\n   * @private\n   */\n  this.tilesPreloadingLimit_ = ngeoTilesPreloadingLimit;\n};\n\n\n/**\n * @const\n */\nexports.GROUP_KEY = 'groupName';\n\n\n/**\n * @const\n */\nexports.REFRESH_PARAM = 'random';\n\n\n/**\n * Create and return a basic WMS layer with only a source URL and a comma\n * separated layers names (see {@link ol.source.ImageWMS}).\n *\n * @param {string} sourceURL The source URL.\n * @param {string} sourceLayersName A comma separated names string.\n * @param {string} sourceFormat Image format, for example 'image/png'.\n * @param {string=} opt_serverType Type of the server (\"mapserver\",\n *     \"geoserver\", \"qgisserver\", …).\n * @param {string=} opt_time time parameter for layer queryable by time/periode\n * @param {Object.<string, string>=} opt_params WMS parameters.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayer = function(sourceURL,\n  sourceLayersName, sourceFormat, opt_serverType, opt_time, opt_params, opt_crossOrigin) {\n\n  const params = {\n    'FORMAT': sourceFormat,\n    'LAYERS': sourceLayersName\n  };\n  let olServerType;\n  if (opt_time) {\n    params['TIME'] = opt_time;\n  }\n  if (opt_serverType) {\n    params['SERVERTYPE'] = opt_serverType;\n    // OpenLayers expects 'qgis' insteads of 'qgisserver'\n    olServerType = opt_serverType.replace('qgisserver', 'qgis');\n  }\n  const source = new olSourceImageWMS({\n    url: sourceURL,\n    params: params,\n    serverType: olServerType,\n    crossOrigin: opt_crossOrigin\n  });\n  if (opt_params) {\n    source.updateParams(opt_params);\n  }\n\n  return new olLayerImage({source});\n};\n\n\n/**\n * Create and return a basic WMS layer using an OGC data source.\n *\n * @param {ngeo.datasource.OGC} dataSource OGC data source.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayerFromDataSource = function(\n  dataSource, opt_crossOrigin\n) {\n  const url = dataSource.wmsUrl;\n  googAsserts.assert(url);\n\n  const layerNames = dataSource.getOGCLayerNames().join(',');\n  const serverType = dataSource.ogcServerType;\n  const imageType = dataSource.ogcImageType;\n\n  // (1) Layer creation\n  const layer = this.createBasicWMSLayer(\n    url,\n    layerNames,\n    imageType,\n    serverType,\n    undefined,\n    undefined,\n    opt_crossOrigin\n  );\n\n  // (2) Manage visibility\n  layer.setVisible(dataSource.visible);\n\n  // (3) Reference to the data source\n  layer.set('querySourceIds', [dataSource.id]);\n\n  return layer;\n};\n\n\n/**\n * Create and return a promise that provides a WMTS layer with source on\n * success, no layer else.\n * The WMTS layer source will be configured by the capabilities that are\n * loaded from the given capabilitiesUrl.\n * The style object described in the capabilities for this layer will be added\n * as key 'capabilitiesStyles' as param of the new layer.\n * @param {string} capabilitiesURL The getCapabilities url.\n * @param {string} layerName The name of the layer.\n * @param {string=} opt_matrixSet Optional WMTS matrix set.\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {angular.$q.Promise.<ol.layer.Tile>} A Promise with a layer (with source) on success,\n *     no layer else.\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilitites = function(capabilitiesURL, layerName, opt_matrixSet, opt_dimensions) {\n  const parser = new olFormatWMTSCapabilities();\n  const layer = new olLayerTile({\n    preload: this.tilesPreloadingLimit_\n  });\n  const $q = this.$q_;\n\n  return this.$http_.get(capabilitiesURL, {cache: true}).then((response) => {\n    let result;\n    if (response.data) {\n      result = parser.read(response.data);\n    }\n    if (result) {\n      const options = optionsFromCapabilities(result, {\n        matrixSet: opt_matrixSet,\n        crossOrigin: 'anonymous',\n        layer: layerName\n      });\n      googAsserts.assert(options);\n      const source = new olSourceWMTS(/** @type {olx.source.WMTSOptions} */ (options));\n      if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n        source.updateDimensions(opt_dimensions);\n      }\n      layer.setSource(source);\n\n      // Add styles from capabilities as param of the layer\n      const layers = result['Contents']['Layer'];\n      const l = olArray.find(layers, (elt, index, array) => elt['Identifier'] == layerName);\n      layer.set('capabilitiesStyles', l['Style']);\n\n      return $q.resolve(layer);\n    }\n    return $q.reject(`Failed to get WMTS capabilities from ${capabilitiesURL}`);\n  });\n};\n\n\n/**\n * Create and return a WMTS layer using a formatted capabilities response\n * and a capability layer.\n *\n * @param {!Object} capabilities The complete capabilities object of the service\n * @param {!Object} layerCap The layer capability object\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {!ol.layer.Tile} WMTS layer\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilititesObj = function(\n  capabilities, layerCap, opt_dimensions\n) {\n\n  const options = optionsFromCapabilities(capabilities, {\n    crossOrigin: 'anonymous',\n    layer: layerCap['Identifier']\n  });\n\n  googAsserts.assert(options);\n  const source = new olSourceWMTS(\n    /** @type {olx.source.WMTSOptions} */ (options));\n\n  if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n    source.updateDimensions(opt_dimensions);\n  }\n\n  return new olLayerTile({\n    'capabilitiesStyles': layerCap['Style'],\n    preload: Infinity,\n    source: source\n  });\n};\n\n\n/**\n * Create and return an ol.layer.Group. You can pass a collection of layers to\n * directly add them in the returned group.\n * @param {ol.Collection.<ol.layer.Base>=} opt_layers The layer to add to the\n * returned Group.\n * @return {ol.layer.Group} Layer group.\n * @export\n */\nexports.prototype.createBasicGroup = function(opt_layers) {\n  const group = new olLayerGroup();\n  if (opt_layers) {\n    group.setLayers(opt_layers);\n  }\n  return group;\n};\n\n\n/**\n * Retrieve (or create if it doesn't exist) and return a group of layer from\n * the base array of layers of a map. The given name is used as unique\n * identifier. If the group is created, it will be automatically added to\n * the map.\n * @param {ol.Map} map A map.\n * @param {string} groupName The name of the group.\n * @return {ol.layer.Group} The group corresponding to the given name.\n * @export\n */\nexports.prototype.getGroupFromMap = function(map, groupName) {\n  const groups = map.getLayerGroup().getLayers();\n  let group;\n  groups.getArray().some((existingGroup) => {\n    if (existingGroup.get(exports.GROUP_KEY) === groupName) {\n      group = /** @type {ol.layer.Group} */ (existingGroup);\n      return true;\n    } else {\n      return false;\n    }\n  });\n  if (!group) {\n    group = this.createBasicGroup();\n    group.set(exports.GROUP_KEY, groupName);\n    map.addLayer(group);\n  }\n  return group;\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @export\n */\nexports.prototype.getFlatLayers = function(layer) {\n  return this.getFlatLayers_(layer, []);\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @param {Array.<ol.layer.Base>} array An array to add layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @private\n */\nexports.prototype.getFlatLayers_ = function(layer, array) {\n  if (layer instanceof olLayerGroup) {\n    const sublayers = layer.getLayers();\n    sublayers.forEach((l) => {\n      this.getFlatLayers_(l, array);\n    });\n  } else {\n    if (array.indexOf(layer) < 0) {\n      array.push(layer);\n    }\n  }\n  return array;\n};\n\n\n/**\n * Get a layer that has a `layerName` property equal to a given layer name from\n * an array of layers. If one of the layers in the array is a group, then the\n * layers contained in that group are searched as well.\n * @param {string} layerName The name of the layer we're looking for.\n * @param {Array.<ol.layer.Base>} layers Layers.\n * @return {?ol.layer.Base} Layer.\n * @export\n */\nexports.prototype.getLayerByName = function(layerName, layers) {\n  let found = null;\n  layers.some((layer) => {\n    if (layer instanceof olLayerGroup) {\n      const sublayers = layer.getLayers().getArray();\n      found = this.getLayerByName(layerName, sublayers);\n    } else if (layer.get('layerNodeName') === layerName) {\n      found = layer;\n    }\n    return !!found;\n  });\n\n  return found;\n};\n\n\n/**\n * Get the WMTS legend URL for the given layer.\n * @param {ol.layer.Tile} layer Tile layer as returned by the\n * ngeo layerHelper service.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMTSLegendURL = function(layer) {\n  // FIXME case of multiple styles ?  case of multiple legendUrl ?\n  let url;\n  const styles = layer.get('capabilitiesStyles');\n  if (styles !== undefined) {\n    const legendURL = styles[0]['legendURL'];\n    if (legendURL !== undefined) {\n      url = legendURL[0]['href'];\n    }\n  }\n  return url;\n};\n\n\n/**\n * Get the WMS legend URL for the given node.\n * @param {string|undefined} url The base url of the wms service.\n * @param {string} layerName The name of a wms layer.\n * @param {number=} opt_scale A scale.\n * @param {string=} opt_legendRule rule parameters to add to the returned URL.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMSLegendURL = function(url,\n  layerName, opt_scale, opt_legendRule) {\n  if (!url) {\n    return undefined;\n  }\n  const queryString = {\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'SERVICE': 'WMS',\n    'VERSION': '1.1.1',\n    'REQUEST': 'GetLegendGraphic',\n    'LAYER': layerName\n  };\n  if (opt_scale !== undefined) {\n    queryString['SCALE'] = opt_scale;\n  }\n  if (opt_legendRule !== undefined) {\n    queryString['RULE'] = opt_legendRule;\n  }\n  return olUri.appendParams(url, queryString);\n};\n\n\n/**\n * Returns if this layer is visible at the current resolution.\n * @param {ol.layer.Base} layer Layer.\n * @param {ol.Map} map Map.\n * @return {boolean} Is the layer currently visible?\n */\nexports.prototype.isLayerVisible = function(layer, map) {\n  if (!layer.getVisible()) {\n    return false;\n  }\n\n  const currentResolution = map.getView().getResolution();\n  return currentResolution > layer.getMinResolution() &&\n      currentResolution < layer.getMaxResolution();\n};\n\n\n/**\n * Force a WMS layer to refresh using a random value.\n * @param {ol.layer.Image|ol.layer.Tile} layer Layer to refresh.\n */\nexports.prototype.refreshWMSLayer = function(layer) {\n  const source_ = layer.getSource();\n  googAsserts.assert(\n    source_ instanceof olSourceImageWMS ||\n    source_ instanceof olSourceTileWMS\n  );\n  const source = /** @type {ol.source.ImageWMS|ol.source.TileWMS} */ (source_);\n  const params = source.getParams();\n  params[exports.REFRESH_PARAM] = Math.random();\n  source.updateParams(params);\n};\n\n\n/**\n * Set ZIndex property to first level children elements\n * @param {ol.layer.Group|ol.layer.Base} element The group of layer with first level children layers.\n * @param {number} ZIndex The ZIndex for children element.\n */\nexports.prototype.setZIndexToFirstLevelChildren = function(element, ZIndex) {\n  if (!(element instanceof olLayerGroup)) {\n    return;\n  }\n  const innerGroupLayers = element.getLayers();\n  innerGroupLayers.forEach(innerLayer => innerLayer.setZIndex(ZIndex));\n};\n\n\n/**\n * Update the LAYERS parameter of the source of the given WMS layer.\n * @param {ol.layer.Image} layer The WMS layer.\n * @param {string} names The names that will be used to set\n * the LAYERS parameter.\n * @param {string=} opt_time The start\n * and optionally the end datetime (for time range selection) selected by user\n * in a ISO-8601 string datetime or time interval format\n * @export\n */\nexports.prototype.updateWMSLayerState = function(layer, names, opt_time) {\n  // Don't send layer without parameters, hide layer instead;\n  if (names.length <= 0) {\n    layer.setVisible(false);\n  } else {\n    layer.setVisible(true);\n    const source = /** @type {ol.source.ImageWMS} */ (layer.getSource());\n    if (opt_time) {\n      source.updateParams({'LAYERS': names, 'TIME': opt_time});\n    } else {\n      source.updateParams({'LAYERS': names});\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Image} layer The WMS layer.\n * @return {Array.<number>|undefined} List of query source ids, a.k.a.\n *     the data source ids this layer is composed of.\n * @export\n */\nexports.prototype.getQuerySourceIds = function(layer) {\n  return /** @type {Array.<number>|undefined} */ (\n    layer.get('querySourceIds'));\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayerHelper', [])\n  .service('ngeoLayerHelper', exports)\n  .value('ngeoTilesPreloadingLimit', Infinity);\n\n\nexport default exports;\n","/**\n * @module ngeo.layertree.Controller\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\n\n/**\n * The controller for the \"tree node\" directive.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.Attributes} $attrs Attributes.\n * @constructor\n * @ngInject\n * @export\n * @struct\n * @ngdoc controller\n * @ngname NgeoLayertreeController\n */\nconst exports = function($scope, $rootScope, $attrs) {\n\n  const isRoot = $attrs['ngeoLayertreeNotroot'] === undefined;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isRoot = isRoot;\n\n  const nodeExpr = $attrs['ngeoLayertree'];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.properties = {};\n\n  /**\n   * @type {!string}\n   * @private\n   */\n  this.state_ = 'off';\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.node;\n\n  if (isRoot) {\n    $scope.$watch(nodeExpr, (newVal, oldVal) => {\n      this.node = newVal;\n    });\n  } else {\n    this.node = /** @type {!Object} */ ($scope.$eval(nodeExpr));\n    googAsserts.assert(this.node !== undefined);\n  }\n\n  const mapExpr = $attrs['ngeoLayertreeMap'];\n  const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  googAsserts.assert(map !== undefined);\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.parent = $scope.$parent['layertreeCtrl'];\n\n  /**\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.children = [];\n\n  if (this.parent) {\n    this.parent.children.push(this);\n  }\n\n  $scope.$on('$destroy', () => {\n    if (this.parent) {\n      const index = this.parent.children.indexOf(this);\n      googAsserts.assert(index >= 0);\n      this.parent.children.splice(index, 1);\n    }\n  });\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.uid = olBase.getUid(this);\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.depth = isRoot ? 0 : this.parent.depth + 1;\n\n  // We set 'uid' and 'depth' in the scope as well to access the parent values\n  // in the inherited scopes. This is intended to be used in the javascript not\n  // in the templates.\n  $scope['uid'] = this.uid;\n  $scope['depth'] = this.depth;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = map;\n\n  let nodelayerExpr = $attrs['ngeoLayertreeNodelayer'];\n  if (nodelayerExpr === undefined) {\n    const nodelayerexprExpr = $attrs['ngeoLayertreeNodelayerexpr'];\n    const newNodelayerExpr = $scope.$eval(nodelayerexprExpr);\n    googAsserts.assertString(newNodelayerExpr);\n    nodelayerExpr = newNodelayerExpr;\n  }\n  googAsserts.assert(nodelayerExpr !== undefined);\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nodelayerExpr = nodelayerExpr;\n\n  /**\n   * @type {?ol.layer.Layer|ol.layer.Group}\n   * @export\n   */\n  this.layer = null;\n  if (!isRoot) {\n    const layer = $scope.$eval(nodelayerExpr, {'treeCtrl': this}) || null;\n    if (layer) {\n      googAsserts.assert(\n        layer instanceof olLayerLayer || layer instanceof olLayerGroup\n      );\n      this.layer = layer;\n    }\n  }\n\n  /**\n   * @type {?ngeo.datasource.DataSource}\n   * @private\n   */\n  this.dataSource_ = null;\n\n  if (this.layer) {\n    ngeoMiscDecorate.layerLoading(this.layer, $scope);\n    ngeoMiscDecorate.layer(this.layer);\n\n    olEvents.listen(this.layer, 'change:opacity', () => {\n      this.rootScope_.$broadcast('ngeo-layertree-opacity', this);\n    });\n  }\n\n  let listenersExpr = $attrs['ngeoLayertreeListeners'];\n  if (listenersExpr === undefined) {\n    const listenersexprExpr = $attrs['ngeoLayertreeListenersexpr'];\n    listenersExpr = $scope.$eval(listenersexprExpr);\n  }\n\n  if (listenersExpr !== undefined) {\n    googAsserts.assertString(listenersExpr);\n  }\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.listenersExpr = listenersExpr;\n\n  // Eval function to bind functions to this tree's events.\n  if (listenersExpr) {\n    $scope.$eval(listenersExpr, {'treeScope': $scope, 'treeCtrl': this});\n  }\n\n  $scope['layertreeCtrl'] = this;\n};\n\n\n/**\n * Return the current state.\n * @return {string} 'on', 'off', 'indeterminate'.\n * @export\n */\nexports.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * Set the state of this treeCtrl. Update its children with its value and then\n * ask its parent to refresh its state.\n * @param {string} state 'on' or 'off'.\n * @param {boolean=} opt_broadcast Broadcast.\n * @export\n */\nexports.prototype.setState = function(state, opt_broadcast) {\n  if (state === this.state_) {\n    return;\n  }\n  this.setStateInternal_(state);\n\n  // Ask to its parent to update it's state.\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n\n  const firstParents = this.isRoot ? this.children : [exports.getFirstParentTree(this)];\n\n  if (opt_broadcast === undefined || opt_broadcast) {\n    firstParents.forEach((firstParent) => {\n      this.rootScope_.$broadcast('ngeo-layertree-state', this, firstParent);\n    });\n  }\n};\n\n\n/**\n * @param {string} state 'on' or 'off'.\n */\nexports.prototype.setStateInternal_ = function(state) {\n  // Set the state\n  this.state_ = state === 'on' ? 'on' : 'off';\n  // Asks to each child to set its state;\n  this.children.forEach((child) => {\n    child.setStateInternal_(this.state_);\n  });\n};\n\n\n/**\n * Refresh the state of this treeCtrl based on it's children value. The call its\n * parent to do the same.\n * @public\n */\nexports.prototype.refreshState = function() {\n  const newState = this.getCalculateState();\n  if (this.state_ === newState) {\n    return;\n  }\n  this.state_ = newState;\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n};\n\n\n/**\n * Return the current state, calculate on all its children recursively.\n * @return {string} 'on', 'off' or 'indeterminate'.\n * @export\n */\nexports.prototype.getCalculateState = function() {\n  if (this.node.children === undefined) {\n    return this.state_;\n  }\n  let childState;\n  let previousChildState;\n  this.children.some((child) => {\n    childState = child.getCalculateState();\n    if (previousChildState) {\n      if (previousChildState !== childState) {\n        return childState = 'indeterminate';\n      }\n    }\n    previousChildState = childState;\n  });\n  return childState;\n};\n\n\n/**\n * @param {boolean|undefined} val Value.\n * @return {boolean|undefined} Value.\n * @export\n */\nexports.prototype.getSetActive = function(val) {\n  const layer = this.layer;\n  const map = this.map;\n  if (!layer) {\n    return;\n  }\n  if (val !== undefined) {\n    if (!val) {\n      map.removeLayer(layer);\n    } else {\n      map.addLayer(layer);\n    }\n  } else {\n    return map.getLayers().getArray().indexOf(layer) >= 0;\n  }\n};\n\n\n/**\n * @return {?ngeo.datasource.DataSource} dataSource The data source bound to\n *     this layer tree controller.\n * @export\n */\nexports.prototype.getDataSource = function() {\n  return this.dataSource_;\n};\n\n\n/**\n * @param {?ngeo.datasource.DataSource} dataSource Data source or null.\n * @export\n */\nexports.prototype.setDataSource = function(dataSource) {\n  this.dataSource_ = dataSource;\n};\n\n\n/**\n * Get the \"top level\" layertree (one of the first level child under the root\n * layertree). Can return itself.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} the top level layertree.\n * @public\n */\nexports.getFirstParentTree = function(treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisitorDecision = {\n  STOP: 'STOP',\n  SKIP: 'SKIP',\n  DESCEND: 'DESCEND'\n};\n\n\n/**\n * @typedef {\n *   function(ngeo.layertree.Controller): (!ngeo.layertree.Controller.VisitorDecision|undefined)\n * }\n */\nexports.Visitor;\n\n\n/**\n * Recursive method to traverse the layertree controller graph.\n * @param {ngeo.layertree.Controller.Visitor} visitor A visitor called for each node.\n * @return {boolean} whether to stop traversing.\n * @export\n */\nexports.prototype.traverseDepthFirst = function(visitor) {\n  // First visit the current controller\n  const decision = visitor(this) || exports.VisitorDecision.DESCEND;\n\n  switch (decision) {\n    case exports.VisitorDecision.STOP:\n      return true; // stop traversing\n    case exports.VisitorDecision.SKIP:\n      return false; // continue traversing but skip current branch\n    case exports.VisitorDecision.DESCEND:\n      for (let i = 0; i < this.children.length; ++i) {\n        const child = this.children[i];\n        const stop = child.traverseDepthFirst(visitor);\n        if (stop) {\n          return true; // stop traversing\n        }\n      }\n      return false; // continue traversing\n    default:\n      googAsserts.fail('Unhandled case');\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayertreeController', []);\nexports.module.controller('ngeoLayertreeController', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Measure\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport * as olDom from 'ol/dom.js';\nimport * as olProj from 'ol/proj.js';\nimport olOverlay from 'ol/Overlay.js';\nimport * as olSphere from 'ol/sphere.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * Interaction that allows measuring (length, area, ...).\n *\n * @constructor\n * @struct\n * @abstract\n * @extends {ol.interaction.Interaction}\n * @param {ngeo.interaction.MeasureBaseOptions=} options Options\n */\nconst exports = function(options = /** @type {ngeo.interaction.MeasureBaseOptions} */ ({})) {\n\n  olInteractionInteraction.call(this, {\n    handleEvent: exports.handleEvent_\n  });\n\n  /**\n   * The help tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.helpTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the help messages.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.helpTooltipOverlay_ = null;\n\n\n  /**\n   * The measure tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.measureTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the measurement.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.measureTooltipOverlay_ = null;\n\n\n  /**\n   * The measurement overlay coordinate.\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.measureTooltipOverlayCoord_ = null;\n\n\n  /**\n   * The sketch feature.\n   * @type {ol.Feature}\n   * @protected\n   */\n  this.sketchFeature = null;\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {?Element}\n   */\n  this.continueMsg = null;\n\n  /**\n   * Defines the number of decimals to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.decimals = options.decimals;\n\n  /**\n   * Defines the number of precision to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.precision = options.precision;\n\n  /**\n   * Whether or not to display any tooltip\n   * @type {boolean}\n   * @private\n   */\n  this.displayHelpTooltip_ = options.displayHelpTooltip !== undefined ? options.displayHelpTooltip : true;\n\n  /**\n   * The message to show when user is about to start drawing.\n   * @type {Element}\n   */\n  this.startMsg;\n  if (options.startMsg !== undefined) {\n    this.startMsg = options.startMsg;\n  } else {\n    this.startMsg = document.createElement('span');\n    this.startMsg.textContent =  'Click to start drawing.';\n  }\n\n  /**\n   * The key for geometry change event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.changeEventKey_ = null;\n\n  /**\n   * The key for map postcompose event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.postcomposeEventKey_ = null;\n\n  const style = options.style !== undefined ? options.style : [\n    new olStyleStyle({\n      fill: new olStyleFill({\n        color: 'rgba(255, 255, 255, 0.2)'\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: 'white',\n        width: 5\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: '#ffcc33',\n        width: 3\n      })\n    })\n  ];\n\n  /**\n   * The vector layer used to show final measure features.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: new olSourceVector(),\n    style: style\n  });\n\n  /**\n   * The draw interaction to be used.\n   * @type {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw}\n   * @private\n   */\n  this.drawInteraction_ = this.createDrawInteraction(options.sketchStyle,\n    this.vectorLayer_.getSource());\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n\n  olEvents.listen(this.drawInteraction_, 'change:active', this.handleDrawInteractionActiveChange_, this);\n  olEvents.listen(this.drawInteraction_, 'drawstart', this.onDrawStart_, this);\n  olEvents.listen(this.drawInteraction_, 'drawend', this.onDrawEnd_, this);\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nolBase.inherits(exports, olInteractionInteraction);\n\n\n/**\n * @const\n * @type {ol.Sphere}\n */\n\n\n/**\n * Calculate the area of the passed polygon and return a formatted string\n * of the area.\n * @param {!ol.geom.Polygon} polygon Polygon.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n * @this {ngeo.interaction.Measure}\n */\nexports.getFormattedArea = function(polygon, projection, precision, format) {\n  const geom = /** @type {ol.geom.Polygon} */ (polygon.clone().transform(projection, 'EPSG:4326'));\n  const area = Math.abs(olSphere.getArea(geom, {'projection': 'EPSG:4326'}));\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the area of the passed circle and return a formatted string\n * of the area.\n * @param {!ol.geom.Circle} circle Circle\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n */\nexports.getFormattedCircleArea = function(circle, precision, format) {\n  const area = Math.PI * Math.pow(circle.getRadius(), 2);\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the length of the passed line string and return a formatted\n * string of the length.\n * @param {!ol.geom.LineString} lineString Line string.\n * @param {!ol.proj.Projection} projection Projection of the line string coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of length.\n */\nexports.getFormattedLength = function(lineString, projection, precision, format) {\n  let length = 0;\n  const coordinates = lineString.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const c1 = olProj.transform(coordinates[i], projection, 'EPSG:4326');\n    const c2 = olProj.transform(coordinates[i + 1], projection, 'EPSG:4326');\n    length += olSphere.getDistance(c1, c2);\n  }\n  return format(length, 'm', 'unit', precision);\n};\n\n\n/**\n * Return a formatted string of the point.\n * @param {!ol.geom.Point} point Point.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.numberCoordinates} format A function to format coordinate into text\n * @param {string=} opt_template The template.\n * @return {string} Formatted string of coordinate.\n */\nexports.getFormattedPoint = function(point, decimals, format, opt_template) {\n  return format(point.getCoordinates(), decimals, opt_template);\n};\n\n\n/**\n * Handle map browser event.\n * @param {ol.MapBrowserEvent} evt Map browser event.\n * @return {boolean} `false` if event propagation should be stopped.\n * @this {ngeo.interaction.Measure}\n * @private\n */\nexports.handleEvent_ = function(evt) {\n  if (evt.type != 'pointermove' || evt.dragging) {\n    return true;\n  }\n\n  const helpMsg = this.sketchFeature === null ? this.startMsg : this.continueMsg;\n\n  if (this.displayHelpTooltip_) {\n    olDom.removeChildren(this.helpTooltipElement_);\n    this.helpTooltipElement_.appendChild(helpMsg);\n    this.helpTooltipOverlay_.setPosition(evt.coordinate);\n  }\n\n  return true;\n};\n\n\n/**\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The draw interaction.\n */\nexports.prototype.getDrawInteraction = function() {\n  return this.drawInteraction_;\n};\n\n\n/**\n * Creates the draw interaction.\n *\n * @abstract\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined}\n *     style The sketchStyle used for the drawing interaction.\n * @param {ol.source.Vector} source Vector source.\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The interaction\n * @protected\n */\nexports.prototype.createDrawInteraction = function(style, source) {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  this.vectorLayer_.setMap(map);\n\n  const prevMap = this.drawInteraction_.getMap();\n  if (prevMap !== null) {\n    prevMap.removeInteraction(this.drawInteraction_);\n  }\n\n  if (map !== null) {\n    map.addInteraction(this.drawInteraction_);\n  }\n};\n\n\n/**\n * Handle draw interaction `drawstart` event.\n * @param {ol.interaction.Draw.Event|ngeox.DrawEvent} evt Event.\n * @private\n */\nexports.prototype.onDrawStart_ = function(evt) {\n  this.sketchFeature = evt.feature || evt.detail.feature;\n  this.vectorLayer_.getSource().clear(true);\n  this.createMeasureTooltip_();\n\n  const geometry = this.sketchFeature.getGeometry();\n\n  googAsserts.assert(geometry !== undefined);\n  this.changeEventKey_ = olEvents.listen(geometry, 'change', () => {\n    this.handleMeasure((measure, coord) => {\n      if (coord !== null) {\n        this.measureTooltipElement_.innerHTML = measure;\n        this.measureTooltipOverlayCoord_ = coord;\n      }\n    });\n  });\n\n  this.postcomposeEventKey_ = olEvents.listen(this.getMap(), 'postcompose', () => {\n    this.measureTooltipOverlay_.setPosition(this.measureTooltipOverlayCoord_);\n  });\n};\n\n\n/**\n * Handle draw interaction `drawend` event.\n * @param {ol.interaction.Draw.Event|ngeox.DrawEvent} evt Event.\n * @private\n */\nexports.prototype.onDrawEnd_ = function(evt) {\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-static');\n  this.measureTooltipOverlay_.setOffset([0, -7]);\n  /** @type {ngeox.MeasureEvent} */\n  const event = new ngeoCustomEvent('measureend', {feature: this.sketchFeature});\n  this.dispatchEvent(event);\n  this.sketchFeature = null;\n  this.unlistenerEvent_();\n};\n\n/**\n * Handle unlistener events for 'end of drawing' interaction\n * @private\n */\nexports.prototype.unlistenerEvent_ = function() {\n  if (this.changeEventKey_ !== null && this.postcomposeEventKey_ !== null) {\n    olEvents.unlistenByKey(this.changeEventKey_);\n    olEvents.unlistenByKey(this.postcomposeEventKey_);\n    this.changeEventKey_ = null;\n    this.postcomposeEventKey_ = null;\n  }\n};\n\n/**\n * Creates a new help tooltip\n * @private\n */\nexports.prototype.createHelpTooltip_ = function() {\n  this.removeHelpTooltip_();\n  if (this.displayHelpTooltip_) {\n    this.helpTooltipElement_ = document.createElement('div');\n    this.helpTooltipElement_.classList.add('tooltip');\n    this.helpTooltipOverlay_ = new olOverlay({\n      element: this.helpTooltipElement_,\n      offset: [15, 0],\n      positioning: 'center-left'\n    });\n    this.getMap().addOverlay(this.helpTooltipOverlay_);\n  }\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeHelpTooltip_ = function() {\n  if (this.displayHelpTooltip_) {\n    this.getMap().removeOverlay(this.helpTooltipOverlay_);\n    if (this.helpTooltipElement_ !== null) {\n      this.helpTooltipElement_.parentNode.removeChild(this.helpTooltipElement_);\n    }\n    this.helpTooltipElement_ = null;\n    this.helpTooltipOverlay_ = null;\n  }\n};\n\n\n/**\n * Creates a new measure tooltip\n * @private\n */\nexports.prototype.createMeasureTooltip_ = function() {\n  this.removeMeasureTooltip_();\n  this.measureTooltipElement_ = document.createElement('div');\n  this.measureTooltipElement_.classList.add('tooltip');\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-measure');\n  this.measureTooltipOverlay_ = new olOverlay({\n    element: this.measureTooltipElement_,\n    offset: [0, -15],\n    positioning: 'bottom-center',\n    stopEvent: false\n  });\n  this.getMap().addOverlay(this.measureTooltipOverlay_);\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeMeasureTooltip_ = function() {\n  if (this.measureTooltipElement_ !== null) {\n    this.measureTooltipElement_.parentNode.removeChild(this.measureTooltipElement_);\n    this.measureTooltipElement_ = null;\n    this.measureTooltipOverlay_ = null;\n    this.measureTooltipOverlayCoord_ = null;\n  }\n};\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const active = this.getActive();\n  this.shouldHandleDrawInteractionActiveChange_ = false;\n  this.drawInteraction_.setActive(active);\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n  if (!this.getMap()) {\n    return;\n  }\n  if (active) {\n    if (!this.measureTooltipOverlay_) {\n      this.createMeasureTooltip_();\n      this.createHelpTooltip_();\n    }\n  } else {\n    this.vectorLayer_.getSource().clear(true);\n    this.getMap().removeOverlay(this.measureTooltipOverlay_);\n    this.removeMeasureTooltip_();\n    this.removeHelpTooltip_();\n    this.unlistenerEvent_();\n  }\n};\n\n\n/**\n * Function implemented in inherited classes to compute measurement, determine\n * where to place the tooltip and determine which help message to display.\n *\n * @abstract\n * @param {function(string, ?ol.Coordinate)} callback The function\n *     to be called.\n * @protected\n */\nexports.prototype.handleMeasure = function(callback) {};\n\n\n/**\n * Get a reference to the tooltip element.\n * @return {Element} Tooltip Element.\n */\nexports.prototype.getTooltipElement = function() {\n  return this.measureTooltipElement_;\n};\n\n\n/**\n * Called when the draw interaction `active` property changes. If the\n * change is due to something else than this measure interactino, then\n * update follow the its active state accordingly.\n *\n * @private\n */\nexports.prototype.handleDrawInteractionActiveChange_ = function() {\n  if (this.shouldHandleDrawInteractionActiveChange_) {\n    this.setActive(this.drawInteraction_.getActive());\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.filters\n */\nimport * as olMath from 'ol/math.js';\nimport * as olString from 'ol/string.js';\nconst exports = angular.module('ngeoAngularFilters', []);\n\n/**\n * Format a number as a localized scale.\n * For instance:\n *  - For 'fr-CH' the value 25000 will become '1 : 25 000'.\n *  - For 'en-US' the value 25000 will become '1 : 25,000'.\n *\n * Example:\n *\n *      <p>{{25000 | ngeoScalify}}</p>\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {function(number): string} A function to format number into a 'scale'\n *     string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoScalify\n */\nexports.Scalify = function($filter) {\n  const numberFilter = $filter('number');\n  const filterFn = function(scale) {\n    const text = numberFilter(scale, 0);\n    return text ? `1\\u00a0:\\u00a0${text}` : '';\n  };\n  filterFn['$stateful'] = true;\n  return filterFn;\n};\n\nexports.filter('ngeoScalify', exports.Scalify);\n\n/**\n * A filter used to format a number with a precision, using the locale.\n *\n * Arguments:\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{0.1234 | ngeoNumber}} => 0.123\n *      {{1.234 | ngeoNumber}} => 1.23\n *      {{12.34 | ngeoNumber}} => 12.3\n *      {{123.4 | ngeoNumber}} => 123\n *      {{1234 | ngeoNumber}} => 1230\n *\n * @param {angular.$locale} $locale Angular locale\n * @return {ngeox.number} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumber\n */\nexports.Number = function($locale) {\n  const formats = $locale.NUMBER_FORMATS;\n\n  /**\n   * @param {number} number The number to format.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_precision) {\n    const groupSep = formats.GROUP_SEP;\n    const decimalSep = formats.DECIMAL_SEP;\n    if (opt_precision === undefined) {\n      opt_precision = 3;\n    }\n\n    if (number === Infinity) {\n      return '\\u221e';\n    } else if (number === -Infinity) {\n      return '-\\u221e';\n    } else if (number === 0) {\n      // 0 will creates infinity values\n      return '0';\n    }\n    const sign = number < 0;\n    number = Math.abs(number);\n\n    const nb_decimal = opt_precision - Math.floor(Math.log(number) / Math.log(10)) - 1;\n    const factor = Math.pow(10, nb_decimal);\n    number = Math.round(number * factor);\n    let decimal = '';\n    const unit = Math.floor(number / factor);\n\n    if (nb_decimal > 0) {\n      let str_number = `${number}`;\n      // 0 padding\n      while (str_number.length < nb_decimal) {\n        str_number = `0${str_number}`;\n      }\n      decimal = str_number.substring(str_number.length - nb_decimal);\n      while (decimal[decimal.length - 1] === '0') {\n        decimal = decimal.substring(0, decimal.length - 1);\n      }\n    }\n\n    const groups = [];\n    let str_unit = `${unit}`;\n    while (str_unit.length > 3) {\n      const index = str_unit.length - 3;\n      groups.unshift(str_unit.substring(index));\n      str_unit = str_unit.substring(0, index);\n    }\n    groups.unshift(str_unit);\n\n    return (sign ? '-' : '') + groups.join(groupSep) + (\n      decimal.length === 0 ? '' : decimalSep + decimal\n    );\n  };\n  return result;\n};\n\nexports.filter('ngeoNumber', exports.Number);\n\n/**\n * A filter used to format a number with the prefix and unit\n *\n * Arguments:\n * - opt_unit: The unit to used, default is ''.\n * - opt_type: (unit|square|binary) the type of units, default is 'unit'.\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{25000 | ngeoUnitPrefix}} => 25 k\n *      {{25000 | ngeoUnitPrefix:'m'}} => 25 km\n *      {{25000000 | ngeoUnitPrefix:'m²':'square'}} => 25 km²\n *      {{2048 | ngeoUnitPrefix:'o':'binary'}} => 2 Kio\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.unitPrefix} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoUnitPrefix\n */\nexports.UnitPrefix = function($filter) {\n  const numberFilter = $filter('ngeoNumber');\n  const standardPrefix = ['', 'k', 'M', 'G', 'T', 'P'];\n  const binaryPrefix = ['', 'Ki', 'Mi', 'Gi', 'Ti', 'Pi'];\n  /**\n   * @param {number} number The number to format.\n   * @param {string=} opt_unit The unit to used, default is ''.\n   * @param {string=} opt_type (unit|square|binary) the type of units, default is 'unit'.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_unit, opt_type, opt_precision) {\n    if (opt_unit === undefined) {\n      opt_unit = '';\n    }\n    let divisor = 1000;\n    let prefix = standardPrefix;\n    if (opt_type === 'square') {\n      divisor = 1000000;\n    } else if (opt_type === 'binary') {\n      divisor = 1024;\n      prefix = binaryPrefix;\n    }\n\n    let index = 0;\n    const index_max = prefix.length - 1;\n    while (number >= divisor && index < index_max) {\n      number = number / divisor;\n      index++;\n    }\n\n    const postfix = prefix[index] + opt_unit;\n    const space = postfix.length == 0 ? '' : '\\u00a0';\n    return numberFilter(number, opt_precision) + space + postfix;\n  };\n  return result;\n};\n\nexports.filter('ngeoUnitPrefix', exports.UnitPrefix);\n\n/**\n * Format a couple of numbers as number coordinates.\n *\n * Example without parameters (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates}}</p>\n *      <!-- will Become 7 47 -->\n *\n * Example with defined fractionDigits and template (en-US localization):\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates:2:'co {x} E; {y} N'}}</p>\n *      <!-- will Become co 7.12 E; 46.99 N -->\n *\n * Example without fractionDigits but with defined template and localize:\n *\n *      <!-- With en-US localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2,600,000, 1,600,000 -->\n *      <br/>\n *      <!-- With fr-CH localization (opt_localize can be true or undefined) -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *      <br/>\n *      <!-- With en-US localization but with localization to false -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.numberCoordinates} A function to format numbers into coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumberCoordinates\n */\nexports.NumberCoordinates = function($filter) {\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to '{x} {y}'.\n   *     Where \"{x}\" will be replaced by the easting coordinate and \"{y}\" by the\n   *     northing one. Note: Use a html entity to use the semicolon symbol\n   *     into a template.\n   * @return {string} Number formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const template = opt_template ? opt_template : '{x} {y}';\n    let x = coordinates[0];\n    let y = coordinates[1];\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n    x = $filter('number')(x, fractionDigits);\n    y = $filter('number')(y, fractionDigits);\n    return template.replace('{x}', x).replace('{y}', y);\n  };\n  return filterFn;\n};\n\nexports.filter('ngeoNumberCoordinates', exports.NumberCoordinates);\n\n\n/**\n * Format coordinates as DMS coordinates.\n *\n * Example without parameters:\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates}}</p>\n *      <!-- will Become  7° 07' 24'' E 46° 59' 15'' N-->\n *\n * Example with defined fractionDigits and a template.\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates:2:'[{y}; {x]'}}</p>\n *      <!-- will Become [46° 59' 15.36'' N; 7° 07' 24.24'' E] -->\n *\n * @return {ngeox.dmsCoordinates} A function to format numbers into a DMS coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoDMSCoordinates\n */\nexports.DMSCoordinates = function() {\n  const degreesToStringHDMS = function(degrees, hemispheres, fractionDigits) {\n    const normalizedDegrees = olMath.modulo(degrees + 180, 360) - 180;\n    const dms = Math.abs(3600 * normalizedDegrees);\n    const d = Math.floor(dms / 3600);\n    const m = Math.floor((dms / 60) % 60);\n    const s = (dms % 60);\n    return `${d}\\u00b0 ${\n      olString.padNumber(m, 2)}\\u2032 ${\n      olString.padNumber(s, 2, fractionDigits)}\\u2033 ${\n      hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0)}`;\n  };\n\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to\n   *     '{x} {y}'. Where \"{x}\" will be replaced by the easting\n   *     coordinate, {y} by the northing one. Note: Use a html entity to use the\n   *     semicolon symbol into a template.\n   * @return {string} DMS formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n\n    const template = opt_template ? opt_template : '{x} {y}';\n\n    const xdms = degreesToStringHDMS(coordinates[0], 'EW', fractionDigits);\n    const ydms = degreesToStringHDMS(coordinates[1], 'NS', fractionDigits);\n\n    return template.replace('{x}', xdms).replace('{y}', ydms);\n  };\n\n  return filterFn;\n};\n\nexports.filter('ngeoDMSCoordinates', exports.DMSCoordinates);\n\n\n/**\n * A filter to mark a value as trusted HTML.\n *\n * Usage:\n *\n *    <p ng-bind-html=\"ctrl.someValue | ngeoTrustHtml\"></p>\n *\n * If you use it, you don't require the \"ngSanitize\".\n * @return {function(?):string} The filter function.\n * @ngInject\n * @ngdoc filter\n * @param {angular.$sce} $sce Angular sce service.\n * @ngname ngeoTrustHtml\n */\nexports.trustHtmlFilter = function($sce) {\n  return function(input) {\n    if (input !== undefined && input !== null) {\n      return $sce.trustAsHtml(`${input}`);\n    } else {\n      return $sce.trustAsHtml('&nbsp;');\n    }\n  };\n};\n\nexports.filter('ngeoTrustHtml', exports.trustHtmlFilter);\n\n\n/**\n * A filter used to format a time duration in seconds into a more\n * readable form.\n * Only the two largest units will be shown.\n *\n * Examples:\n *      {{42 | ngeoDuration}} => 42 seconds\n *      {{132 | ngeoDuration}} => 2 minutes 12 seconds\n *      {{3910 | ngeoDuration}} => 1 hour 5 minutes\n *        -> Note: the remaining 10 seconds will be dropped\n *\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @return {ngeox.duration} Function used to format a time duration in seconds into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoDuration\n */\nexports.Duration = function(gettextCatalog) {\n  // time unit enum\n  const TimeUnits = Object.freeze({\n    SECONDS: Symbol('seconds'),\n    MINUTES: Symbol('minutes'),\n    HOURS: Symbol('hours'),\n    DAYS: Symbol('days')\n  });\n\n  /**\n   * @param {number} amount Amount of time.\n   * @param {symbol} unit Unit of time.\n   * @return {string} formatted and translated string\n   */\n  const pluralize = function(amount, unit) {\n    let formattedUnit = '';\n    switch (unit) {\n      case TimeUnits.SECONDS:\n        formattedUnit = gettextCatalog.getPlural(amount, 'second', 'seconds');\n        break;\n      case TimeUnits.MINUTES:\n        formattedUnit = gettextCatalog.getPlural(amount, 'minute', 'minutes');\n        break;\n      case TimeUnits.HOURS:\n        formattedUnit = gettextCatalog.getPlural(amount, 'hour', 'hours');\n        break;\n      case TimeUnits.DAYS:\n        formattedUnit = gettextCatalog.getPlural(amount, 'day', 'days');\n        break;\n      default:\n        break;\n    }\n    return `${amount} ${formattedUnit}`;\n  };\n\n  /**\n   * @param {number} duration The duration in seconds.\n   * @return {string} The formatted string.\n   */\n  const result = function(duration) {\n    // round to next integer\n    duration = Math.round(duration);\n\n    // just seconds\n    let output;\n    if (duration < 60) {\n      return pluralize(duration, TimeUnits.SECONDS);\n    }\n\n    // minutes (+ seconds)\n    let remainder = duration % 60; // seconds\n    duration = Math.floor(duration / 60); // minutes\n    if (duration < 60) { // less than an hour\n      output = pluralize(duration, TimeUnits.MINUTES);\n      if (remainder > 0) {\n        output += ` ${pluralize(remainder, TimeUnits.SECONDS)}`;\n      }\n      return output;\n    }\n\n    // hours (+ minutes)\n    remainder = duration % 60; // minutes\n    duration = Math.floor(duration / 60); // hours\n    if (duration < 24) { // less than a day\n      output = pluralize(duration, TimeUnits.HOURS);\n      if (remainder > 0) {\n        output += ` ${pluralize(remainder, TimeUnits.MINUTES)}`;\n      }\n      return output;\n    }\n\n    // days (+ hours)\n    remainder = duration % 24; // hours\n    duration = Math.floor(duration / 24); // days\n    output = pluralize(duration, TimeUnits.DAYS);\n    if (remainder > 0) {\n      output += ` ${pluralize(remainder, TimeUnits.HOURS)}`;\n    }\n    return output;\n  };\n\n  return result;\n};\n\nexports.filter('ngeoDuration', exports.Duration);\n\n\nexport default exports;\n","/**\n * @module ngeo.query.MapQuerent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoQueryQuerent from 'ngeo/query/Querent.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoDatasourceHelper from 'ngeo/datasource/Helper.js';\nimport * as olObj from 'ol/obj.js';\n\nconst exports = class {\n\n  /**\n   * The ngeo Map Querent is the service bound to a map that issues\n   * queries using the Querent service. The result is stored inside this\n   * service.\n   *\n   * @struct\n   * @param {angular.$injector} $injector Main injector.\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources service.\n   * @param {ngeo.datasource.Helper} ngeoDataSourcesHelper Ngeo data\n   *     sources helper service.\n   * @param {ngeo.query.Querent} ngeoQuerent The ngeo querent service.\n   * @param {ngeox.QueryResult} ngeoQueryResult The ngeo query result service.\n   * @ngdoc service\n   * @ngname ngeoQuerent\n   * @ngInject\n   */\n  constructor($injector, ngeoDataSources, ngeoDataSourcesHelper, ngeoQuerent,\n    ngeoQueryResult) {\n\n    const options = /** @type {ngeox.QueryOptions} */ (\n      $injector.has('ngeoQueryOptions') ?\n        $injector.get('ngeoQueryOptions') : {});\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n\n    /**\n     * @type {ngeo.datasource.Helper}\n     * @private\n     */\n    this.ngeoDataSourcesHelper_ = ngeoDataSourcesHelper;\n\n    /**\n     * @type {ngeo.query.Querent}\n     * @private\n     */\n    this.ngeoQuerent_ = ngeoQuerent;\n\n    /**\n     * @type {ngeox.QueryResult}\n     * @private\n     */\n    this.result_ = ngeoQueryResult;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.limit_ = options.limit !== undefined ? options.limit : 50;\n\n    /**\n     * When set, before making WFS GetFeature requests to fetch features,\n     * WFS GetFeature requests with `resultType = 'hits'` are made first. If\n     * the number of records for the request would exceed the limit, then\n     * no features are returned.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.queryCountFirst_ = options.queryCountFirst !== undefined ?\n      options.queryCountFirst : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.tolerancePx_ = options.tolerance !== undefined ?\n      options.tolerance : 3;\n\n    /**\n     * A hash of data source names classified by ids.\n     * @type {Object.<number, string>}\n     * @private\n     */\n    this.dataSourceNames_ = {};\n  }\n\n  /**\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @export\n   */\n  issue(options) {\n    // (1) Clear previous result\n    this.clear();\n\n    // (2) Get queryable data sources, unless they are already set\n    let queryableDataSources;\n    if (options.dataSources === undefined &&\n        options.queryableDataSources === undefined\n    ) {\n      queryableDataSources = this.ngeoQuerent_.getQueryableDataSources(\n        this.dataSources_.getArray(),\n        options.map\n      );\n    }\n\n    // (3) Update query options, update the pending property and issue the\n    //     request.\n    const limit = options.limit !== undefined ? options.limit : this.limit_;\n    olObj.assign(options, {\n      queryableDataSources: queryableDataSources,\n      limit: limit,\n      tolerancePx: this.tolerancePx_,\n      wfsCount: this.queryCountFirst_\n    });\n    this.result_.pending = true;\n    this.ngeoQuerent_.issue(options).then(this.handleResult_.bind(this));\n  }\n\n  /**\n   * Clear result, i.e. clear all 'result source' from their features and other\n   * information.\n   * @export\n   */\n  clear() {\n    this.result_.total = 0;\n    for (const source of this.result_.sources) {\n      source.features.length = 0;\n      source.pending = false;\n      source.queried = false;\n      source.tooManyResults = false;\n      source.totalFeatureCount = undefined;\n    }\n    this.result_.sources.length = 0; // Clear previous result sources\n    this.result_.pending = false;\n  }\n\n  /**\n   * Called after a request to the querent service. Update the result.\n   *\n   * @param {ngeox.QuerentResult} response Response\n   * @private\n   */\n  handleResult_(response) {\n    let total = 0;\n\n    // (1) Update result sources, i.e. add them\n    for (const idStr in response) {\n      const id = Number(idStr);\n      const dataSource = this.ngeoDataSourcesHelper_.getDataSource(id);\n      let label = dataSource.name;\n      googAsserts.assert(dataSource);\n\n      const querentResultItem = response[id];\n      const features = querentResultItem.features;\n      const limit = querentResultItem.limit;\n      const tooManyResults = querentResultItem.tooManyFeatures === true;\n      const totalFeatureCount = querentResultItem.totalFeatureCount;\n\n      const typeSeparatedFeatures = {};\n      features.forEach((feature) => {\n        const type = googAsserts.assertString(feature.get('ngeo_feature_type_'));\n        if (!typeSeparatedFeatures[type]) {\n          typeSeparatedFeatures[type] = [];\n        }\n        // Use properties aliases if any\n        if (dataSource.attributes && dataSource.attributes.length) {\n          const properties = feature.getProperties();\n          const filteredProperties = {};\n          dataSource.attributes.forEach((attribute) => {\n            if (attribute.alias) {\n              filteredProperties[attribute.alias] = properties[attribute.name];\n              feature.unset(attribute.name, /* silent */ true);\n            } else {\n              // No alias is available => use the attribute as is.\n              filteredProperties[attribute.name] = properties[attribute.name];\n            }\n          });\n          feature.setProperties(filteredProperties, /* silent */ true);\n        }\n        typeSeparatedFeatures[type].push(feature);\n      });\n\n      for (const type in typeSeparatedFeatures) {\n        label = type ? type : label;\n        const featuresByType = typeSeparatedFeatures[type];\n        this.result_.sources.push({\n          features: featuresByType,\n          id: id,\n          label: label,\n          limit: limit,\n          pending: false,\n          queried: true,\n          tooManyResults: tooManyResults,\n          totalFeatureCount: totalFeatureCount\n        });\n        total += features.length;\n      }\n    }\n\n    // (2) Update total & pending\n    this.result_.total = total;\n    this.result_.pending = false;\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoMapQuerent', [\n  ngeoDatasourceDataSources.module.name,\n  ngeoDatasourceHelper.module.name,\n  ngeoQueryQuerent.module.name,\n]);\nexports.module.service('ngeoMapQuerent', exports);\n\n\n/**\n * The `ngeoQueryResult` is the value service where the features of the query\n * result are added.\n */\nexports.module.value('ngeoQueryResult', /** @type {ngeox.QueryResult} */ ({\n  sources: [],\n  total: 0,\n  pending: false\n}));\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.TreeManager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *     let module = angular.module('app');\n *     module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @struct\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.$injector} $injector Angular injector service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($timeout, $injector, gettextCatalog, ngeoLayerHelper,\n  ngeoNotification, gmfThemes, ngeoStateManager) {\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {angular.$injector}\n   * @private\n   */\n  this.$injector_ = $injector;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.message.Notification}\n   * @private\n   */\n  this.ngeoNotification_ = ngeoNotification;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * The root node and its children used to generate the layertree (with the\n   * same ordre).\n   * @type {gmfThemes.GmfRootNode}\n   * @public\n   */\n  this.root = /** @type {gmfThemes.GmfRootNode} */ ({\n    children: []\n  });\n\n  /**\n   * The controller of the (unique) root layer tree.\n   * The array of top level layer trees is available through `rootCtrl.children`.\n   * The order doesn't match with the ordre of the displayed layertree.\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.rootCtrl = null;\n\n  /**\n   * Number of groups to add to the layertree during one single Angular\n   * digest loop.\n   * @type {number}\n   * @public\n   */\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  /**\n   * @type {Array.<gmfThemes.GmfGroup>}\n   * @private\n   */\n  this.groupsToAddInThisDigestLoop_ = [];\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promiseForGroupsToAddInThisDigestLoop_ = null;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n  olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n};\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * The themes could have been changed so it also call a refresh of the\n * layertree.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n\n  if (this.rootCtrl && this.rootCtrl.children) {\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      this.refreshFirstLevelGroups_(themes);\n    });\n  }\n};\n\n/**\n * Set some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme group.\n * @return {boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.setFirstLevelGroups = function(firstLevelGroups) {\n  this.root.children.length = 0;\n  this.ngeoStateManager_.deleteParam(gmfBase.PermalinkParam.TREE_GROUPS);\n  return this.addFirstLevelGroups(firstLevelGroups);\n};\n\n/**\n * Add some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme\n *     group.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called.\n * @return{boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.addFirstLevelGroups = function(firstLevelGroups,\n  opt_add, opt_silent) {\n  const groupNotAdded = [];\n\n  firstLevelGroups.slice().reverse().forEach((group) => {\n    if (!this.addFirstLevelGroup_(group)) {\n      groupNotAdded.push(group);\n    }\n  });\n  if (groupNotAdded.length > 0 && !opt_silent) {\n    this.notifyCantAddGroups_(groupNotAdded);\n  }\n\n  return groupNotAdded.length === 0;\n};\n\n\n/**\n * Update the application state with the list of first level groups in the tree\n * @param {Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n * @private\n */\nexports.prototype.updateTreeGroupsState_ = function(groups) {\n  const treeGroupsParam = {};\n  treeGroupsParam[gmfBase.PermalinkParam.TREE_GROUPS] = groups.map(node => node.name).join(',');\n  this.ngeoStateManager_.updateState(treeGroupsParam);\n  if (this.$injector_.has('gmfPermalink')) {\n    /** @type {gmf.permalink.Permalink} */(this.$injector_.get('gmfPermalink')).cleanParams(groups);\n  }\n};\n\n\n/**\n * Add a group as tree's children without consideration of this service 'mode'.\n * Add it only if it's not already in the tree.\n * @param {gmfThemes.GmfGroup} group The group to add.\n * @return {boolean} true if the group has been added.\n * @private\n */\nexports.prototype.addFirstLevelGroup_ = function(group) {\n  let alreadyAdded = false;\n  const groupID = group.id;\n  this.root.children.some((rootChild) => {\n    if (groupID === rootChild.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  this.groupsToAddInThisDigestLoop_.some((grp) => {\n    if (groupID === grp.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  if (alreadyAdded) {\n    return false;\n  }\n\n  // Add groups in the list of groups to add and be sure that the counter of\n  // groups to add is reset.\n  this.groupsToAddInThisDigestLoop_.push(group);\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  // Delete previous timeout promise if it exists to do this action only once.\n  if (this.promiseForGroupsToAddInThisDigestLoop_ !== null) {\n    this.$timeout_.cancel(this.promiseForGroupsToAddInThisDigestLoop_);\n  }\n\n  // Add the groups only when there is no more group to come during this digest\n  // loop. The purpose of this is to preserve a consistent order between the\n  // layertree (generated by a template) and the layers in the map.\n  this.promiseForGroupsToAddInThisDigestLoop_ = this.$timeout_(() => {\n    // Set the number of group to add.\n    this.numberOfGroupsToAddInThisDigestLoop = this.groupsToAddInThisDigestLoop_.length;\n    // Add each first-level-groups.\n    this.groupsToAddInThisDigestLoop_.forEach((grp) => {\n      this.root.children.unshift(grp);\n    });\n    //Update the permalink\n    this.updateTreeGroupsState_(this.root.children);\n    // Reset the groups and the promise state. Don't reset the\n    // numberOfGroupsToAddInThisDigestLoop, it must persist because the layers\n    // will be added into the map after that the layertree template is\n    // generated (so in the next angular loop).\n    this.groupsToAddInThisDigestLoop_.length = 0;\n    this.promiseForGroupsToAddInThisDigestLoop_ = null;\n  });\n\n  return true;\n};\n\n\n/**\n * Retrieve a group (first found) by its name and add in the tree. Do nothing\n * if any corresponding group is found.\n * @param {string} groupName Name of the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @export\n */\nexports.prototype.addGroupByName = function(groupName, opt_add) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByName(themes, groupName);\n    if (group) {\n      this.addFirstLevelGroups([group], opt_add, false);\n    }\n  });\n};\n\n\n/**\n * Retrieve a group by the name of a layer that is contained in this group\n * (first found). This group will be added in the tree. Do nothing if any\n * corresponding group is found.\n * @param {string} layerName Name of the layer inside the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called\n * @export\n */\nexports.prototype.addGroupByLayerName = function(layerName, opt_add, opt_silent) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByLayerNodeName(themes, layerName);\n    if (group) {\n      const groupAdded = this.addFirstLevelGroups([group], opt_add, opt_silent);\n      this.$timeout_(() => {\n        const treeCtrl = this.getTreeCtrlByNodeId(group.id);\n        if (!treeCtrl) {\n          console.warn('Tree controller not found, unable to add the group');\n          return;\n        }\n        let treeCtrlToActive;\n        treeCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.name === layerName) {\n            treeCtrlToActive = treeCtrl;\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n\n        // Deactive all layers in the group if it's not in the tree.\n        if (groupAdded)  {\n          treeCtrl.setState('off');\n        }\n\n        // Active it.\n        if (treeCtrlToActive) {\n          treeCtrlToActive.setState('on');\n        }\n      });\n    }\n  });\n};\n\n\n/**\n * Remove a group from this tree's children. The first group that is found (\n * based on its name) will be removed. If any is found, nothing will append.\n * @param {gmfThemes.GmfGroup} group The group to remove.\n * @export\n */\nexports.prototype.removeGroup = function(group) {\n  const children = this.root.children;\n  let index = 0, found = false;\n  children.some((child) => {\n    if (child.name === group.name) {\n      return found = true;\n    }\n    index++;\n  });\n  if (found) {\n    children.splice(index, 1);\n    this.updateTreeGroupsState_(children);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  while (this.root.children.length) {\n    this.removeGroup(this.root.children[0]);\n  }\n};\n\n\n/**\n * Clone a group node and recursively set all child node `isChecked` using\n * the given list of layer names.\n * @param {gmfThemes.GmfGroup} group The original group node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @return {gmfThemes.GmfGroup} Cloned node.\n * @private\n */\nexports.prototype.cloneGroupNode_ = function(group, names) {\n  const clone = /** @type {gmfThemes.GmfGroup} */ (olObj.assign({}, group));\n  this.toggleNodeCheck_(clone, names);\n  return clone;\n};\n\n\n/**\n * Set the child nodes metadata `isChecked` if its name is among the list of\n * given names. If a child node also has children, check those instead.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node The original node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @private\n */\nexports.prototype.toggleNodeCheck_ = function(node, names) {\n  if (!node.children) {\n    return;\n  }\n  node.children.forEach((childNode) => {\n    if (childNode.children) {\n      this.toggleNodeCheck_(childNode, names);\n    } else if (childNode.metadata) {\n      childNode.metadata.isChecked = olArray.includes(names, childNode.name);\n    }\n  });\n};\n\n\n/**\n * Display a notification that informs that the given groups are already in the\n * tree.\n * @param {Array.<gmfThemes.GmfGroup>} groups An array of groups that already in\n *   the tree.\n * @private\n */\nexports.prototype.notifyCantAddGroups_ = function(groups) {\n  const names = [];\n  const gettextCatalog = this.gettextCatalog_;\n  groups.forEach((group) => {\n    names.push(group.name);\n  });\n  const msg = (names.length < 2) ?\n    gettextCatalog.getString('group is already loaded.') :\n    gettextCatalog.getString('groups are already loaded.');\n  this.ngeoNotification_.notify({\n    msg: `${names.join(', ')} ${msg}`,\n    type: ngeoMessageMessage.Type.INFORMATION\n  });\n};\n\n\n/**\n * Get a treeCtrl based on it's node id.\n * @param {number} id the id of a GMFThemesGroup or a GMFThemesLeaf.\n * @return {ngeo.layertree.Controller?} treeCtrl The associated controller or null.\n * @public\n */\nexports.prototype.getTreeCtrlByNodeId = function(id) {\n  let correspondingTreeCtrl = null;\n  if (this.rootCtrl && this.rootCtrl.traverseDepthFirst) {\n    this.rootCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.id === id) {\n        correspondingTreeCtrl = treeCtrl;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  return correspondingTreeCtrl;\n};\n\n\n/**\n * Get the OGC server.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {gmfThemes.GmfOgcServer} The OGC server.\n */\nexports.prototype.getOgcServer = function(treeCtrl) {\n  if (treeCtrl.parent.node.mixed) {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n    googAsserts.assert(gmfLayerWMS.ogcServer);\n    return this.ogcServers_[gmfLayerWMS.ogcServer];\n  } else {\n    let firstLevelGroupCtrl = treeCtrl;\n    while (!firstLevelGroupCtrl.parent.isRoot) {\n      firstLevelGroupCtrl = firstLevelGroupCtrl.parent;\n    }\n    const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (firstLevelGroupCtrl.node);\n    googAsserts.assert(gmfGroup.ogcServer);\n    return this.ogcServers_[gmfGroup.ogcServer];\n  }\n};\n\n\n/**\n * Keep the state of each existing first-level-groups in the layertree then\n * remove it and recreate it with nodes that come from the new theme and\n * the corresponding saved state (when possible, otherwise, juste take the\n * corresponding new node).\n * FIXME: Currently doesn't save nor restore the opacity.\n * @param {Array.<gmfThemes.GmfTheme>} themes the array of themes to be based on.\n * @private\n */\nexports.prototype.refreshFirstLevelGroups_ = function(themes) {\n  const firstLevelGroupsFullState = {};\n\n  // Save state of each child\n  this.rootCtrl.children.map((treeCtrl) => {\n    const name = treeCtrl.node.name;\n    firstLevelGroupsFullState[name] = this.getFirstLevelGroupFullState_(treeCtrl);\n  });\n\n  // Get nodes and set their state\n  const nodesToRestore = [];\n  // Iterate on the root to keep the same order in the tree as before.\n  this.root.children.map((node) => {\n    const name = node.name;\n\n    // Find the right firstlevelgroup in the new theme.\n    const nodeToRestore = gmfThemeThemes.findGroupByName(themes, name);\n    if (nodeToRestore) {\n      // Restore state.\n      const fullState = firstLevelGroupsFullState[name];\n      if (fullState) {\n        this.setNodeMetadataFromFullState_(nodeToRestore, fullState);\n      }\n      nodesToRestore.push(nodeToRestore);\n    }\n  });\n\n  // Readd the firstlevelgroups.\n  this.setFirstLevelGroups(nodesToRestore);\n\n  // Wait that Angular has created the layetree, then update the permalink.\n  this.$timeout_(() => {\n    this.updateTreeGroupsState_(this.root.children);\n  });\n};\n\n\n/**\n * Return a gmfx.TreeManagerFullState that keeps the state of the given\n * treeCtrl including the state of its children.\n * @param {ngeo.layertree.Controller} treeCtrl the ngeo layertree controller to\n *     save.\n * @return {gmfx.TreeManagerFullState!} the fullState object.\n * @private\n */\nexports.prototype.getFirstLevelGroupFullState_ = function(treeCtrl) {\n  const children = {};\n  // Get the state of the treeCtrl children recursively.\n  treeCtrl.children.map((child) => {\n    children[child.node.name] = this.getFirstLevelGroupFullState_(child);\n  });\n\n  let isChecked, isExpanded, isLegendExpanded;\n  if (treeCtrl.children.length > 0) {\n    const nodeElement = $(`#gmf-layertree-layer-group-${treeCtrl.uid}`);\n    // Set isExpanded only in groups.\n    if (nodeElement) {\n      isExpanded = nodeElement.hasClass('in');\n    }\n  } else {\n    // Set state and isLegendExpanded only in leaves.\n    isChecked = treeCtrl.getState();\n    if (isChecked === 'on') {\n      isChecked = true;\n    } else if (isChecked === 'off') {\n      isChecked = false;\n    } else {\n      isChecked = undefined;\n    }\n    const legendElement = $(`#gmf-layertree-node-${treeCtrl.uid}-legend`);\n    if (legendElement) {\n      isLegendExpanded = legendElement.is(':visible');\n    }\n  }\n\n  return {\n    children,\n    isChecked,\n    isExpanded,\n    isLegendExpanded\n  };\n};\n\n\n/**\n * Set a node's metadata with the given fullState. Update also its children\n * recursively with the fullState children.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node to update.\n * @param {gmfx.TreeManagerFullState|undefined} fullState the fullState object\n *     to use.\n * @return {gmfThemes.GmfGroup|gmfThemes.GmfLayer} the node with modification.\n * @private\n */\nexports.prototype.setNodeMetadataFromFullState_ = function(node, fullState) {\n  if (!fullState) {\n    return node;\n  }\n\n  // Set the metadata of the node children recursively.\n  if (node.children) {\n    node.children.map((child) => {\n      this.setNodeMetadataFromFullState_(child, fullState.children[child.name]);\n    });\n  }\n\n  // Set the metadata with the fullState object information.\n  const metadata = node.metadata;\n  metadata.isChecked = fullState.isChecked;\n  metadata.isExpanded = fullState.isExpanded;\n  metadata.isLegendExpanded = fullState.isLegendExpanded;\n\n  return node;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfTreeManager', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoStatemanagerService.module.name,\n]);\nexports.module.service('gmfTreeManager', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.WMSTime\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscTime from 'ngeo/misc/Time.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * ngeo - WMS time service\n * @extends {ngeo.misc.Time}\n * @param {angular.$filter} $filter angular filter service.\n * @param {!angularGettext.Catalog} gettextCatalog service.\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc service\n * @ngname ngeoWMSTime\n */\nconst exports = function($filter, gettextCatalog) {\n\n  /**\n   * @private\n   * @type {angular.$filter}\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  ngeoMiscTime.call(this);\n};\n\nolBase.inherits(exports, ngeoMiscTime);\n\n\n/**\n * Format time regarding a resolution\n * @param  {number} time (in ms format) timestamp to format\n * @param  {(ngeox.TimePropertyResolutionEnum|undefined)} resolution resolution to use\n * @param  {boolean=} opt_useISOFormat True to a ISO-8601 date string that can be used\n *     as a WMS-T Parameter. Otherwise, use a localized date format.\n * @param  {boolean=} opt_toUTC to get the UTC date\n * @return {string} Date string regarding the resolution.\n */\nexports.prototype.formatTimeValue = function(time, resolution, opt_useISOFormat, opt_toUTC) {\n  const date = new Date(time);\n  const utc = opt_toUTC ? 'UTC' : undefined;\n\n  // ISO-8601 format to use date as a WMS-T Parameter.\n  let yearResolution = 'yyyy';\n  let monthResolution = 'yyyy-MM';\n  let dayResolution = 'yyyy-MM-dd';\n\n  // Localized format.\n  if (!opt_useISOFormat) {\n    const gettextCatalog = this.gettextCatalog_;\n    yearResolution = gettextCatalog.getString('yyyy');\n    monthResolution = gettextCatalog.getString('M/yyyy');\n    dayResolution = gettextCatalog.getString('M/d/yyyy');\n  }\n\n  switch (resolution) {\n    case 'year':\n      return this.$filter_('date')(date, yearResolution, utc);\n    case 'month':\n      return this.$filter_('date')(date, monthResolution, utc);\n    case 'day':\n      return this.$filter_('date')(date, dayResolution, utc);\n    default:\n      //case \"second\":\n      return date.toISOString().replace(/\\.\\d{3}/, '');\n  }\n};\n\n\n/**\n * Format time to be used as a WMS Time query parameter\n * @param  {ngeox.TimeProperty} wmsTimeProperty a wmstime property from a node\n * @param  {{start : number, end : (number|undefined)}} times start & end time selected (in ms format)\n * @param  {boolean=} opt_toUTC to get the UTC date\n * @return {string} ISO-8601 date string ready to be used as a query parameter for a\n * WMS request\n * @export\n */\nexports.prototype.formatWMSTimeParam = function(wmsTimeProperty, times, opt_toUTC) {\n  googAsserts.assert(wmsTimeProperty.resolution !== undefined);\n  if (wmsTimeProperty.mode === 'range') {\n    googAsserts.assert(times.end !== undefined);\n    return (\n      `${this.formatTimeValue(times.start, wmsTimeProperty.resolution, true, opt_toUTC)}/${\n        this.formatTimeValue(times.end, wmsTimeProperty.resolution, true, opt_toUTC)}`\n    );\n  } else {\n    return this.formatTimeValue(times.start, wmsTimeProperty.resolution, true, opt_toUTC);\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoWMSTime', [\n  ngeoMiscTime.module.name,\n]);\nexports.module.service('ngeoWMSTime', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.decorate\n */\nconst exports = {};\nimport googAsserts from 'goog/asserts.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImage from 'ol/source/Image.js';\nimport olSourceTile from 'ol/source/Tile.js';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.debounce\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDebounce', []);\n\n\n/**\n * Provides a debounce service. That service is a function\n * used to debounce calls to a user-provided function.\n *\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.miscDebounce} The debounce function.\n *\n * @ngdoc service\n * @ngname ngeoDebounce\n * @ngInject\n */\nexports.factory_ = function($timeout) {\n  return (\n    // FIXME: eslint can't detect that the function returns a function\n    /**\n     * @param {function(?)} func The function to debounce.\n     * @param {number} wait The wait time in ms.\n     * @param {boolean} invokeApply Whether the call to `func` is wrapped\n     *    into an `$apply` call.\n     * return {function()} The wrapper function.\n     */\n    function(func, wait, invokeApply) {\n      /**\n       * @type {?angular.$q.Promise}\n       */\n      let timeout = null;\n      return (\n        function(...args) {\n          const context = this;\n          const later = function() {\n            timeout = null;\n            func.apply(context, args);\n          };\n          if (timeout !== null) {\n            $timeout.cancel(timeout);\n          }\n          timeout = $timeout(later, wait, invokeApply);\n        });\n    });\n};\n\nexports.factory('ngeoDebounce', exports.factory_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.EventHelper\n */\nimport * as olEvents from 'ol/events.js';\n\n/**\n * Provides methods to manage the listening/unlistening of OpenLayers events\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoEventHelper\n * @ngInject\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<number|string, Array.<ol.EventsKey>>}\n   * @private\n   */\n  this.listenerKeys_ = {};\n\n};\n\n\n/**\n * Utility method to add a listener key bound to a unique id. The key has\n * to come from `ol.events`.\n * @param {number|string} uid Unique id.\n * @param {ol.EventsKey} key Key.\n * @export\n */\nexports.prototype.addListenerKey = function(uid, key) {\n  if (!this.listenerKeys_[uid]) {\n    this.initListenerKey_(uid);\n  }\n  this.listenerKeys_[uid].push(/** @type {ol.EventsKey} */ (key));\n};\n\n\n/**\n * Clear all listener keys from the given unique id.\n * @param {number|string} uid Unique id.\n * @export\n */\nexports.prototype.clearListenerKey = function(uid) {\n  this.initListenerKey_(uid);\n};\n\n\n/**\n * Utility method that does 2 things:\n * - initialize the listener keys of a given uid with an array (if that key\n *   has not array set yet)\n * - unlisten any events if the array already exists for the given uid and\n *   empty the array.\n * @param {number|string} uid Unique id.\n * @private\n */\nexports.prototype.initListenerKey_ = function(uid) {\n  if (!this.listenerKeys_[uid]) {\n    this.listenerKeys_[uid] = [];\n  } else {\n    if (this.listenerKeys_[uid].length) {\n      this.listenerKeys_[uid].forEach(olEvents.unlistenByKey);\n      this.listenerKeys_[uid].length = 0;\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoEventHelper', []);\nexports.module.service('ngeoEventHelper', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.SyncLayertreeMap\n */\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * Service to create layer based on a ngeo.layertree.Controller with a\n * GMFThemesGroup or a GMFThemesLeaf as node object.\n * This layer is also used to synchronise a state of ngeo.layertree.Controller\n * and its corresponding layer in the map.\n *\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSyncLayertreeMap\n */\nconst exports = function($rootScope, ngeoLayerHelper, ngeoWMSTime,\n  gmfThemes) {\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.misc.WMSTime}\n   * @private\n   */\n  this.ngeoWMSTime_ = ngeoWMSTime;\n\n  /**\n   * @type {gmfThemes.GmfOgcServers}\n   * @private\n   */\n  this.ogcServersObject_;\n\n  gmfThemes.getOgcServersObject().then((ogcServersObject) => {\n    this.ogcServersObject_ = ogcServersObject;\n  });\n\n  $rootScope.$on('ngeo-layertree-state', (map, treeCtrl, firstParent) => {\n    this.sync_(/** @type ol.Map */ (map), firstParent);\n  });\n};\n\n\n/**\n * Create, insert (or update) and return a layer from the GmfGroup or the\n * GmfLayer of the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the not first\n *     level group layer.\n * @param {ol.layer.Group} dataLayerGroup the layer group to insert the first\n *     level group layer.\n * @param {number=} opt_position for first level Group, you can precise the\n *     position to add the group in the array of layers of the dataLayerGroup.\n * @return {ol.layer.Base|ol.layer.Group} a new layer.\n * @public\n */\nexports.prototype.createLayer = function(treeCtrl, map, dataLayerGroup, opt_position) {\n  /**\n   * @type {ol.layer.Base|ol.layer.Group}\n   */\n  let layer = null;\n  if (treeCtrl.node.children !== undefined && treeCtrl.node.mixed) {\n    // Mixed groups\n    layer = this.createGroup_(treeCtrl, map, dataLayerGroup, opt_position);\n  } else if (treeCtrl.node.children === undefined && treeCtrl.parent.node.mixed) {\n    // Layers in a mixed group\n    layer = this.createLeafInAMixedGroup_(treeCtrl, map);\n  } else if (treeCtrl.node.children === undefined) {\n    // Layers in a non mixed group\n    this.initGmfLayerInANotMixedGroup_(treeCtrl, map);\n  } else if (treeCtrl.depth === 1 && !treeCtrl.node.mixed) {\n    // First level group non mix\n    layer = this.createGroup_(treeCtrl, map, dataLayerGroup, opt_position);\n  }\n\n  if (layer && treeCtrl.node.metadata.opacity) {\n    layer.setOpacity(treeCtrl.node.metadata.opacity);\n  }\n\n  return layer;\n};\n\n\n/**\n * Synchronise the state of each layers corresponding to the given tree and\n * all its children.\n * @param {ol.Map} map A map that contains the layers.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @private\n */\nexports.prototype.sync_ = function(map, treeCtrl) {\n  treeCtrl.traverseDepthFirst((treeCtrl) => {\n    if (treeCtrl.layer && !treeCtrl.node.mixed) {\n      this.updateLayerState_(/** @type ol.layer.Image|ol.layer.Tile */ (treeCtrl.layer), treeCtrl);\n    }\n  });\n};\n\n\n/**\n * Set the active state of a layer based on its treeCtrl state.\n * @param {ol.layer.Tile|ol.layer.Image} layer A layer.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @private\n */\nexports.prototype.updateLayerState_ = function(layer, treeCtrl) {\n  const active = treeCtrl.getState() === 'on';\n  if (treeCtrl.node.type === 'WMTS') {\n    layer.setVisible(active);\n  } else if (!treeCtrl.node.mixed && treeCtrl.depth === 1) {\n    // First level non mixed group\n    googAsserts.assertInstanceof(layer, olLayerImage);\n    const names = [];\n    treeCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.children === undefined && treeCtrl.getState() === 'on') {\n        names.push(treeCtrl.node.layers);\n      }\n    });\n    if (names.length === 0) {\n      layer.setVisible(false);\n    }\n    /** @type {ol.source.ImageWMS} */ (layer.getSource()).updateParams({\n      'LAYERS': names.reverse().join(',')\n    });\n    if (names.length !== 0) {\n      layer.setVisible(true);\n    }\n  } else {\n    // WMS mixed layer\n    googAsserts.assertInstanceof(layer, olLayerImage);\n    layer.setVisible(active);\n  }\n};\n\n\n/**\n * Create insert and return a layer group (for not mixed case) or a wmsLayer (for\n * mixed case). Take care about the insertion order in the map in case of first\n * level group.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the not first\n *     level group layer.\n * @param {ol.layer.Group} dataLayerGroup the layer group to insert the first\n *     level group layer.\n * @param {number=} opt_position for first level Group, you can precise the\n *     position to add the group in the array of layers of the dataLayerGroup.\n * @return {ol.layer.Image|ol.layer.Group} a new layer.\n * @private\n */\nexports.prototype.createGroup_ = function(treeCtrl, map,\n  dataLayerGroup, opt_position) {\n  const groupNode = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.node);\n  let layer = null;\n  const isFirstLevelGroup = treeCtrl.parent.isRoot;\n\n  let printNativeAngle = true;\n  if (groupNode.metadata.printNativeAngle !== undefined) {\n    printNativeAngle = groupNode.metadata.printNativeAngle;\n  }\n\n  if (isFirstLevelGroup) { // First level group\n    layer = this.createLayerFromGroup_(treeCtrl, !!groupNode.mixed);\n    // Insert the layer at the right place\n    const position = opt_position | 0;\n    dataLayerGroup.getLayers().insertAt(position, layer);\n\n  } else { // Other Groups, create a group layer only in mixed groups\n    const inAMixedGroup = !this.isOneParentNotMixed_(treeCtrl);\n    if (inAMixedGroup) {\n      layer = this.createLayerFromGroup_(treeCtrl, true);\n      const layerGroup = /** @type {ol.layer.Group} */ (\n        exports.getLayer(treeCtrl.parent));\n      layerGroup.getLayers().insertAt(0, layer);\n    }\n  }\n\n  layer.set('printNativeAngle', printNativeAngle);\n  return layer;\n};\n\n\n/**\n * Create, insert and return a layer group (for not mixed case) or a wmsLayer\n * for mixed case).\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {boolean} mixed True for a group layer, false for a WMS layer.\n * @return {ol.layer.Image|ol.layer.Group} a new layer.\n * @private\n */\nexports.prototype.createLayerFromGroup_ = function(treeCtrl,\n  mixed) {\n  let layer;\n  const groupNode = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.node);\n  if (mixed) { // Will be one ol.layer per each node.\n    layer = this.layerHelper_.createBasicGroup();\n  } else { // Will be one ol.layer for multiple WMS nodes.\n    const timeParam = this.getTimeParam_(treeCtrl);\n    const ogcServer = this.ogcServersObject_[groupNode.ogcServer || ''];\n    googAsserts.assert(ogcServer);\n    googAsserts.assert(ogcServer.url);\n    googAsserts.assert(ogcServer.type);\n    googAsserts.assert(ogcServer.imageType);\n    layer = this.layerHelper_.createBasicWMSLayer(\n      ogcServer.url,\n      '',\n      ogcServer.imageType,\n      ogcServer.type,\n      timeParam,\n      undefined, // WMS parameters\n      ogcServer.credential ? 'use-credentials' : 'anonymous'\n    );\n    let hasActiveChildren = false;\n    treeCtrl.traverseDepthFirst((ctrl) => {\n      // Update layer information and tree state.\n      this.updateLayerReferences_(/** @type gmfThemes.GmfLayer */ (ctrl.node), layer);\n      if (ctrl.node.metadata.isChecked) {\n        ctrl.setState('on', false);\n        this.updateLayerState_(/** @type {ol.layer.Image} */ (layer), ctrl);\n        hasActiveChildren = true;\n      }\n    });\n    layer.setVisible(hasActiveChildren);\n    layer.set('layerNodeName', groupNode.name); //Really useful ?\n  }\n  return layer;\n};\n\n\n/**\n * Create and insert a layer from a leaf in a mixed group.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the layer.\n * @return {ol.layer.Tile|ol.layer.Image} a new layer.\n * @private\n */\nexports.prototype.createLeafInAMixedGroup_ = function(treeCtrl, map) {\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  let layer;\n  // Make layer.\n  if (gmfLayer.type === 'WMTS') {\n    layer = this.createWMTSLayer_(/** @type gmfThemes.GmfLayerWMTS */ (gmfLayer));\n  } else {\n    const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n    const timeParam = this.getTimeParam_(treeCtrl);\n    const ogcServer = this.ogcServersObject_[/** @type string */ (gmfLayerWMS.ogcServer)];\n    googAsserts.assert(ogcServer);\n    googAsserts.assert(ogcServer.url);\n    googAsserts.assert(ogcServer.type);\n    googAsserts.assert(gmfLayerWMS.layers);\n    googAsserts.assert(ogcServer.imageType);\n    layer = this.layerHelper_.createBasicWMSLayer(\n      ogcServer.url,\n      gmfLayerWMS.layers,\n      ogcServer.imageType,\n      ogcServer.type,\n      timeParam,\n      undefined, // WMS parameters\n      ogcServer.credential ? 'use-credentials' : 'anonymous'\n    );\n  }\n  // Update layer information and tree state.\n  layer.set('layerNodeName', gmfLayer.name); // Really useful ?\n  this.updateLayerReferences_(gmfLayer, layer);\n  const checked = gmfLayer.metadata.isChecked === true;\n  if (checked) {\n    treeCtrl.setState('on', false);\n  }\n  layer.setVisible(checked);\n  // Insert layer in the map.\n  const layerGroup = /** @type {ol.layer.Group} */ (\n    exports.getLayer(treeCtrl.parent));\n  layerGroup.getLayers().insertAt(0, layer);\n  return layer;\n};\n\n\n/**\n * Update a WMS layer with the given treeCtrl node information. Assumes that\n * the first parent with ogcServer information is linked to the layer to update\n * and that this treeCtrl node is a leafNode.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the layer to update.\n * @private\n */\nexports.prototype.initGmfLayerInANotMixedGroup_ = function(treeCtrl, map) {\n  const leafNode = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const firstLevelGroup = this.getFirstLevelGroupCtrl_(treeCtrl);\n  googAsserts.assert(firstLevelGroup);\n  const layer = /** @type {ol.layer.Image} */ (firstLevelGroup.layer);\n  googAsserts.assertInstanceof(layer, olLayerImage);\n  // Update layer information and tree state.\n  this.updateLayerReferences_(leafNode, layer);\n  if (leafNode.metadata.isChecked) {\n    treeCtrl.setState('on', false);\n    this.updateLayerState_(layer, firstLevelGroup);\n  } else {\n    treeCtrl.parent.refreshState();\n  }\n};\n\n\n/**\n * Create and return a Tile layer.\n * @param {gmfThemes.GmfLayerWMTS} gmfLayerWMTS A leaf node.\n * @return {ol.layer.Tile} a Tile WMTS layer. (Source and capabilities can come\n *     later).\n * @private\n */\nexports.prototype.createWMTSLayer_ = function(gmfLayerWMTS) {\n  const newLayer = new olLayerTile();\n  googAsserts.assert(gmfLayerWMTS.url);\n  googAsserts.assert(gmfLayerWMTS.layer);\n  this.layerHelper_.createWMTSLayerFromCapabilitites(gmfLayerWMTS.url,\n    gmfLayerWMTS.layer, gmfLayerWMTS.matrixSet, gmfLayerWMTS.dimensions).then((layer) => {\n    newLayer.setSource(layer.getSource());\n    newLayer.set('capabilitiesStyles', layer.get('capabilitiesStyles'));\n  });\n  return newLayer;\n};\n\n\n/**\n * Update properties of a layer with the node of a given leafNode.\n * @param {gmfThemes.GmfLayer} leafNode a leaf node.\n * @param {ol.layer.Base} layer A layer.\n * @private\n */\nexports.prototype.updateLayerReferences_ = function(leafNode, layer) {\n  const id = olBase.getUid(leafNode);\n  const querySourceIds = layer.get('querySourceIds') || [];\n  querySourceIds.push(id);\n  layer.set('querySourceIds', querySourceIds);\n\n  const disclaimer = leafNode.metadata.disclaimer;\n  if (disclaimer) {\n    const disclaimers = layer.get('disclaimers') || [];\n    disclaimers.push(leafNode.metadata.disclaimer);\n    layer.set('disclaimers', disclaimers);\n  }\n};\n\n\n/**\n * Get the time parameter for a WMS Layer. If it's a group and it doesn't have\n * time, get the first time parameter available in any child.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {string|undefined} A wms time param.\n * @private\n */\nexports.prototype.getTimeParam_ = function(treeCtrl) {\n  let wmsTime;\n  let timeParam;\n  const node = treeCtrl.node;\n  if (node.time) {\n    wmsTime = node.time;\n  } else if (node.children) {\n    treeCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.children === undefined && treeCtrl.node.time) {\n        wmsTime = treeCtrl.node.time;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  if (wmsTime) {\n    const timeValues = this.ngeoWMSTime_.getOptions(wmsTime)['values'];\n    timeParam = this.ngeoWMSTime_.formatWMSTimeParam(wmsTime, {\n      start: timeValues[0] || timeValues,\n      end: timeValues[1]\n    });\n  }\n  return timeParam;\n};\n\n\n/**\n * Return true if a parent tree is mixed, based on its node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {boolean} True is any parent is mixed. False Otherwise.\n * @private\n */\nexports.prototype.isOneParentNotMixed_ = function(treeCtrl) {\n  let tree = treeCtrl.parent;\n  let isOneParentNotMix = false;\n  do {\n    isOneParentNotMix = tree.node.mixed === false;\n    tree = tree.parent;\n  }\n  while (tree.parent && !isOneParentNotMix);\n  return isOneParentNotMix;\n};\n\n\n/**\n * Return the first parent, from the root parent, that is not mixed.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} The first not mixed parent.\n * @private\n */\nexports.prototype.getFirstLevelGroupCtrl_ = function(\n  treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * Return the layer used by the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ol.layer.Base} The layer.\n * @public\n */\nexports.getLayer = function(treeCtrl) {\n  let tree = treeCtrl;\n  let layer = null;\n  while (!tree.isRoot && layer === null) {\n    if (tree.layer) {\n      layer = tree.layer;\n    }\n    tree = tree.parent;\n  }\n  return layer;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSyncLayertreeMap', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('gmfSyncLayertreeMap', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.Condition\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  AND: '&&',\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT: '!',\n  /**\n   * @type {string}\n   * @export\n   */\n  OR: '||'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Date\n */\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A date rule.\n   *\n   * @struct\n   * @param {!ngeox.rule.DateOptions} options Options.\n   */\n  constructor(options) {\n\n    options.type = options.type || ngeoFormatAttributeType.DATE;\n\n    super(options);\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Text\n */\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A text rule, which always compares the value with the LIKE operator, by\n   * default.\n   *\n   * @struct\n   * @param {!ngeox.rule.TextOptions} options Options.\n   */\n  constructor(options) {\n\n    options.operator = options.operator || ngeoRuleRule.OperatorType.LIKE;\n    options.type = ngeoFormatAttributeType.TEXT;\n\n    super(options);\n\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.RuleHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport ngeoRuleDate from 'ngeo/rule/Date.js';\nimport ngeoRuleGeometry from 'ngeo/rule/Geometry.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\nimport ngeoRuleSelect from 'ngeo/rule/Select.js';\nimport ngeoRuleText from 'ngeo/rule/Text.js';\nimport {writeFilter} from 'ol/format/WFS.js';\nimport * as olFormatFilter from 'ol/format/filter.js';\nimport * as olArray from 'ol/array.js';\n\nimport moment from 'moment';\n\n\nconst exports = class {\n\n  /**\n   * A service that provides utility methods to create `ngeo.rule.Rule`\n   * objects.\n   *\n   * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n   * @param {!ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n   * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoRuleHelper\n   * @ngInject\n   */\n  constructor(gettextCatalog, ngeoFeatureHelper, ngeoWMSTime) {\n\n    /**\n     * @type {!angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {!ngeo.misc.FeatureHelper}\n     * @private\n     */\n    this.ngeoFeatureHelper_ = ngeoFeatureHelper;\n\n    /**\n     * @type {!ngeo.misc.WMSTime}\n     * @private\n     */\n    this.ngeoWMSTime_ = ngeoWMSTime;\n  }\n\n  /**\n   * @param {!Array.<!ngeox.Attribute>} attributes Attributes.\n   * @param {boolean=} opt_isCustom Whether the created rules should be marked\n   *     as custom or not. Defaults to `false`.\n   * @return {Array.<!ngeo.rule.Rule>} Rules.\n   * @export\n   */\n  createRulesFromAttributes(attributes, opt_isCustom) {\n    const rules = [];\n    for (const attribute of attributes) {\n      rules.push(this.createRuleFromAttribute(attribute, opt_isCustom));\n    }\n    return rules;\n  }\n\n  /**\n   * @param {!ngeox.Attribute} attribute Attribute.\n   * @param {boolean=} opt_isCustom Whether the created rule should be marked\n   *     as custom or not. Defaults to `false`.\n   * @return {!ngeo.rule.Rule} Rule.\n   * @export\n   */\n  createRuleFromAttribute(attribute, opt_isCustom) {\n\n    let rule;\n    const isCustom = opt_isCustom === true;\n\n    /**\n     * @type {string}\n     */\n    const name = this.gettextCatalog_.getString(attribute.name);\n\n    // Todo: support geometry\n\n    switch (attribute.type) {\n      case ngeoFormatAttributeType.DATE:\n      case ngeoFormatAttributeType.DATETIME:\n        if (isCustom) {\n          rule = new ngeoRuleDate({\n            name: name,\n            operator: ngeoRuleRule.TemporalOperatorType.EQUALS,\n            operators: [\n              ngeoRuleRule.TemporalOperatorType.EQUALS,\n              ngeoRuleRule.TemporalOperatorType.BEGINS,\n              ngeoRuleRule.TemporalOperatorType.ENDS\n            ],\n            propertyName: attribute.name,\n            type: attribute.type\n          });\n        } else {\n          rule = new ngeoRuleDate({\n            name: name,\n            operator: ngeoRuleRule.TemporalOperatorType.DURING,\n            propertyName: attribute.name,\n            type: attribute.type\n          });\n        }\n        break;\n      case ngeoFormatAttributeType.GEOMETRY:\n        rule = new ngeoRuleGeometry({\n          name: name,\n          operator: ngeoRuleRule.SpatialOperatorType.WITHIN,\n          operators: [\n            ngeoRuleRule.SpatialOperatorType.CONTAINS,\n            ngeoRuleRule.SpatialOperatorType.INTERSECTS,\n            ngeoRuleRule.SpatialOperatorType.WITHIN\n          ],\n          propertyName: attribute.name,\n          type: attribute.type\n        });\n        break;\n      case ngeoFormatAttributeType.NUMBER:\n        if (isCustom) {\n          rule = new ngeoRuleRule({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.EQUAL_TO,\n            operators: [\n              ngeoRuleRule.OperatorType.EQUAL_TO,\n              ngeoRuleRule.OperatorType.GREATER_THAN,\n              ngeoRuleRule.OperatorType.GREATER_THAN_OR_EQUAL_TO,\n              ngeoRuleRule.OperatorType.LESSER_THAN,\n              ngeoRuleRule.OperatorType.LESSER_THAN_OR_EQUAL_TO,\n              ngeoRuleRule.OperatorType.NOT_EQUAL_TO\n            ],\n            propertyName: attribute.name,\n            type: ngeoFormatAttributeType.NUMBER\n          });\n        } else {\n          rule = new ngeoRuleRule({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.BETWEEN,\n            propertyName: attribute.name,\n            type: ngeoFormatAttributeType.NUMBER\n          });\n        }\n        break;\n      case ngeoFormatAttributeType.SELECT:\n        rule = new ngeoRuleSelect({\n          choices: googAsserts.assert(attribute.choices),\n          name: name,\n          propertyName: attribute.name\n        });\n        break;\n      default:\n        if (isCustom) {\n          rule = new ngeoRuleText({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.LIKE,\n            operators: [\n              ngeoRuleRule.OperatorType.LIKE,\n              ngeoRuleRule.OperatorType.EQUAL_TO,\n              ngeoRuleRule.OperatorType.NOT_EQUAL_TO\n            ],\n            propertyName: attribute.name\n          });\n        } else {\n          rule = new ngeoRuleText({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.LIKE,\n            propertyName: attribute.name\n          });\n        }\n        break;\n    }\n\n    return rule;\n  }\n\n  /**\n   * @param {!Array.<!ngeox.rule.RuleOptions|!ngeox.rule.SelectOptions>} optionsList List of options\n   * @return {Array.<!ngeo.rule.Rule>} Rules.\n   * @export\n   */\n  createRules(optionsList) {\n    const rules = [];\n    for (const options of optionsList) {\n      rules.push(this.createRule(options));\n    }\n    return rules;\n  }\n\n  /**\n   * @param {!ngeox.rule.RuleOptions|!ngeox.rule.SelectOptions} options Options\n   * @return {!ngeo.rule.Rule} Rule.\n   * @export\n   */\n  createRule(options) {\n    let rule;\n    switch (options.type) {\n      case ngeoFormatAttributeType.DATE:\n      case ngeoFormatAttributeType.DATETIME:\n        rule = new ngeoRuleDate(options);\n        break;\n      case ngeoFormatAttributeType.GEOMETRY:\n        rule = new ngeoRuleGeometry(options);\n        break;\n      case ngeoFormatAttributeType.SELECT:\n        const selectOptions = /** @type {!ngeox.rule.SelectOptions} */ (\n          options);\n        googAsserts.assert(selectOptions.choices);\n        rule = new ngeoRuleSelect(selectOptions);\n        break;\n      default:\n        rule = new ngeoRuleText(options);\n        break;\n    }\n    return rule;\n  }\n\n  /**\n   * Create a new `ngeo.rule.Rule` object using an other given rule.\n   *\n   * @param {!ngeo.rule.Rule} rule Original rule to clone.\n   * @return {!ngeo.rule.Rule} A clone rule.\n   * @export\n   */\n  cloneRule(rule) {\n\n    let clone;\n\n    let expression = rule.getExpression();\n    if (expression === null) {\n      expression = undefined;\n    }\n    const isCustom = rule.isCustom;\n    const lowerBoundary = rule.lowerBoundary !== null ? rule.lowerBoundary :\n      undefined;\n    const name = rule.name;\n    const operator = rule.operator !== null ? rule.operator : undefined;\n    const operators = rule.operators ? rule.operators.slice(0) : undefined;\n    const propertyName = rule.propertyName;\n    const type = rule.type !== null ? rule.type : undefined;\n    const upperBoundary = rule.upperBoundary !== null ? rule.upperBoundary :\n      undefined;\n\n    const options = {\n      expression,\n      isCustom,\n      lowerBoundary,\n      name,\n      operator,\n      operators,\n      propertyName,\n      type,\n      upperBoundary\n    };\n\n    if (rule instanceof ngeoRuleDate) {\n      clone = new ngeoRuleDate(options);\n    } else if (rule instanceof ngeoRuleGeometry) {\n      clone = new ngeoRuleGeometry(options);\n      clone.feature.setProperties(\n        this.ngeoFeatureHelper_.getNonSpatialProperties(rule.feature)\n      );\n    } else if (rule instanceof ngeoRuleSelect) {\n      options.choices = rule.choices.slice(0);\n      clone = new ngeoRuleSelect(options);\n    } else if (rule instanceof ngeoRuleText) {\n      clone = new ngeoRuleText(options);\n    } else {\n      clone = new ngeoRuleRule(options);\n    }\n\n    return clone;\n  }\n\n  /**\n   * Extend the dynamic properties from a source rule to destination rule.\n   * The source rule remains unchanged, while the destination rule changes.\n   *\n   * @param {!ngeo.rule.Rule} sourceRule Source rule to collect the dynamic\n   *     properties from.\n   * @param {!ngeo.rule.Rule} destRule Destination rule where the dynamic\n   *     properties are set.\n   * @export\n   */\n  extendRule(sourceRule, destRule) {\n\n    if (destRule.getExpression() !== sourceRule.getExpression()) {\n      destRule.setExpression(sourceRule.getExpression());\n    }\n\n    if (destRule.lowerBoundary !== sourceRule.lowerBoundary) {\n      destRule.lowerBoundary = sourceRule.lowerBoundary;\n    }\n\n    if (destRule.operator !== sourceRule.operator) {\n      destRule.operator = sourceRule.operator;\n    }\n\n    if (destRule.upperBoundary !== sourceRule.upperBoundary) {\n      destRule.upperBoundary = sourceRule.upperBoundary;\n    }\n\n    if (sourceRule instanceof ngeoRuleGeometry &&\n       destRule instanceof ngeoRuleGeometry\n    ) {\n      this.ngeoFeatureHelper_.clearNonSpatialProperties(destRule.feature);\n      destRule.feature.setProperties(\n        this.ngeoFeatureHelper_.getNonSpatialProperties(sourceRule.feature)\n      );\n    }\n  }\n\n  /**\n   * @param {!Array.<!ngeo.rule.Rule>} rules Rules\n   * @return {!Array.<!ngeox.rule.AnyOptions>} List of serialized rule options.\n   * @export\n   */\n  serializeRules(rules) {\n    return rules.map((rule) => {\n      const serializedRule = this.serializeRule(rule);\n      return serializedRule;\n    });\n  }\n\n  /**\n   * Selialize a rule into options to re-create it later.\n   * @param {!ngeo.rule.Rule} rule Rule to serialize.\n   * @return {!ngeox.rule.AnyOptions} Serialized rule options.\n   * @export\n   */\n  serializeRule(rule) {\n    const obj = {\n      name: rule.name,\n      propertyName: rule.propertyName,\n      type: rule.type\n    };\n\n    if (rule.expression !== null) {\n      obj.expression = rule.expression;\n    }\n\n    if (rule.lowerBoundary !== null) {\n      obj.lowerBoundary = rule.lowerBoundary;\n    }\n\n    if (rule.operator !== null) {\n      obj.operator = rule.operator;\n    }\n\n    if (rule.operators !== null) {\n      obj.operators = rule.operators.slice(0);\n    }\n\n    if (rule.upperBoundary !== null) {\n      obj.upperBoundary = rule.upperBoundary;\n    }\n\n    if (rule instanceof ngeoRuleGeometry) {\n      obj.featureProperties = this.ngeoFeatureHelper_.getNonSpatialProperties(\n        rule.feature);\n    }\n\n    if (rule instanceof ngeoRuleSelect) {\n      obj.choices = rule.choices;\n    }\n\n    return obj;\n  }\n\n  /**\n   * Create a `ol.format.filter.Filter` object for a given data source.\n   * See the `ngeox.CreateFilterOptions` to learn more.\n   *\n   * @param {ngeox.CreateFilterOptions} options Options.\n   * @return {?ol.format.filter.Filter} Filter.\n   * @export\n   */\n  createFilter(options) {\n\n    const dataSource = /** @type {ngeo.datasource.OGC} */ (options.dataSource);\n    let mainFilter = null;\n\n    if (options.filter) {\n      mainFilter = options.filter;\n    } else {\n      const rules = options.filterRules || dataSource.filterRules;\n      const conditions = [];\n\n      if (rules && rules.length) {\n        for (const rule of rules) {\n          const filter = this.createFilterFromRule_(\n            rule,\n            dataSource,\n            options.srsName\n          );\n          if (filter) {\n            conditions.push(filter);\n          }\n        }\n      }\n\n      const condition = dataSource.filterCondition;\n      if (conditions.length === 1) {\n        mainFilter = conditions[0];\n      } else if (conditions.length >= 2) {\n        if (condition === ngeoFilterCondition.AND) {\n          mainFilter = olFormatFilter.and.apply(null, conditions);\n        } else if (condition === ngeoFilterCondition.OR ||\n                   condition === ngeoFilterCondition.NOT\n        ) {\n          mainFilter = olFormatFilter.or.apply(null, conditions);\n        }\n      }\n      if (mainFilter && condition === ngeoFilterCondition.NOT) {\n        mainFilter = olFormatFilter.not(mainFilter);\n      }\n    }\n\n    if (options.incTime) {\n      const timeFilter = this.createTimeFilterFromDataSource_(dataSource);\n      if (timeFilter) {\n        if (mainFilter) {\n          mainFilter = olFormatFilter.and.apply(\n            null,\n            [\n              mainFilter,\n              timeFilter\n            ]\n          );\n        } else {\n          mainFilter = timeFilter;\n        }\n      }\n    }\n\n    return mainFilter;\n  }\n\n  /**\n   * @param {ngeox.CreateFilterOptions} options Options.\n   * @return {?string} Filter string.\n   * @export\n   */\n  createFilterString(options) {\n    let filterString = null;\n    const filter = this.createFilter(options);\n    if (filter) {\n      const filterNode = writeFilter(filter);\n      const xmlSerializer = new XMLSerializer();\n      filterString = xmlSerializer.serializeToString(filterNode);\n    }\n    return filterString;\n  }\n\n  /**\n   * @param {ngeo.rule.Rule} rule Rule.\n   * @param {ngeo.datasource.OGC} dataSource Data source.\n   * @param {string=} opt_srsName SRS name. No srsName attribute will be\n   *     set on geometries when this is not provided.\n   * @return {?ol.format.filter.Filter} filter Filter;\n   * @private\n   */\n  createFilterFromRule_(rule, dataSource, opt_srsName) {\n\n    let filter = null;\n\n    const value = rule.value;\n    if (!value) {\n      return null;\n    }\n\n    const expression = value.expression;\n    const lowerBoundary = value.lowerBoundary;\n    const operator = value.operator;\n    const propertyName = value.propertyName;\n    const upperBoundary = value.upperBoundary;\n\n    const rot =  ngeoRuleRule.OperatorType;\n    const rsot = ngeoRuleRule.SpatialOperatorType;\n    const rtot = ngeoRuleRule.TemporalOperatorType;\n\n    const spatialTypes = [\n      rsot.CONTAINS,\n      rsot.INTERSECTS,\n      rsot.WITHIN\n    ];\n\n    const numericTypes = [\n      rot.GREATER_THAN,\n      rot.GREATER_THAN_OR_EQUAL_TO,\n      rot.LESSER_THAN,\n      rot.LESSER_THAN_OR_EQUAL_TO\n    ];\n\n    if (rule instanceof ngeoRuleDate) {\n      let beginValue;\n      let endValue;\n\n      if (operator === rtot.DURING) {\n        beginValue = moment(lowerBoundary).format('YYYY-MM-DD');\n        endValue = moment(upperBoundary).format('YYYY-MM-DD');\n      } else if (operator === rtot.EQUALS) {\n        beginValue = moment(\n          expression\n        ).format(\n          'YYYY-MM-DD HH:mm:ss'\n        );\n        endValue = moment(\n          expression\n        ).add(\n          1, 'days'\n        ).subtract(\n          1, 'seconds'\n        ).format(\n          'YYYY-MM-DD HH:mm:ss'\n        );\n      } else if (operator === rtot.BEGINS) {\n        beginValue = moment(\n          expression\n        ).format(\n          'YYYY-MM-DD'\n        );\n        // NOTE: end value is CURRENT + 30 years\n        endValue = moment(\n          expression\n        ).add(\n          30, 'years'\n        ).format(\n          'YYYY-MM-DD'\n        );\n      } else if (operator === rtot.ENDS) {\n        // NOTE: begin value is hardcoded to 1970-01-01\n        beginValue = '1970-01-01';\n        endValue = moment(\n          expression\n        ).format(\n          'YYYY-MM-DD'\n        );\n      }\n      if (beginValue && endValue) {\n        filter = olFormatFilter.during(\n          propertyName,\n          beginValue,\n          endValue\n        );\n      }\n    } else if (rule instanceof ngeoRuleSelect) {\n      const selectedChoices = rule.selectedChoices;\n      if (selectedChoices.length === 1) {\n        filter = olFormatFilter.equalTo(\n          propertyName,\n          selectedChoices[0]\n        );\n      } else if (selectedChoices.length >= 2) {\n        const conditions = [];\n        for (const selectedChoice of selectedChoices) {\n          conditions.push(\n            olFormatFilter.equalTo(\n              propertyName,\n              selectedChoice\n            )\n          );\n        }\n        filter = olFormatFilter.or.apply(null, conditions);\n      }\n    } else if (olArray.includes(spatialTypes, operator)) {\n      const geometryName = dataSource.geometryName;\n      googAsserts.assertInstanceof(rule, ngeoRuleGeometry);\n      const geometry = googAsserts.assert(rule.geometry);\n      if (operator === rsot.CONTAINS) {\n        filter = olFormatFilter.contains(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      } else if (operator === rsot.INTERSECTS) {\n        filter = olFormatFilter.intersects(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      } else if (operator === rsot.WITHIN) {\n        filter = olFormatFilter.within(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      }\n    } else if (olArray.includes(numericTypes, operator)) {\n      const numericExpression = googAsserts.assertNumber(expression);\n      if (operator === rot.GREATER_THAN) {\n        filter = olFormatFilter.greaterThan(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.GREATER_THAN_OR_EQUAL_TO) {\n        filter = olFormatFilter.greaterThanOrEqualTo(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.LESSER_THAN) {\n        filter = olFormatFilter.lessThan(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.LESSER_THAN_OR_EQUAL_TO) {\n        filter = olFormatFilter.lessThanOrEqualTo(\n          propertyName,\n          numericExpression\n        );\n      }\n    } else if (operator === rot.BETWEEN) {\n      filter = olFormatFilter.between(\n        propertyName,\n        lowerBoundary,\n        upperBoundary\n      );\n    } else if (operator === rot.EQUAL_TO) {\n      filter = olFormatFilter.equalTo(\n        propertyName,\n        expression\n      );\n    } else if (operator === rot.LIKE) {\n      const stringExpression = String(expression)\n        .replace(/!/g, '!!')\n        .replace(/\\./g, '!.')\n        .replace(/\\*/g, '!*');\n      filter = olFormatFilter.like(\n        propertyName,\n        `*${stringExpression}*`,\n        '*', /* wildCard */\n        '.', /* singleChar */\n        '!', /* escapeChar */\n        false /* matchCase */\n      );\n    } else if (operator === rot.NOT_EQUAL_TO) {\n      filter = olFormatFilter.notEqualTo(\n        propertyName,\n        expression\n      );\n    }\n\n    return filter;\n  }\n\n  /**\n   * Create and return an OpenLayers filter object using the available\n   * time properties within the data source.\n   * @param {ngeo.datasource.OGC} dataSource Data source from which to\n   *     create the filter.\n   * @return {?ol.format.filter.Filter} Filter\n   * @private\n   */\n  createTimeFilterFromDataSource_(dataSource) {\n    let filter = null;\n    const range = dataSource.timeRangeValue;\n    const timeProperty = dataSource.timeProperty;\n    const name = dataSource.timeAttributeName;\n\n    if (range && timeProperty && name) {\n\n      if (range.end !== undefined) {\n        // Case 1: the range has both 'start' and 'end' values.  Use them to\n        //         create a During filter.\n\n        const values = this.ngeoWMSTime_.formatWMSTimeParam(\n          timeProperty,\n          range\n        ).split('/');\n\n        filter = olFormatFilter.during(name, values[0], values[1]);\n      } else {\n\n        // Case 2: we only have a 'start' value. We need to calculate the 'end'\n        //         using the resolution of the time property.\n\n        const resolution = timeProperty.resolution || 'seconds';\n        const value = this.ngeoWMSTime_.formatWMSTimeParam(\n          timeProperty,\n          range\n        );\n        let momentEnd;\n\n        switch (resolution) {\n          case 'year':\n            momentEnd = moment(value).add(1, 'years').subtract(1, 'seconds');\n            break;\n          case 'month':\n            momentEnd = moment(value).add(1, 'months').subtract(1, 'seconds');\n            break;\n          case 'day':\n            momentEnd = moment(value).add(1, 'days').subtract(1, 'seconds');\n            break;\n          default:\n            //case \"second\":\n            // This would require a TContains filter, which neither OpenLayers\n            // and MapServer support. Skip...\n        }\n\n        if (momentEnd) {\n          const startValue = moment(value).format('YYYY-MM-DD HH:mm:ss');\n          const endValue = momentEnd.format('YYYY-MM-DD HH:mm:ss');\n          filter = olFormatFilter.during(name, startValue, endValue);\n        }\n      }\n    }\n\n    return filter;\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoRuleHelper', [\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('ngeoRuleHelper', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.File\n */\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport olCollection from 'ol/Collection.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source that contains vector features that were loaded from a file.\n   *\n   * @struct\n   * @param {ngeox.datasource.FileOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {!ol.Collection.<!ol.Feature>}\n     * @private\n     */\n    this.featuresCollection_ = options.features || new olCollection();\n\n    /**\n     * @type {!ol.source.Vector}\n     * @private\n     */\n    this.source_ = new olSourceVector({\n      features: this.featuresCollection_,\n      wrapX: false\n    });\n\n    /**\n     * @type {!ol.layer.Vector}\n     * @private\n     */\n    this.layer_ = new olLayerVector({\n      source: this.source_\n    });\n  }\n\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ol.Feature>} Features\n   * @export\n   */\n  get features() {\n    return this.featuresCollection_.getArray();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {!ol.Collection.<!ol.Feature>} Features collection\n   * @export\n   */\n  get featuresCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * @return {!ol.layer.Vector} Vector layer.\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {ol.Extent} Extent.\n   * @export\n   */\n  get extent() {\n    return this.source_.getExtent();\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.FileGroup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceFile from 'ngeo/datasource/File.js';\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A FileGroup data source combines multiple `ngeo.datasource.File` objects.\n   * Its main goal is to synchronize the added data source 'visible' properties\n   * with the visibility of their layer 'visible' property.\n   *\n   * @struct\n   * @param {ngeox.datasource.FileGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.unregister_ = {};\n  }\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceFile);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n    this.unregister_[dataSource.id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this, dataSource)\n    );\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source.\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(dataSource, value, oldValue) {\n    if (value !== undefined) {\n      dataSource.layer.setVisible(value);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceFile);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n    this.unregister_[dataSource.id]();\n    delete this.unregister_[dataSource.id];\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.OGCGroup\n */\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A OGCGroup data source combines multiple `ngeo.datasource.OGC` objects.\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.url_ = options.url;\n  }\n\n  /**\n   * @return {string} Url\n   * @export\n   */\n  get url() {\n    return this.url_;\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.WMSGroup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class extends ngeoDatasourceOGCGroup {\n\n  /**\n   * A WMSGroup data source combines multiple `ngeo.datasource.OGC` objects\n   * that have the 'WMS' type. Its main goal is to create a single\n   * `ol.layer.Image` object in which the data source visible properties\n   * determine the WMS LAYERS parameter.\n   *\n   * Note: the layer is not added to the map here.\n   *\n   * @struct\n   * @param {ngeox.datasource.WMSGroupOptions} options Options.\n   * @param {!ngeo.map.LayerHelper} ngeoLayerHelper the ngeo map LayerHelper service.\n   */\n  constructor(options, ngeoLayerHelper) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {ol.layer.Image}\n     * @private\n     */\n    this.layer_;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.wmsDataSourceUnregister_ = {};\n\n\n    this.init_();\n  }\n\n  /**\n   * @private\n   */\n  init_() {\n    googAsserts.assert(\n      this.dataSources.length, 'At least one data source is required.');\n\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  destroy() {\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.unregisterDataSource_(dataSource);\n    }\n    super.destroy();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {ol.layer.Image} layer\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n\n    const id = dataSource.id;\n\n    this.wmsDataSourceUnregister_[id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this)\n    );\n\n    if (!this.layer_) {\n      this.layer_ = this.ngeoLayerHelper_.createBasicWMSLayerFromDataSource(\n        dataSource\n      );\n    } else {\n      this.layer_.get('querySourceIds').push(id);\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLayer_() {\n    const layer = this.layer;\n    let layerNames = [];\n\n    // (1) Collect layer names from data sources in the group\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      if (dataSource.visible) {\n        layerNames = layerNames.concat(dataSource.getOGCLayerNames());\n      }\n    }\n\n    // (2) Update layer object\n    this.ngeoLayerHelper_.updateWMSLayerState(layer, layerNames.join(','));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n\n    const id = dataSource.id;\n    const layer = this.layer;\n\n    // Unregister watcher\n    const unregister = this.wmsDataSourceUnregister_[id];\n    unregister();\n    delete this.wmsDataSourceUnregister_[id];\n\n    // Remove DS from the group\n    olArray.remove(this.dataSources, dataSource);\n\n    // Remove query source id\n    const ids = this.ngeoLayerHelper_.getQuerySourceIds(layer);\n    if (ids) {\n      olArray.remove(ids, id);\n    }\n\n    if (this.dataSources.length) {\n      this.updateLayer_();\n    }\n  }\n};\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.ExternalDataSourcesManager\n */\n// TODO - MaxScaleDenominator\n// TODO - MinScaleDenominator\n\nimport gmfBase from 'gmf/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMiscFile from 'ngeo/misc/File.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoDatasourceFile from 'ngeo/datasource/File.js';\nimport ngeoDatasourceFileGroup from 'ngeo/datasource/FileGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceWMSGroup from 'ngeo/datasource/WMSGroup.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatGPX from 'ol/format/GPX.js';\nimport olFormatKML from 'ol/format/KML.js';\n\nconst exports = class {\n\n  /**\n   * External data sources come remote online resources, such as WMS/WMTS\n   * servers, and also files such as KML/GXP. This service is responsible of\n   * creating, storing and managing them.\n   *\n   * @param {!angularGettext.Catalog} gettextCatalog service.\n   * @param {!angular.$injector} $injector Main injector.\n   * @param {!angular.$q} $q The Angular $q service.\n   * @param {!angular.Scope} $rootScope The rootScope provider.\n   * @param {!ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources service.\n   * @param {!ngeo.misc.File} ngeoFile Ngeo file.\n   * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo layer helper service\n   * @struct\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfExternalDataSourcesManager\n   */\n  constructor(gettextCatalog, $injector, $q, $rootScope, ngeoDataSources,\n    ngeoFile, ngeoLayerHelper) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {!angular.$injector}\n     * @private\n     */\n    this.injector_ = $injector;\n\n    /**\n     * @type {!angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = $rootScope;\n\n    /**\n     * The collection of DataSources from ngeo. When this service creates\n     * a data source, its gets added to that collection.\n     * @type {!ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n\n    /**\n     * @type {!ngeo.misc.File}\n     * @private\n     */\n    this.ngeoFile_ = ngeoFile;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n\n    // === Inner properties ===\n\n    /**\n     * All external data sources that are created are stored here. The key\n     * is the data source id.\n     *\n     * Note: This cache is never cleaned and elements are never removed from it.\n     * If a data source with an id already exists in this cache, it is used\n     * instead of being re-created.\n     *\n     * @type {Object.<number, !ngeo.datasource.OGC|!ngeo.datasource.File>}\n     * @private\n     */\n    this.extDataSources_ = {};\n\n    /**\n     * File external data sources, with the key being the file name.\n     * @type {Object.<string, !ngeo.datasource.File>}\n     * @private\n     */\n    this.files_ = {};\n\n    /**\n     * @type {?ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * Group that contains file data sources.\n     * @type {!ngeo.datasource.FileGroup}\n     * @private\n     */\n    this.fileGroup_ = new ngeoDatasourceFileGroup({\n      dataSources: [],\n      injector: this.injector_,\n      title: gettextCatalog.getString('Local files')\n    });\n\n    /**\n     * Collection of WMS groups.\n     * @type {!ol.Collection.<!ngeo.datasource.WMSGroup>}\n     * @private\n     */\n    this.wmsGroupsCollection_ = new olCollection();\n\n    /**\n     * Collection of groups for WMTS data sources.\n     * @type {!ol.Collection.<!ngeo.datasource.OGCGroup>}\n     * @private\n     */\n    this.wmtsGroupsCollection_ = new olCollection();\n\n    /**\n     * Cache that stores the information of a WMTS data source. The key is the\n     * data source id.\n     * @type {!Object.<number, gmfx.datasource.ExternalDataSourcesManagerWMTSCacheItem>}\n     * @private\n     */\n    this.wmtsCache_ = {};\n\n    olEvents.listen(this.dataSources_, 'remove', this.handleDataSourcesRemove_, this);\n  }\n\n\n  // === File Group ===\n\n  /**\n   * @return {!ngeo.datasource.FileGroup} File group.\n   * @export\n   */\n  get fileGroup() {\n    return this.fileGroup_;\n  }\n\n\n  // === WMS Groups ===\n\n  /**\n   * @param {!ngeo.datasource.WMSGroup} wmsGroup WMS group.\n   * @private\n   */\n  addWMSGroup_(wmsGroup) {\n    this.wmsGroupsCollection.push(wmsGroup);\n  }\n\n  /**\n   * @param {!ngeo.datasource.WMSGroup} wmsGroup WMS group.\n   * @private\n   */\n  removeWMSGroup_(wmsGroup) {\n    this.wmsGroupsCollection.remove(wmsGroup);\n  }\n\n  /**\n   * @param {string} url Online resource url\n   * @return {?ngeo.datasource.WMSGroup} WMS group.\n   */\n  getWMSGroup(url) {\n    let found = null;\n    for (const wmsGroup of this.wmsGroups) {\n      if (wmsGroup.url === url) {\n        found = wmsGroup;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @return {!Array.<!ngeo.datasource.WMSGroup>} List of WMS groups.\n   * @export\n   */\n  get wmsGroups() {\n    return this.wmsGroupsCollection_.getArray();\n  }\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.WMSGroup>} Collection of WMS\n   *     groups.\n   * @export\n   */\n  get wmsGroupsCollection() {\n    return this.wmsGroupsCollection_;\n  }\n\n\n  // === WMTS Groups ===\n\n  /**\n   * @param {!ngeo.datasource.OGCGroup} wmtsGroup Group for WMTS data sources.\n   * @private\n   */\n  addWMTSGroup_(wmtsGroup) {\n    this.wmtsGroupsCollection.push(wmtsGroup);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGCGroup} wmtsGroup Group for WMTS data sources.\n   * @private\n   */\n  removeWMTSGroup_(wmtsGroup) {\n    this.wmtsGroupsCollection.remove(wmtsGroup);\n  }\n\n  /**\n   * @param {string} url Online resource url\n   * @return {?ngeo.datasource.OGCGroup} WMTS group.\n   */\n  getWMTSGroup(url) {\n    let found = null;\n    for (const wmtsGroup of this.wmtsGroups) {\n      if (wmtsGroup.url === url) {\n        found = wmtsGroup;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @return {!Array.<!ngeo.datasource.OGCGroup>} List of groups for WMTS data\n   *     sources.\n   * @export\n   */\n  get wmtsGroups() {\n    return this.wmtsGroupsCollection_.getArray();\n  }\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.OGCGroup>} Collection of groups\n   *     for WMTS data sources.\n   * @export\n   */\n  get wmtsGroupsCollection() {\n    return this.wmtsGroupsCollection_;\n  }\n\n\n  // === Other methods ===\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source\n   * @return {boolean} Whether the given data source is external or not. To\n   *     be considered external, it needs to be in the external data source\n   *     hash (cache).\n   */\n  isExternalDataSource(dataSource) {\n    return !!this.extDataSources_[dataSource.id];\n  }\n\n  /**\n   * @return {ol.layer.Group} Layer group where to push layers created by\n   *     this service.\n   */\n  get layerGroup() {\n    const map = this.map_;\n    googAsserts.assert(map);\n    return this.ngeoLayerHelper_.getGroupFromMap(\n      map,\n      gmfBase.EXTERNALLAYERGROUP_NAME\n    );\n  }\n\n  /**\n   * @param {?ol.Map} map Map\n   */\n  set map(map) {\n    this.map_ = map;\n  }\n\n  /**\n   * @param {ol.layer.Layer} layer Layer.\n   * @private\n   */\n  addLayer_(layer) {\n    this.layerGroup.getLayers().push(layer);\n  }\n\n  /**\n   * @param {ol.layer.Layer} layer Layer.\n   * @private\n   */\n  removeLayer_(layer) {\n    this.layerGroup.getLayers().remove(layer);\n  }\n\n  /**\n   * @param {!Object} layer WMS Capability Layer object.\n   * @param {!Object} capabilities  WMS Capabilities definition\n   * @param {string} url The WMS service url.\n   * @export\n   */\n  createAndAddDataSourceFromWMSCapability(layer, capabilities, url) {\n\n    const id = exports.getId(layer);\n    const service = capabilities['Service'];\n\n    let dataSource;\n\n    // (1) Get data source from cache if it exists, otherwise create it\n    if (this.extDataSources_[id]) {\n      dataSource = this.extDataSources_[id];\n    } else {\n      const req = capabilities['Capability']['Request'];\n\n      // ogcImageType\n      const formats = req['GetMap']['Format'];\n      const imagePngType = 'image/png';\n      const ogcImageType = formats.includes(imagePngType) ?\n        imagePngType : formats[0];\n\n      // wmsInfoFormat\n      const infoFormats = req['GetFeatureInfo']['Format'];\n      const wmsInfoFormat = infoFormats.includes(\n        ngeoDatasourceOGC.WMSInfoFormat.GML\n      ) ? ngeoDatasourceOGC.WMSInfoFormat.GML : undefined;\n\n      // queryable\n      const queryable = layer['queryable'] === true &&\n          wmsInfoFormat !== undefined;\n\n      // TODO - MaxScaleDenominator\n      // TODO - MinScaleDenominator\n      dataSource = new ngeoDatasourceOGC({\n        id: id,\n        name: layer['Title'],\n        ogcImageType: ogcImageType,\n        ogcLayers: [{\n          name: layer['Name'],\n          queryable: queryable\n        }],\n        ogcType: ngeoDatasourceOGC.Type.WMS,\n        visible: true,\n        wmsInfoFormat: wmsInfoFormat,\n        wmsUrl: url\n      });\n\n      // Keep a reference to the external data source in the cache\n      this.extDataSources_[id] = dataSource;\n    }\n\n\n    // (2) Add data source in WMS group, unless it's already in there.\n    //     Will also add the data source to the `ngeo.DataSources` collection.\n    //     If the group is created, its inner OL layer is also added to the map.\n    let wmsGroup = this.getWMSGroup(url);\n    if (wmsGroup) {\n      if (!wmsGroup.dataSources.includes(dataSource)) {\n        wmsGroup.addDataSource(dataSource);\n        this.dataSources_.push(dataSource);\n      }\n    } else {\n      wmsGroup = new ngeoDatasourceWMSGroup({\n        dataSources: [dataSource],\n        injector: this.injector_,\n        title: service['Title'],\n        url: url\n      }, this.ngeoLayerHelper_);\n      this.addLayer_(wmsGroup.layer);\n      this.addWMSGroup_(wmsGroup);\n      this.dataSources_.push(dataSource);\n    }\n  }\n\n  /**\n   * @param {!Object} layer WTMS Capability Layer object.\n   * @param {!Object} capabilities  WMTS Capabilities definition\n   * @param {string} wmtsUrl The WMTS capabilities url\n   * @export\n   */\n  createAndAddDataSourceFromWMTSCapability(layer, capabilities, wmtsUrl) {\n    const id = exports.getId(layer);\n\n    // (1) No need to do anything if there's already a WMTS data source (and its\n    // layer in the map)\n    if (this.wmtsCache_[id]) {\n      return;\n    }\n\n    let dataSource;\n\n    // (2) Get data source from cache if it exists, otherwise create it\n    if (this.extDataSources_[id]) {\n      dataSource = this.extDataSources_[id];\n    } else {\n\n      const name = googAsserts.assertString(layer['Title']);\n      const wmtsLayer = googAsserts.assertString(layer['Identifier']);\n\n      // TODO - MaxScaleDenominator\n      // TODO - MinScaleDenominator\n      dataSource = new ngeoDatasourceOGC({\n        id: id,\n        name: name,\n        ogcType: ngeoDatasourceOGC.Type.WMTS,\n        visible: true,\n        wmtsLayer: wmtsLayer,\n        wmtsUrl: wmtsUrl\n      });\n\n      // Keep a reference to the external data source in the cache\n      this.extDataSources_[id] = dataSource;\n    }\n\n    // (3) Get/Create group, then add data source to group\n    let wmtsGroup = this.getWMTSGroup(wmtsUrl);\n    if (!wmtsGroup) {\n      wmtsGroup = new ngeoDatasourceOGCGroup({\n        dataSources: [],\n        title: capabilities['ServiceIdentification']['Title'],\n        url: wmtsUrl\n      });\n      this.addWMTSGroup_(wmtsGroup);\n    }\n    wmtsGroup.addDataSource(dataSource);\n\n    // (4) Create and add the OL layer\n    const layerObj = this.ngeoLayerHelper_.createWMTSLayerFromCapabilititesObj(\n      capabilities,\n      layer\n    );\n    this.addLayer_(layerObj);\n\n    // (5) Add data source to ngeo collection\n    this.dataSources_.push(dataSource);\n\n    // (6) Create and set WMTS cache item\n    this.wmtsCache_[id] = {\n      layerObj: layerObj,\n      // This watcher synchronizes the data source visible property to\n      // the OL layer object visible property\n      unregister: this.rootScope_.$watch(\n        () => dataSource.visible,\n        this.handleWMTSDataSourceVisibleChange_.bind(this, layerObj)\n      )\n    };\n  }\n\n  /**\n   * @param {!File} file File.\n   * @export\n   */\n  createAndAddDataSourceFromFile(file) {\n    this.getFileDataSource_(file).then(\n      (dataSource) => {\n        const fileGroup = this.fileGroup_;\n\n        // (1) No need to do anything if the file has already been added...\n        if (fileGroup.dataSources.includes(dataSource)) {\n          return;\n        }\n\n        // (2) Okay, we need to add this data source. First, add its layer\n        //     to the map.\n        this.addLayer_(dataSource.layer);\n\n        // (3) Add it to the file group\n        fileGroup.addDataSource(dataSource);\n\n        // (4) Recenter the map view onto its extent\n        this.map_.getView().fit(dataSource.extent);\n\n        // (5) Finally, add it to the ngeo collection\n        this.dataSources_.push(dataSource);\n      },\n      (rejections) => {\n        googAsserts.fail(`Failed to load file: ${file.name}`);\n      }\n    );\n  }\n\n  /**\n   * Get file data source from cache, else create, store and return a new one.\n   * @param {!File} file File.\n   * @return {!angular.$q.Promise} Promise\n   * @private\n   */\n  getFileDataSource_(file) {\n\n    const defer = this.q_.defer();\n\n    if (this.files_[file.name]) {\n      defer.resolve(this.files_[file.name]);\n    } else {\n      const ngeoFile = this.ngeoFile_;\n      ngeoFile.read(file).then((content) => {\n        let features;\n        const readOptions = {\n          featureProjection: this.map_.getView().getProjection()\n        };\n\n        if (ngeoFile.isKml(content)) {\n          features = new olFormatKML().readFeatures(content, readOptions);\n        } else if (ngeoFile.isGpx(content)) {\n          features = new olFormatGPX().readFeatures(content, readOptions);\n        }\n\n        if (features) {\n          const id = exports.getId(file);\n\n          const dataSource = new ngeoDatasourceFile({\n            features: new olCollection(features),\n            id: id,\n            name: file.name,\n            visible: true\n          });\n\n          // Keep a reference if both caches\n          this.files_[file.name] = dataSource;\n          this.extDataSources_[id] = dataSource;\n\n          defer.resolve(dataSource);\n        } else {\n          defer.reject();\n        }\n      });\n    }\n\n    return defer.promise;\n  }\n\n  /**\n   * @param {!ol.layer.Tile} layer WMTS layer\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleWMTSDataSourceVisibleChange_(layer, value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      layer.setVisible(value);\n    }\n  }\n\n  /**\n   * Called when a data source is removed from the collection of ngeo data\n   * sources. If it's an external data source, remove it from its WMS Group\n   *\n   * @param {ol.Collection.Event} evt Collection event.\n   * @private\n   */\n  handleDataSourcesRemove_(evt) {\n    const dataSource = evt.element;\n    if (this.extDataSources_[dataSource.id] === dataSource) {\n      if (dataSource instanceof ngeoDatasourceFile) {\n        this.removeFileDataSource_(dataSource);\n      } else if (dataSource instanceof ngeoDatasourceOGC) {\n        this.removeOGCDataSource_(dataSource);\n      }\n    }\n  }\n\n  /**\n   * Remove a data source from its group. Remove its layer from the map as well.\n   *\n   * Note: it is expected that the data source has already been removed\n   * from the ngeo collection.\n   *\n   * @param {!ngeo.datasource.File} dataSource External File data source.\n   * @private\n   */\n  removeFileDataSource_(dataSource) {\n    this.removeLayer_(dataSource.layer);\n    this.fileGroup_.removeDataSource(dataSource);\n  }\n\n  /**\n   * Remove the data source from its group. If the group no longer has\n   * any data source in it, it is removed then destroyed and its layer is\n   * removed from the map.\n   *\n   * Note: it is expected that the data source has already been removed\n   * from the ngeo collection.\n   *\n   * @param {!ngeo.datasource.OGC} dataSource External OGC data source.\n   * @private\n   */\n  removeOGCDataSource_(dataSource) {\n    if (dataSource.ogcType === ngeoDatasourceOGC.Type.WMS) {\n      // WMS data source\n      const url = dataSource.wmsUrl;\n      googAsserts.assert(url);\n\n      const wmsGroup = this.getWMSGroup(url);\n      if (wmsGroup && wmsGroup.dataSources.includes(dataSource)) {\n        // Remove from group\n        wmsGroup.removeDataSource(dataSource);\n\n        // In case we removed the last data source from the group, then remove\n        // and destroy the group, and remove the layer from the map as well.\n        if (!wmsGroup.dataSources.length) {\n          this.removeLayer_(wmsGroup.layer);\n          wmsGroup.destroy();\n          this.removeWMSGroup_(wmsGroup);\n        }\n      }\n    } else if (dataSource.ogcType === ngeoDatasourceOGC.Type.WMTS) {\n      // WMTS data source\n      const url = dataSource.wmtsUrl;\n      googAsserts.assert(url);\n\n      const wmtsGroup = this.getWMTSGroup(url);\n      if (wmtsGroup && wmtsGroup.dataSources.includes(dataSource)) {\n        // Remove from group\n        wmtsGroup.removeDataSource(dataSource);\n\n        // Remove the cache item, in addition to removing the layer from the\n        // map and unregister the watcher\n        const id = dataSource.id;\n        this.removeLayer_(this.wmtsCache_[id].layerObj);\n        this.wmtsCache_[id].unregister();\n        delete this.wmtsCache_[id];\n\n        // In case we removed the last data source from the group, then remove\n        // and destroy the groug.\n        if (!wmtsGroup.dataSources.length) {\n          wmtsGroup.destroy();\n          this.removeWMTSGroup_(wmtsGroup);\n        }\n      }\n    }\n  }\n};\n\n\n/**\n * Get the data source id from a WMS or WMTS Capability Layer object, or\n * from a File object.\n *\n * Please, note that this is used to generate a unique id for the created\n * external data sources and since a WMS/WMTS Capability Layer objects don't\n * natively contains an id by themselves, then it is programmatically generated\n * using the `ol.getUid` method, plus a million.\n *\n * @param {!Object} layer WMS/WMTS Capability Layer object.\n * @return {number} Data source id.\n * @export\n */\nexports.getId = function(layer) {\n  return olBase.getUid(layer) + 1000000;\n};\n\n\nexports.module = angular.module('gmfExternalDataSourcesManager', [\n  ngeoMapLayerHelper.module.name,\n  ngeoMiscFile.module.name,\n  ngeoDatasourceDataSources.module.name,\n]);\nexports.module.service('gmfExternalDataSourcesManager',\n  exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.DataSources\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport olCollection from 'ol/Collection.js';\nimport * as olEvents from 'ol/events.js';\nimport olView from 'ol/View.js';\n\nconst exports = class {\n\n  /**\n   * This service is responsible of the synchronization between the ngeo\n   * collection of data sources and a specific map. It listens to events\n   * that come directly or indirectly from the map and update the inner\n   * properties of the data sources.\n   *\n   * The following data sources properties are synchronized here:\n   *\n   * - inRange: The map view 'change:resolution' event is listened and the\n   *   property is updated depending on the current resolution.\n   *\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoDataSources\n   * @ngInject\n   */\n  constructor() {\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.collection_ = new olCollection();\n\n    /**\n     * @type {ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    olEvents.listen(this.collection_, 'add', this.handleDataSourcesAdd_, this);\n  }\n\n  /**\n   * Set a map to this service. Null can be given to unset the map.\n   * @param {?ol.Map} map Map.\n   */\n  set map(map) {\n    if (this.map_ === map) {\n      return;\n    }\n\n    if (this.map_) {\n      this.unbindMap_(this.map_);\n    }\n\n    this.map_ = map;\n\n    if (map) {\n      this.bindMap_(map);\n    }\n  }\n\n  get collection() {\n    return this.collection_;\n  }\n\n  /**\n   * Bind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  bindMap_(map) {\n\n    // (1) Event listeners\n    const view = map.getView();\n    this.listenerKeys_.push(\n      olEvents.listen(view, 'change:resolution', this.handleViewResolutionChange_, this)\n    );\n\n    // (2) Sync resolution with existing data sources\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Unbind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  unbindMap_(map) {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_ = [];\n  }\n\n  /**\n   * Called when the resolution of the map view changes. Synchronize the\n   * datasources to current resolution of the view.\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleViewResolutionChange_(evt) {\n    const view = evt.target;\n    googAsserts.assertInstanceof(view, olView);\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Synchronize all datasources in the ngeo collection with a given resolution.\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourcesToResolution_(resolution) {\n    this.collection_.forEach((dataSource) => {\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    });\n  }\n\n  /**\n   * Synchronize a data source `inRange` property with a given resolution.\n   * @param {ngeo.datasource.DataSource} dataSource Data source\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourceToResolution_(dataSource, resolution) {\n    // No need to do anything if the data source doesn't support dynamic\n    // setting of inRange\n    if (!dataSource.supportsDynamicInRange) {\n      return;\n    }\n\n    const maxResolution = dataSource.maxResolution;\n    const minResolution = dataSource.minResolution;\n\n    const inMinRange = minResolution === null ||\n        minResolution === undefined ||\n        resolution >= minResolution;\n    const inMaxRange = maxResolution === null ||\n        maxResolution === undefined ||\n        resolution <= maxResolution;\n    const inRange = inMinRange && inMaxRange;\n\n    dataSource.inRange = inRange;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. If there's\n   * map bound, update its `inRange` right away.\n   * @param {!ol.Collection.Event} event Event\n   * @private\n   */\n  handleDataSourcesAdd_(event) {\n    const dataSource = googAsserts.assertInstanceof(\n      event.element, ngeoDatasourceDataSource);\n    if (this.map_) {\n      const resolution = this.map_.getView().getResolution();\n      googAsserts.assertNumber(resolution);\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    }\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDataSources', []);\n// DataSources with the ngeox.datasource.DataSources type.\nexports.module.service('ngeoDataSources', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.editFeatureComponent\n */\nimport gmfEditingEditFeature from 'gmf/editing/EditFeature.js';\n\n/** @suppress {extraRequire} */\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\n\nimport gmfEditingXSDAttributes from 'gmf/editing/XSDAttributes.js';\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport googAsserts from 'goog/asserts.js';\nimport DateFormatter from 'ngeo/misc/php-date-formatter.js';\nimport 'jquery-datetimepicker/jquery.datetimepicker.js';\nimport 'jquery-datetimepicker/jquery.datetimepicker.css';\n\n\n/** @suppress {extraRequire} */\nimport ngeoEditingAttributesComponent from 'ngeo/editing/attributesComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoEditingCreatefeatureComponent from 'ngeo/editing/createfeatureComponent.js';\n\nimport ngeoUtils from 'ngeo/utils.js';\nimport ngeoFormatXSDAttribute from 'ngeo/format/XSDAttribute.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionRotate from 'ngeo/interaction/Rotate.js';\nimport ngeoInteractionTranslate from 'ngeo/interaction/Translate.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMenu from 'ngeo/Menu.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessageModalComponent from 'ngeo/message/modalComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\n\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\n\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('GmfEditingFeatureComponent', [\n  gmfEditingEditFeature.module.name,\n  gmfEditingSnapping.module.name,\n  gmfEditingXSDAttributes.module.name,\n  ngeoEditingAttributesComponent.name,\n  ngeoEditingCreatefeatureComponent.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMessageModalComponent.name,\n  ngeoMiscBtnComponent.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/editing/editFeatureComponent', require('./editFeatureComponent.html'));\n});\n\n\n/**\n * Directive used to insert, modify and delete features from a single layer.\n * It allows you to modify the geometry of the feature in addition to its\n * attributes.\n *\n * In order to modify or delete a feature, you must click on the map at the\n * location of the feature to select it first.\n *\n * In order to create a new feature, you use the \"Draw\" button and digitize\n * the feature on the map.\n *\n * Example:\n *\n *     <gmf-editfeature\n *         gmf-editfeature-dirty=\"ctrl.dirty\"\n *         gmf-editfeature-editabletreectrl=\"::ctrl.treeCtrl\"\n *         gmf-editfeature-map=\"::ctrl.map\"\n *         gmf-editfeature-state=\"efsCtrl.state\"\n *         gmf-editfeature-tolerance=\"::ctrl.tolerance\"\n *         gmf-editfeature-vector=\"::ctrl.vectorLayer\">\n *     </gmf-editfeature>\n *\n * @htmlAttribute {boolean} gmf-editfeature-dirty Flag that is toggled as soon\n *     as the feature changes, i.e. if any of its properties change, which\n *     includes the geometry.\n * @htmlAttribute {ngeo.layertree.Controller} gmf-editfeature-editabletreectrl\n *     A reference to the editable Layertree controller, which contains a\n *     a reference to the node and WMS layer.\n * @htmlAttribute {ol.Map} gmf-editfeature-map The map.\n * @htmlAttribute {string} gmf-editfeature-state The state property shared\n *     with the `gmf-editfeatureselector` directive. For more info, see in\n *     that directive.\n * @htmlAttribute {number|undefined} gmf-editfeatureselector-tolerance The\n *     buffer in pixels to use when making queries to get the features.\n * @htmlAttribute {ol.layer.Vector} gmf-editfeature-vector The vector layer in\n *     which to draw the vector features.\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname gmfEditfeature\n */\nexports.component_ = function() {\n  return {\n    controller: 'GmfEditfeatureController as efCtrl',\n    scope: {\n      'dirty': '=gmfEditfeatureDirty',\n      'editableTreeCtrl': '=gmfEditfeatureEditabletreectrl',\n      'map': '<gmfEditfeatureMap',\n      'state': '=gmfEditfeatureState',\n      'tolerance': '<?gmfEditfeatureTolerance',\n      'vectorLayer': '<gmfEditfeatureVector'\n    },\n    bindToController: true,\n    templateUrl: 'gmf/editing/editFeatureComponent'\n  };\n};\n\n\nexports.directive('gmfEditfeature',\n  exports.component_);\n\n\n/**\n * @param {jQuery} $element Element.\n * @param {angular.$q} $q Angular $q service.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmf.editing.EditFeature} gmfEditFeature Gmf edit feature service.\n * @param {gmf.editing.Snapping} gmfSnapping The gmf snapping service.\n * @param {gmf.editing.XSDAttributes} gmfXSDAttributes The gmf XSDAttributes service.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo Event Helper.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate manager\n *     service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfEditfeatureController\n */\nexports.Controller_ = function($element, $q, $scope, $timeout,\n  gettextCatalog, gmfEditFeature, gmfSnapping, gmfXSDAttributes,\n  ngeoEventHelper, ngeoFeatureHelper, ngeoLayerHelper, ngeoToolActivateMgr) {\n\n\n  // === Binding properties ===\n\n  /**\n   * Flag that is toggled as soon as the feature changes, i.e. if any of its\n   * properties change, which includes the geometry.\n   * @type {boolean}\n   * @export\n   */\n  this.dirty;\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.editableTreeCtrl;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * The state property shared with the `gmf-editfeatureselector` directive.\n   * For more info, see in that directive.\n   * @type {string}\n   * @export\n   */\n  this.state;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.tolerance;\n\n  /**\n   * @type {ol.layer.Vector}\n   * @export\n   */\n  this.vectorLayer;\n\n\n  // === Injected properties ===\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.element_ = $element;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {gmf.editing.EditFeature}\n   * @private\n   */\n  this.gmfEditFeature_ = gmfEditFeature;\n\n  /**\n   * @type {gmf.editing.Snapping}\n   * @private\n   */\n  this.gmfSnapping_ = gmfSnapping;\n\n  /**\n   * @type {gmf.editing.XSDAttributes}\n   * @private\n   */\n  this.gmfXSDAttributes_ = gmfXSDAttributes;\n\n  /**\n   * @type {ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.ngeoFeatureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.misc.ToolActivateMgr}\n   * @private\n   */\n  this.ngeoToolActivateMgr_ = ngeoToolActivateMgr;\n\n\n  // === Private properties ===\n\n  /**\n   * @type {gmfThemes.GmfLayer}\n   * @private\n   */\n  this.editableNode_;\n\n  /**\n   * @type {ol.layer.Image|ol.layer.Tile}\n   * @private\n   */\n  this.editableWMSLayer_;\n\n  /**\n   * A deferred object resolved after the confirm modal \"continue w/o saving\" or\n   * \"save\" buttons are clicked.\n   * @type {angular.$q.Deferred|null}\n   * @private\n   */\n  this.confirmDeferred_ = null;\n\n  /**\n   * Flag that controls the visibility of the modal that manages unsaved\n   * modifications.\n   * @type {boolean}\n   * @export\n   */\n  this.unsavedModificationsModalShown = false;\n\n  /**\n   * Flag that is toggled while a request is pending, either one to get\n   * features when a map is clicked or when saving\n   * @private\n   */\n  this.pending = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active = true;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.createActive = false;\n\n  /**\n   * @type {ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.createToolActivate = new ngeoMiscToolActivate(this, 'createActive');\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.mapSelectActive = true;\n\n  /**\n   * @type {ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.mapSelectToolActivate = new ngeoMiscToolActivate(this, 'mapSelectActive');\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.feature = null;\n\n  this.scope_.$watch(\n    () => this.feature,\n    this.handleFeatureChange_.bind(this)\n  );\n\n  /**\n   * @type {number|string|undefined}\n   * @export\n   */\n  this.featureId = undefined;\n\n  /**\n   * @type {ol.Collection}\n   * @export\n   */\n  this.features;\n\n  /**\n   * @type {ol.Collection}\n   * @private\n   */\n  this.interactions_ = new olCollection();\n\n  /**\n   * @type {ol.interaction.Modify}\n   * @private\n   */\n  this.modify_;\n\n  /**\n   * @type {ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.modifyToolActivate;\n\n  /**\n   * @type {ngeo.Menu}\n   * @private\n   */\n  this.menu_ = new ngeoMenu({\n    actions: [{\n      cls: 'fa fa-arrows',\n      label: gettextCatalog.getString('Move'),\n      name: 'move'\n    }, {\n      cls: 'fa fa-rotate-right',\n      label: gettextCatalog.getString('Rotate'),\n      name: 'rotate'\n    }]\n  });\n\n  /**\n   * @type {ngeo.interaction.Translate}\n   * @private\n   */\n  this.translate_;\n\n  /**\n   * @type {ngeo.interaction.Rotate}\n   * @private\n   */\n  this.rotate_;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.rotateToolActivate;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.translateToolActivate;\n\n  /**\n   * @type {!Array.<!ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?Array.<!ngeox.Attribute>}\n   * @export\n   */\n  this.attributes = null;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.geomType;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.showServerError = false;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.serverErrorMessage = null;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.serverErrorType = null;\n};\n\n\n/**\n * Called on initialization of the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  const lang = this.gettextCatalog_.getCurrentLanguage();\n  $.datetimepicker.setLocale(lang);\n  $.datetimepicker.setDateFormatter(new DateFormatter());\n\n  // (1) Set default values and other properties\n  this.dirty = this.dirty === true;\n  this.editableNode_ = /** @type {gmfThemes.GmfLayer} */ (\n    this.editableTreeCtrl.node);\n  this.features = this.vectorLayer.getSource().getFeaturesCollection();\n  this.tolerance = this.tolerance !== undefined ? this.tolerance : 10;\n\n  // (1.1) Set editable WMS layer\n  const layer = gmfLayertreeSyncLayertreeMap.getLayer(this.editableTreeCtrl);\n  googAsserts.assert(\n    layer instanceof olLayerImage || layer instanceof olLayerTile);\n  this.editableWMSLayer_ = layer;\n\n  // (1.2) Create, set and initialize interactions\n  this.modify_ = new olInteractionModify({\n    deleteCondition: ngeoUtils.deleteCondition,\n    features: this.features,\n    style: this.ngeoFeatureHelper_.getVertexStyle(false)\n  });\n  this.interactions_.push(this.modify_);\n\n  this.rotate_ = new ngeoInteractionRotate({\n    features: this.features,\n    style: new olStyleStyle({\n      text: new olStyleText({\n        text: '\\uf01e',\n        font: 'normal 18px FontAwesome',\n        fill: new olStyleFill({\n          color: '#7a7a7a'\n        })\n      })\n    })\n  });\n  this.interactions_.push(this.rotate_);\n\n  this.translate_ = new ngeoInteractionTranslate({\n    features: this.features,\n    style: new olStyleStyle({\n      text: new olStyleText({\n        text: '\\uf047',\n        font: 'normal 18px FontAwesome',\n        fill: new olStyleFill({\n          color: '#7a7a7a'\n        })\n      })\n    })\n  });\n  this.interactions_.push(this.translate_);\n\n  this.initializeInteractions_();\n\n  this.modifyToolActivate = new ngeoMiscToolActivate(this.modify_, 'active');\n  this.rotateToolActivate = new ngeoMiscToolActivate(this.rotate_, 'active');\n  this.translateToolActivate = new ngeoMiscToolActivate(this.translate_, 'active');\n\n  // (1.3) Add menu to map\n  this.map.addOverlay(this.menu_);\n\n\n  // (2) Watchers and event listeners\n  this.scope_.$watch(\n    () => this.createActive,\n    (newVal, oldVal) => {\n      if (newVal) {\n        this.gmfSnapping_.ensureSnapInteractionsOnTop();\n      }\n    }\n  );\n\n  this.scope_.$on('$destroy', this.handleDestroy_.bind(this));\n\n  const uid = olBase.getUid(this);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(\n      this.features,\n      'add',\n      this.handleFeatureAdd_,\n      this\n    )\n  );\n\n  this.scope_.$watch(\n    () => this.mapSelectActive,\n    this.handleMapSelectActiveChange_.bind(this)\n  );\n\n  this.scope_.$watch(\n    () => this.state,\n    (newValue, oldValue) => {\n      const state = exports.State;\n      if (newValue === state.STOP_EDITING_PENDING) {\n        this.confirmCancel().then(() => {\n          this.state = state.STOP_EDITING_EXECUTE;\n        });\n      } else if (newValue === state.DEACTIVATE_PENDING) {\n        this.confirmCancel().then(() => {\n          this.state = state.DEACTIVATE_EXECUTE;\n        });\n      }\n    }\n  );\n\n  this.scope_.$watch(\n    () => this.unsavedModificationsModalShown,\n    (newValue, oldValue) => {\n      // Reset stop request when closing the confirmation modal\n      if (oldValue && !newValue) {\n        this.state = exports.State.IDLE;\n      }\n    }\n  );\n\n\n  // (3) Get attributes\n  this.gmfXSDAttributes_.getAttributes(this.editableNode_.id).then(\n    this.setAttributes_.bind(this));\n\n\n  // (4) Toggle\n  this.toggle_(true);\n\n};\n\n\n/**\n * Save the currently selected feature modifications.\n * @export\n */\nexports.Controller_.prototype.save = function() {\n  googAsserts.assert(this.attributes);\n\n  const feature = this.feature.clone();\n  feature.setId(this.feature.getId());\n  const id = this.featureId;\n\n  this.pending = true;\n\n  const dateFormatter = new DateFormatter();\n  for (const attribute of this.attributes) {\n    if (attribute.format) {\n      if (this.feature.get(attribute.name)) {\n        const name = this.feature.get(attribute.name);\n        googAsserts.assertString(name);\n        const value = dateFormatter.parseDate(name, attribute.format);\n        let jsonFormat = 'Y-m-d\\\\TH:i:s';\n        if (attribute.type === 'date') {\n          jsonFormat = 'Y-m-d';\n        } else if (attribute.type === 'time') {\n          jsonFormat = 'H:i:s';\n        } else if (attribute.type === 'datetime') {\n          // Time zone correction\n          value.setMinutes(value.getMinutes() + value.getTimezoneOffset());\n        }\n        feature.set(attribute.name, dateFormatter.formatDate(value, jsonFormat));\n      } else {\n        // Shouldn't be set to an empty string\n        feature.set(attribute.name, null);\n      }\n    }\n  }\n\n  const promise = id ?\n    this.gmfEditFeature_.updateFeature(\n      this.editableNode_.id,\n      feature\n    ) :\n    this.gmfEditFeature_.insertFeatures(\n      this.editableNode_.id,\n      [feature]\n    );\n  promise.then(\n    (response) => {\n      this.dirty = false;\n      this.pending = false;\n      this.handleEditFeature_(response);\n    },\n    (response) => {\n      this.showServerError = true;\n      this.pending = false;\n      this.serverErrorType =  `error type : ${response.data['error_type']}`;\n      this.serverErrorMessage = `error message : ${response.data['message']}`;\n    }\n  );\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.cancel = function() {\n  this.dirty = false;\n  this.feature = null;\n  this.features.clear();\n  this.menu_.close();\n  this.unsavedModificationsModalShown = false;\n};\n\n\n/**\n * Check if there are unsaved modifications. If there aren't, then cancel.\n * Used by the 'cancel' button in the template.\n * @return {angular.$q.Promise} The promise attached to the confirm deferred\n *     object.\n * @export\n */\nexports.Controller_.prototype.confirmCancel = function() {\n  return this.checkForModifications_().then(() => {\n    this.cancel();\n  });\n};\n\n\n/**\n * Check if there's a feature selected and if it contains modifications\n * (a.k.a. is dirty), then the confirmation modal is shown.\n * @param {boolean=} scopeApply Whether to force scope to refresh or not.\n *     when the confirm modal is not dismissed.\n * @return {angular.$q.Promise} The promise attached to the confirm deferred\n *     object.\n * @private\n */\nexports.Controller_.prototype.checkForModifications_ = function(\n  scopeApply) {\n  this.confirmDeferred_ = this.q_.defer();\n  if (this.feature && this.dirty) {\n    this.unsavedModificationsModalShown = true;\n    if (scopeApply) {\n      this.scope_.$apply();\n    }\n  } else {\n    this.confirmDeferred_.resolve();\n  }\n\n  return this.confirmDeferred_.promise;\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.continueWithoutSaving = function() {\n  this.cancel();\n  this.confirmDeferred_.resolve();\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.delete = function() {\n  const msg = this.gettextCatalog_.getString(\n    'Do you really want to delete the selected feature?');\n  // Confirm deletion first\n  if (confirm(msg)) {\n    this.pending = true;\n\n    // (1) Launch request\n    this.gmfEditFeature_.deleteFeature(\n      this.editableNode_.id,\n      this.feature\n    ).then(\n      (response) => {\n        this.dirty = false;\n        this.pending = false;\n        this.ngeoLayerHelper_.refreshWMSLayer(this.editableWMSLayer_);\n\n        // (2) Reset selected feature\n        this.cancel();\n      },\n      (response) => {\n        this.showServerError = true;\n        this.pending = false;\n        this.serverErrorType =  `error type : ${response.data['error_type']}`;\n        this.serverErrorMessage = `error message : ${response.data['message']}`;\n      }\n    );\n\n  }\n};\n\n\n/**\n * Called when the modal 'save' button is clicked. Do as if the user had\n * clicked on the 'save' input button in the form, which allows the form\n * to be validated.\n * @export\n */\nexports.Controller_.prototype.submit = function() {\n  // Use timeout to prevent the digest already in progress\n  // due to clicking on the modal button to throw an error.\n  this.timeout_(() => {\n    this.element_.find('input[type=\"submit\"]').click();\n  }, 0);\n};\n\n/**\n * Called after an insert, update or delete request.\n * @param {angular.$http.Response} resp Ajax response.\n * @private\n */\nexports.Controller_.prototype.handleEditFeature_ = function(resp) {\n  const features = new olFormatGeoJSON().readFeatures(resp.data);\n  if (features.length) {\n    this.feature.setId(features[0].getId());\n    this.ngeoLayerHelper_.refreshWMSLayer(this.editableWMSLayer_);\n  }\n  if (this.confirmDeferred_) {\n    this.confirmDeferred_.resolve();\n  }\n};\n\n\n/**\n * @param {!Array.<ngeox.Attribute>} attributes Attributes.\n * @private\n */\nexports.Controller_.prototype.setAttributes_ = function(attributes) {\n  // Set attributes\n  this.attributes = attributes;\n  for (const attribute of attributes) {\n    if (attribute.type == 'date') {\n      attribute.format = 'Y-m-d';\n      attribute.mask = '9999-19-39';\n    } else if (attribute.type == 'time') {\n      attribute.format = 'H:i';\n      attribute.mask = '29:59';\n    } else if (attribute.type == 'datetime') {\n      attribute.format = 'Y-m-d H:i';\n      attribute.mask = '9999-19-39 29:59';\n    }\n  }\n\n  // Get geom type from attributes and set\n  const geomAttr = ngeoFormatXSDAttribute.getGeometryAttribute(\n    this.attributes\n  );\n  if (geomAttr && geomAttr.geomType) {\n    this.geomType = geomAttr.geomType;\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleFeatureAdd_ = function(evt) {\n  this.feature = null;\n  this.timeout_(() => {\n    googAsserts.assert(this.attributes);\n    const feature = evt.element;\n    googAsserts.assertInstanceof(feature, olFeature);\n    const dateFormatter = new DateFormatter();\n    for (const attribute of this.attributes) {\n      if (attribute.format) {\n        if (feature.get(attribute.name)) {\n          let value;\n          if (attribute.type === 'datetime') {\n            value = new Date(feature.get(attribute.name));\n            // Time zone correction\n            value.setMinutes(value.getMinutes() - value.getTimezoneOffset());\n          } else {\n            let jsonFormat = '';\n            if (attribute.type === 'date') {\n              jsonFormat = 'Y-m-d';\n            } else if (attribute.type === 'time') {\n              jsonFormat = 'H:i:s';\n            }\n            const name = feature.get(attribute.name);\n            googAsserts.assertString(name);\n            value = dateFormatter.parseDate(name, jsonFormat);\n          }\n          feature.set(attribute.name, dateFormatter.formatDate(value, attribute.format));\n        } else {\n          // Shouldn't be set to an empty string\n          feature.set(attribute.name, null);\n        }\n      }\n    }\n    this.feature = feature;\n    this.createActive = false;\n    if (!feature.getId()) {\n      this.dirty = true;\n    }\n    this.scope_.$apply();\n  }, 0);\n};\n\n\n/**\n * Activate or deactivate this directive.\n * @param {boolean} active Whether to activate this directive or not.\n * @private\n */\nexports.Controller_.prototype.toggle_ = function(active) {\n\n  const keys = this.listenerKeys_;\n  const createUid = ['create-', olBase.getUid(this)].join('-');\n  const otherUid = ['other-', olBase.getUid(this)].join('-');\n  const toolMgr = this.ngeoToolActivateMgr_;\n\n  if (active) {\n\n    // FIXME\n    //this.registerInteractions_();\n\n    keys.push(olEvents.listen(this.menu_, 'actionclick',\n      this.handleMenuActionClick_, this));\n\n    keys.push(olEvents.listen(this.translate_,\n      'translateend',\n      this.handleTranslateEnd_, this));\n\n    keys.push(olEvents.listen(this.rotate_, 'rotateend', this.handleRotateEnd_, this));\n\n    toolMgr.registerTool(createUid, this.createToolActivate, false);\n    toolMgr.registerTool(createUid, this.mapSelectToolActivate, true);\n\n    toolMgr.registerTool(otherUid, this.createToolActivate, false);\n    toolMgr.registerTool(otherUid, this.modifyToolActivate, true);\n    toolMgr.registerTool(otherUid, this.translateToolActivate, false);\n    toolMgr.registerTool(otherUid, this.rotateToolActivate, false);\n\n  } else {\n\n    // FIXME\n    //this.unregisterInteractions_();\n\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n\n    toolMgr.unregisterTool(createUid, this.createToolActivate);\n    toolMgr.unregisterTool(createUid, this.mapSelectToolActivate);\n\n    toolMgr.unregisterTool(otherUid, this.createToolActivate);\n    toolMgr.unregisterTool(otherUid, this.modifyToolActivate);\n    toolMgr.unregisterTool(otherUid, this.translateToolActivate);\n    toolMgr.unregisterTool(otherUid, this.rotateToolActivate);\n\n    this.createActive = false;\n    this.cancel();\n  }\n\n  this.modify_.setActive(active);\n  this.mapSelectActive = active;\n  this.editableTreeCtrl.properties['editing'] = active;\n\n};\n\n\n/**\n * Called when the mapSelectActive property changes.\n * @param {boolean} active Whether the map select is active or not.\n * @private\n */\nexports.Controller_.prototype.handleMapSelectActiveChange_ = function(\n  active) {\n\n  const mapDiv = this.map.getViewport();\n  googAsserts.assertElement(mapDiv);\n\n  if (active) {\n    olEvents.listen(this.map, 'click',\n      this.handleMapClick_, this);\n\n    olEvents.listen(mapDiv, 'contextmenu',\n      this.handleMapContextMenu_, this);\n\n  } else {\n    olEvents.unlisten(this.map, 'click',\n      this.handleMapClick_, this);\n\n    olEvents.unlisten(mapDiv, 'contextmenu',\n      this.handleMapContextMenu_, this);\n  }\n};\n\n\n/**\n * Called when the map is clicked.\n *\n * (1) If a vector feature was clicked, don't do anything (i.e. allow the\n *     interactions to do their bidings without selecting a new feature).\n *\n * (2) Otherwise, if there is a feature being edited and has unsaved\n *     modifications, show the confirmation modal asking the user what to do\n *     about it.\n *\n * (3) If there's no feature selected or we have one without unsaved\n *     modifications or with modifications that were canceled, launch a query\n *     to fetch the features at the clicked location.\n *\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapClick_ = function(evt) {\n  const coordinate = evt.coordinate;\n  const pixel = evt.pixel;\n\n  // (1) Check if we clicked on an existing vector feature, i.e the one\n  //     selected. In that case, no need to do any further action.\n  const feature = this.map.forEachFeatureAtPixel(\n    pixel,\n    (feature) => {\n      let ret = false;\n      if (olArray.includes(this.features.getArray(), feature)) {\n        ret = feature;\n      }\n      return ret;\n    },\n    {\n      hitTolerance: 5\n    }\n  );\n\n  if (feature) {\n    return;\n  }\n\n  // (2) If a feature is being edited and has unsaved changes, show modal\n  //     to let the user decide what to do\n  this.checkForModifications_(true).then(() => {\n\n    const map = this.map;\n    const view = map.getView();\n    const resolution = view.getResolution();\n    const buffer = resolution * this.tolerance;\n    const extent = olExtent.buffer(\n      [coordinate[0], coordinate[1], coordinate[0], coordinate[1]],\n      buffer\n    );\n\n    // (3) Launch query to fetch features\n    this.gmfEditFeature_.getFeaturesInExtent(\n      [this.editableNode_.id],\n      extent\n    ).then(this.handleGetFeatures_.bind(this));\n\n    // (4) Clear any previously selected feature\n    this.cancel();\n\n    // (5) Pending\n    this.pending = true;\n  });\n};\n\n\n/**\n * @param {Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapContextMenu_ = function(evt) {\n  const pixel = this.map.getEventPixel(evt);\n  const coordinate = this.map.getCoordinateFromPixel(pixel);\n\n  let feature = this.map.forEachFeatureAtPixel(\n    pixel,\n    (feature) => {\n      let ret = false;\n      if (olArray.includes(this.features.getArray(), feature)) {\n        ret = feature;\n      }\n      return ret;\n    },\n    {\n      hitTolerance: 7\n    }\n  );\n\n  feature = feature ? feature : null;\n\n  // show contextual menu when clicking on certain types of features\n  if (feature) {\n    const type = this.ngeoFeatureHelper_.getType(feature);\n    if (type === ngeoGeometryType.POLYGON || type === ngeoGeometryType.MULTI_POLYGON ||\n        type === ngeoGeometryType.LINE_STRING || type === ngeoGeometryType.MULTI_LINE_STRING) {\n      this.menu_.open(coordinate);\n    }\n    evt.preventDefault();\n    evt.stopPropagation();\n  }\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @private\n */\nexports.Controller_.prototype.handleGetFeatures_ = function(features) {\n  this.pending = false;\n\n  this.timeout_(() => {\n    if (features.length) {\n      const feature = features[0];\n      this.feature = feature;\n      this.features.push(feature);\n    }\n  }, 0);\n};\n\n\n/**\n * Initialize interactions by setting them inactive and decorating them\n * @private\n */\nexports.Controller_.prototype.initializeInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    interaction.setActive(false);\n    ngeoMiscDecorate.interaction(interaction);\n  });\n};\n\n\n/**\n * Register interactions by adding them to the map\n * @private\n */\nexports.Controller_.prototype.registerInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    this.map.addInteraction(interaction);\n  });\n};\n\n\n/**\n * Unregister interactions, i.e. set them inactive and remove them from the map\n * @private\n */\nexports.Controller_.prototype.unregisterInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    this.map.removeInteraction(interaction);\n  });\n};\n\n\n/**\n * @param {?ol.Feature} newFeature The new feature.\n * @param {?ol.Feature} oldFeature The old feature.\n * @private\n */\nexports.Controller_.prototype.handleFeatureChange_ = function(\n  newFeature, oldFeature\n) {\n\n  let geom;\n  if (oldFeature) {\n    olEvents.unlisten(oldFeature, 'propertychange', this.handleFeaturePropertyChange_, this);\n    geom = oldFeature.getGeometry();\n    googAsserts.assert(geom);\n    olEvents.unlisten(\n      geom,\n      'change',\n      this.handleFeatureGeometryChange_,\n      this\n    );\n    this.unregisterInteractions_();\n  }\n\n  if (newFeature) {\n    this.featureId = newFeature.getId();\n    olEvents.listen(newFeature, 'propertychange', this.handleFeaturePropertyChange_, this);\n    geom = newFeature.getGeometry();\n    googAsserts.assert(geom);\n    olEvents.listen(\n      geom,\n      'change',\n      this.handleFeatureGeometryChange_,\n      this\n    );\n    this.registerInteractions_();\n\n    this.gmfSnapping_.ensureSnapInteractionsOnTop();\n\n    // The `ui-date` triggers an unwanted change, i.e. it converts the text\n    // to Date, which makes the directive dirty when it shouldn't... to\n    // bypass this, we reset the dirty state here. We do so only if we're\n    // editing an existing feature\n    if (this.featureId) {\n      this.timeout_(() => {\n        this.dirty = false;\n        this.scope_.$apply();\n      }, 0);\n    }\n  } else {\n    this.featureId = undefined;\n  }\n\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleFeaturePropertyChange_ = function() {\n  this.dirty = true;\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleFeatureGeometryChange_ = function() {\n  this.dirty = true;\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {ngeox.MenuEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMenuActionClick_ = function(evt) {\n  const action = evt.detail.action;\n\n  switch (action) {\n    case 'move':\n      this.translate_.setActive(true);\n      this.scope_.$apply();\n      break;\n    case 'rotate':\n      this.rotate_.setActive(true);\n      this.scope_.$apply();\n      break;\n    default:\n      break;\n  }\n};\n\n\n/**\n * @param {ol.interaction.Translate.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleTranslateEnd_ = function(evt) {\n  this.translate_.setActive(false);\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {!ngeox.RotateEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleRotateEnd_ = function(evt) {\n  this.rotate_.setActive(false);\n  this.scope_.$apply();\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  this.features.clear();\n  this.handleFeatureChange_(null, this.feature);\n  this.feature = null;\n  const uid = olBase.getUid(this);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n  this.toggle_(false);\n  this.handleMapSelectActiveChange_(false);\n  this.unregisterInteractions_();\n};\n\n\nexports.controller('GmfEditfeatureController',\n  exports.Controller_);\n\n\n/**\n * The different possible values of the `state` inner property.\n * @enum {string}\n */\nexports.State = {\n  /**\n   * The default state. While idle, nothing happens.\n   * @type {string}\n   */\n  IDLE: 'idle',\n  /**\n   * The state active after the deactivation of the editing tools and the\n   * unsaved modifications were saved or discarded.\n   * @type {string}\n   */\n  DEACTIVATE_EXECUTE: 'deactivate_execute',\n  /**\n   * The state active when the deactivation of the editing tools is in\n   * progress while there are unsaved modifications.\n   * @type {string}\n   */\n  DEACTIVATE_PENDING: 'deactivate_pending',\n  /**\n   * Final state set after the \"stop editing\" button has been clicked while\n   * no unsaved modifications were made or if the user saved them or confirmed\n   * to continue without saving.\n   * @type {string}\n   */\n  STOP_EDITING_EXECUTE: 'stop_editing_execute',\n  /**\n   * The state that is active while when the \"stop editing\" button has been\n   * clicked but before any confirmation has been made to continue.\n   * @type {string}\n   */\n  STOP_EDITING_PENDING: 'stop_editing_pending'\n};\n\n\nexport default exports;\n","/**\n * @module gmf.theme.Manager\n */\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *    let module = angular.module('app');\n *    module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {boolean} gmfTreeManagerModeFlush Flush mode active?\n * @param {gmf.layertree.TreeManager} gmfTreeManager the tree manager.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @struct\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($rootScope, gmfThemes, gmfTreeManagerModeFlush,\n  gmfTreeManager, ngeoStateManager) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$rootScope_ = $rootScope;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modeFlush = gmfTreeManagerModeFlush;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.themeName_ = '';\n};\n\n\n/**\n * Set the current theme name (mode 'flush' only) and add its children. Add\n * only groups that are not already in the tree.\n * @param {!gmfThemes.GmfTheme} theme A theme object.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.prototype.addTheme = function(theme, opt_silent) {\n  if (this.modeFlush) {\n    this.ngeoStateManager_.updateState({\n      'theme': theme.name\n    });\n    this.setThemeName(theme.name);\n    this.gmfTreeManager_.setFirstLevelGroups(theme.children);\n  } else {\n    this.gmfTreeManager_.addFirstLevelGroups(theme.children, false, opt_silent);\n  }\n};\n\n\n/**\n * @return {string} The theme name. Will be empty on 'not flush' mode.\n * @export\n */\nexports.prototype.getThemeName = function() {\n  return this.themeName_;\n};\n\n\n/**\n * @return {boolean} true if the theme is loading.\n * @export\n */\nexports.prototype.isLoading = function() {\n  return !this.gmfThemes_.loaded;\n};\n\n/**\n * @param {string} name The new theme name.\n * @param {boolean=} opt_silent Don't emit a theme change event, default is false.\n */\nexports.prototype.setThemeName = function(name, opt_silent) {\n  this.themeName_ = name;\n  if (!opt_silent) {\n    this.$rootScope_.$emit(exports.EventType.THEME_NAME_SET, name);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @enum {string}\n */\nexports.EventType = {\n  /**\n   * Triggered when the theme name change.\n   */\n  THEME_NAME_SET: 'gmf-thememanager-theme_name_set'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemeManager', [\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoStatemanagerService.module.name,\n]);\n\n/**\n * The default value for `modeFlush` that `gmf.layertree.TreeManager` is initialized with.\n */\nexports.module.value('gmfTreeManagerModeFlush', true);\n\nexports.module.service('gmfThemeManager', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.DataSource\n */\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.DataSources`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Select\n */\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A select rule, which allows the selection of multiple values among a list\n   * of choices.\n   *\n   * The expression property holds the list of selected choices, which is\n   * comma-separated.\n   *\n   * @struct\n   * @param {!ngeox.rule.SelectOptions} options Options.\n   */\n  constructor(options) {\n\n    options.operator = ngeoRuleRule.OperatorType.EQUAL_TO;\n    options.type = ngeoFormatAttributeType.SELECT;\n\n    super(options);\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n    this.choices_ = options.choices;\n\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {Array.<string>} Choices\n   * @export\n   */\n  get choices() {\n    return this.choices_;\n  }\n\n  // === Calculated property getters ===\n\n  /**\n   * @return {Array.<string>} Selected choices\n   * @export\n   */\n  get selectedChoices() {\n    let selectedChoices;\n    if (this.expression) {\n      const stringExpression = String(this.expression);\n      selectedChoices = stringExpression.split(',');\n    } else {\n      selectedChoices = [];\n    }\n    return selectedChoices;\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.ToolActivateMgr\n */\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * Provides a service to manage the activation of `ngeo.misc.ToolActivate` objects.\n *\n * Example:\n *\n * Each tool must be registered before using it.\n *\n *     let tool = new ngeo.misc.ToolActivate(interaction, 'active');\n *     ngeoToolActivateMgr.registerTool('mapTools', tool);\n *\n * A tool will be registered in a group identified by a group name.\n * Once registered a tool can be activated and deactivated. When activating a\n * tool, all others tools in the same group will be deactivated.\n *\n *     ngeoToolActivateMgr.activateTool(tool);\n *     ngeoToolActivateMgr.deactivateTool(tool);\n *\n * See our live examples:\n * [../examples/mapquery.html](../examples/mapquery.html)\n * [../examples/toolActivate.html](../examples/toolActivate.html)\n *\n * @param {angular.Scope} $rootScope The rootScope provider.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoToolActivateMgr\n * @ngInject\n */\nconst exports = function($rootScope) {\n\n  /**\n   * @type {!Object.<string, Array.<ngeox.miscToolActivateMgrEntry>>}\n   * @private\n   */\n  this.groups_ = {};\n\n  /**\n   * The scope.\n   * @type {angular.Scope}\n   * @private\n   */\n  this.scope_ = $rootScope;\n};\n\n\n/**\n * Register a tool.\n * @param {string} groupName Name of the group of this tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to register.\n * @param {boolean=} opt_defaultActivate If true, this tool will be activated\n *     when all other tools in the group are deactivated.\n * @export\n */\nexports.prototype.registerTool = function(groupName, tool,\n  opt_defaultActivate) {\n  let entries = this.groups_[groupName];\n  if (!entries) {\n    entries = this.groups_[groupName] = [];\n  }\n\n  const unlisten = this.scope_.$watch(\n    tool.getActive,\n    (newVal, oldVal) => {\n      if (newVal === oldVal) {\n        return;\n      }\n      if (newVal) {\n        this.deactivateTools_(groupName, tool);\n      } else {\n        this.activateDefault_(groupName);\n      }\n    });\n\n  entries.push({\n    tool: tool,\n    defaultTool: opt_defaultActivate || false,\n    unlisten: unlisten\n  });\n\n  if (googAsserts.ENABLE_ASSERTS) {\n    // check that only one default tool per group exists\n    let defaultTools = 0;\n    entries.forEach((entry) => {\n      if (entry.defaultTool) {\n        defaultTools++;\n      }\n    });\n    googAsserts.assert(\n      defaultTools <= 1, `more than one default tool in group ${groupName}`);\n  }\n};\n\n\n/**\n * Unregister a tool from a group.\n * @param {string} groupName Name of the group of this tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to unregister.\n * @export\n */\nexports.prototype.unregisterTool = function(groupName, tool) {\n  const entries = this.groups_[groupName];\n  if (entries) {\n    for (let i = 0; i < entries.length; i++) {\n      if (entries[i].tool == tool) {\n        entries[i].unlisten();\n        entries.splice(i, 1);\n        break;\n      }\n    }\n  }\n};\n\n\n/**\n * Unregister each tool from a group.\n * @param {string} groupName Name of the group of tools to unregister.\n * @export\n */\nexports.prototype.unregisterGroup = function(groupName) {\n  const entries = this.groups_[groupName];\n  if (entries) {\n    for (let i = 0; i < entries.length; i++) {\n      entries[i].unlisten();\n    }\n    delete this.groups_[groupName];\n  }\n};\n\n\n/**\n * Activate a tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to activate.\n * @export\n */\nexports.prototype.activateTool = function(tool) {\n  tool.setActive(true);\n};\n\n\n/**\n * Deactivate a tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to deactivate.\n * @export\n */\nexports.prototype.deactivateTool = function(tool) {\n  tool.setActive(false);\n};\n\n\n/**\n * Deactivate all tools except the given one.\n *\n * @param {string} groupName Name of the group.\n * @param {ngeo.misc.ToolActivate} tool Tool to activate.\n * @private\n */\nexports.prototype.deactivateTools_ = function(groupName, tool) {\n  const entries = this.groups_[groupName];\n  for (let i = 0; i < entries.length; i++) {\n    if (tool != entries[i].tool) {\n      entries[i].tool.setActive(false);\n    }\n  }\n};\n\n\n/**\n * Activate the default tool in the given group if no other tool is active.\n *\n * @param {string} groupName Name of the group.\n * @private\n */\nexports.prototype.activateDefault_ = function(groupName) {\n  const entries = this.groups_[groupName];\n  let defaultTool = null;\n  let hasActiveTool = false;\n\n  for (let i = 0; i < entries.length; i++) {\n    hasActiveTool = hasActiveTool || entries[i].tool.getActive();\n\n    if (entries[i].defaultTool) {\n      defaultTool = entries[i].tool;\n    }\n  }\n\n  if (!hasActiveTool && defaultTool !== null) {\n    defaultTool.setActive(true);\n  }\n};\n\n\nexports.module = angular.module('ngeoToolActivateMgr', []);\nexports.module.service('ngeoToolActivateMgr', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.btnComponent\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoBtnComponent', []);\n\n\n/**\n * Provides two directives: ngeo-btn-group and ngeo-btn.\n *\n * The ngeo-btn-group directive allows creating \"toggle\" groups. It works with\n * the ngeo-btn directive.\n *\n * Example:\n *\n *     <div ngeo-btn-group>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawPoint.active\"></button>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawLine.active\"></button>\n *     </div>\n *\n * In that example the ngeo-btn are combined together in a \"toggle group\",\n * where activating a button will deactivate the others.\n *\n * One can use `ng-model` directive at the group level in order to know if\n * a button is active.\n *\n * Example:\n *\n *     <div ngeo-btn-group ngeo-btn-group-active=\"ctrl.drawToolActive\">\n *\n * See our live example: [../examples/interactionbtngroup.html](../examples/interactionbtngroup.html)\n *\n * @htmlAttribute {*} ngeo-btn-group-active Any property of the scope.\n * Tells whether at least one button of the group is active.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoBtnGroup\n */\nexports.btnGroupComponent_ = function($parse) {\n  return {\n    restrict: 'A',\n    controller: 'ngeoBtnGroupController',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Attributes.\n     * @param {!ngeo.misc.btnComponent.BtnGroupController=} controller Controller.\n     */\n    link: (scope, element, attrs, controller) => {\n      const setActive = $parse(attrs['ngeoBtnGroupActive']).assign;\n\n      if (setActive) {\n        scope.$watch(\n          // return true if at least one button is active otherwise false\n          () => controller.buttons_.some(buttonModel => buttonModel(scope) === true),\n          (newValue) => {\n            setActive(scope, newValue);\n          }\n        );\n      }\n    }\n  };\n};\n\n\nexports.directive('ngeoBtnGroup', exports.btnGroupComponent_);\n\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoBtnGroupController\n */\nexports.BtnGroupController = function($scope) {\n  /**\n   * @type {!Array.<!angular.parse.Expression>}\n   * @private\n   */\n  this.buttons_ = [];\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n};\n\n\n/**\n * @param {number} index Index of the button in buttons array.\n */\nexports.BtnGroupController.prototype.activate = function(index) {\n  this.buttons_.forEach((expressionFn, i) => {\n    if (i != index) {\n      expressionFn.assign(this.scope_, false);\n    }\n  });\n};\n\n\n/**\n * @param {angular.parse.Expression} expressionFn Expression function.\n * @return {number} Index of the pushed setter.\n */\nexports.BtnGroupController.prototype.addButton = function(expressionFn) {\n  this.buttons_.push(expressionFn);\n  return this.buttons_.length - 1;\n};\n\n\nexports.controller('ngeoBtnGroupController',\n  exports.BtnGroupController);\n\n\n/**\n * The ngeo-btn allows creating toggle buttons working with ng-model. It is\n * typically used with Bootstrap buttons (`btn`).\n *\n * Example:\n *\n *     <button ngeo-btn class=\"btn\" ng-model=\"ctrl.interaction.active\"></button>\n *\n * This example is about creating a Bootstrap button that can pressed/depressed\n * to activate/deactivate an OpenLayers interaction.\n *\n * @htmlAttribute {*} ng-model Any property on the scope. Ideally a boolean.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoBtn\n */\nexports.btnComponent_ = function($parse) {\n  return {\n    require: ['?^ngeoBtnGroup', 'ngModel'],\n    restrict: 'A',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Attributes.\n     * @param {!Array.<!Object>=} ctrls Controller.\n     */\n    link: (scope, element, attrs, ctrls) => {\n      const buttonsCtrl = ctrls[0];\n      const ngModelCtrl = ctrls[1];\n      let indexInGroup = -1;\n\n      const ngModelGet = $parse(attrs['ngModel']);\n      const ngModelSet = ngModelGet.assign;\n\n      // Set ng-model value to false if undefined\n      if (ngModelGet(scope) === undefined) {\n        ngModelSet(scope, false);\n      }\n      if (buttonsCtrl !== null) {\n        indexInGroup = buttonsCtrl.addButton(ngModelGet);\n      }\n\n      // UI -> model\n      element.on('click', () => {\n        scope.$apply(() => {\n          ngModelCtrl.$setViewValue(!ngModelCtrl.$viewValue);\n          ngModelCtrl.$render();\n        });\n      });\n\n      // model -> UI\n      ngModelCtrl.$render = function() {\n        if (ngModelCtrl.$viewValue && buttonsCtrl !== null) {\n          buttonsCtrl.activate(indexInGroup);\n        }\n        element.toggleClass('active', ngModelCtrl.$viewValue);\n      };\n    }\n  };\n};\n\n\nexports.directive('ngeoBtn', exports.btnComponent_);\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.Service\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\n/**\n * Provides a service for managing the application state.\n * The application state is written to both the URL and the local storage.\n * @constructor\n * @struct\n * @param {!ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @param {!Array.<!RegExp>} ngeoUsedKeyRegexp regexp used to identify the used keys.\n * @ngInject\n */\nconst exports = function(ngeoLocation, ngeoUsedKeyRegexp) {\n\n  /**\n   * Object representing the application's initial state.\n   * @type {!Object.<string, string>}\n   */\n  this.initialState = {};\n\n  /**\n   * @type {!ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = ngeoLocation;\n\n\n  /**\n   * @type {!Array.<!RegExp>}\n   */\n  this.usedKeyRegexp = ngeoUsedKeyRegexp;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.useLocalStorage_;\n\n  this.setUseLocalStorage(false);\n\n  // Populate initialState with the application's initial state. The initial\n  // state is read from the location URL, or from the local storage if there\n  // is no state in the location URL.\n\n  const paramKeys = ngeoLocation.getParamKeys().filter(key => key != 'debug' && key != 'no_redirect');\n\n  if (paramKeys.length === 0) {\n    if (this.useLocalStorage_) {\n      for (const key in window.localStorage) {\n        googAsserts.assert(key);\n\n        this.usedKeyRegexp.some((keyRegexp) => {\n          if (key.match(keyRegexp)) {\n            const value = window.localStorage[key];\n            if (value !== undefined || value !== null) {\n              this.initialState[key] = value;\n            } else {\n              this.initialState[key] = '';\n            }\n            return true;\n          }\n        });\n      }\n    }\n  } else {\n    paramKeys.forEach((key) => {\n      this.usedKeyRegexp.some((keyRegexp) => {\n        if (key.match(keyRegexp)) {\n          const value = this.ngeoLocation.getParam(key);\n          if (value !== undefined) {\n            this.initialState[key] = value;\n            return true;\n          }\n        }\n      });\n    });\n  }\n};\n\n\n/**\n * @param {boolean} value Use localStorage\n * @return {boolean} localStorage will be used.\n */\nexports.prototype.setUseLocalStorage = function(value) {\n  this.useLocalStorage_ = value;\n\n  // check if localStorage is supported\n  if (this.useLocalStorage_) {\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n  }\n  return this.useLocalStorage_;\n};\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialValue = function(key) {\n  return this.initialState[key];\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialStringValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value;\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {number|undefined} State value.\n */\nexports.prototype.getInitialNumberValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return parseFloat(value);\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {boolean|undefined} State value.\n */\nexports.prototype.getInitialBooleanValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value === 'true';\n};\n\n\n/**\n * Update the application state with the values in `object`.\n * @param {!Object.<string, string>} object Object.\n */\nexports.prototype.updateState = function(object) {\n  this.ngeoLocation.updateParams(object);\n  if (this.useLocalStorage_) {\n    for (const key in object) {\n      googAsserts.assert(key);\n      const value = object[key];\n      googAsserts.assert(value !== undefined);\n      window.localStorage[key] = value;\n    }\n  }\n};\n\n\n/**\n * Delete a parameter\n * @param {string} key Key.\n */\nexports.prototype.deleteParam = function(key) {\n  this.ngeoLocation.deleteParam(key);\n  if (this.useLocalStorage_) {\n    delete window.localStorage[key];\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoStateManager', [\n  ngeoStatemanagerLocation.module.name\n]);\nexports.module.service('ngeoStateManager', exports);\nexports.module.value('ngeoUsedKeyRegexp', [new RegExp('.*')]);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.common\n */\nconst exports = {};\nimport {createEditingStyle} from 'ol/style/Style.js';\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nexports.getDefaultDrawStyleFunction = function() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[feature.getGeometry().getType()];\n  };\n};\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nexports.getDefaultModifyStyleFunction = function() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[/**@type {ol.geom.GeometryType} */ ('Point')];\n  };\n};\n\n\nexport default exports;\n","/**\n * @module gmf.authentication.Service\n */\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\n\n/**\n * An \"authentication\" service for a GeoMapFish application. Upon loading, it\n * launches a request to determine whether a user is currently logged in or\n * not.\n *\n * The possible API requests it supports, which are all self-explanatory, are:\n *\n * - changePassword\n * - login\n * - logout\n * - resetPassword\n *\n * @extends {ol.events.EventTarget}\n */\nconst exports = class extends olEventsEventTarget {\n\n  /**\n   * @param {angular.$http} $http Angular http service.\n   * @param {angular.$injector} $injector Main injector.\n   * @param {angular.Scope} $rootScope The directive's scope.\n   * @param {string} authenticationBaseUrl URL to \"authentication\" web service.\n   * @param {gmfx.User} gmfUser User.\n   * @ngInject\n   */\n  constructor($http, $injector, $rootScope, authenticationBaseUrl, gmfUser) {\n\n    super();\n\n    /**\n     * @type {angular.$http}\n     * @private\n     */\n    this.$http_ = $http;\n\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.$rootScope_ = $rootScope;\n\n    /**\n     * The authentication url without trailing slash\n     * @type {string}\n     * @private\n     */\n    this.baseUrl_ = authenticationBaseUrl.replace(/\\/$/, '');\n\n    /**\n     * @type {gmfx.User}\n     * @private\n     */\n    this.user_ = gmfUser;\n\n    /**\n      * Don't request a new user object from the back-end after\n      * logging out if the logged-in user's role has this role.\n      * @type {?string}\n      * @private\n      */\n    this.noReloadRole_ =  $injector.has('gmfAuthenticationNoReloadRole')\n      ? $injector.get('gmfAuthenticationNoReloadRole')\n      : null;\n\n    this.load_();\n  }\n\n  /**\n   * Load the authentication service, which sends an asynch request to\n   * determine whether the user is currently connected or not.\n   * @private\n   */\n  load_() {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.IS_LOGGED_IN}`;\n    this.$http_.get(url, {withCredentials: true}).then(\n      this.handleLogin_.bind(this, true)\n    );\n  }\n\n  /**\n   * @param {string} oldPwd Old password.\n   * @param {string} newPwd New password.\n   * @param {string} confPwd New password confirmation.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  changePassword(oldPwd, newPwd, confPwd) {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.CHANGE_PASSWORD}`;\n\n    return this.$http_.post(url, $.param({\n      'oldPassword': oldPwd,\n      'newPassword': newPwd,\n      'confirmNewPassword': confPwd\n    }), {\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'},\n      withCredentials: true\n    }).then(((response) => {\n      this.user_.is_password_changed = true;\n      this.$rootScope_.$digest();\n    }).bind(this));\n  }\n\n  /**\n   * @param {string} login Login name.\n   * @param {string} pwd Password.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  login(login, pwd) {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.LOGIN}`;\n\n    return this.$http_.post(url, $.param({'login': login, 'password': pwd}), {\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'},\n      withCredentials: true\n    }).then(\n      this.handleLogin_.bind(this, false));\n  }\n\n  /**\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  logout() {\n    const noReload = this.user_['role_name'] === this.noReloadRole_;\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.LOGOUT}`;\n    return this.$http_.get(url, {withCredentials: true}).then(() => {\n      this.resetUser_(noReload);\n    });\n  }\n\n  /**\n   * @param {string} login Login name.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  resetPassword(login) {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.RESET_PASSWORD}`;\n\n    /**\n     * @param {angular.$http.Response} resp Ajax response.\n     * @return {gmfx.AuthenticationDefaultResponse} Response.\n     */\n    const successFn = function(resp) {\n      const respData = /** @type gmfx.AuthenticationDefaultResponse} */ (\n        resp.data);\n      return respData;\n    }.bind(this);\n\n    return this.$http_.post(url, $.param({'login': login}), {\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'}\n    }).then(successFn);\n  }\n\n  /**\n   * @return {?gmfx.AuthenticationFunctionalities} The role functionalities.\n   */\n  getFunctionalities() {\n    return this.user_.functionalities;\n  }\n\n  /**\n   * @return {number|null} The role ID.\n   */\n  getRoleId() {\n    return this.user_.role_id;\n  }\n\n  /**\n   * @param {boolean} checkingLoginStatus Checking the login status?\n   * @param {angular.$http.Response} resp Ajax response.\n   * @return {angular.$http.Response} Response.\n   * @private\n   */\n  handleLogin_(checkingLoginStatus, resp) {\n    const respData = /** @type {gmfx.AuthenticationLoginResponse} */ (resp.data);\n    this.setUser_(respData, !checkingLoginStatus);\n    if (checkingLoginStatus) {\n      /** @type {gmfx.AuthenticationEvent} */\n      const event = new ngeoCustomEvent('ready', {user: this.user_});\n      this.dispatchEvent(event);\n    }\n    return resp;\n  }\n\n  /**\n   * @param {gmfx.AuthenticationLoginResponse} respData Response.\n   * @param {boolean} emitEvent Emit a login event?\n   * @private\n   */\n  setUser_(respData, emitEvent) {\n    for (const key in respData) {\n      this.user_[key] = respData[key];\n    }\n    if (emitEvent && respData.username !== undefined) {\n      /** @type {gmfx.AuthenticationEvent} */\n      const event = new ngeoCustomEvent('login', {user: this.user_});\n      this.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @private\n   * @param {boolean} noReload Don't request a new user object from\n   * the back-end after logging out, defaults to false.\n   */\n  resetUser_(noReload) {\n    noReload = noReload || false;\n    for (const key in this.user_) {\n      this.user_[key] = null;\n    }\n    /** @type {gmfx.AuthenticationEvent} */\n    const event = new ngeoCustomEvent('logout', {user: this.user_});\n    this.dispatchEvent(event);\n    if (!noReload) {\n      this.load_();\n    }\n  }\n};\n\n/**\n * @enum {string}\n */\nexports.RouteSuffix = {\n  CHANGE_PASSWORD: 'loginchange',\n  IS_LOGGED_IN: 'loginuser',\n  LOGIN: 'login',\n  LOGOUT: 'logout',\n  RESET_PASSWORD: 'loginresetpassword'\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfAuthenticationService', []);\nexports.module.service('gmfAuthenticationService', exports);\n\nexports.module.value('gmfUser', {\n  'functionalities': null,\n  'is_password_changed': null,\n  'role_id': null,\n  'role_name': null,\n  'username': null\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.Time\n */\n/**\n * ngeo - Time service\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc service\n * @ngname ngeoTime\n */\nconst exports = function() {};\n\n\n/**\n * Get options regarding the time property of a node;\n *\n * @param {ngeox.TimeProperty} time the time property of a node\n * @return {{\n *  minDate : number,\n *  maxDate : number,\n *  values : (Array<number>|number)\n * }} - Configuration for the UI components\n * @export\n */\nexports.prototype.getOptions = function(time) {\n\n  const minDate = new Date(time.minValue);\n  const maxDate = new Date(time.maxValue);\n\n  const minDefaultDate = (time.minDefValue) ?\n    new Date(time.minDefValue) : minDate;\n  const maxDefaultDate = (time.maxDefValue) ?\n    new Date(time.maxDefValue) : maxDate;\n\n  const defaultValues = (time.mode === 'range') ?\n    [minDefaultDate.getTime(), maxDefaultDate.getTime()] :\n    minDefaultDate.getTime();\n\n  return {\n    minDate: minDate.getTime(),\n    maxDate: maxDate.getTime(),\n    values: defaultValues\n  };\n};\n\n\n/**\n * Time.prototype.getUTCDate - Get UTC date from a local date object\n *\n * @param  {Object} localDate loacl date object in\n * @return {Object} UTC date\n * @export\n */\nexports.prototype.getUTCDate = function(localDate) {\n  return new Date(\n    localDate.getUTCFullYear(),\n    localDate.getUTCMonth(),\n    localDate.getUTCDate());\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoTime', []);\nexports.module.service('ngeoTime', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.DrawAzimut\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olInteractionPointer, {handleEvent as pointerHandleEvent} from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure azimut.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.PointerOptions} options Options.\n */\nconst exports = function(options) {\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: exports.handleDownEvent_,\n    handleEvent: exports.handleEvent_,\n    handleUpEvent: exports.handleUpEvent_\n  });\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source !== undefined ? options.source : null;\n\n  /**\n   * Tglls whether the drawing has started or not.\n   * @type {boolean}\n   * @private\n   */\n  this.started_ = false;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = 4;\n\n\n  /**\n   * Vector layer where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.sketchLayer_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: false\n    }),\n    style: options.style || ngeoInteractionCommon.getDefaultDrawStyleFunction()\n  });\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleDownEvent_ = function(event) {\n  this.downPx_ = event.pixel;\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleUpEvent_ = function(event) {\n  const downPx = this.downPx_;\n  const clickPx = event.pixel;\n  const dx = downPx[0] - clickPx[0];\n  const dy = downPx[1] - clickPx[1];\n  const squaredDistance = dx * dx + dy * dy;\n  let pass = true;\n  if (squaredDistance <= this.squaredClickTolerance_) {\n    this.handlePointerMove_(event);\n    if (!this.started_) {\n      this.startDrawing_(event);\n    } else {\n      this.finishDrawing_();\n    }\n    pass = false;\n  }\n  return pass;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleEvent_ = function(mapBrowserEvent) {\n  let pass = true;\n  if (mapBrowserEvent.type === 'pointermove') {\n    pass = this.handlePointerMove_(mapBrowserEvent);\n  } else if (mapBrowserEvent.type === 'dblclick') {\n    pass = false;\n  }\n  return pointerHandleEvent.call(this, mapBrowserEvent) && pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nexports.prototype.handlePointerMove_ = function(event) {\n  if (this.started_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (this.sketchPoint_ === null) {\n    this.sketchPoint_ = new olFeature(new olGeomPoint(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = this.sketchPoint_.getGeometry();\n    googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Redraw the skecth features.\n * @private\n */\nexports.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_ !== null) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchPoint_ !== null) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const source = this.sketchLayer_.getSource();\n  source.clear(true);\n  source.addFeatures(sketchFeatures);\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.started_ = true;\n  const line = new olGeomLineString([start.slice(), start.slice()]);\n  const circle = new olGeomCircle(start, 0);\n  const geometry = new olGeomGeometryCollection([line, circle]);\n  googAsserts.assert(geometry !== undefined);\n  this.sketchFeature_ = new olFeature();\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  /** @type {ngeox.DrawEvent} */\n  const evt = new ngeoCustomEvent('drawstart', {feature: this.sketchFeature_});\n  this.dispatchEvent(evt);\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.modifyDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = googAsserts.assertInstanceof(\n    this.sketchFeature_.getGeometry(), olGeomGeometryCollection);\n  const geometries = geometry.getGeometriesArray();\n  const line = geometries[0];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  const coordinates = line.getCoordinates();\n  const sketchPointGeom = this.sketchPoint_.getGeometry();\n  googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n  sketchPointGeom.setCoordinates(coordinate);\n  const last = coordinates[coordinates.length - 1];\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  line.setCoordinates(coordinates);\n  const circle = googAsserts.assertInstanceof(geometries[1], olGeomCircle);\n  circle.setRadius(line.getLength());\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nexports.prototype.abortDrawing_ = function() {\n  this.started_ = false;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature !== null) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLayer_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.shouldStopEvent = olFunctions.FALSE;\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (map === null || !active) {\n    this.abortDrawing_();\n  }\n  this.sketchLayer_.setMap(active ? map : null);\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * @private\n */\nexports.prototype.finishDrawing_ = function() {\n  const sketchFeature = this.abortDrawing_();\n  googAsserts.assert(sketchFeature !== null);\n\n  if (this.source_ !== null) {\n    this.source_.addFeature(sketchFeature);\n  }\n\n  /** @type {ngeox.DrawEvent} */\n  const event = new ngeoCustomEvent('drawend', {feature: this.sketchFeature_});\n  this.dispatchEvent(event);\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  olInteractionPointer.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MeasureAzimut\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionDrawAzimut from 'ngeo/interaction/DrawAzimut.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olProjProjection from 'ol/proj/Projection.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @fires ngeox.MeasureEvent\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} unitPrefixFormat The format function\n * @param {!ngeox.number} numberFormat The format function\n * @param {!ngeox.interaction.MeasureOptions=} options Options\n */\nconst exports = function(unitPrefixFormat, numberFormat, options = /** @type {ngeox.interaction.MeasureOptions} */({})) {\n\n  ngeoInteractionMeasure.call(this, /** @type {ngeo.interaction.MeasureBaseOptions} */ (options));\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = 'Click to finish.';\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.number}\n   */\n  this.numberFormat = googAsserts.assert(numberFormat);\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat = googAsserts.assert(unitPrefixFormat);\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style,\n  source) {\n\n  return new ngeoInteractionDrawAzimut({\n    source,\n    style\n  });\n\n\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomGeometryCollection);\n  const line = googAsserts.assertInstanceof(geom.getGeometries()[0], olGeomLineString);\n  const output = exports.getFormattedAzimutRadius(\n    line, googAsserts.assertInstanceof(this.getMap().getView().getProjection(), olProjProjection),\n    this.decimals, this.precision, this.unitPrefixFormat, this.numberFormat);\n  callback(output, line.getLastCoordinate());\n};\n\n\n/**\n * Format measure output of azimut and radius.\n * @param {!ol.geom.LineString} line LineString.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} decimals Decimals.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} formatLength The format function.\n * @param {!ngeox.number} formatAzimut The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimutRadius = function(\n  line, projection, decimals, precision, formatLength, formatAzimut) {\n\n  let output = exports.getFormattedAzimut(line, decimals, formatAzimut);\n\n  output += `, ${ngeoInteractionMeasure.getFormattedLength(\n    line, projection, precision, formatLength)}`;\n\n  return output;\n};\n\n\n/**\n * Format measure output of azimut.\n * @param {!ol.geom.LineString} line LineString.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.number} format The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimut = function(line, decimals, format) {\n  const azimut = exports.getAzimut(line);\n  return `${format(azimut, decimals)}°`;\n};\n\n\n/**\n * Compute azimut from a 2 points line.\n * @param {ol.geom.LineString} line LineString.\n * @return {number} Azimut value.\n */\nexports.getAzimut = function(line) {\n  const coords = line.getCoordinates();\n  const dx = coords[1][0] - coords[0][0];\n  const dy = coords[1][1] - coords[0][1];\n  const rad = Math.acos(dy / Math.sqrt(dx * dx + dy * dy));\n  const factor = dx > 0 ? 1 : -1;\n  return (factor * rad * 180 / Math.PI) % 360;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.message.popupComponent\n */\n\nimport 'angular-sanitize';\n\n\nconst exports = angular.module('ngeoPopup', [\n  'ngSanitize',\n]);\n\n\nexports.value('ngeoPopupTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoPopupTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/message/popupcomponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/message/popupcomponent', require('./popupcomponent.html'));\n});\n\n\n/**\n * Provides a directive used to show a popup over the page with\n * a title and content.\n *\n *\n * Things to know about this directive:\n *\n * - This directive is intended to be used along with the popup service.\n *\n * - By default the directive uses \"popup.html\" as its templateUrl. This can be\n *   changed by redefining the \"ngeoPopupTemplateUrl\" value.\n *\n * - The directive doesn't create any scope but relies on its parent scope.\n *   Properties like 'content', 'title' or 'open' come from the parent scope.\n *\n * @private\n * @param {string} ngeoPopupTemplateUrl URL to popup template.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoPopup\n */\nexports.directive_ = function(ngeoPopupTemplateUrl) {\n  return {\n    restrict: 'A',\n    templateUrl: ngeoPopupTemplateUrl,\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      element.addClass('popover');\n\n      /**\n       * @param {jQuery.Event} evt Event.\n       */\n      scope.close = function(evt) {\n        if (evt) {\n          evt.stopPropagation();\n          evt.preventDefault();\n        }\n        element.addClass('hidden');\n      };\n\n      // Watch the open property\n      scope.$watch('open', (newVal, oldVal) => {\n        element.css('display', newVal ? 'block' : 'none');\n      });\n    }\n  };\n};\n\nexports.directive('ngeoPopup', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Popup\n */\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * This goog.require is needed because of 'ngeo-popup' used in\n * the template.\n * @suppress {extraRequire}\n */\nimport ngeoMessagePopupComponent from 'ngeo/message/popupComponent.js';\n\n/**\n * Provides a factory to create a popup in the page.\n * The factory returns a ngeo.message.Popup object.\n *\n * Example:\n *\n *     let popup = ngeoCreatePopup();\n *     popup.setTitle(\"A title\");\n *     popup.setContent(\"Some content\");\n *     popup.setOpen(true);\n *\n * @constructor\n * @struct\n * @param {angular.$compile} $compile The compile provider.\n * @param {angular.Scope} $rootScope The rootScope provider.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoCreatePopup\n */\nconst exports = function($compile, $rootScope, $sce, $timeout) {\n\n  /**\n   * The scope the compiled element is link to.\n   * @type {angular.Scope}\n   * @export\n   */\n  this.scope = $rootScope.$new(true);\n\n  // manage the auto destruction of the popup\n  this.scope.$watch(\n    () => this.scope['open'],\n    (open) => {\n      if (!open && this.autoDestroy_) {\n        this.timeout_(() => {\n          this.destroy();\n        });\n      }\n    }\n  );\n\n  /**\n   * @private\n   * @type {angular.$sce}\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * The element.\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.element_ = angular.element('<div ngeo-popup></div>');\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.autoDestroy_ = false;\n\n\n  // Compile the element, link it to the scope and add it to the document.\n  $compile(this.element_)(this.scope);\n  angular.element(document.body).append(this.element_);\n};\n\n\n/**\n * Get the current popup state.\n * @return {boolean} `true` if the popup is currently, otherwise `false`.\n * @export\n */\nexports.prototype.getOpen = function() {\n  return this.scope['open'];\n};\n\n\n/**\n * Show/hide the popup.\n * @param {boolean} open `true` to show the popup, `false` to hide it.\n * @export\n */\nexports.prototype.setOpen = function(open) {\n  this.scope['open'] = open;\n};\n\n\n/**\n * Destroy the popup.\n * @export\n */\nexports.prototype.destroy = function() {\n  this.scope.$destroy();\n  this.element_.remove();\n};\n\n\n/**\n * Set the popup's title.\n * @param {string} title The title.\n * @export\n */\nexports.prototype.setTitle = function(title) {\n  const trustedTitle = this.sce_.trustAsHtml(title);\n  this.scope['title'] = trustedTitle;\n};\n\n\n/**\n * Set the popup's content.\n * Note: the type of the `content` param is `*` instead of `string`, this\n * is because the content may be trusted using `$sce.trustAsHtml`.\n * @param {*} content The content.\n * @param {boolean=} opt_trusted Whether the content can be trusted.\n *     Default is false.\n * @export\n */\nexports.prototype.setContent = function(content, opt_trusted) {\n  this.scope['content'] = opt_trusted ? this.sce_.trustAsHtml(/** @type {string} */ (content)) : content;\n};\n\n\n/**\n * Set the popup's content with an iframe using the given url.\n * @param {string} url The url of the page.\n * @export\n */\nexports.prototype.setUrl = function(url) {\n  const content = this.sce_.trustAsHtml(\n    `<iframe src=\"${url}\" width=\"100%\" height=\"100%\"></iframe>`\n  );\n  this.setContent(content);\n};\n\n\n/**\n * Set the popup's width.\n * @param {string} width Width the popup should have.\n * @export\n */\nexports.prototype.setWidth = function(width) {\n  this.element_.width(width);\n};\n\n\n/**\n * Set the popup's height.\n * @param {string} height Height the popup should have.\n * @export\n */\nexports.prototype.setHeight = function(height) {\n  this.element_.height(height);\n};\n\n\n/**\n * Set the popup's width and height.\n * @param {string} width Width the popup should have.\n * @param {string} height Height the popup should have.\n * @export\n */\nexports.prototype.setSize = function(width, height) {\n  this.setWidth(width);\n  this.setHeight(height);\n};\n\n\n/**\n * Set the popup's autoDestroy property.\n * @param {boolean} autoDestroy Whether to automatically destroy the popup when\n *     being closed or not.\n * @export\n */\nexports.prototype.setAutoDestroy = function(autoDestroy) {\n  this.autoDestroy_ = autoDestroy;\n};\n\n\n/**\n * Add an extra CSS class name to the popup.\n * @param {string} cls Class name to add to the popup element.\n * @export\n */\nexports.prototype.addClass = function(cls) {\n  this.element_.addClass(cls);\n};\n\n\n/**\n * Open a popup with the given properties.\n * @param {ngeox.PopupOptions} options Options.\n * @export\n */\nexports.prototype.open = function(options) {\n\n  if (options.url) {\n    this.setUrl(options.url);\n  } else if (options.content) {\n    this.setContent(options.content);\n  } else {\n    googAsserts.fail('ngeo.message.Popup options requirest \"url\" or \"content\".');\n  }\n\n  if (options.autoDestroy !== undefined) {\n    this.setAutoDestroy(options.autoDestroy);\n  }\n\n  if (options.cls !== undefined) {\n    this.addClass(options.cls);\n  }\n\n  if (options.height !== undefined) {\n    this.setHeight(options.height);\n  }\n\n  if (options.title !== undefined) {\n    this.setTitle(options.title);\n  }\n\n  if (options.width !== undefined) {\n    this.setWidth(options.width);\n  }\n\n  this.setOpen(true);\n};\n\n\n/**\n * @param {angular.$compile} $compile Angular compile service.\n * @param {angular.Scope} $rootScope Angular rootScope service.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.PopupFactory} The function to create a popup.\n * @ngInject\n */\nexports.Factory = function($compile, $rootScope, $sce, $timeout) {\n  return (\n    /**\n     * @return {!ngeo.message.Popup} The popup instance.\n     */\n    function() {\n      return new exports($compile, $rootScope, $sce, $timeout);\n    }\n  );\n};\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoCreatePopup', [\n  ngeoMessagePopupComponent.name,\n]);\nexports.module.factory('ngeoCreatePopup', exports.Factory);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.FeatureOverlay\n */\nimport * as olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach((feature) => {\n      this.addFeature(feature);\n    });\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\n\n\nexport default exports;\n","/**\n * @module ngeo.format.XSDAttribute\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatAttribute from 'ngeo/format/Attribute.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport * as olBase from 'ol/index.js';\nimport olFormatXML from 'ol/format/XML.js';\n\n/**\n * @classdesc\n * Reads attributes that are defined in XSD format and return them as a list.\n *\n * @constructor\n * @struct\n * @extends {ol.format.XML}\n */\nconst exports = function() {\n  olFormatXML.call(this);\n};\n\nolBase.inherits(exports, olFormatXML);\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Array.<ngeox.Attribute>} The parsed result.\n * @override\n */\nexports.prototype.read = function(source) {\n  return (\n    /** @type {Array.<ngeox.Attribute>} */ olFormatXML.prototype.read.call(this, source)\n  );\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<ngeox.Attribute>} List of attributes.\n * @override\n */\nexports.prototype.readFromDocument = function(doc) {\n  googAsserts.assert(doc.nodeType == Node.DOCUMENT_NODE,\n    'doc.nodeType should be DOCUMENT');\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<ngeox.Attribute>} List of attributes.\n * @override\n */\nexports.prototype.readFromNode = function(node) {\n  googAsserts.assert(node.nodeType == Node.ELEMENT_NODE,\n    'node.nodeType should be ELEMENT');\n  googAsserts.assert(node.localName == 'schema',\n    'localName should be schema');\n\n  let elements = node.getElementsByTagName('element');\n  if (!elements.length) {\n    elements = node.getElementsByTagName('xsd:element');\n  }\n  const attributes = [];\n\n  let attribute;\n  for (let i = 0, ii = elements.length; i < ii; i++) {\n    attribute = this.readFromElementNode_(elements[i]);\n    if (attribute) {\n      attributes.push(attribute);\n    }\n  }\n\n  return attributes;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {?ngeox.Attribute} An attribute object.\n * @private\n */\nexports.prototype.readFromElementNode_ = function(node) {\n\n  const name = node.getAttribute('name');\n  googAsserts.assertString(name, 'name should be defined in element node.');\n\n  const alias = node.getAttribute('alias');\n  const nillable = node.getAttribute('nillable');\n  const required = !(nillable === true || nillable === 'true');\n\n  const attribute = {\n    name,\n    alias,\n    required\n  };\n\n  const type = node.getAttribute('type');\n  if (type) {\n    if (!ngeoFormatAttribute.setGeometryType(attribute, type)) {\n      this.setAttributeByXsdType_(attribute, type);\n    }\n  } else {\n\n    // Attribute has no type defined on 'element' node.  Try:\n\n    // (1) Enumerations\n    let enumerations = node.getElementsByTagName('enumeration');\n    if (!enumerations.length) {\n      enumerations = node.getElementsByTagName('xsd:enumeration');\n    }\n    if (enumerations.length) {\n      attribute.type = ngeoFormatAttributeType.SELECT;\n      const choices = [];\n      for (let i = 0, ii = enumerations.length; i < ii; i++) {\n        choices.push(enumerations[i].getAttribute('value'));\n      }\n      attribute.choices = choices;\n    } else {\n      // (2) Other types with restrictions\n      let restrictions = node.getElementsByTagName('restriction');\n      if (!restrictions.length) {\n        restrictions = node.getElementsByTagName('xsd:restriction');\n      }\n      if (restrictions.length && restrictions[0]) {\n        const restrictionNode = restrictions[0];\n        this.setAttributeByXsdType_(\n          attribute,\n          restrictionNode.getAttribute('base')\n        );\n        // MaxLength\n        let maxLengths = node.getElementsByTagName('maxLength');\n        if (!maxLengths.length) {\n          maxLengths = node.getElementsByTagName('xsd:maxLength');\n        }\n        if (maxLengths.length && maxLengths[0]) {\n          attribute.maxLength = Number(maxLengths[0].getAttribute('value'));\n        }\n      }\n    }\n  }\n\n  if (!attribute.type) {\n    return null;\n  }\n\n  googAsserts.assert(attribute.type);\n\n  return attribute;\n};\n\n\n/**\n * Set the `type` and `numType` properties of an attribute depending on the\n * given xsdType.\n *\n * @param {ngeox.AttributeBase} attribute Attribute.\n * @param {string} type The xsd type.\n * @private\n */\nexports.prototype.setAttributeByXsdType_ = function(\n  attribute, type\n) {\n  if (type === 'xsd:boolean') {\n    attribute.type = ngeoFormatAttributeType.BOOLEAN;\n  } else if (type === 'xsd:date') {\n    attribute.type = ngeoFormatAttributeType.DATE;\n  } else if (type === 'xsd:dateTime') {\n    attribute.type = ngeoFormatAttributeType.DATETIME;\n  } else if (type === 'xsd:time') {\n    attribute.type = ngeoFormatAttributeType.TIME;\n  } else if (type === 'xsd:decimal' || type === 'xsd:double') {\n    attribute.type = ngeoFormatAttributeType.NUMBER;\n    attribute.numType = exports.NumberType.FLOAT;\n  } else if (type === 'xsd:integer') {\n    attribute.type = ngeoFormatAttributeType.NUMBER;\n    attribute.numType = exports.NumberType.INTEGER;\n  } else if (type === 'xsd:string') {\n    attribute.type = ngeoFormatAttributeType.TEXT;\n  }\n};\n\n\n/**\n * Returns the first geometry attribute among a given list of attributes.\n * @param {Array.<ngeox.Attribute>} attributes The list of attributes.\n * @return {?ngeox.Attribute} A geometry attribute object.\n */\nexports.getGeometryAttribute = function(attributes) {\n  let geomAttribute = null;\n  for (let i = 0, ii = attributes.length; i < ii; i++) {\n    if (attributes[i].type === ngeoFormatAttributeType.GEOMETRY) {\n      geomAttribute = attributes[i];\n      break;\n    }\n  }\n  return geomAttribute;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.NumberType = {\n  /**\n   * @type {string}\n   * @export\n   */\n  FLOAT: 'float',\n  /**\n   * @type {string}\n   * @export\n   */\n  INTEGER: 'integer'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.Group\n */\nimport googAsserts from 'goog/asserts.js';\nimport olCollection from 'ol/Collection.js';\n\nconst exports = class {\n\n  /**\n   * A Group data source combines multiple `ngeo.datasource.DataSource` objects.\n   * Its main purpose is to provide a calculated `visibilityState` property\n   * that can be used to determine if all its data source are all visible, all\n   * hidden or some are hidden and other visible.\n   *\n   * @struct\n   * @param {ngeox.datasource.GroupOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * @type {!ol.Collection.<!ngeo.datasource.DataSource>}\n     * @protected\n     */\n    this.dataSourcesCollection_ = new olCollection(options.dataSources);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.title_ = options.title;\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.dataSourcesCollection_.clear();\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSources() {\n    return this.dataSourcesCollection_.getArray();\n  }\n\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSourcesCollection() {\n    return this.dataSourcesCollection_;\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {string} Title\n   * @export\n   */\n  get title() {\n    return this.title_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {string} Visibility state\n   * @export\n   */\n  get visibilityState() {\n    let state;\n\n    for (const dataSource of this.dataSources) {\n      if (state === undefined) {\n        state = this.getDataSourceState(dataSource);\n      } else {\n        const otherState = this.getDataSourceState(dataSource);\n        if (otherState !== state) {\n          state = exports.VisibilityState.INDETERMINATE;\n        }\n      }\n      if (state === exports.VisibilityState.INDETERMINATE) {\n        break;\n      }\n    }\n\n    googAsserts.assertString(state);\n\n    return state;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source.\n   * @return {string} Visible state of a data source\n   * @export\n   */\n  getDataSourceState(dataSource) {\n    return dataSource.visible ?\n      exports.VisibilityState.ON :\n      exports.VisibilityState.OFF;\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to add.\n   * @export\n   */\n  addDataSource(dataSource) {\n    this.dataSourcesCollection_.push(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSourcesCollection_.remove(dataSource);\n  }\n\n  /**\n   * Update visible property of all data sources depending on the current\n   * visibility state:\n   *\n   * - state ON --> visible false\n   * - state OFF --> visible true\n   * - state IND. --> visible true\n   *\n   * @export\n   */\n  toggleVisibilityState() {\n    const visibleToSet =\n        this.visibilityState !== exports.VisibilityState.ON;\n    for (const dataSource of this.dataSources) {\n      if (dataSource.visible !== visibleToSet) {\n        dataSource.visible = visibleToSet;\n      }\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisibilityState = {\n  INDETERMINATE: 'indeterminate',\n  OFF: 'off',\n  ON: 'on'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.WFSAttribute\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatAttribute from 'ngeo/format/Attribute.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoFormatXSDAttribute from 'ngeo/format/XSDAttribute.js';\n\nconst exports = class {\n\n\n  /**\n   * A format that reads the complexType from a WFS DescribeFeatureType\n   * response for a single set of attributes and return an array of\n   * `ngeox.Attribute`.\n   */\n\n\n  /**\n   * @param {Array.<Object>} complexTypeElements Complex type element\n   * @return {Array.<ngeox.Attribute>} Attributes\n   */\n  read(complexTypeElements) {\n    return complexTypeElements.map(this.readFromComplexTypeElement_);\n  }\n\n\n  /**\n   * @param {Object} object Complex type element\n   * @return {ngeox.Attribute} Attribute\n   * @private\n   */\n  readFromComplexTypeElement_(object) {\n\n    const name = googAsserts.assertString(object['name']);\n    const alias = 'alias' in object ?\n      googAsserts.assertString(object['alias']) : null;\n    const required = object['minOccurs'] != '0';\n\n    const attribute = {\n      name,\n      alias,\n      required\n    };\n\n    const type = googAsserts.assertString(object['type']);\n\n    if (!ngeoFormatAttribute.setGeometryType(attribute, type)) {\n      if (type === 'gml:TimeInstantType' || type === 'dateTime') {\n        attribute.type = ngeoFormatAttributeType.DATETIME;\n      } else if (type === 'date') {\n        attribute.type = ngeoFormatAttributeType.DATE;\n      } else if (type === 'time') {\n        attribute.type = ngeoFormatAttributeType.TIME;\n      } else if (type === 'decimal' || type === 'double') {\n        attribute.type = ngeoFormatAttributeType.NUMBER;\n        attribute.numType = ngeoFormatXSDAttribute.NumberType.FLOAT;\n      } else if (type === 'integer' || type === 'long') {\n        attribute.type = ngeoFormatAttributeType.NUMBER;\n        attribute.numType = ngeoFormatXSDAttribute.NumberType.INTEGER;\n      } else if (type === 'boolean') {\n        attribute.type = ngeoFormatAttributeType.BOOLEAN;\n      } else {\n        attribute.type = ngeoFormatAttributeType.TEXT;\n      }\n    }\n\n    return attribute;\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.Helper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoFormatWFSAttribute from 'ngeo/format/WFSAttribute.js';\nimport ngeoQueryQuerent from 'ngeo/query/Querent.js';\nimport * as olEvents from 'ol/events.js';\n\nconst exports = class {\n  /**\n   * A service that provides utility methods to manipulate or get data sources.\n   *\n   * @struct\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo data source\n   *     service.\n   * @param {ngeo.query.Querent} ngeoQuerent Ngeo querent service.\n   * @ngdoc service\n   * @ngname ngeoDataSourcesHelper\n   * @ngInject\n   */\n  constructor($q, ngeoDataSources, ngeoQuerent) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.collection_ = ngeoDataSources.collection;\n\n    /**\n     * @type {ngeo.query.Querent}\n     * @private\n     */\n    this.ngeoQuerent_ = ngeoQuerent;\n\n\n    // === Other properties ===\n\n    /**\n     * @type {Object.<number, ngeo.datasource.DataSource>}\n     * @private\n     */\n    this.cache_ = {};\n\n    // Events\n\n    olEvents.listen(this.collection_, 'add', this.handleDataSourcesAdd_, this);\n    olEvents.listen(this.collection_, 'remove', this.handleDataSourcesRemove_, this);\n  }\n\n  /**\n   * @return {ngeox.datasource.DataSources} Data sources collection.\n   * @export\n   */\n  get collection() {\n    return this.collection_;\n  }\n\n  /**\n   * Return a data source using its id.\n   * @param {number} id Data source id.\n   * @return {?ngeo.datasource.DataSource} Data source.\n   * @export\n   */\n  getDataSource(id) {\n    return this.cache_[id] || null;\n  }\n\n  /**\n   * Get the attributes of a data source. If they are not set, they are obtained\n   * from the querent service using a WFS DescribeFeatureType request, then set\n   * in the data source.\n   *\n   * Please, note that in order to be dynamically set, the data source must\n   * only have 1 ogcLayer set and be queryable.\n   *\n   * @param {ngeo.datasource.OGC} dataSource Filtrable data source.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  getDataSourceAttributes(dataSource) {\n\n    const wfsDescribeFeatureTypeDefer = this.q_.defer();\n\n    if (dataSource.attributes) {\n      wfsDescribeFeatureTypeDefer.resolve(dataSource.attributes);\n    } else {\n      this.ngeoQuerent_.wfsDescribeFeatureType(\n        dataSource\n      ).then((featureType) => {\n        // We know, at this point, that there's only one definition that\n        // was returned.  Just to be sure, let's do a bunch of assertions.\n        const ogcLayerName = dataSource.getOGCLayerNames()[0];\n        googAsserts.assertString(\n          ogcLayerName, 'The data source should have only one ogcLayer.');\n        const element = featureType.element[0];\n        googAsserts.assert(element.name === ogcLayerName);\n        googAsserts.assert(\n          featureType.complexType[0].name === element.type);\n\n        const complexContent = featureType['complexType'][0]['complexContent'];\n        const attributes = new ngeoFormatWFSAttribute().read(complexContent);\n\n        // Set the attributes in the data source\n        dataSource.setAttributes(attributes);\n\n        wfsDescribeFeatureTypeDefer.resolve(attributes);\n      });\n    }\n\n    return wfsDescribeFeatureTypeDefer.promise;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. Add it\n   * to the cache.\n   * @param {ol.Collection.Event} evt Event\n   * @private\n   */\n  handleDataSourcesAdd_(evt) {\n    const dataSource = googAsserts.assertInstanceof(\n      evt.element, ngeoDatasourceDataSource);\n    this.cache_[dataSource.id] = dataSource;\n  }\n\n  /**\n   * Called when a data source is removed from the ngeo collection. Remove it\n   * from the cache.\n   * @param {ol.Collection.Event} evt Event\n   * @private\n   */\n  handleDataSourcesRemove_(evt) {\n    const dataSource = googAsserts.assertInstanceof(\n      evt.element, ngeoDatasourceDataSource);\n    delete this.cache_[dataSource.id];\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDataSourcesHelper', [\n  ngeoDatasourceDataSources.module.name,\n  ngeoQueryQuerent.module.name,\n]);\nexports.module.service('ngeoDataSourcesHelper', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.WFSDescribeFeatureType\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport olFormatXML from 'ol/format/XML.js';\nimport * as olXml from 'ol/xml.js';\n\n/**\n * @classdesc\n * Format for reading WFS DescribeFeatureType data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst exports = function() {\n\n  olFormatXML.call(this);\n\n};\n\nolBase.inherits(exports, olFormatXML);\n\n\n/**\n * Read a WFS DescribeFeatureType document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WFS DescribeFeatureType.\n * @api\n */\nexports.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFromNode = function(node) {\n  let result = {};\n  result = olXml.pushParseAndPop(\n    result,\n    exports.PARSERS_,\n    node,\n    []\n  );\n  return result;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Attributes.\n */\nexports.readElement_ = function(node, objectStack) {\n  const attributes = {};\n  for (let i = 0, len = node.attributes.length; i < len; i++) {\n    const attribute = node.attributes.item(i);\n    attributes[attribute.name] = attribute.value;\n  }\n  if (objectStack.length === 1) {\n    // remove namespace from type\n    attributes['type'] = attributes['type'].split(':').pop();\n  }\n  return attributes;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readComplexType_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const object = olXml.pushParseAndPop(\n    {'name': name},\n    exports.COMPLEX_TYPE_PARSERS_,\n    node, objectStack\n  );\n  // flatten\n  object['complexContent'] =\n    object['complexContent']['extension']['sequence']['element'];\n  return object;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readComplexContent_ = function(\n  node, objectStack\n) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.COMPLEX_CONTENT_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readExtension_ = function(node, objectStack) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.EXTENSION_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readSequence_ = function(node, objectStack) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.SEQUENCE_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nexports.NAMESPACE_URIS_ = [\n  null,\n  'http://www.w3.org/2001/XMLSchema'\n];\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'element': olXml.makeObjectPropertyPusher(\n      exports.readElement_\n    ),\n    'complexType': olXml.makeObjectPropertyPusher(\n      exports.readComplexType_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.COMPLEX_TYPE_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'complexContent': olXml.makeObjectPropertySetter(\n      exports.readComplexContent_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.COMPLEX_CONTENT_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'extension': olXml.makeObjectPropertySetter(\n      exports.readExtension_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.EXTENSION_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'sequence': olXml.makeObjectPropertySetter(\n      exports.readSequence_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.SEQUENCE_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'element': olXml.makeObjectPropertyPusher(\n      exports.readElement_\n    )\n  }));\n\n\nexport default exports;\n","/**\n * @module ngeo.query.Querent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport ngeoWFSDescribeFeatureType from 'ngeo/WFSDescribeFeatureType.js';\nimport olFormatWMSCapabilities from 'ol/format/WMSCapabilities.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport * as olObj from 'ol/obj.js';\nimport * as olUri from 'ol/uri.js';\nimport * as olExtent from 'ol/extent.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\n\nconst exports = class {\n\n  /**\n   * The ngeo Querent is a service that issues all sorts of queries using\n   * ngeo data sources. It does not store the result. Instead, it returns it\n   * using promises. Any component that inject this service can use it to\n   * make it issue its own queries and do whatever it wants with the result.\n   *\n   * It supports sending OGC requests and parse the response, such as:\n   * - WFS DescribeFeatureType\n   * - WFS GetFeature\n   * - WMS GetCapabilites\n   * - WMS GetFeatureInfo\n   * - WMTS GetCapabilities\n   *\n   * @struct\n   * @param {angular.$http} $http Angular $http service.\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n   * @ngdoc service\n   * @ngname ngeoQuerent\n   * @ngInject\n   */\n  constructor($http, $q, ngeoRuleHelper, ngeoWMSTime) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$http}\n     * @private\n     */\n    this.http_ = $http;\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n    /**\n     * @type {!ngeo.misc.WMSTime}\n     * @private\n     */\n    this.ngeoWMSTime_ = ngeoWMSTime;\n\n\n    // === Other properties ===\n\n    /**\n     * Promises that can be resolved to cancel started requests.\n     * @type {!Array.<angular.$q.Deferred>}\n     * @private\n     */\n    this.requestCancelers_ = [];\n\n    /**\n     * Cache of promises for WMS GetCapabilities requests. They key is the\n     * online resource base url that is used to do the query.\n     * @type {!Object.<!angular.$q.Promise>}\n     * @private\n     */\n    this.wmsGetCapabilitiesPromises_ = {};\n\n    /**\n     * Cache of promises for WMST GetCapabilities requests. They key is the\n     * url that is used to do the query.\n     * @type {!Object.<!angular.$q.Promise>}\n     * @private\n     */\n    this.wmtsGetCapabilitiesPromises_ = {};\n  }\n\n\n  // === PUBLIC methods ===\n\n  /**\n   * Issue WMS GetFeatureInfo and/or WFS GetFeature requests using the given\n   * data sources, map and optional filters.\n   *\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  issue(options) {\n\n    const promises = [];\n    const map = options.map;\n\n    // (1) Cancel requests that are still running\n    this.cancelStillRunningRequests_();\n\n    // (2) Get queryable data sources\n    let queryableDataSources;\n    if (options.queryableDataSources) {\n      queryableDataSources = options.queryableDataSources;\n    } else {\n      const dataSources = options.dataSources;\n      googAsserts.assert(dataSources, 'DataSources should be set');\n      queryableDataSources = this.getQueryableDataSources(dataSources, map);\n    }\n\n    // (3) Combine data sources that support WFS and issue WFS queries.\n    //     The 'bbox' ('extent' option) is not required for WFS requests to\n    //     be issued.\n    const combinedWFSDataSources = this.getCombinableWFSDataSources_(\n      queryableDataSources.wfs);\n    promises.push(this.issueCombinedWFS_(combinedWFSDataSources, options));\n\n    // (4) Combine data sources that support WMS and issue WMS queries.\n    //     Only occurs if the `coordinate` option is set, because it's required\n    //     by WMS GetFeatureInfo requests.\n    const coordinate = options.coordinate;\n    if (coordinate) {\n      const combinedWMSDataSources = this.getCombinableWMSDataSources_(\n        queryableDataSources.wms);\n      promises.push(this.issueCombinedWMS_(combinedWMSDataSources, options));\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * Browse a given list of data sources. Return 2 lists of data sources that\n   * are queryable, the first one being those that support WFS and the other\n   * WMS only. This means that WFS is always favored first, then WMS.\n   *\n   * The map view resolution determines if the inner ogc layers are in range.\n   *\n   * @param {!Array.<!ngeo.datasource.DataSource>} dataSources Data sources\n   * @param {ol.Map} map Map.\n   * @return {!ngeox.QueryableDataSources} Queryable data sources.\n   * @export\n   */\n  getQueryableDataSources(dataSources, map) {\n\n    const queryableDataSources = {\n      wfs: [],\n      wms: []\n    };\n    const resolution = googAsserts.assertNumber(map.getView().getResolution());\n\n    for (const dataSource of dataSources) {\n\n      // (1) Skip data source that can't be queried\n      if (!this.isDataSourceQueryable_(dataSource, resolution)) {\n        continue;\n      }\n\n      if (dataSource instanceof ngeoDatasourceOGC) {\n        // (2) Split data sources\n        if (dataSource.supportsWFS) {\n          queryableDataSources.wfs.push(dataSource);\n        } else {\n          queryableDataSources.wms.push(dataSource);\n        }\n      }\n    }\n\n    return queryableDataSources;\n  }\n\n  /**\n   * @param {ngeo.datasource.OGC} dataSource Data source.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  wfsDescribeFeatureType(dataSource) {\n\n    googAsserts.assert(\n      dataSource.supportsAttributes,\n      `The data source must support WFS, have a single OGCLayer that\n      is queryable in order to issue WFS DescribeFeatureType requests`\n    );\n\n    const ogcLayerNames = dataSource.getOGCLayerNames();\n\n    const url = olUri.appendParams(\n      googAsserts.assertString(dataSource.wfsUrl),\n      {\n        'REQUEST': 'DescribeFeatureType',\n        'SERVICE': 'WFS',\n        'VERSION': '2.0.0',\n        'TYPENAME': ogcLayerNames\n      }\n    );\n\n    return this.http_.get(url).then((response) => {\n      const format = new ngeoWFSDescribeFeatureType();\n      return format.read(response.data);\n    });\n  }\n\n  /**\n   * @param {!Array.<!Object>} layerCapabilities List of WMS layer capabilities\n   * @param {string} layerName Name of the WMS layer\n   * @return {?Object} Found WMS layer capability\n   * @export\n   */\n  wmsFindLayerCapability(layerCapabilities, layerName) {\n\n    let found = null;\n\n    for (const layerCapability of layerCapabilities) {\n      if (layerCapability['Name'] === layerName) {\n        found = layerCapability;\n        break;\n      } else if (layerCapability['Layer']) {\n        found = this.wmsFindLayerCapability(\n          layerCapability['Layer'], layerName);\n        if (found) {\n          break;\n        }\n      }\n    }\n\n    return found;\n  }\n\n  /**\n   * @param {string} baseUrl Base url of the WMS server.\n   * @param {boolean=} opt_cache Whether to use the cached capability, if\n   *     available. Enabling this will also store the capability when required\n   *     for the first time. Defaults to: `true`.\n   * @return {!angular.$q.Promise} Promise.\n   * @export\n   */\n  wmsGetCapabilities(baseUrl, opt_cache) {\n\n    const cache = opt_cache !== false;\n\n    const params = {\n      'REQUEST': 'GetCapabilities',\n      'SERVICE': 'WMS',\n      'VERSION': '1.3.0'\n    };\n\n    const url = olUri.appendParams(baseUrl, params);\n    let promise;\n\n    if (!cache || !this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      promise = this.http_.get(url).then((response) => {\n        const format = new olFormatWMSCapabilities();\n        return format.read(response.data);\n      });\n    } else if (cache && this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      promise = this.wmsGetCapabilitiesPromises_[baseUrl];\n    }\n\n    googAsserts.assert(promise);\n\n    if (cache && !this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      this.wmsGetCapabilitiesPromises_[baseUrl] = promise;\n    }\n\n    return promise;\n  }\n\n  /**\n   * @param {!Array.<!Object>} layerCapabilities List of WMTS layer capabilities\n   * @param {string} layerName Name of the WMTS layer, a.k.a. the identifier.\n   * @return {?Object} Found WTMS layer capability\n   * @export\n   */\n  wmtsFindLayerCapability(layerCapabilities, layerName) {\n    let found = null;\n    for (const layerCapability of layerCapabilities) {\n      if (layerCapability['Identifier'] === layerName) {\n        found = layerCapability;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @param {string} url Url of the WMTS server. Note that it must contain\n   *     all required arguments.\n   * @param {boolean=} opt_cache Whether to use the cached capability, if\n   *     available. Enabling this will also store the capability when required\n   *     for the first time. Defaults to: `true`.\n   * @return {!angular.$q.Promise} Promise.\n   * @export\n   */\n  wmtsGetCapabilities(url, opt_cache) {\n\n    const cache = opt_cache !== false;\n    let promise;\n\n    if (!cache || !this.wmtsGetCapabilitiesPromises_[url]) {\n      promise = this.http_.get(url).then((response) => {\n        const format = new olFormatWMTSCapabilities();\n        return format.read(response.data);\n      });\n    } else if (cache && this.wmtsGetCapabilitiesPromises_[url]) {\n      promise = this.wmtsGetCapabilitiesPromises_[url];\n    }\n\n    googAsserts.assert(promise);\n\n    if (cache && !this.wmtsGetCapabilitiesPromises_[url]) {\n      this.wmtsGetCapabilitiesPromises_[url] = promise;\n    }\n\n    return promise;\n  }\n\n\n  // === PRIVATE methods ===\n\n  /**\n   * Handles the response of multiple promises that did either\n   * WMS GetFeatureInfo or WFS GetFeature requests, in which the result is\n   * a hash with key being the data source id and value the array of features.\n   *\n   * The response object itself is an array, one item being one result per\n   * promise. The idea is to return a single hash by combining the result\n   * objects.\n   *\n   * The keys are always unique, i.e. there can be multiple result objects for\n   * the same data source id.\n   *\n   * @param {!Array.<ngeox.QuerentResult>} response Response.\n   * @return {ngeox.QuerentResult} Hash of features by data source ids.\n   * @private\n   */\n  handleCombinedQueryResult_(response) {\n    const combinedHash = {};\n    for (const hash of response) {\n      for (const dataSourceIdStr in hash) {\n        const dataSourceId = Number(dataSourceIdStr);\n        combinedHash[dataSourceId] = hash[dataSourceId];\n      }\n    }\n    return combinedHash;\n  }\n\n\n  /**\n   * Handles the result of a single WMS GetFeatureInfo or WFS GetFeature\n   * request. Read features from the response and return them.\n   *\n   * @param {!Array.<!ngeo.datasource.OGC>} dataSources List of\n   *     queryable data sources that were used to do the query.\n   * @param {number} limit The maximum number of features to get with the query.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @param {angular.$http.Response|number} response Response.\n   * @return {ngeox.QuerentResult} Hash of features by data source ids.\n   * @private\n   */\n  handleQueryResult_(dataSources, limit, wfs, response) {\n    const hash = {};\n\n    for (const dataSource of dataSources) {\n      let features;\n      let tooManyFeatures;\n      let totalFeatureCount;\n\n      if (typeof response === 'number') {\n        features = [];\n        tooManyFeatures = true;\n        totalFeatureCount = response;\n      } else {\n        if (dataSource instanceof ngeoDatasourceOGC) {\n          features = this.readAndTypeFeatures_(dataSource, response.data, wfs);\n        } else {\n          features = [];\n        }\n      }\n      const dataSourceId = dataSource.id;\n      this.setUniqueIds_(features, dataSource.id);\n      hash[dataSourceId] = {\n        features,\n        limit,\n        tooManyFeatures,\n        totalFeatureCount\n      };\n    }\n\n    return hash;\n  }\n\n  /**\n   * Read and assign the type of the feature to each feature in the data.\n   * The type will be stocked in the properties of the features as\n   * \"ngeo_feature_type_\".\n   * @param {ngeo.datasource.OGC} dataSource used to read the features.\n   * @param {Document | Node | Object | string} data the response data.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @return {Array.<ol.Feature>} returned features with a type in each features.\n   * @private\n   */\n  readAndTypeFeatures_(dataSource, data, wfs) {\n    const features = [];\n    let readFeatures;\n    // Copy the types to be able to set it AND iterate on it.\n    const featureTypes = this.getSetOlFormatTypes_(dataSource, wfs).slice();\n    featureTypes.forEach((type) => {\n      // Assign temporarily a single feature type to read features separately.\n      this.getSetOlFormatTypes_(dataSource, wfs, [type]);\n      if (wfs) {\n        readFeatures = dataSource.wfsFormat.readFeatures(data);\n      } else {\n        readFeatures = dataSource.wmsFormat.readFeatures(data);\n      }\n      if (readFeatures.length > 0) {\n        readFeatures.forEach((feature) => {\n          feature.set('ngeo_feature_type_', type);\n          features.push(feature);\n        });\n      }\n    });\n    // Re-set the value to the datasource.xxxFormat to be able to re-use\n    // it later (in another query);\n    this.getSetOlFormatTypes_(dataSource, wfs, featureTypes);\n    return features;\n  }\n\n  /**\n   * Return the types defined in the format of the datasource. Can set the\n   * types if one is given.\n   * @param {ngeo.datasource.OGC} dataSource that contains the format object.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @param {Array.<string>=} opt_types An array of type if you want to set the\n   *     type of the format object.\n   * @return {Array.<string>} The types defined in the format.\n   * @private\n   */\n  getSetOlFormatTypes_(dataSource, wfs, opt_types) {\n    let types;\n    if (wfs) {\n      if (opt_types) {\n        dataSource.wfsFormat.setFeatureType(opt_types);\n      }\n      types = dataSource.wfsFormat.getFeatureType();\n    } else {\n      if (opt_types) {\n        dataSource.wmsFormat.setLayers(opt_types);\n      }\n      types = dataSource.wmsFormat.getLayers();\n    }\n    if (!types) {\n      return [];\n    }\n    return (Array.isArray(types)) ? types : [types];\n  }\n\n  /**\n   * Issue WFS GetFeature requests using the given combined data sources, map\n   * and optional filters.\n   *\n   * @param {!ngeo.query.Querent.CombinedDataSources} combinedDataSources Combined\n   *     data sources.\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @private\n   */\n  issueCombinedWFS_(combinedDataSources, options) {\n\n    const promises = [];\n\n    // The 'limit' option is mandatory in the querent service\n    const maxFeatures = googAsserts.assertNumber(options.limit);\n\n    const map = options.map;\n    const view = map.getView();\n    const resolution = googAsserts.assertNumber(view.getResolution());\n    const projection = view.getProjection();\n    const srsName = projection.getCode();\n    const wfsCount = options.wfsCount === true;\n\n    // (1) Extent (bbox), which is optional, i.e. its value can stay undefined\n    let bbox;\n    const coordinate = options.coordinate;\n    if (coordinate) {\n      const tolerancePx = options.tolerancePx;\n      googAsserts.assert(tolerancePx);\n      const tolerance = tolerancePx * resolution;\n      bbox = olExtent.buffer(\n        olExtent.createOrUpdateFromCoordinate(coordinate),\n        tolerance\n      );\n    } else {\n      bbox = options.extent;\n    }\n\n    // (2) Launch one request per combinaison of data sources\n    const wfsFormat = new olFormatWFS();\n    const xmlSerializer = new XMLSerializer();\n    for (const dataSources of combinedDataSources) {\n\n      let getFeatureCommonOptions;\n      let featureNS;\n      let featureTypes = [];\n      let url;\n      const params = {};\n\n      // (3) Build query options\n      for (const dataSource of dataSources) {\n\n        // (a) Create common options, if not done yet\n        if (!getFeatureCommonOptions) {\n          featureNS = dataSource.wfsFeatureNS;\n          const featurePrefix = dataSource.wfsFeaturePrefix;\n          const geometryName = dataSource.geometryName;\n          const outputFormat = dataSource.wfsOutputFormat;\n\n          getFeatureCommonOptions = {\n            bbox,\n            featureNS,\n            featurePrefix,\n            geometryName,\n            outputFormat,\n            srsName\n          };\n\n          url = dataSource.wfsUrl;\n\n          // All data sources combined share the same active dimensions\n          olObj.assign(params, dataSource.activeDimensions);\n        }\n\n        // (b) Add queryable layer names in featureTypes array\n        featureTypes = featureTypes.concat(\n          dataSource.getInRangeOGCLayerNames(resolution, true));\n\n        // (c) Add filter, if any. If the case, then only one data source\n        //     is expected to be used for this request.\n        let filter;\n        if (options.filter) {\n          filter = this.ngeoRuleHelper_.createFilter({\n            dataSource: dataSource,\n            filter: options.filter,\n            incTime: true\n          });\n        } else if ((dataSource.filterRules && dataSource.filterRules.length) ||\n            dataSource.timeRangeValue) {\n\n          googAsserts.assert(\n            dataSources.length === 1,\n            `A data source having filterRules or timeRangeValue should issue\n            a single query, alone.`\n          );\n\n          filter = this.ngeoRuleHelper_.createFilter({\n            dataSource: dataSource,\n            incTime: true,\n            srsName: srsName\n          });\n        }\n\n        if (filter) {\n          getFeatureCommonOptions['filter'] = filter;\n        }\n      }\n\n      googAsserts.assert(getFeatureCommonOptions);\n      getFeatureCommonOptions.featureTypes = featureTypes;\n      googAsserts.assert(url);\n\n      // (4) Build query then launch\n      //\n      //     If we require to do a WFS GetFeature request with\n      //     `resultType: 'hits'` first, do so. In that case, if there would\n      //     be too many features returned, no GetFeature is done thereafter\n      //     and the data sources will return empty arrays in the returned\n      //     response.\n      //\n      //     If we do not need to count features first, then proceed with\n      //     an normal WFS GetFeature request.\n      const getFeatureDefer = this.q_.defer();\n      promises.push(\n        getFeatureDefer.promise.then(\n          this.handleQueryResult_.bind(this, dataSources, maxFeatures, true)\n        )\n      );\n\n      // (4.1) Count, if required\n      let countPromise;\n      if (wfsCount) {\n        const getCountOptions = /** @type {olx.format.WFSWriteGetFeatureOptions} */ (\n          olObj.assign(\n            {\n              resultType: 'hits'\n            },\n            getFeatureCommonOptions\n          )\n        );\n        const featureCountXml = wfsFormat.writeGetFeature(getCountOptions);\n        const featureCountRequest = xmlSerializer.serializeToString(\n          featureCountXml);\n        const canceler = this.registerCanceler_();\n        countPromise = this.http_.post(\n          url,\n          featureCountRequest,\n          {\n            params: params,\n            headers: {'Content-Type': 'text/xml; charset=UTF-8'},\n            timeout: canceler.promise\n          }\n        ).then(((response) => {\n          const meta = dataSources[0].wfsFormat.readFeatureCollectionMetadata(\n            response.data\n          );\n          return meta['numberOfFeatures'];\n        }).bind(this));\n      } else {\n        countPromise = this.q_.resolve();\n      }\n\n      // (4.2) After count, do GetFeature (if required)\n      countPromise.then((numberOfFeatures) => {\n        // `true` is returned if a count request was made AND there would\n        // be too many features.\n        if (numberOfFeatures === undefined || numberOfFeatures < maxFeatures) {\n\n          const getFeatureOptions = /** @type {olx.format.WFSWriteGetFeatureOptions} */ (\n            olObj.assign(\n              {\n                maxFeatures\n              },\n              getFeatureCommonOptions\n            )\n          );\n          const featureRequestXml = wfsFormat.writeGetFeature(\n            getFeatureOptions);\n          const featureRequest = xmlSerializer.serializeToString(\n            featureRequestXml);\n          googAsserts.assertString(url);\n          const canceler = this.registerCanceler_();\n          this.http_.post(\n            url,\n            featureRequest,\n            {\n              params: params,\n              headers: {'Content-Type': 'text/xml; charset=UTF-8'},\n              timeout: canceler.promise\n            }\n          ).then((response) => {\n            getFeatureDefer.resolve(response);\n          });\n\n        } else {\n          getFeatureDefer.resolve(numberOfFeatures);\n        }\n      });\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * Issue WMS GetFeatureInfo requests using the given combined data sources,\n   * map and optional filters.\n   *\n   * @param {!ngeo.query.Querent.CombinedDataSources} combinedDataSources Combined\n   *     data sources.\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @private\n   */\n  issueCombinedWMS_(combinedDataSources, options) {\n\n    const promises = [];\n\n    // The 'limit' option is mandatory in the querent service\n    const FEATURE_COUNT = googAsserts.assertNumber(options.limit);\n\n    const map = options.map;\n    const view = map.getView();\n    const resolution = googAsserts.assertNumber(view.getResolution());\n    const projection = view.getProjection();\n    const projCode = projection.getCode();\n\n    // (1) Coordinate, which is required to issue WMS GetFeatureInfo requests\n    const coordinate = options.coordinate;\n    googAsserts.assert(coordinate);\n\n    // (2) Launch one request per combinaison of data sources\n    for (const dataSources of combinedDataSources) {\n\n      let url;\n      let LAYERS = [];\n      let INFO_FORMAT;\n      let activeDimensionsSet = false;\n      const params = {};\n      let filterString = null;\n      let filtrableLayerName = null;\n\n      // (3) Build query options\n      for (const dataSource of dataSources) {\n\n        // (a) Create common options, if not done yet\n        if (!INFO_FORMAT) {\n          INFO_FORMAT = dataSource.wmsInfoFormat;\n          url = dataSource.wmsUrl;\n        }\n\n        // (b) Add queryable layer names in featureTypes array\n        LAYERS = LAYERS.concat(\n          dataSource.getInRangeOGCLayerNames(resolution, true));\n\n        // (c) Manage active dimensions, which are added directly to the\n        //     query parameters. Note that this occurs only ONCE, i.e.\n        //     for the first data source, because all data sources here have\n        //     been combined together, therefore they share the same active\n        //     dimensions.\n        if (!activeDimensionsSet) {\n          olObj.assign(params, dataSource.activeDimensions);\n          activeDimensionsSet = true;\n        }\n\n        // (d) Add filter, if any. If there is a filter on the data source,\n        //     then it is expected that one request will be sent for this\n        //     data source only.\n        if (dataSource.filterRules && dataSource.filterRules.length) {\n          googAsserts.assert(dataSources.length === 1);\n          filtrableLayerName = dataSource.getFiltrableOGCLayerName();\n          filterString = this.ngeoRuleHelper_.createFilterString({\n            dataSource: dataSource,\n            srsName: projCode\n          });\n        }\n\n        // (e) Add TIME parameter if the data source has a time range value.\n        //     If that's the case, then it is expected that one request will be\n        //     sent for this data source only.\n        if (dataSource.timeRangeValue !== null && dataSource.timeProperty) {\n          googAsserts.assert(dataSources.length === 1);\n          params['TIME'] = this.ngeoWMSTime_.formatWMSTimeParam(\n            dataSource.timeProperty,\n            dataSource.timeRangeValue\n          );\n        }\n      }\n\n      params['LAYERS'] = LAYERS;\n      params['QUERY_LAYERS'] = LAYERS;\n\n      // Manage 'FILTER' parameter\n      if (filterString && filtrableLayerName) {\n        let filterParamValue = null;\n        if (LAYERS.length === 1) {\n          // When there's only one layer in the `LAYERS` parameters, then\n          // the filter string is given as-is.\n          filterParamValue = filterString;\n        } else {\n          // When there's more then one layer, then each filter must be wrapped\n          // between parenthesis and the order must also match the `LAYERS`\n          // parameter as well.\n          const filterParamValues = [];\n          for (let i = 0, ii = LAYERS.length; i < ii; i++) {\n            if (LAYERS[i] === filtrableLayerName) {\n              filterParamValues.push(`(${filterString})`);\n            } else {\n              filterParamValues.push('()');\n            }\n          }\n          filterParamValue = filterParamValues.join('');\n        }\n        params['FILTER'] = filterParamValue;\n      }\n\n      googAsserts.assert(url);\n      const wmsSource = new olSourceImageWMS({\n        params,\n        url\n      });\n\n      // (4) Build query url, then launch\n      const wmsGetFeatureInfoUrl = googAsserts.assertString(\n        wmsSource.getGetFeatureInfoUrl(\n          coordinate, resolution, projCode, {\n            // Without extern, quoting is necessary\n            'FEATURE_COUNT': FEATURE_COUNT,\n            'INFO_FORMAT': INFO_FORMAT\n          }\n        )\n      );\n\n      const canceler = this.registerCanceler_();\n      promises.push(\n        this.http_.get(\n          wmsGetFeatureInfoUrl,\n          {\n            timeout: canceler.promise\n          }\n        ).then(\n          this.handleQueryResult_.bind(this, dataSources, FEATURE_COUNT, false)\n        )\n      );\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * @param {!Array.<ngeox.datasource.OGC>} dataSources List of\n   *     queryable data sources that supports WFS.\n   * @return {ngeo.query.Querent.CombinedDataSources} Combined lists of data sources.\n   * @private\n   */\n  getCombinableWFSDataSources_(dataSources) {\n    const combinableDataSources = [];\n    const notCombinableDataSources = [];\n\n    for (const dataSource of dataSources) {\n      if (dataSource.combinableForWFS) {\n        let combined = false;\n        for (const combinableDataSource of combinableDataSources) {\n          if (dataSource.combinableWithDataSourceForWFS(combinableDataSource[0])) {\n            combinableDataSource.push(dataSource);\n            combined = true;\n          }\n        }\n        if (!combined) {\n          combinableDataSources.push([dataSource]);\n        }\n      } else {\n        notCombinableDataSources.push([dataSource]);\n      }\n    }\n\n    return combinableDataSources.concat(notCombinableDataSources);\n  }\n\n  /**\n   * @param {!Array.<ngeox.datasource.OGC>} dataSources List of\n   *     queryable data sources that supports WMS.\n   * @return {ngeo.query.Querent.CombinedDataSources} Combined lists of data sources.\n   * @private\n   */\n  getCombinableWMSDataSources_(dataSources) {\n    const combinableDataSources = [];\n    const notCombinableDataSources = [];\n\n    for (const dataSource of dataSources) {\n      if (dataSource.combinableForWMS) {\n        let combined = false;\n        for (const combinableDataSource of combinableDataSources) {\n          if (dataSource.combinableWithDataSourceForWMS(combinableDataSource[0])) {\n            combinableDataSource.push(dataSource);\n            combined = true;\n          }\n        }\n        if (!combined) {\n          combinableDataSources.push([dataSource]);\n        }\n      } else {\n        notCombinableDataSources.push([dataSource]);\n      }\n    }\n\n    return combinableDataSources.concat(notCombinableDataSources);\n  }\n\n  /**\n   * Checks if a data source can be queried, which requires it to be:\n   * - visible\n   * - in range\n   * - queryable (using the native getter)\n   * - have at least one OGC layer in range of current map view resolution.\n   *\n   * @param {ngeo.datasource.DataSource} ds Data source\n   * @param {number} res Resolution.\n   * @return {boolean} Whether the data source is queryable\n   * @private\n   */\n  isDataSourceQueryable_(ds, res) {\n    let queryable = ds.visible && ds.inRange && ds.queryable;\n    if (queryable && ds instanceof ngeoDatasourceOGC) {\n      const ogcDS = /** @type {!ngeo.datasource.OGC} */ (ds);\n      queryable = ogcDS.isAnyOGCLayerInRange(res, true);\n    }\n    return queryable;\n  }\n\n  /**\n   * Make sure that feature ids are unique, because the same features might\n   * be returned for different layers.\n   * @param {Array.<ol.Feature>} features Features\n   * @param {number} dataSourceId Data source id.\n   * @private\n   */\n  setUniqueIds_(features, dataSourceId) {\n    features.forEach((feature) => {\n      if (feature.getId() !== undefined) {\n        const id = `${dataSourceId}_${feature.getId()}`;\n        feature.setId(id);\n      }\n    });\n  }\n\n  /**\n   * @return {angular.$q.Deferred} A deferred that can be resolved to cancel a\n   *    HTTP request.\n   * @private\n   */\n  registerCanceler_() {\n    const canceler = this.q_.defer();\n    this.requestCancelers_.push(canceler);\n    return canceler;\n  }\n\n  /**\n   * @private\n   */\n  cancelStillRunningRequests_() {\n    for (const canceler of this.requestCancelers_) {\n      canceler.resolve();\n    }\n    this.requestCancelers_.length = 0;\n  }\n};\n\n\n/**\n * @typedef {!Array.<!Array.<!ngeo.datasource.OGC>>}\n */\nexports.CombinedDataSources;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoQuerent', [\n  ngeoFilterRuleHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('ngeoQuerent', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.Snapping\n */\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olInteractionSnap from 'ol/interaction/Snap.js';\n\n/**\n * The snapping service of GMF. Responsible of collecting the treeCtrls that\n * support snapping and store them here. As soon as a treeCtrl state becomes\n * 'on', a WFS GetFeature request is issued to collect the features at the\n * map view location. A new request is sent every time the map is panned or\n * zoomed for each treeCtrl that are still 'on'.\n *\n * Features returned by these requests get bound to a `ol.interaction.Snap`,\n * which allows the snapping to occur on other places where vector\n * features are drawn or modified.\n *\n * @constructor\n * @param {angular.$http} $http Angular $http service.\n * @param {angular.$q} $q The Angular $q service.\n * @param {!angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSnapping\n */\nconst exports = function($http, $q, $rootScope, $timeout, gmfThemes,\n  gmfTreeManager) {\n\n  // === Injected services ===\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n\n  // === Properties ===\n\n  /**\n   * A cache containing all available snappable items, in which the listening\n   * of the state of the `treeCtrl` is registered and unregistered.\n   * @type {gmf.editing.Snapping.Cache}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * Reference to the promise taking care of calling all GetFeature requests\n   * of the currently active cache items after the map view changed. Used\n   * to cancel if the map view changes often within a short period of time.\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.mapViewChangePromise_ = null;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n};\n\n\n/**\n * In order for a `ol.interaction.Snap` to work properly, it has to be added\n * to the map after any draw interactions or other kinds of interactions that\n * ineracts with features on the map.\n *\n * This method can be called to make sure the Snap interactions are on top.\n *\n * @export\n */\nexports.prototype.ensureSnapInteractionsOnTop = function() {\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      googAsserts.assert(item.interaction);\n      map.removeInteraction(item.interaction);\n      map.addInteraction(item.interaction);\n    }\n  }\n};\n\n\n/**\n * Bind the snapping service to a map\n * @param {?ol.Map} map Map\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  const keys = this.listenerKeys_;\n\n  if (this.map_) {\n    this.treeCtrlsUnregister_();\n    this.unregisterAllTreeCtrl_();\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n  }\n\n  this.map_ = map;\n\n  if (map) {\n    this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(() => {\n      if (this.gmfTreeManager_.rootCtrl) {\n        return this.gmfTreeManager_.rootCtrl.children;\n      }\n    }, (value) => {\n      // Timeout required, because the collection event is fired before the\n      // leaf nodes are created and they are the ones we're looking for here.\n      this.timeout_(() => {\n        if (value) {\n          this.unregisterAllTreeCtrl_();\n          this.gmfTreeManager_.rootCtrl.traverseDepthFirst(this.registerTreeCtrl_.bind(this));\n        }\n      }, 0);\n    });\n\n    keys.push(\n      olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this),\n      olEvents.listen(map, 'moveend', this.handleMapMoveEnd_, this)\n    );\n  }\n};\n\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.ogcServers_ = null;\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n};\n\n\n/**\n * Registers a newly added Layertree controller 'leaf'. If it's snappable,\n * create and add a cache item with every configuration required to do the\n * snapping. It becomes active when its state is set to 'on'.\n *\n * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to register\n * @private\n */\nexports.prototype.registerTreeCtrl_ = function(treeCtrl) {\n\n  // Skip any Layertree controller that has a node that is not a leaf\n  let node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (node.children) {\n    return;\n  }\n\n  // If treeCtrl is snappable and supports WFS, listen to its state change.\n  // When it becomes visible, it's added to the list of snappable tree ctrls.\n  node = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const snappingConfig = gmfThemeThemes.getSnappingConfig(node);\n  if (snappingConfig) {\n    const wfsConfig = this.getWFSConfig_(treeCtrl);\n    if (wfsConfig) {\n      const uid = olBase.getUid(treeCtrl);\n\n      const stateWatcherUnregister = this.rootScope_.$watch(\n        () => treeCtrl.getState(),\n        this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n      );\n\n      // Todo: some of the properties here are hardcoded, but could come from\n      //       the node metadata at some point.\n      this.cache_[uid] = {\n        active: false,\n        featureNS: 'http://mapserver.gis.umn.edu/mapserver',\n        featurePrefix: 'feature',\n        features: new olCollection(),\n        geometryName: 'geom',\n        interaction: null,\n        maxFeatures: 50,\n        requestDeferred: null,\n        snappingConfig: snappingConfig,\n        treeCtrl: treeCtrl,\n        wfsConfig: wfsConfig,\n        stateWatcherUnregister: stateWatcherUnregister\n      };\n\n      // This extra call is to initialize the treeCtrl with its current state\n      this.handleTreeCtrlStateChange_(treeCtrl, treeCtrl.getState());\n    }\n  }\n};\n\n\n/**\n * Unregisters all removed layertree controllers 'leaf'. Remove the according\n * cache item and deactivate it as well. Unregister events.\n *\n * @private\n */\nexports.prototype.unregisterAllTreeCtrl_ = function() {\n  for (const uid in this.cache_) {\n    const item = this.cache_[+uid];\n    if (item) {\n      item.stateWatcherUnregister();\n      this.deactivateItem_(item);\n      delete this.cache_[+uid];\n    }\n  }\n};\n\n\n/**\n * Get the configuration required to do WFS requests (for snapping purpose)\n * from a Layertree controller that has a leaf node.\n *\n * The following requirements must be met in order for a treeCtrl to be\n * considered supporting WFS:\n *\n * 1) ogcServers objects are loaded\n * 2) its node `type` property is equal to `WMS`\n * 3) in its node `childLayers` property, the `queryable` property is set\n *    to `true`\n * 4) if its node `mixed` property is:\n *   a) true: then the node must have an `ogcServer` property set\n *   b) false: then the first parent node must have an `ogcServer` property set\n * 5) the ogcServer defined in 3) has the `wfsSupport` property set to `true`.\n *\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @return {?gmf.editing.Snapping.WFSConfig} The configuration object.\n * @private\n */\nexports.prototype.getWFSConfig_ = function(treeCtrl) {\n\n  // (1)\n  if (this.ogcServers_ === null) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n\n  // (2)\n  if (gmfLayer.type !== gmfThemeThemes.NodeType.WMS) {\n    return null;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  // (3)\n  const featureTypes = [];\n  for (let i = 0, ii = gmfLayerWMS.childLayers.length; i < ii; i++) {\n    if (gmfLayerWMS.childLayers[i].queryable) {\n      featureTypes.push(gmfLayerWMS.childLayers[i].name);\n    }\n  }\n  if (!featureTypes.length) {\n    return null;\n  }\n\n  // (4)\n  let ogcServerName;\n  const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  if (gmfGroup.mixed) {\n    ogcServerName = gmfLayerWMS.ogcServer;\n  } else {\n    const firstTreeCtrl = ngeoLayertreeController.getFirstParentTree(treeCtrl);\n    const firstNode = /** @type {gmfThemes.GmfGroup} */ (firstTreeCtrl.node);\n    ogcServerName = firstNode.ogcServer;\n  }\n  if (!ogcServerName) {\n    return null;\n  }\n\n  // (5)\n  const ogcServer = this.ogcServers_[ogcServerName];\n  if (!ogcServer.wfsSupport) {\n    return null;\n  }\n\n  // At this point, every requirements have been met.\n  // Create and return the configuration.\n  const urlWfs = ogcServer.urlWfs;\n  googAsserts.assert(urlWfs, 'urlWfs should be defined.');\n\n  return {\n    featureTypes: featureTypes.join(','),\n    url: urlWfs\n  };\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @param {string|undefined} newVal New state value\n * @private\n */\nexports.prototype.handleTreeCtrlStateChange_ = function(treeCtrl, newVal) {\n\n  const uid = olBase.getUid(treeCtrl);\n  const item = this.cache_[uid];\n\n  // Note: a snappable treeCtrl can only be a leaf, therefore the only possible\n  //       states are: 'on' and 'off'.\n  if (newVal === 'on') {\n    this.activateItem_(item);\n  } else {\n    this.deactivateItem_(item);\n  }\n};\n\n\n/**\n * Activate a cache item by adding a Snap interaction to the map and launch\n * the initial request to get the features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.activateItem_ = function(item) {\n\n  // No need to do anything if item is already active\n  if (item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = new olInteractionSnap({\n    edge: item.snappingConfig.edge,\n    features: item.features,\n    pixelTolerance: item.snappingConfig.tolerance,\n    vertex: item.snappingConfig.vertex\n  });\n\n  map.addInteraction(interaction);\n\n  item.interaction = interaction;\n  item.active = true;\n\n  // Init features\n  this.loadItemFeatures_(item);\n};\n\n\n/**\n * Deactivate a cache item by removing the snap interaction and clearing any\n * existing features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.deactivateItem_ = function(item) {\n\n  // No need to do anything if item is already inactive\n  if (!item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = item.interaction;\n  map.removeInteraction(interaction);\n\n  item.interaction = null;\n  item.features.clear();\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n    item.requestDeferred = null;\n  }\n\n  item.active = false;\n};\n\n\n/**\n * @private\n */\nexports.prototype.loadAllItems_ = function() {\n  this.mapViewChangePromise_ = null;\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      this.loadItemFeatures_(item);\n    }\n  }\n};\n\n\n/**\n * For a specific cache item, issue a new WFS GetFeatures request. The returned\n * features set in the item collection of features (they replace any existing\n * ones first).\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.loadItemFeatures_ = function(item) {\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const view = map.getView();\n  const size = map.getSize();\n  googAsserts.assert(size);\n\n  const extent = view.calculateExtent(size);\n  const projCode = view.getProjection().getCode();\n  const featureTypes = item.wfsConfig.featureTypes.split(',');\n\n  const getFeatureOptions = {\n    srsName: projCode,\n    featureNS: item.featureNS,\n    featurePrefix: item.featurePrefix,\n    featureTypes: featureTypes,\n    outputFormat: 'GML3',\n    bbox: extent,\n    geometryName: item.geometryName,\n    maxFeatures: item.maxFeatures\n  };\n\n  const wfsFormat = new olFormatWFS();\n  const xmlSerializer = new XMLSerializer();\n  const featureRequestXml = wfsFormat.writeGetFeature(getFeatureOptions);\n  const featureRequest = xmlSerializer.serializeToString(featureRequestXml);\n  const url = item.wfsConfig.url;\n\n  item.requestDeferred = this.q_.defer();\n\n  this.http_.post(url, featureRequest, {timeout: item.requestDeferred.promise})\n    .then((response) => {\n      // (1) Unset requestDeferred\n      item.requestDeferred = null;\n\n      // (2) Clear any previous features in the item\n      item.features.clear();\n\n      // (3) Read features from request response and add them to the item\n      const readFeatures = new olFormatWFS().readFeatures(response.data);\n      if (readFeatures) {\n        item.features.extend(readFeatures);\n      }\n    });\n\n};\n\n\n/**\n * Called when the map view changes. Load all active cache items after a small\n * delay. Cancel any currently delayed call, if required.\n * @private\n */\nexports.prototype.handleMapMoveEnd_ = function() {\n  if (this.mapViewChangePromise_) {\n    this.timeout_.cancel(this.mapViewChangePromise_);\n  }\n  this.mapViewChangePromise_ = this.timeout_(\n    this.loadAllItems_.bind(this),\n    400\n  );\n};\n\n\n/**\n * @typedef {Object<number, gmf.editing.Snapping.CacheItem>}\n */\nexports.Cache;\n\n\n/**\n * @typedef {{\n *     active: (boolean),\n *     featureNS: (string),\n *     featurePrefix: (string),\n *     features: (ol.Collection.<ol.Feature>),\n *     geometryName: (string),\n *     interaction: (?ol.interaction.Snap),\n *     maxFeatures: (number),\n *     requestDeferred: (?angular.$q.Deferred),\n *     snappingConfig: (gmfThemes.GmfSnappingConfig),\n *     stateWatcherUnregister: (Function),\n *     treeCtrl: (ngeo.layertree.Controller),\n *     wfsConfig: (gmf.editing.Snapping.WFSConfig)\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     featureTypes: (string),\n *     url: (string)\n * }}\n */\nexports.WFSConfig;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSnapping', [\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n]);\nexports.module.service('gmfSnapping', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Translate\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionTranslate from 'ol/interaction/Translate.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * An extension of the OpenLayers Translate interaction that adds the following\n * features to it:\n *\n * - show a small arrow icon in the middle of the features allowing a visual\n *   aspect that tells the user \"this feature can be moved\"\n * - pressing the ESC key automatically deactivate the interaction.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Translate}\n * @param {ngeox.interaction.TranslateOptions} options Options.\n */\nconst exports = function(options) {\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {!Object.<number, ol.EventsKey>}\n   * @private\n   */\n  this.featureListenerKeys_ = {};\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.keyPressListenerKey_ = null;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.myFeatures_ = options.features !== undefined ? options.features : null;\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.vectorSource_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: this.vectorSource_,\n    style: options.style,\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!Object.<number, ol.Feature>}\n   * @private\n   */\n  this.centerFeatures_ = {};\n\n  olInteractionTranslate.call(\n    this, /** @type {olx.interaction.TranslateOptions} */ (options));\n};\n\nolBase.inherits(exports, olInteractionTranslate);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n\n  if (this.keyPressListenerKey_) {\n    olEvents.unlistenByKey(this.keyPressListenerKey_);\n    this.keyPressListenerKey_ = null;\n  }\n\n  olInteractionTranslate.prototype.setActive.call(this, active);\n\n  if (active) {\n    this.keyPressListenerKey_ = olEvents.listen(\n      document,\n      'keyup',\n      this.handleKeyUp_,\n      this\n    );\n  }\n\n  this.setState_();\n};\n\n\n/**\n * Remove the interaction from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {ol.PluggableMap} map Map.\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    this.vectorLayer_.setMap(null);\n  }\n\n  olInteractionTranslate.prototype.setMap.call(this, map);\n\n  if (map) {\n    this.vectorLayer_.setMap(map);\n  }\n\n  this.setState_();\n};\n\n\n/**\n * @private\n */\nexports.prototype.setState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  const features = this.myFeatures_;\n  const keys = this.listenerKeys_;\n\n  if (map && active && features) {\n    features.forEach(feature => this.addFeature_(feature));\n    keys.push(\n      olEvents.listen(features, 'add', this.handleFeaturesAdd_, this),\n      olEvents.listen(features, 'remove', this.handleFeaturesRemove_, this)\n    );\n  } else {\n\n    if (map) {\n      const elem = map.getTargetElement();\n      elem.style.cursor = 'default';\n    }\n\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    features.forEach(feature => this.removeFeature_(feature));\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  const geometry = feature.getGeometry();\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  this.featureListenerKeys_[uid] = olEvents.listen(\n    geometry,\n    'change',\n    this.handleGeometryChange_.bind(this, feature),\n    this\n  );\n\n  const point = this.getGeometryCenterPoint_(geometry);\n  const centerFeature = new olFeature(point);\n  this.centerFeatures_[uid] = centerFeature;\n  this.vectorSource_.addFeature(centerFeature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  if (this.featureListenerKeys_[uid]) {\n    olEvents.unlistenByKey(this.featureListenerKeys_[uid]);\n    delete this.featureListenerKeys_[uid];\n\n    this.vectorSource_.removeFeature(this.centerFeatures_[uid]);\n    delete this.centerFeatures_[uid];\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature being moved.\n * @param {ol.events.Event} evt Event.\n * @private\n */\nexports.prototype.handleGeometryChange_ = function(feature,\n  evt) {\n  const geometry = evt.target;\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  const point = this.getGeometryCenterPoint_(geometry);\n  const uid = olBase.getUid(feature);\n  this.centerFeatures_[uid].setGeometry(point);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {ol.geom.Point} The center point of the geometry.\n * @private\n */\nexports.prototype.getGeometryCenterPoint_ = function(\n  geometry) {\n\n  let center;\n  let point;\n\n  if (geometry instanceof olGeomPolygon) {\n    point = geometry.getInteriorPoint();\n  } else if (geometry instanceof olGeomLineString) {\n    center = geometry.getCoordinateAt(0.5);\n  } else {\n    const extent = geometry.getExtent();\n    center = olExtent.getCenter(extent);\n  }\n\n  if (!point && center) {\n    point = new olGeomPoint(center);\n  }\n\n  googAsserts.assert(point, 'Point should be thruthy');\n\n  return point;\n};\n\n\n/**\n * Deactivate this interaction if the ESC key is pressed.\n * @param {KeyboardEvent} evt Event.\n * @private\n */\nexports.prototype.handleKeyUp_ = function(evt) {\n  // 27 == ESC key\n  if (evt.keyCode === 27) {\n    this.setActive(false);\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Rotate\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction to rotate features.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.keyPressListenerKey_ = null;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * The feature currently modified.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.feature_ = null;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.coordinate_ = null;\n\n  /**\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.centerCoordinate_ = null;\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: options.style || ngeoInteractionCommon.getDefaultModifyStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!Object.<number, ol.Feature>}\n   * @private\n   */\n  this.centerFeatures_ = {};\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: this.handleDown_,\n    handleDragEvent: this.handleDrag_,\n    handleUpEvent: this.handleUp_\n  });\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n\n  if (this.keyPressListenerKey_) {\n    olEvents.unlistenByKey(this.keyPressListenerKey_);\n    this.keyPressListenerKey_ = null;\n  }\n\n  olInteractionPointer.prototype.setActive.call(this, active);\n\n  if (active) {\n    this.keyPressListenerKey_ = olEvents.listen(\n      document,\n      'keyup',\n      this.handleKeyUp_,\n      this\n    );\n    this.features_.forEach(feature => this.addFeature_(feature));\n    this.listenerKeys_.push(\n      olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this),\n      olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this)\n    );\n\n  } else {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_.length = 0;\n    this.features_.forEach(feature => this.removeFeature_(feature));\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const geometry = feature.getGeometry();\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  feature.set('angle', 0);\n\n  // Add the center icon to the overlay\n  const uid = olBase.getUid(feature);\n  const point = new olGeomPoint(this.getCenterCoordinate_(geometry));\n  const centerFeature = new olFeature(point);\n  this.centerFeatures_[uid] = centerFeature;\n  this.overlay_.getSource().addFeature(centerFeature);\n\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifystart', {features: this.features_});\n    this.dispatchEvent(event);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  this.feature_ = null;\n  //this.overlay_.getSource().removeFeature(feature);\n\n  if (feature) {\n    const uid = olBase.getUid(feature);\n\n    if (this.centerFeatures_[uid]) {\n      this.overlay_.getSource().removeFeature(this.centerFeatures_[uid]);\n      delete this.centerFeatures_[uid];\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @private\n */\nexports.prototype.handleDown_ = function(evt) {\n  const map = evt.map;\n\n  let feature = map.forEachFeatureAtPixel(evt.pixel,\n    (feature, layer) => feature, undefined);\n\n  if (feature) {\n    let found = false;\n    this.features_.forEach((f) => {\n      if (olBase.getUid(f) == olBase.getUid(feature)) {\n        found = true;\n      }\n    });\n    if (!found) {\n      feature = null;\n    }\n  }\n\n  if (feature) {\n    this.coordinate_ = evt.coordinate;\n    this.feature_ = feature;\n    const geometry = (this.feature_.getGeometry());\n    if (geometry !== undefined) {\n      this.centerCoordinate_ = this.getCenterCoordinate_(geometry);\n    }\n\n    return true;\n  }\n\n  return false;\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {ol.Coordinate} The center coordinate of the geometry.\n * @private\n */\nexports.prototype.getCenterCoordinate_ = function(\n  geometry) {\n\n  let center;\n\n  if (geometry instanceof olGeomLineString) {\n    center = geometry.getFlatMidpoint();\n  } else if (geometry instanceof olGeomPolygon) {\n    center = geometry.getFlatInteriorPoint();\n  } else {\n    const extent = geometry.getExtent();\n    center = olExtent.getCenter(extent);\n  }\n\n  return center;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @private\n */\nexports.prototype.handleDrag_ = function(evt) {\n  this.willModifyFeatures_(evt);\n\n  const geometry = /** @type {ol.geom.SimpleGeometry} */\n      (this.feature_.getGeometry());\n\n  const oldX = this.coordinate_[0];\n  const oldY = this.coordinate_[1];\n\n  const centerX = this.centerCoordinate_[0];\n  const centerY = this.centerCoordinate_[1];\n\n  const dx1 = oldX - centerX;\n  const dy1 = oldY - centerY;\n  const dx0 = evt.coordinate[0] - centerX;\n  const dy0 = evt.coordinate[1] - centerY;\n\n  this.coordinate_[0] = evt.coordinate[0];\n  this.coordinate_[1] = evt.coordinate[1];\n\n  const a0 = Math.atan2(dy0, dx0);\n  const a1 = Math.atan2(dy1, dx1);\n  const angle = a1 - a0;\n\n  geometry.rotate(-angle, [centerX, centerY]);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @private\n */\nexports.prototype.handleUp_ = function(evt) {\n  if (this.modified_) {\n    /** @type {ngeox.RotateEvent} */\n    const event = new ngeoCustomEvent('rotateend', {feature: this.feature_});\n    this.dispatchEvent(event);\n    this.modified_ = false;\n    this.setActive(false);\n  }\n  return false;\n};\n\n\n/**\n * Deactivate this interaction if the ESC key is pressed.\n * @param {KeyboardEvent} evt Event.\n * @private\n */\nexports.prototype.handleKeyUp_ = function(evt) {\n  // 27 == ESC key\n  if (evt.keyCode === 27) {\n    this.setActive(false);\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.features\n */\nimport olCollection from 'ol/Collection.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFeatures', []);\n\nexports.value('ngeoFeatures', new olCollection());\n\n\nexport default exports;\n","/**\n * @module ngeo.Menu\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olOverlay from 'ol/Overlay.js';\nimport olOverlayPositioning from 'ol/OverlayPositioning.js';\n\n/**\n * @classdesc\n * An OpenLayers overlay that shows a contextual menu with configurable actions\n * anchored from its top left to a specific location. An event is fired when\n * any of the action is clicked.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {ngeox.MenuOptions=} menuOptions Menu options.\n * @param {olx.OverlayOptions=} opt_overlayOptions Overlay options.\n */\nconst exports = function(menuOptions, opt_overlayOptions) {\n\n  const options = opt_overlayOptions !== undefined ? opt_overlayOptions : {};\n\n  options.positioning = olOverlayPositioning.TOP_LEFT;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.clickOutListenerKey_ = null;\n\n  const contentEl = $('<div/>', {\n    'class': 'panel panel-default'\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.autoClose_ = menuOptions.autoClose !== undefined ?\n    menuOptions.autoClose : true;\n\n  // titleEl\n  if (menuOptions.title) {\n    const headerEl = $('<div>', {\n      'class': 'panel-heading'\n    }).appendTo(contentEl);\n\n    $('<span>', {\n      text: menuOptions.title\n    }).appendTo(headerEl);\n  }\n\n  // actionsEl\n  const actionsEl = $('<div>', {\n    'class': 'list-group'\n  }).appendTo(contentEl);\n\n  /**\n   * @type {Array.<jQuery>}\n   * @private\n   */\n  this.actions_ = [];\n\n  menuOptions.actions.forEach((action) => {\n    this.actions_.push(\n      $('<button>', {\n        'class': 'list-group-item',\n        'data-name': action.name,\n        'text': [\n          ' ',\n          (action.label) !== undefined ? action.label : action.name\n        ].join('')\n      })\n        .appendTo(actionsEl)\n        .prepend($('<span>', {\n          'class': action.cls !== undefined ? action.cls : ''\n        }))\n    );\n  });\n\n  options.element = contentEl[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @param {ol.PluggableMap|undefined} map Map.\n * @export\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_.length = 0;\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    this.actions_.forEach((action) => {\n      const data = action.data();\n      this.listenerKeys_.push(\n        olEvents.listen(\n          action[0],\n          'click',\n          this.handleActionClick_.bind(this, data.name)\n        )\n      );\n    });\n\n    // Autoclose the menu when clicking anywhere else than the menu\n    this.listenerKeys_.push(\n      olEvents.listen(\n        map,\n        'pointermove',\n        this.handleMapPointerMove_,\n        this\n      )\n    );\n  }\n\n};\n\n\n/**\n * Opens the menu at the desited coordinate. Also starts listening for the\n * clickout if autoClose is enabled.\n * @param {ol.Coordinate} coordinate Where to open the menu.\n * @export\n */\nexports.prototype.open = function(coordinate) {\n  this.setPosition(coordinate);\n  if (this.autoClose_) {\n    this.clickOutListenerKey_ = olEvents.listen(\n      document.documentElement,\n      'mousedown',\n      this.handleClickOut_,\n      this\n    );\n  }\n\n};\n\n\n/**\n * @export\n */\nexports.prototype.close = function() {\n  this.setPosition(undefined);\n\n  if (this.clickOutListenerKey_ !== null) {\n    olEvents.unlistenByKey(this.clickOutListenerKey_);\n  }\n};\n\n\n/**\n * @param {string} action The action name that was clicked.\n * @param {Event} evt Event.\n * @private\n */\nexports.prototype.handleActionClick_ = function(action, evt) {\n\n  this.dispatchEvent(new ngeoCustomEvent('actionclick', {\n    action: action\n  }));\n\n  if (this.autoClose_) {\n    this.close();\n  }\n\n  evt.stopPropagation();\n};\n\n\n/**\n * Handles clicks out of the menu. If the menu is visible, close it.\n * @param {Event} evt Event.\n * @private\n */\nexports.prototype.handleClickOut_ = function(evt) {\n  const element = this.getElement();\n  if (element && $(evt.target).closest(element).length === 0) {\n    this.close();\n  }\n};\n\n\n/**\n * When the mouse is hovering the menu, set the event coordinate and pixel\n * values to Infinity to do as if the mouse had been move out of range of the\n * map. This prevents behaviours such as vertex still appearing while mouse\n * hovering edges of features bound to an active modify control while the\n * cursor is on top of the menu.\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.prototype.handleMapPointerMove_ = function(evt) {\n  const target = evt.originalEvent.target;\n  googAsserts.assertInstanceof(target, Element);\n\n  const element = this.getElement();\n  googAsserts.assertInstanceof(element, Element);\n\n  if (element.contains(target)) {\n    evt.coordinate = [Infinity, Infinity];\n    evt.pixel = [Infinity, Infinity];\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.Location\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides a service for interacting with the URL in the\n * browser address bar.\n *\n * WARNING: because of a bug in Angular this service is not compatible with\n * the $location service. This further means that service is not compatible\n * with the $anchorScroll and $route services, and with the ng-include and\n * ng-view directives (which are based on the $anchorScroll and $route\n * services). See <https://github.com/angular/angular.js/issues/1417>.\n *\n * This file also provides an ngeo.statemanager.Location.MockProvider function that you can\n * use to mock Angular's $location provider and make it possible to use both\n * ngeoLocation and ng-include.\n *\n *     app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * The ngeo Location type.\n *\n * See our live example: [../examples/permalink.html](../examples/permalink.html)\n *\n * @param {Location} location Location.\n * @param {History} history History.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLocation\n */\nconst exports = function(location, history) {\n  /**\n   * @type {History}\n   * @private\n   */\n  this.history_ = history;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.schema_ = location.protocol.substring(0, location.protocol.length - 1);\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.domain_ = location.hostname;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.port_ = location.port ? parseInt(location.port, 10) : undefined;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.path_ = location.pathname;\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.queryData_ = ngeoUtils.decodeQueryString(location.search);\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.fragment_ = ngeoUtils.decodeQueryString(location.hash);\n};\n\n\n/**\n * @param {History} history History.\n * @param {string} state State.\n */\nexports.replaceState = function(history, state) {\n  try {\n    history.replaceState(null, '', state);\n  } catch (error) {\n    // replaceState fails on some browser if the domain in the state\n    // is not the same as location.origin\n  }\n};\n\n\n/**\n * Get the location's current path.\n * @return {string|undefined} The path.\n * @export\n */\nexports.prototype.getPath = function() {\n  return this.path_;\n};\n\n\n/**\n * Get the location's URI as a string\n * @return {string} The URI.\n * @export\n */\nexports.prototype.getUriString = function() {\n  const out = [];\n\n  if (this.schema_) {\n    out.push(this.schema_, ':');\n  }\n\n  if (this.domain_ || this.schema_ === 'file') {\n    out.push('//');\n\n    out.push(this.domain_);\n\n    if (this.port_ !== undefined) {\n      out.push(':', String(this.port_));\n    }\n  }\n\n  if (this.path_) {\n    if (this.domain_ && this.path_.charAt(0) !== '/') {\n      out.push('/');\n    }\n    out.push(this.path_);\n  }\n\n  const encodedQueryData = ngeoUtils.encodeQueryString(this.queryData_);\n  if (encodedQueryData.length > 0) {\n    out.push('?', encodedQueryData);\n  }\n\n  const encodedFragment = ngeoUtils.encodeQueryString(this.fragment_);\n  if (encodedFragment.length > 0) {\n    out.push('#', encodedFragment);\n  }\n  return out.join('');\n};\n\n\n/**\n * Check if a param exists in the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasParam = function(key) {\n  return key in this.queryData_;\n};\n\n\n/**\n * Check if a param exists in the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasFragmentParam = function(key) {\n  return key in this.fragment_;\n};\n\n\n/**\n * Get a param in the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getParam = function(key) {\n  return this.queryData_[key];\n};\n\n\n/**\n * Get a param from the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParam = function(key) {\n  return this.fragment_[key];\n};\n\n\n/**\n * Get a param in the location's URI as integer. If the entry does not exist,\n * or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsInt = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get a param in the location's URI as a floating point number.\n * If the entry does not exist, or if the value can not be parsed,\n * `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsFloat = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsFloat = parseFloat(value);\n  return isNaN(valueAsFloat) ? undefined : valueAsFloat;\n};\n\n\n/**\n * Get a param from the fragment of the location's URI as integer. If the entry\n * does not exist, or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParamAsInt = function(key) {\n  const value = this.getFragmentParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeys = function() {\n  const keys = [];\n  for (const key in this.queryData_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeys = function() {\n  const keys = [];\n  for (const key in this.fragment_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI that start\n * with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.queryData_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI\n * that start with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.fragment_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Set or create a param in the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateParams = function(params) {\n  for (const key in params) {\n    this.queryData_[key] = params[key];\n  }\n};\n\n\n/**\n * Set or create a param in the fragment of the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateFragmentParams = function(params) {\n  for (const key in params) {\n    this.fragment_[key] = params[key];\n  }\n};\n\n\n/**\n * Delete a param in the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteParam = function(key) {\n  delete this.queryData_[key];\n};\n\n\n/**\n * Delete a param int the fragment of the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteFragmentParam = function(key) {\n  delete this.fragment_[key];\n};\n\n\n/**\n * Refresh the the location's URI.\n * @export\n */\nexports.prototype.refresh = function() {\n  exports.replaceState(this.history_, this.getUriString());\n};\n\n\n/**\n * Set a new path for this location.\n * @param {string} path Path.\n * @export\n */\nexports.prototype.setPath = function(path) {\n  this.path_ = path;\n};\n\n\n/**\n * The factory creating the ngeo Location service.\n *\n * @param {angular.Scope} $rootScope The root scope.\n * @param {angular.$window} $window Angular window service.\n * @return {ngeo.statemanager.Location} The ngeo location service.\n * @ngInject\n */\nexports.LocationFactory = function($rootScope, $window) {\n  const history = $window.history;\n  const service = new exports($window.location, $window.history);\n\n  let lastUri = service.getUriString();\n  $rootScope.$watch(() => {\n    const newUri = service.getUriString();\n    if (lastUri !== newUri) {\n      $rootScope.$evalAsync(() => {\n        lastUri = newUri;\n        if (history !== undefined && history.replaceState !== undefined) {\n          exports.replaceState(history, newUri);\n        }\n        $rootScope.$broadcast('ngeoLocationChange');\n      });\n    }\n  });\n\n  return service;\n};\n\n/**\n * A function that changes Angular's $location provider to avoid problem\n * when both ngeoLocation and $location are used in an application. This\n * is how you can use that function in an application:\n *\n * app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * @param {angular.$locationProvider} $locationProvider Angular location\n *     provider.\n * @ngInject\n */\nexports.MockProvider = function($locationProvider) {\n  /**\n   * @return {angular.$location} Mock object for Angular location service.\n   */\n  $locationProvider['$get'] = function() {\n    const locationMock = /** @type {angular.$location} */ ({\n      /**\n       * @return {string} Absolute URL.\n       */\n      absUrl() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Hash.\n       */\n      hash(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {string} Host.\n       */\n      host() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Path.\n       */\n      path(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {number} Port.\n       */\n      port() {\n        return 0;\n      },\n      /**\n       * @return {string} Protocol.\n       */\n      protocol() {\n        return '';\n      },\n      replace() {\n      },\n      /**\n       * @param {string=} opt_search Search.\n       * @param {Object=} opt_paramValue Parameters.\n       * @return {Object} Search.\n       */\n      search(opt_search, opt_paramValue) {\n        return opt_search !== undefined ? this : {};\n      },\n      /**\n       * @param {string=} opt_url URL.\n       * @return {string} URL.\n       */\n      url(opt_url) {\n        return '';\n      }\n    });\n    return locationMock;\n  };\n};\n\n\n/**\n * @type {!angular.Module}\n * FIXME add utils dependencies.\n * FIXME What about Mockup provider ?\n */\nexports.module = angular.module('ngeoLocation', []);\nexports.module.factory('ngeoLocation', exports.LocationFactory);\n\n\nexport default exports;\n","/**\n * @module ngeo.download.service\n */\nimport ngeoUtils from 'ngeo/utils.js';\n\nimport {saveAs} from 'file-saver';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDownload', []);\n\n/**\n * A service to start a download for a file.\n *\n * @return {ngeox.Download} The download function.\n * @ngdoc service\n * @ngname ngeoDownload\n */\nexports.factory_ = function() {\n  /**\n   * @param {string} content The file content.\n   * @param {string} fileName The file name.\n   * @param {string=} opt_fileType The file type. If not given,\n   *    `text/plain;charset=utf-8` is used.\n   */\n  function download(content, fileName, opt_fileType) {\n    // Safari does not properly work with FileSaver. Using the the type 'text/plain'\n    // makes it a least possible to show the file content so that users can\n    // do a manual download with \"Save as\".\n    // See also: https://github.com/eligrey/FileSaver.js/issues/12\n    /** @type {string} */\n    const fileType = opt_fileType !== undefined && !ngeoUtils.isSafari() ?\n      opt_fileType : 'text/plain;charset=utf-8';\n\n    const blob = new Blob([content], {type: fileType});\n    saveAs(blob, fileName);\n  }\n\n  return download;\n};\n\nexports.factory('ngeoDownload', exports.factory_);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.DataSourceBeingFiltered\n */\nconst exports = {};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfDataSourceBeingFiltered', []);\n// type gmfx.datasource.DataSourceBeingFiltered\nexports.module.value('gmfDataSourceBeingFiltered', {\n  dataSource: null\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.message.modalComponent\n */\nimport 'jquery-ui/ui/widgets/draggable.js';\nimport 'bootstrap/js/modal.js';\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('ngeoModal', []);\n\n/**\n * Provides the \"ngeoModal\" component.\n *\n * This component shows a Bootstrap modal when the `ngModel` expression\n * evaluates to `true`, and it hides it when the `ngModel` expression\n * evaluates to `false`.\n *\n * The components also changes the `ngModel` value when the user manually\n * closes the modal.\n *\n * This component is based on Bootstrap's `modal` classes and associated\n * jQuery plugin.\n *\n *     <ngeo-modal ng-model=\"modalShown\">\n *       <div class=\"modal-header\">\n *         <button type=\"button\" class=\"close\" data-dismiss=\"modal\"\n *                 aria-hidden=\"true\">&times;</button>\n *         <h4 class=\"modal-title\">The Title</h4>\n *       </div>\n *       <div class=\"modal-body\">Some content</div>\n *     </ngeo-modal>\n *\n * Note: for z-indexing purpose, the modal DOM element is automatically moved\n * to document body element.\n *\n * See our live example: [../examples/modal.html](../examples/modal.html)\n *\n * @htmlAttribute {boolean} ngeo-modal-resizable Whether the modal can be\n *     resized or not. Defaults to `false`.\n * @htmlAttribute {boolean} ngeo-modal-closable Whether the modal can be\n *     closed by clicking outside it or by hiting the `escape` keyboard key. Defaults to `true`.\n * @ngdoc component\n * @ngname ngeoModal\n * @type {!angular.Component}\n */\nexports.component_ = {\n  template: `<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <ng-transclude></ng-transclude>\n      </div>\n    </div>\n  </div>`,\n  require: {\n    'ngModel': 'ngModel'\n  },\n  transclude: true,\n  controller: 'ngeoModalController',\n  bindings: {\n    'resizable': '<ngeoModalResizable',\n    'closable': '<ngeoModalClosable'\n  }\n};\n\nexports.component('ngeoModal', exports.component_);\n\nexports.Controller_ = class {\n  /**\n   * @ngInject\n   * @param {!angular.Scope} $scope Scope.\n   * @param {!jQuery} $element Element.\n   */\n  constructor($scope, $element) {\n    /**\n     * @private\n     * @type {!jQuery}\n     */\n    this.$element_ = $element;\n\n    /**\n     * @private\n     * @type {!angular.Scope}\n     */\n    this.$scope_ = $scope;\n\n    /**\n     * @private\n     * @type {jQuery}\n     */\n    this.modal_;\n\n    /**\n     * @export\n     * @type {boolean}\n     */\n    this.closable;\n\n    /**\n     * @export\n     * @type {boolean}\n     */\n    this.resizable;\n\n    /**\n     * @export\n     * @type {angular.NgModelController|null}\n     */\n    this.ngModel;\n  }\n\n  $onInit() {\n    this.closable = this.closable !== false;\n\n    this.modal_ = this.$element_.children();\n\n    if (!this.closable) {\n      this.modal_.attr('data-keyboard', false);\n      this.modal_.attr('data-backdrop', 'static');\n    }\n\n    this.resizable = !!this.resizable;\n\n    const dialog = this.modal_.find('.modal-dialog');\n    dialog.draggable();\n    if (this.resizable) {\n      dialog.resizable();\n    }\n\n    this.ngModel.$render = () => {\n      this.modal_.modal(this.ngModel.$viewValue ? 'show' : 'hide');\n    };\n\n    this.modal_.on('shown.bs.modal hidden.bs.modal', (e) => {\n      const type = e.type;\n      googAsserts.assert(type == 'shown' || type == 'hidden');\n      this.ngModel.$setViewValue(type == 'shown');\n    });\n  }\n\n  $onDestroy() {\n    // Force close the modal.\n    this.modal_.modal('hide');\n    this.modal_.modal('removeBackdrop');\n    // Destroy the children's plugins.\n    const dialog = this.modal_.find('.modal-dialog');\n    dialog.draggable('destroy');\n    if (this.resizable) {\n      dialog.resizable('destroy');\n    }\n  }\n};\n\nexports.controller('ngeoModalController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Notification\n */\nimport 'bootstrap/js/alert.js';\nimport googAsserts from 'goog/asserts.js';\n\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * Provides methods to display any sort of messages, notifications, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoNotification\n * @abstract\n * @ngInject\n */\nconst exports = function($timeout) {\n\n  ngeoMessageMessage.call(this);\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  const container = angular.element('<div class=\"ngeo-notification\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * @type {Object.<number, ngeo.message.Notification.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Default delay (in milliseconds) a message should be displayed.\n * @type {number}\n * @private\n */\nexports.DEFAULT_DELAY_ = 7000;\n\n\n// MAIN API METHODS\n\n\n/**\n * Display the given message string or object or list of message strings or\n * objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.notify = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Clears all messages that are currently being shown.\n * @export\n */\nexports.prototype.clear = function() {\n  for (const uid in this.cache_) {\n    this.clearMessageByCacheItem_(this.cache_[parseInt(uid, 10)]);\n  }\n};\n\n\n/**\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  const classNames = ['alert', 'fade'];\n  switch (type) {\n    case ngeoMessageMessage.Type.ERROR:\n      classNames.push('alert-danger');\n      break;\n    case ngeoMessageMessage.Type.INFORMATION:\n      classNames.push('alert-info');\n      break;\n    case ngeoMessageMessage.Type.SUCCESS:\n      classNames.push('alert-success');\n      break;\n    case ngeoMessageMessage.Type.WARNING:\n      classNames.push('alert-warning');\n      break;\n    default:\n      break;\n  }\n\n  const el = angular.element(`<div class=\"${classNames.join(' ')}\"></div>`);\n  let container;\n\n  if (message.target) {\n    container = angular.element(message.target);\n  } else {\n    container = this.container_;\n  }\n\n  container.append(el);\n  el.html(message.msg).addClass('in');\n\n  const delay = message.delay !== undefined ? message.delay :\n    exports.DEFAULT_DELAY_;\n\n  const item = /** @type {ngeo.message.Notification.CacheItem} */ ({\n    el\n  });\n\n  // Keep a reference to the promise, in case we want to manually cancel it\n  // before the delay\n  const uid = olBase.getUid(el);\n  item.promise = this.timeout_(() => {\n    el.alert('close');\n    delete this.cache_[uid];\n  }, delay);\n\n  this.cache_[uid] = item;\n};\n\n\n/**\n * Clear a message using its cache item.\n * @param {ngeo.message.Notification.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.clearMessageByCacheItem_ = function(item) {\n  const el = item.el;\n  const promise = item.promise;\n  const uid = olBase.getUid(el);\n\n  // Close the message\n  el.alert('close');\n\n  // Cancel timeout in case we want to stop before delay. If called by the\n  // timeout itself, then this has no consequence.\n  this.timeout_.cancel(promise);\n\n  // Delete the cache item\n  delete this.cache_[uid];\n};\n\n\n/**\n * @typedef {{\n *     el: angular.JQLite,\n *     promise: angular.$q.Promise\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoNotification', [\n]);\n\nexports.module.service('ngeoNotification', exports);\n\n\nexport default exports;\n","/*!\n * @copyright Copyright &copy; Kartik Visweswaran, Krajee.com, 2014 - 2016\n * @version 1.3.4\n *\n * Date formatter utility library that allows formatting date/time variables or Date objects using PHP DateTime format.\n * @see http://php.net/manual/en/function.date.php\n *\n * For more JQuery plugins visit http://plugins.krajee.com\n * For more Yii related demos visit http://demos.krajee.com\n */\n\n/* eslint-disable */\nconst DAY = 1000 * 60 * 60 * 24;\nconst HOUR = 3600;\n\nconst _compare = function(str1, str2) {\n  return typeof (str1) === 'string' && typeof (str2) === 'string' && str1.toLowerCase() === str2.toLowerCase();\n};\nconst _lpad = function(value, length, char) {\n  const chr = char || '0';\n  const val = value.toString();\n  return val.length < length ? _lpad(chr + val, length) : val;\n};\nconst _extend = function(out) {\n  let i, obj;\n  out = out || {};\n  for (i = 1; i < arguments.length; i++) {\n    obj = arguments[i];\n    if (!obj) {\n      continue;\n    }\n    for (const key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        if (typeof obj[key] === 'object') {\n          _extend(out[key], obj[key]);\n        } else {\n          out[key] = obj[key];\n        }\n      }\n    }\n  }\n  return out;\n};\nconst _indexOf = function(val, arr) {\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i].toLowerCase() === val.toLowerCase()) {\n      return i;\n    }\n  }\n  return -1;\n};\nconst defaultSettings = {\n  dateSettings: {\n    days: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    daysShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    months: [\n      'January', 'February', 'March', 'April', 'May', 'June', 'July',\n      'August', 'September', 'October', 'November', 'December'\n    ],\n    monthsShort: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    meridiem: ['AM', 'PM'],\n    ordinal: function(number) {\n      const n = number % 10, suffixes = {1: 'st', 2: 'nd', 3: 'rd'};\n      return Math.floor(number % 100 / 10) === 1 || !suffixes[n] ? 'th' : suffixes[n];\n    }\n  },\n  separators: /[ \\-+\\/\\.T:@]/g,\n  validParts: /[dDjlNSwzWFmMntLoYyaABgGhHisueTIOPZcrU]/g,\n  intParts: /[djwNzmnyYhHgGis]/g,\n  tzParts: /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g,\n  tzClip: /[^-+\\dA-Z]/g\n};\n\nconst DateFormatter = function(options) {\n  const self = this;\n  const config = _extend(defaultSettings, options);\n  self.dateSettings = config.dateSettings;\n  self.separators = config.separators;\n  self.validParts = config.validParts;\n  self.intParts = config.intParts;\n  self.tzParts = config.tzParts;\n  self.tzClip = config.tzClip;\n};\n\nDateFormatter.prototype = {\n  constructor: DateFormatter,\n  getMonth: function(val) {\n    const self = this;\n    let i;\n    i = _indexOf(val, self.dateSettings.monthsShort) + 1;\n    if (i === 0) {\n      i = _indexOf(val, self.dateSettings.months) + 1;\n    }\n    return i;\n  },\n  parseDate: function(vDate, vFormat) {\n    const self = this, out = {date: null, year: null, month: null, day: null, hour: 0, min: 0, sec: 0}, vSettings = self.dateSettings;\n    let i, vDateFlag = false, vTimeFlag = false, vDatePart, iDatePart,\n        vMonth, vMeriIndex, vMeriOffset, len, mer;\n    if (!vDate) {\n      return null;\n    }\n    if (vDate instanceof Date) {\n      return vDate;\n    }\n    if (vFormat === 'U') {\n      i = parseInt(vDate);\n      return i ? new Date(i * 1000) : vDate;\n    }\n    switch (typeof vDate) {\n      case 'number':\n        return new Date(vDate);\n      case 'string':\n        break;\n      default:\n        return null;\n    }\n    const vFormatParts = vFormat.match(self.validParts);\n    if (!vFormatParts || vFormatParts.length === 0) {\n      throw new Error('Invalid date format definition.');\n    }\n    const vDateParts = vDate.replace(self.separators, '\\0').split('\\0');\n    for (i = 0; i < vDateParts.length; i++) {\n      vDatePart = vDateParts[i];\n      iDatePart = parseInt(vDatePart);\n      switch (vFormatParts[i]) {\n        case 'y':\n        case 'Y':\n          if (iDatePart) {\n            len = vDatePart.length;\n            out.year = len === 2 ? parseInt((iDatePart < 70 ? '20' : '19') + vDatePart) : iDatePart;\n          } else {\n            return null;\n          }\n          vDateFlag = true;\n          break;\n        case 'm':\n        case 'n':\n        case 'M':\n        case 'F':\n          if (isNaN(iDatePart)) {\n            vMonth = self.getMonth(vDatePart);\n            if (vMonth > 0) {\n              out.month = vMonth;\n            } else {\n              return null;\n            }\n          } else {\n            if (iDatePart >= 1 && iDatePart <= 12) {\n              out.month = iDatePart;\n            } else {\n              return null;\n            }\n          }\n          vDateFlag = true;\n          break;\n        case 'd':\n        case 'j':\n          if (iDatePart >= 1 && iDatePart <= 31) {\n            out.day = iDatePart;\n          } else {\n            return null;\n          }\n          vDateFlag = true;\n          break;\n        case 'g':\n        case 'h':\n          vMeriIndex = (vFormatParts.indexOf('a') > -1) ? vFormatParts.indexOf('a') :\n            (vFormatParts.indexOf('A') > -1) ? vFormatParts.indexOf('A') : -1;\n          mer = vDateParts[vMeriIndex];\n          if (vMeriIndex > -1) {\n            vMeriOffset = _compare(mer, vSettings.meridiem[0]) ? 0 :\n              (_compare(mer, vSettings.meridiem[1]) ? 12 : -1);\n            if (iDatePart >= 1 && iDatePart <= 12 && vMeriOffset > -1) {\n              out.hour = iDatePart + vMeriOffset - 1;\n            } else if (iDatePart >= 0 && iDatePart <= 23) {\n              out.hour = iDatePart;\n            }\n          } else {\n            if (iDatePart >= 0 && iDatePart <= 23) {\n              out.hour = iDatePart;\n            } else {\n              return null;\n            }\n          }\n          vTimeFlag = true;\n          break;\n        case 'G':\n        case 'H':\n          if (iDatePart >= 0 && iDatePart <= 23) {\n            out.hour = iDatePart;\n          } else {\n            return null;\n          }\n          vTimeFlag = true;\n          break;\n        case 'i':\n          if (iDatePart >= 0 && iDatePart <= 59) {\n            out.min = iDatePart;\n          } else {\n            return null;\n          }\n          vTimeFlag = true;\n          break;\n        case 's':\n          if (iDatePart >= 0 && iDatePart <= 59) {\n            out.sec = iDatePart;\n          } else {\n            return null;\n          }\n          vTimeFlag = true;\n          break;\n      }\n    }\n    if (vDateFlag === true && out.year && out.month && out.day) {\n      out.date = new Date(out.year, out.month - 1, out.day, out.hour, out.min, out.sec, 0);\n    } else {\n      if (vTimeFlag !== true) {\n        return null;\n      }\n      out.date = new Date(0, 0, 0, out.hour, out.min, out.sec, 0);\n    }\n    return out.date;\n  },\n  guessDate: function(vDateStr, vFormat) {\n    if (typeof vDateStr !== 'string') {\n      return vDateStr;\n    }\n    const self = this, vParts = vDateStr.replace(self.separators, '\\0').split('\\0'), vPattern = /^[djmn]/g, vFormatParts = vFormat.match(self.validParts), vDate = new Date(), vDigit = 0;\n    let len, i, n, iPart, iSec, vYear;\n\n    if (!vPattern.test(vFormatParts[0])) {\n      return vDateStr;\n    }\n\n    for (i = 0; i < vParts.length; i++) {\n      let vDigit = 2;\n      iPart = vParts[i];\n      iSec = parseInt(iPart.substr(0, 2));\n      if (isNaN(iSec)) {\n        return null;\n      }\n      switch (i) {\n        case 0:\n          if (vFormatParts[0] === 'm' || vFormatParts[0] === 'n') {\n            vDate.setMonth(iSec - 1);\n          } else {\n            vDate.setDate(iSec);\n          }\n          break;\n        case 1:\n          if (vFormatParts[0] === 'm' || vFormatParts[0] === 'n') {\n            vDate.setDate(iSec);\n          } else {\n            vDate.setMonth(iSec - 1);\n          }\n          break;\n        case 2:\n          vYear = vDate.getFullYear();\n          len = iPart.length;\n          vDigit = len < 4 ? len : 4;\n          vYear = parseInt(len < 4 ? vYear.toString().substr(0, 4 - len) + iPart : iPart.substr(0, 4));\n          if (!vYear) {\n            return null;\n          }\n          vDate.setFullYear(vYear);\n          break;\n        case 3:\n          vDate.setHours(iSec);\n          break;\n        case 4:\n          vDate.setMinutes(iSec);\n          break;\n        case 5:\n          vDate.setSeconds(iSec);\n          break;\n      }\n      n = iPart.substr(vDigit);\n      if (n.length > 0) {\n        vParts.splice(i + 1, 0, n);\n      }\n    }\n    return vDate;\n  },\n  parseFormat: function(vChar, vDate) {\n    let fmt;\n    const self = this, vSettings = self.dateSettings, backslash = /\\\\?(.?)/gi, doFormat = function(t, s) {\n      return fmt[t] ? fmt[t]() : s;\n    };\n    fmt = {\n      /////////\n      // DAY //\n      /////////\n      /**\n       * Day of month with leading 0: `01..31`\n       * @return {string}\n       */\n      d: function() {\n        return _lpad(fmt.j(), 2);\n      },\n      /**\n       * Shorthand day name: `Mon...Sun`\n       * @return {string}\n       */\n      D: function() {\n        return vSettings.daysShort[fmt.w()];\n      },\n      /**\n       * Day of month: `1..31`\n       * @return {number}\n       */\n      j: function() {\n        return vDate.getDate();\n      },\n      /**\n       * Full day name: `Monday...Sunday`\n       * @return {number}\n       */\n      l: function() {\n        return vSettings.days[fmt.w()];\n      },\n      /**\n       * ISO-8601 day of week: `1[Mon]..7[Sun]`\n       * @return {number}\n       */\n      N: function() {\n        return fmt.w() || 7;\n      },\n      /**\n       * Day of week: `0[Sun]..6[Sat]`\n       * @return {number}\n       */\n      w: function() {\n        return vDate.getDay();\n      },\n      /**\n       * Day of year: `0..365`\n       * @return {number}\n       */\n      z: function() {\n        const a = new Date(fmt.Y(), fmt.n() - 1, fmt.j()), b = new Date(fmt.Y(), 0, 1);\n        return Math.round((a - b) / DAY);\n      },\n\n      //////////\n      // WEEK //\n      //////////\n      /**\n       * ISO-8601 week number\n       * @return {number}\n       */\n      W: function() {\n        const a = new Date(fmt.Y(), fmt.n() - 1, fmt.j() - fmt.N() + 3), b = new Date(a.getFullYear(), 0, 4);\n        return _lpad(1 + Math.round((a - b) / DAY / 7), 2);\n      },\n\n      ///////////\n      // MONTH //\n      ///////////\n      /**\n       * Full month name: `January...December`\n       * @return {string}\n       */\n      F: function() {\n        return vSettings.months[vDate.getMonth()];\n      },\n      /**\n       * Month w/leading 0: `01..12`\n       * @return {string}\n       */\n      m: function() {\n        return _lpad(fmt.n(), 2);\n      },\n      /**\n       * Shorthand month name; `Jan...Dec`\n       * @return {string}\n       */\n      M: function() {\n        return vSettings.monthsShort[vDate.getMonth()];\n      },\n      /**\n       * Month: `1...12`\n       * @return {number}\n       */\n      n: function() {\n        return vDate.getMonth() + 1;\n      },\n      /**\n       * Days in month: `28...31`\n       * @return {number}\n       */\n      t: function() {\n        return (new Date(fmt.Y(), fmt.n(), 0)).getDate();\n      },\n\n      //////////\n      // YEAR //\n      //////////\n      /**\n       * Is leap year? `0 or 1`\n       * @return {number}\n       */\n      L: function() {\n        const Y = fmt.Y();\n        return (Y % 4 === 0 && Y % 100 !== 0 || Y % 400 === 0) ? 1 : 0;\n      },\n      /**\n       * ISO-8601 year\n       * @return {number}\n       */\n      o: function() {\n        const n = fmt.n(), W = fmt.W(), Y = fmt.Y();\n        return Y + (n === 12 && W < 9 ? 1 : n === 1 && W > 9 ? -1 : 0);\n      },\n      /**\n       * Full year: `e.g. 1980...2010`\n       * @return {number}\n       */\n      Y: function() {\n        return vDate.getFullYear();\n      },\n      /**\n       * Last two digits of year: `00...99`\n       * @return {string}\n       */\n      y: function() {\n        return fmt.Y().toString().slice(-2);\n      },\n\n      //////////\n      // TIME //\n      //////////\n      /**\n       * Meridian lower: `am or pm`\n       * @return {string}\n       */\n      a: function() {\n        return fmt.A().toLowerCase();\n      },\n      /**\n       * Meridian upper: `AM or PM`\n       * @return {string}\n       */\n      A: function() {\n        const n = fmt.G() < 12 ? 0 : 1;\n        return vSettings.meridiem[n];\n      },\n      /**\n       * Swatch Internet time: `000..999`\n       * @return {string}\n       */\n      B: function() {\n        const H = vDate.getUTCHours() * HOUR, i = vDate.getUTCMinutes() * 60, s = vDate.getUTCSeconds();\n        return _lpad(Math.floor((H + i + s + HOUR) / 86.4) % 1000, 3);\n      },\n      /**\n       * 12-Hours: `1..12`\n       * @return {number}\n       */\n      g: function() {\n        return fmt.G() % 12 || 12;\n      },\n      /**\n       * 24-Hours: `0..23`\n       * @return {number}\n       */\n      G: function() {\n        return vDate.getHours();\n      },\n      /**\n       * 12-Hours with leading 0: `01..12`\n       * @return {string}\n       */\n      h: function() {\n        return _lpad(fmt.g(), 2);\n      },\n      /**\n       * 24-Hours w/leading 0: `00..23`\n       * @return {string}\n       */\n      H: function() {\n        return _lpad(fmt.G(), 2);\n      },\n      /**\n       * Minutes w/leading 0: `00..59`\n       * @return {string}\n       */\n      i: function() {\n        return _lpad(vDate.getMinutes(), 2);\n      },\n      /**\n       * Seconds w/leading 0: `00..59`\n       * @return {string}\n       */\n      s: function() {\n        return _lpad(vDate.getSeconds(), 2);\n      },\n      /**\n       * Microseconds: `000000-999000`\n       * @return {string}\n       */\n      u: function() {\n        return _lpad(vDate.getMilliseconds() * 1000, 6);\n      },\n\n      //////////////\n      // TIMEZONE //\n      //////////////\n      /**\n       * Timezone identifier: `e.g. Atlantic/Azores, ...`\n       * @return {string}\n       */\n      e: function() {\n        const str = /\\((.*)\\)/.exec(String(vDate))[1];\n        return str || 'Coordinated Universal Time';\n      },\n      /**\n       * DST observed? `0 or 1`\n       * @return {number}\n       */\n      I: function() {\n        const a = new Date(fmt.Y(), 0), c = Date.UTC(fmt.Y(), 0),\n            b = new Date(fmt.Y(), 6), d = Date.UTC(fmt.Y(), 6);\n        return ((a - c) !== (b - d)) ? 1 : 0;\n      },\n      /**\n       * Difference to GMT in hour format: `e.g. +0200`\n       * @return {string}\n       */\n      O: function() {\n        const tzo = vDate.getTimezoneOffset(), a = Math.abs(tzo);\n        return (tzo > 0 ? '-' : '+') + _lpad(Math.floor(a / 60) * 100 + a % 60, 4);\n      },\n      /**\n       * Difference to GMT with colon: `e.g. +02:00`\n       * @return {string}\n       */\n      P: function() {\n        const O = fmt.O();\n        return (`${O.substr(0, 3)}:${O.substr(3, 2)}`);\n      },\n      /**\n       * Timezone abbreviation: `e.g. EST, MDT, ...`\n       * @return {string}\n       */\n      T: function() {\n        const str = (String(vDate).match(self.tzParts) || ['']).pop().replace(self.tzClip, '');\n        return str || 'UTC';\n      },\n      /**\n       * Timezone offset in seconds: `-43200...50400`\n       * @return {number}\n       */\n      Z: function() {\n        return -vDate.getTimezoneOffset() * 60;\n      },\n\n      ////////////////////\n      // FULL DATE TIME //\n      ////////////////////\n      /**\n       * ISO-8601 date\n       * @return {string}\n       */\n      c: function() {\n        return 'Y-m-d\\\\TH:i:sP'.replace(backslash, doFormat);\n      },\n      /**\n       * RFC 2822 date\n       * @return {string}\n       */\n      r: function() {\n        return 'D, d M Y H:i:s O'.replace(backslash, doFormat);\n      },\n      /**\n       * Seconds since UNIX epoch\n       * @return {number}\n       */\n      U: function() {\n        return vDate.getTime() / 1000 || 0;\n      }\n    };\n    return doFormat(vChar, vChar);\n  },\n  formatDate: function(vDate, vFormat) {\n    const self = this;\n    let i, n, len, str, vChar, vDateStr = '';\n    const BACKSLASH = '\\\\';\n    if (typeof vDate === 'string') {\n      vDate = self.parseDate(vDate, vFormat);\n      if (!vDate) {\n        return null;\n      }\n    }\n    if (vDate instanceof Date) {\n      len = vFormat.length;\n      for (i = 0; i < len; i++) {\n        vChar = vFormat.charAt(i);\n        if (vChar === 'S' || vChar === BACKSLASH) {\n          continue;\n        }\n        if (i > 0 && vFormat.charAt(i - 1) === BACKSLASH) {\n          vDateStr += vChar;\n          continue;\n        }\n        str = self.parseFormat(vChar, vDate);\n        if (i !== (len - 1) && self.intParts.test(vChar) && vFormat.charAt(i + 1) === 'S') {\n          n = parseInt(str) || 0;\n          str += self.dateSettings.ordinal(n);\n        }\n        vDateStr += str;\n      }\n      return vDateStr;\n    }\n    return '';\n  }\n};\n/* eslint-enable */\n\nexport default DateFormatter;\n","/**\n * @module gmf.permalink.ShareService\n */\n/**\n * Service to handle the sharing of the permalink.\n * @param {angular.$http} $http Angular http service.\n * @param  {string} gmfShortenerCreateUrl URL for the shortener API\n * @constructor\n * @struct\n * @ngInject\n * @export\n * @ngname gmfShareService\n */\nconst exports = function($http, gmfShortenerCreateUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.gmfShortenerCreateUrl_ = gmfShortenerCreateUrl;\n\n};\n\n\n/**\n * Get a short URL of the permalink by calling the url shortener service.\n * - If no shortener API url have been specified, it returns the permalink itself.\n * @param  {string} url the permalink\n * @return {gmfx.ShortenerAPIResponse|angular.$http.HttpPromise} an object containing the permalink not shortened or\n * the promise attached to the shortener API request\n */\nexports.prototype.getShortUrl = function(url) {\n  const params = /** @type {gmfx.ShortenerAPIRequestParams} */ ({\n    url\n  });\n\n  if (!this.gmfShortenerCreateUrl_) {\n    return {\n      data: {\n        short_url: url\n      },\n      status: 200\n    };\n  }\n\n  return this.postShortUrl_(params);\n};\n\n\n/**\n * Send the short permalink to the email provided\n * - If email is provided, the short permalink will be sent to this email\n * @param  {string} shortUrl the short permalink to send\n * @param  {string} email the email to which the short url must be send\n * @param  {string=} opt_message message for the email\n * @return {angular.$http.HttpPromise} the promise attached to the shortener API request\n */\nexports.prototype.sendShortUrl = function(shortUrl, email, opt_message) {\n  const params = /** @type {gmfx.ShortenerAPIRequestParams} */ ({\n    url: shortUrl,\n    email: email\n  });\n\n  if (opt_message) {\n    params['message'] = opt_message;\n  }\n\n  return this.postShortUrl_(params);\n};\n\n\n/**\n * @param  {gmfx.ShortenerAPIRequestParams} params parameters for the request\n * @return {angular.$http.HttpPromise} the promise attached to the shortener API request\n * @private\n */\nexports.prototype.postShortUrl_ = function(params) {\n  // Override default behavior of $http.post method (sending data in json format)\n  return this.$http_.post(this.gmfShortenerCreateUrl_, $.param(params), {\n    headers: {'Content-Type': 'application/x-www-form-urlencoded'}\n  });\n};\n\n\n/**\n * Max length defined for the complete url.\n * Check IE limits, see {@link http://support.microsoft.com/kb/208427}\n * @constant\n * @type {number}\n */\nexports.URL_MAX_LEN = 2083;\n\n/**\n * Max length defined for the url parth section.\n * Check IE limits, see {@link http://support.microsoft.com/kb/208427}\n * @constant\n * @type {number}\n */\nexports.URL_PATH_MAX_LEN = 2048;\n\nexports.module = angular.module('gmfShareService', []);\n\nexports.module.service('gmfShareService', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MeasureLength\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} format The format function\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeox.interaction.MeasureOptions=} options Options\n */\nconst exports = function(format, gettextCatalog, options = /** @type {ngeox.interaction.MeasureOptions} */({})) {\n\n  ngeoInteractionMeasure.call(this, /** @type {ngeo.interaction.MeasureBaseOptions} */ (options));\n\n\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = gettextCatalog.getString('Click to continue drawing the line.');\n    const br = document.createElement('br');\n    br.textContent = gettextCatalog.getString('Double-click or click last point to finish.');\n    this.continueMsg.appendChild(br);\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.format = format;\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n    source: source,\n    style: style\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomLineString);\n  const proj = this.getMap().getView().getProjection();\n  googAsserts.assert(proj);\n  const output = ngeoInteractionMeasure.getFormattedLength(geom, proj, this.precision, this.format);\n  const coord = geom.getLastCoordinate();\n  callback(output, coord);\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MeasureArea\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} format The format function\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeox.interaction.MeasureOptions=} options Options\n */\nconst exports = function(format, gettextCatalog, options = {}) {\n\n  ngeoInteractionMeasure.call(this, /** @type {ngeo.interaction.MeasureBaseOptions} */ (options));\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = gettextCatalog.getString('Click to continue drawing the polygon.');\n    const br = document.createElement('br');\n    br.textContent = gettextCatalog.getString('Double-click or click starting point to finish.');\n    this.continueMsg.appendChild(br);\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.format = format;\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('Polygon'),\n    source: source,\n    style: style\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomPolygon);\n  const proj = this.getMap().getView().getProjection();\n  googAsserts.assert(proj);\n  const output = ngeoInteractionMeasure.getFormattedArea(geom, proj, this.precision, this.format);\n  const verticesCount = geom.getCoordinates()[0].length;\n  let coord = null;\n  if (verticesCount > 3) {\n    coord = geom.getInteriorPoint().getCoordinates();\n  }\n  callback(output, coord);\n};\n\n\nexport default exports;\n","/**\n * @module gmf.authentication.component\n */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessageModalComponent from 'ngeo/message/modalComponent.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('gmfAuthentication', [\n  gmfAuthenticationService.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoMessageModalComponent.name,\n]);\n\n\n/**\n * @param {angular.JQLite} element Element.\n * @param {angular.Attributes} attrs Attributes.\n * @return {string} Template URL.\n */\nexports.gmfAuthenticationTemplateUrl_ = (element, attrs) => {\n  const templateUrl = attrs['gmfAuthenticationTemplateurl'];\n  return templateUrl !== undefined ? templateUrl :\n    'gmf/authentication';\n};\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/authentication', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfAuthenticationTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfAuthenticationTemplateUrl($element, $attrs, gmfAuthenticationTemplateUrl) {\n  return gmfAuthenticationTemplateUrl($element, $attrs);\n}\n\n\n/**\n * An \"authentication\" component for a GeoMapFish application. With the\n * use of the \"authentication\" service, it features a complete interface\n * for the user to be able to login, logout, change or reset his or her\n * password.  The `gmfUser` angular value is also used to keep track of\n * the user information. When empty, that means that the user isn't connected\n * yet.\n *\n * While not logged in, the \"login\" form is shown, which allows the user to\n * either log in or ask for a password reset.\n *\n * Once logged in, the \"logout\" form is shown, which allows the user to either\n * log out or change his or her password.\n *\n * Example:\n *\n *      <gmf-authentication\n *        gmf-authentication-allow-password-change=\"::true\">\n *      </gmf-authentication>\n *\n * @htmlAttribute {boolean} gmf-authentication-allow-password-reset Whether to\n *     show the password forgotten link. Default to true.\n * @htmlAttribute {boolean|function} gmf-authentication-allow-password-change Whether to\n *     show the change password button. Default to true. You can also specify a gmfx.PasswordValidator Object\n *     to add constraint on user's new password.\n * @htmlAttribute {gmfx.PasswordValidator} gmf-authentication-password-validator A gmfx.PasswordValidator\n *     Object to add constraint on user's new password. The gmf-authentication-allow-password-change. To use\n *     it you must also allow the user to change its password.\n * @htmlAttribute {boolean} gmf-authentication-force-password-change Force the\n *     user to change its password. Default to false. If you set it to true, you\n *     should also allow the user to change its password. Don't add this option alone, use\n *     it in a dedicated authentication component, in a ngeo-modal, directly in\n *     your index.html (see example 2.)\n *\n * Example 2:\n *\n *     <ngeo-modal\n *         ngeo-modal-closable=\"false\"\n *         ng-model=\"mainCtrl.userMustChangeItsPassword()\"\n *         ng-model-options=\"{getterSetter: true}\">\n *       <div class=\"modal-header\">\n *         <h4 class=\"modal-title\">\n *           {{'You must change your password' | translate}}\n *         </h4>\n *       </div>\n *       <div class=\"modal-body\">\n *         <gmf-authentication\n *           gmf-authentication-force-password-change=\"::true\">\n *         </gmf-authentication>\n *       </div>\n *     </ngeo-modal>\n *\n * @ngdoc component\n * @ngname gmfAuthentication\n */\nexports.component_ = {\n  bindings: {\n    'allowPasswordReset': '<?gmfAuthenticationAllowPasswordReset',\n    'allowPasswordChange': '<?gmfAuthenticationAllowPasswordChange',\n    'passwordValidator': '<?gmfAuthenticationPasswordValidator',\n    'forcePasswordChange': '<?gmfAuthenticationForcePasswordChange'\n  },\n  controller: 'GmfAuthenticationController',\n  templateUrl: gmfAuthenticationTemplateUrl\n};\n\nexports.value('gmfAuthenticationTemplateUrl',\n  exports.gmfAuthenticationTemplateUrl_);\n\nexports.component('gmfAuthentication', exports.component_);\n\n\n/**\n * @private\n */\nexports.AuthenticationController_ = class {\n  /**\n   * @private\n   * @param {!angular.JQLite} $element Element.\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {gmf.authentication.Service} gmfAuthenticationService GMF Authentication service\n   * @param {gmfx.User} gmfUser User.\n   * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfAuthenticationController\n   */\n  constructor($element, gettextCatalog, gmfAuthenticationService, gmfUser, ngeoNotification) {\n\n    /**\n     * @type {!angular.JQLite}\n     * @private\n     */\n    this.$element_ = $element;\n\n    /**\n     * @type {gmfx.User}\n     * @export\n     */\n    this.gmfUser = gmfUser;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog = gettextCatalog;\n\n    /**\n     * @type {gmf.authentication.Service}\n     * @private\n     */\n    this.gmfAuthenticationService_ = gmfAuthenticationService;\n\n    /**\n     * @type {ngeo.message.Notification}\n     * @private\n     */\n    this.notification_ = ngeoNotification;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.allowPasswordReset;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.allowPasswordChange;\n\n    /**\n     * @type {gmfx.PasswordValidator?}\n     * @export\n     */\n    this.passwordValidator = null;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.forcePasswordChange;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.changingPassword = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.changePasswordModalShown = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.resetPasswordModalShown = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.error = false;\n\n    // LOGIN form values\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.loginVal = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.pwdVal = '';\n\n    // CHANGE PASSWORD form values\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.oldPwdVal = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.newPwdVal = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.newPwdConfVal = '';\n  }\n\n  /**\n   * Initialise the controller.\n   */\n  $onInit() {\n    this.allowPasswordReset = this.allowPasswordReset !== false;\n    this.allowPasswordChange = this.allowPasswordChange !== false;\n    this.forcePasswordChange = this.forcePasswordChange === true;\n    if (this.forcePasswordChange) {\n      this.changingPassword = true;\n    }\n  }\n\n\n  // METHODS THAT CALL THE AUTHENTICATION SERVICE METHODS\n\n  /**\n   * Calls the authentication service changePassword method.\n   * @export\n   */\n  changePassword() {\n    const gettextCatalog = this.gettextCatalog;\n\n    const oldPwd = this.oldPwdVal;\n    const newPwd = this.newPwdVal;\n    const confPwd = this.newPwdConfVal;\n\n    const errors = [];\n    // Validation - Passwords are required.\n    if (oldPwd === '') {\n      errors.push(gettextCatalog.getString('The old password is required.'));\n    }\n    if (newPwd === '') {\n      errors.push(gettextCatalog.getString('The new password is required.'));\n    }\n    if (confPwd === '') {\n      errors.push(gettextCatalog.getString('The password confirmation is required.'));\n    }\n\n    if (errors.length) {\n      this.setError_(errors);\n    } else {\n      // Default validation - Passwords must be new and must also match.\n      if (oldPwd === newPwd) {\n        errors.push(gettextCatalog.getString('The old and new passwords are the same.'));\n      }\n      if (newPwd !== confPwd) {\n        errors.push(gettextCatalog.getString('The passwords don\\'t match.'));\n      }\n      // Custom validation - If a passwordValidator is set, use it to validate the new password.\n      if (this.passwordValidator) {\n        if (!this.passwordValidator.isPasswordValid(oldPwd)) {\n          errors.push(gettextCatalog.getString(this.passwordValidator.notValidMessage));\n        }\n      }\n\n      if (errors.length) {\n        this.setError_(errors);\n      } else {\n        // Send request with current credentials, which may fail if the old password given is incorrect.\n        const error = gettextCatalog.getString('Incorrect old password.');\n        this.gmfAuthenticationService_.changePassword(oldPwd, newPwd, confPwd).then(\n          () => {\n            this.changePasswordModalShown = true;\n            this.changePasswordReset();\n          },\n          this.setError_.bind(this, error));\n      }\n    }\n  }\n\n  /**\n   * Calls the authentication service login method.\n   * @export\n   */\n  login() {\n    const gettextCatalog = this.gettextCatalog;\n\n    const errors = [];\n    if (this.loginVal === '') {\n      errors.push(gettextCatalog.getString('The username is required.'));\n    }\n    if (this.pwdVal === '') {\n      errors.push(gettextCatalog.getString('The password is required.'));\n    }\n    if (errors.length) {\n      this.setError_(errors);\n    } else {\n      const error = gettextCatalog.getString('Incorrect credentials or disabled account.');\n      this.gmfAuthenticationService_.login(this.loginVal, this.pwdVal).then(\n        this.resetError_.bind(this),\n        this.setError_.bind(this, error));\n    }\n  }\n\n  /**\n   * Calls the authentication service logout method.\n   * @export\n   */\n  logout() {\n    const gettextCatalog = this.gettextCatalog;\n    const error = gettextCatalog.getString('Could not log out.');\n    this.gmfAuthenticationService_.logout().then(\n      this.resetError_.bind(this),\n      this.setError_.bind(this, error));\n  }\n\n  /**\n   * Calls the authentication service resetPassword method.\n   * @export\n   */\n  resetPassword() {\n    const gettextCatalog = this.gettextCatalog;\n\n    if (!this.loginVal) {\n      this.setError_(gettextCatalog.getString('Please, input a login...'));\n      return;\n    }\n\n    const error = gettextCatalog.getString('An error occurred while resetting the password.');\n\n    /**\n     * @param {gmfx.AuthenticationDefaultResponse} respData Response.\n     */\n    const resetPasswordSuccessFn = function(respData) {\n      this.resetPasswordModalShown = true;\n      this.resetError_();\n    }.bind(this);\n\n    this.gmfAuthenticationService_.resetPassword(this.loginVal).then(\n      resetPasswordSuccessFn,\n      this.setError_.bind(this, error)\n    );\n  }\n\n\n  // OTHER METHODS\n\n  /**\n   * Reset the changePassword values and error.\n   * @export\n   */\n  changePasswordReset() {\n    this.resetError_();\n    this.changingPassword = false;\n    this.oldPwdVal = '';\n    this.newPwdVal = '';\n    this.newPwdConfVal = '';\n  }\n\n  /**\n   * @return {boolean} True if the user must change is password and if the \"forcePasswordChange\" option of\n   *    this component is set to true.\n   * @export\n   */\n  userMustChangeItsPassword() {\n    return (this.gmfUser.is_password_changed === false && this.forcePasswordChange);\n  }\n\n  /**\n   * @param {string|Array.<string>} errors Errors.\n   * @private\n   */\n  setError_(errors) {\n    if (this.error) {\n      this.resetError_();\n    }\n\n    this.error = true;\n\n    const container = this.$element_.find('.gmf-authentication-error');\n\n    if (!Array.isArray(errors)) {\n      errors = [errors];\n    }\n\n    errors.forEach(function(error) {\n      this.notification_.notify({\n        msg: error,\n        target: container,\n        type: ngeoMessageMessage.Type.ERROR\n      });\n    }, this);\n  }\n\n  /**\n   * @private\n   */\n  resetError_() {\n    this.notification_.clear();\n    this.error = false;\n  }\n};\n\nexports.controller('GmfAuthenticationController',\n  exports.AuthenticationController_);\n\n\nexport default exports;\n","/**\n * @module gmf.authentication.module\n */\nimport gmfAuthenticationComponent from 'gmf/authentication/component.js';\n\n/** @suppress {extraRequire} */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfAuthenticationModule', [\n  gmfAuthenticationComponent.name,\n  gmfAuthenticationService.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.BackgroundLayerMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olObservable from 'ol/Observable.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport ngeoLayerHelper from 'ngeo/map/LayerHelper.js';\n\n/**\n * Provides a service for setting/unsetting background layers\n * in maps.\n *\n * The notion of background/base layers doesn't exist in OpenLayers. This\n * service adds that notion.\n *\n * Setting a background layer to map is done with the `set` function:\n *\n *     ngeoBackgroundLayerMgr.set(map, layer);\n *\n * To unset the background layer pass `null` as the `layer` argument:\n *\n *     ngeoBackgroundLayerMgr.set(map, null);\n *\n * The `get` function returns the current background layer of the map passed\n * as an argument. `null` is returned if the map doesn't have a background\n * layer.\n *\n * The background layer is always added at index 0 in the map's layers\n * collection. When a background layer is set it is inserted (at index 0)\n * if the map does not already have a background layer, otherwise the\n * new background layer replaces the previous one at index 0.\n *\n * Users can subscribe to a 'change' event to get notified when the background\n * layer changes:\n *\n *     ngeoBackgroundLayerMgr.on('change', function(e) {\n *       // do something with the layer\n *       let layer = ngeoBackgroundLayerMgr.get();\n *       // know which layer was used before\n *       let previous = e.previous\n *     });\n *\n * See our live examples:\n * [../examples/backgroundlayer.html](../examples/backgroundlayer.html)\n * [../examples/backgroundlayerdropdown.html](../examples/backgroundlayerdropdown.html)\n *\n * @extends {ol.Observable}\n * @constructor\n * @struct\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Themes service.\n * @ngInject\n * @ngdoc service\n * @ngname ngeoBackgroundLayerMgr\n */\nconst exports = function(ngeoLayerHelper) {\n\n  olObservable.call(this);\n\n  /**\n   * Object used to track if maps have background layers.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.mapUids_ = {};\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n};\n\nolBase.inherits(exports, olObservable);\n\n\n/**\n * Return the current background layer of a given map. `null` is returned if\n * the map does not have a background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The background layer.\n * @export\n */\nexports.prototype.get = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? this.ngeoLayerHelper_.getGroupFromMap(map,\n    exports.BACKGROUNDLAYERGROUP_NAME).getLayers().item(0) : null;\n};\n\n\n/**\n * Set the background layer of a map. If `layer` is `null` the background layer\n * is removed.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The new background layer.\n * @return {ol.layer.Base} The previous background layer.\n * @export\n */\nexports.prototype.set = function(map, layer) {\n  const ZIndex = -200;\n  const mapUid = olBase.getUid(map).toString();\n  const previous = this.get(map);\n  if (layer !== null) {\n    layer.setZIndex(ZIndex);\n    this.ngeoLayerHelper_.setZIndexToFirstLevelChildren(layer, ZIndex);\n  }\n\n  const bgGroup = this.ngeoLayerHelper_.getGroupFromMap(map, exports.BACKGROUNDLAYERGROUP_NAME);\n\n  if (previous !== null) {\n    googAsserts.assert(mapUid in this.mapUids_);\n    if (layer !== null) {\n      bgGroup.getLayers().setAt(0, layer);\n    } else {\n      bgGroup.getLayers().removeAt(0);\n      delete this.mapUids_[mapUid];\n    }\n  } else if (layer !== null) {\n    bgGroup.getLayers().insertAt(0, layer);\n    this.mapUids_[mapUid] = true;\n  }\n  /** @type {ngeox.BackgroundEvent} */\n  const event = new ngeoCustomEvent('change', {\n    current: layer,\n    previous: previous\n  });\n  this.dispatchEvent(event);\n\n  return previous;\n};\n\n/**\n * Return the current background layer overlay of a given map, used by the opacity slider.\n * `null` is returned if the map does not have an opacity background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The opacity background layer.\n * @export\n */\nexports.prototype.getOpacityBgLayer = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? this.ngeoLayerHelper_.getGroupFromMap(map,\n    exports.BACKGROUNDLAYERGROUP_NAME).getLayers().item(1) : null;\n};\n\n/**\n * Set an background layer overlay, used by the opacity slider.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The opacity background layer.\n * @export\n */\nexports.prototype.setOpacityBgLayer = function(map, layer) {\n  const ZIndex = -100;\n  layer.setOpacity(0);\n  layer.setVisible(true);\n  layer.setZIndex(ZIndex);\n  this.ngeoLayerHelper_.setZIndexToFirstLevelChildren(layer, ZIndex);\n  const bgGroup = this.ngeoLayerHelper_.getGroupFromMap(map, exports.BACKGROUNDLAYERGROUP_NAME);\n\n  const index = bgGroup.getLayers().getArray().indexOf(layer);\n  if (index === -1) {\n    bgGroup.getLayers().push(layer);\n  }\n};\n\n/**\n * @param {ol.Map} map The map.\n * @param {Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.updateDimensions = function(map, dimensions) {\n  const baseBgLayer = this.get(map);\n  if (baseBgLayer) {\n    let layers = [baseBgLayer];\n    if (baseBgLayer instanceof olLayerGroup) {\n      // Handle the first level of layers of the base background layer.\n      layers = baseBgLayer.getLayers().getArray();\n    }\n\n    layers.forEach((layer) => {\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      if (layer) {\n        let hasUpdates = false;\n        const updatedDimensions = {};\n        for (const key in layer.get('dimensions')) {\n          const value = dimensions[key];\n          if (value !== undefined) {\n            updatedDimensions[key] = value;\n            hasUpdates = true;\n          }\n        }\n        if (hasUpdates) {\n          const source = layer.getSource();\n          if (source instanceof olSourceWMTS) {\n            source.updateDimensions(updatedDimensions);\n            source.refresh();\n          } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n            source.updateParams(updatedDimensions);\n            source.refresh();\n          }\n        }\n      }\n    });\n  }\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoBackgroundLayerMgr', [\n  ngeoLayerHelper.module.name\n]);\nexports.module.service('ngeoBackgroundLayerMgr', exports);\n\n/**\n * @const\n */\nexports.BACKGROUNDLAYERGROUP_NAME = 'background';\n\n\nexport default exports;\n","/**\n * @module gmf.backgroundlayerselector.component\n */\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport * as olEvents from 'ol/events.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfBackgroundlayerselector', [\n  gmfThemeThemes.module.name,\n  ngeoMapBackgroundLayerMgr.module.name,\n]);\n\n\nexports.value('gmfBackgroundlayerselectorTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfBackgroundlayerselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/backgroundlayerselector';\n  }\n);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/backgroundlayerselector', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfBackgroundlayerselectorTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfBackgroundlayerselectorTemplateUrl($element, $attrs, gmfBackgroundlayerselectorTemplateUrl) {\n  return gmfBackgroundlayerselectorTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provide a \"background layer selector\" component.\n *\n * Example:\n *\n *      <gmf-backgroundlayerselector\n *        gmf-backgroundlayerselector-map=\"::ctrl.map\"\n *        gmf-backgroundlayer-opacity-options=\"::ctrl.bgOpacityOptions\"\n *        gmf-backgroundlayerselector-select=\"onBackgroundSelected()\">\n *      </gmf-backgroundlayerselector>\n *\n * Used UI metadata:\n *\n *  * thumbnail: The URL used for the icon.\n *\n * @htmlAttribute {ol.Map=} gmf-backgroundlayerselector-map The map.\n * @htmlAttribute {string} gmf-backgroundlayer-opacity-options The opacity slider options.\n * @htmlAttribute {Function} gmf-backgroundlayerselector-select Function called\n *     when a layer was selected by the user.\n *\n * @ngdoc component\n * @ngname gmfBackgroundlayerselector\n */\nexports.component_ = {\n  controller: 'GmfBackgroundlayerselectorController as ctrl',\n  bindings: {\n    'map': '=gmfBackgroundlayerselectorMap',\n    'opacityOptions': '=gmfBackgroundlayerOpacityOptions',\n    'select': '&?gmfBackgroundlayerselectorSelect'\n  },\n  templateUrl: gmfBackgroundlayerselectorTemplateUrl\n};\n\n\nexports.component('gmfBackgroundlayerselector',\n  exports.component_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeo.map.BackgroundLayerMgr} ngeoBackgroundLayerMgr Background layer manager.\n * @param {!gmf.theme.Themes} gmfThemes Themes service.\n * @ngInject\n * @ngdoc controller\n * @ngname GmfBackgroundlayerselectorController\n */\nexports.Controller_ = function($scope, ngeoBackgroundLayerMgr, gmfThemes) {\n\n  /**\n   * @type {?ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {!string|undefined}\n   * @export\n   */\n  this.opacityOptions;\n\n  /**\n   * Function called when a layer was selected by the user.\n   * @type {?Function}\n   * @export\n   */\n  this.select;\n\n  /**\n   * @type {?ol.layer.Base}\n   * @export\n   */\n  this.bgLayer;\n\n  /**\n   * @type {?Array.<!ol.layer.Base>}\n   * @export\n   */\n  this.bgLayers;\n\n  /**\n   * @type {ol.layer.Base}\n   * @export\n   */\n  this.opacityLayer;\n\n  /**\n   * @type {!gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {!Array.<!ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  this.listenerKeys_.push(olEvents.listen(gmfThemes, 'change', this.handleThemesChange_, this));\n\n  /**\n   * @type {!ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.backgroundLayerMgr_ = ngeoBackgroundLayerMgr;\n\n  this.listenerKeys_.push(olEvents.listen(this.backgroundLayerMgr_, 'change',\n    /**\n     * @param {!ngeox.BackgroundEvent} event Event.\n     */\n    (event) => {\n      this.bgLayer = event.detail.current;\n    }));\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.handleThemesChange_();\n};\n\n\n/**\n * Called when the themes changes. Set (or reset) the backround layers.\n * @private\n */\nexports.Controller_.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getBgLayers().then((layers) => {\n    this.bgLayers = layers;\n\n    if (this.opacityOptions !== undefined) {\n      const opacityLayer = layers.find(layer => layer.get('label') === this.opacityOptions);\n      if (opacityLayer !== undefined) {\n        this.setOpacityBgLayer(opacityLayer);\n        this.opacityLayer = opacityLayer;\n\n        // Reorder for the UI the bgArray copy with the opacity layer at the end\n        this.bgLayers = this.bgLayers.slice();\n        const indexOpa = this.bgLayers.findIndex(layer => layer === this.opacityLayer);\n        this.bgLayers.splice(indexOpa, 1);\n        this.bgLayers.push(opacityLayer);\n      }\n    }\n  });\n};\n\n/**\n * Getter/setter for background layer overlay, used by opacity slider.\n * @param {?number} val The opacity.\n * @returns {number} The background layer opacity.\n * @export\n */\nexports.Controller_.prototype.getSetBgLayerOpacity = function(val) {\n  if (val) {\n    this.opacityLayer.setOpacity(val);\n  }\n  return this.opacityLayer.getOpacity();\n};\n\n/**\n * @param {ol.layer.Base} layer Layer.\n * @param {boolean=} opt_silent Do not notify listeners.\n * @export\n */\nexports.Controller_.prototype.setLayer = function(layer, opt_silent) {\n  this.bgLayer = layer;\n  this.backgroundLayerMgr_.set(this.map, layer);\n  if (!opt_silent && this.select) {\n    this.select();\n  }\n};\n\n/**\n * Set a background layer overlay, used by the opacity slider.\n * @param {ol.layer.Base} layer The opacity background layer.\n * @export\n */\nexports.Controller_.prototype.setOpacityBgLayer = function(layer) {\n  this.backgroundLayerMgr_.setOpacityBgLayer(this.map, layer);\n};\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  this.listenerKeys_.forEach(olEvents.unlistenByKey);\n  this.listenerKeys_.length = 0;\n};\n\n\nexports.controller('GmfBackgroundlayerselectorController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.Helper\n */\nimport gmfEditingEnumerateAttribute from 'gmf/editing/EnumerateAttribute.js';\nimport ngeoDatasourceHelper from 'ngeo/datasource/Helper.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class {\n\n  /**\n   * A service that provides utility methods to manipulate or get GMF data\n   * sources.\n   *\n   * @struct\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {gmf.editing.EnumerateAttribute} gmfEnumerateAttribute The Gmf enumerate\n   *     attribute service.\n   * @param {ngeo.datasource.Helper} ngeoDataSourcesHelper Ngeo data\n   *     source helper service.\n   * @ngdoc service\n   * @ngname gmfDataSourcesHelper\n   * @ngInject\n   */\n  constructor($q, gmfEnumerateAttribute, ngeoDataSourcesHelper) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {gmf.editing.EnumerateAttribute}\n     * @private\n     */\n    this.gmfEnumerateAttribute_ = gmfEnumerateAttribute;\n\n    /**\n     * @type {ngeo.datasource.Helper}\n     * @private\n     */\n    this.ngeoDataSourcesHelper_ = ngeoDataSourcesHelper;\n\n\n    // === Other properties ===\n\n    /**\n     * @type {gmfx.datasource.DataSources}\n     * @protected\n     */\n    this.collection_;\n\n    /**\n     * @type {Object.<number, gmf.datasource.OGC>}\n     * @protected\n     */\n    this.cache_;\n  }\n\n  /**\n   * @return {gmfx.datasource.DataSources} Data sources collection.\n   * @export\n   */\n  get collection() {\n    return /** @type {gmfx.datasource.DataSources} */ (\n      this.ngeoDataSourcesHelper_.collection\n    );\n  }\n\n  /**\n   * Return a data source using its id.\n   * @param {number} id Data source id.\n   * @return {?gmf.datasource.OGC} Data source.\n   * @export\n   */\n  getDataSource(id) {\n    return /** @type {?gmf.datasource.OGC} */ (\n      this.ngeoDataSourcesHelper_.getDataSource(id)\n    );\n  }\n\n  /**\n   * @param {gmf.datasource.OGC} dataSource Filtrable data source.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  prepareFiltrableDataSource(dataSource) {\n\n    const prepareFiltrableDataSourceDefer = this.q_.defer();\n\n    // (1) Get the attributes. The first time, they will be asynchronously\n    //     obtained using a WFS DescribeFeatureType request.\n    this.ngeoDataSourcesHelper_.getDataSourceAttributes(\n      dataSource\n    ).then((attributes) => {\n      // (2) The attribute names that are in the `enumeratedAttributes`\n      //     metadata are the ones that need to have their values fetched.\n      //     Do that once then set the type to SELECT and the choices.\n      const meta = dataSource.gmfLayer.metadata || {};\n      const enumAttributes = meta.enumeratedAttributes;\n      if (enumAttributes && enumAttributes.length) {\n        const promises = [];\n        for (const attribute of attributes) {\n          if (olArray.includes(enumAttributes, attribute.name) &&\n             attribute.type !== ngeoFormatAttributeType.SELECT &&\n             (!attribute.choices || !attribute.choices.length)) {\n            promises.push(\n              this.gmfEnumerateAttribute_.getAttributeValues(\n                dataSource, attribute.name\n              ).then((values) => {\n                const choices = values.map(choice => choice.value);\n                attribute.type = ngeoFormatAttributeType.SELECT;\n                attribute.choices = choices;\n              })\n            );\n          }\n        }\n        return this.q_.all(promises).then(\n          prepareFiltrableDataSourceDefer.resolve(dataSource)\n        );\n      } else {\n        prepareFiltrableDataSourceDefer.resolve(dataSource);\n      }\n    });\n\n    return prepareFiltrableDataSourceDefer.promise;\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfDataSourcesHelper', [\n  ngeoDatasourceHelper.module.name,\n  gmfEditingEnumerateAttribute.module.name,\n]);\nexports.module.service('gmfDataSourcesHelper', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.OGC\n */\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\nconst exports = class extends ngeoDatasourceOGC {\n\n  /**\n   * A `gmf.datasource.OGC` extends a `ngeo.datasource.OGC` and\n   * adds some properties that are proper to GMF only.\n   *\n   * @struct\n   * @param {gmfx.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {gmfThemes.GmfLayer}\n     * @private\n     */\n    this.gmfLayer_ = options.gmfLayer;\n\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {gmfThemes.GmfLayer} GMF layer\n   * @export\n   */\n  get gmfLayer() {\n    return this.gmfLayer_;\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.WFSAliases\n */\nimport ngeoDatasourceHelper from 'ngeo/datasource/Helper.js';\n\nconst exports = class {\n\n  /**\n   * Service that provides methods to get additional information and actions\n   * when performing WFS requests.\n   *\n   * @struct\n   * @param {ngeo.datasource.Helper} ngeoDataSourcesHelper Ngeo data\n   *     source helper service.\n   * @ngdoc service\n   * @ngname gmfWFSAliases\n   * @ngInject\n   */\n  constructor(ngeoDataSourcesHelper) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {ngeo.datasource.Helper}\n     * @private\n     */\n    this.ngeoDataSourcesHelper_ = ngeoDataSourcesHelper;\n  }\n\n\n  /**\n   * @param {ngeo.datasource.OGC} dataSource Data source.\n   * @export\n   */\n  describe(dataSource) {\n    // Only QGIS Server supports WFS aliases\n    if (dataSource.ogcServerType === 'qgisserver' && !dataSource.attributes) {\n      // Trigger an additional WFS DescribeFeatureType request to get\n      // datasource attributes, including aliases.\n      this.ngeoDataSourcesHelper_.getDataSourceAttributes(dataSource);\n    }\n  }\n};\n\n\nexports.module = angular.module('gmfDatasourceWFSAliases', [\n  ngeoDatasourceHelper.module.name,\n]);\nexports.module.service('gmfWFSAliases', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.Manager\n */\nimport gmfDatasourceOGC from 'gmf/datasource/OGC.js';\nimport gmfDatasourceWFSAliases from 'gmf/datasource/WFSAliases.js';\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\n\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\n\nconst exports = class {\n\n  /**\n   * The GeoMapFish DataSources Manager is responsible of listenening to the\n   * c2cgeoportal's themes to create instances of `ngeo.datasource.DataSource`\n   * objects with the layer definitions found and push them in the\n   * `ngeox.datasource.DataSources` collection. The Manager must be initialized\n   * with the app's map using the setDatasourcseMap() method.\n   *\n   * When changing theme, these data sources are cleared then re-created.\n   *\n   * @struct\n   * @param {angular.$q} $q Angular q service\n   * @param {!angular.Scope} $rootScope Angular rootScope.\n   * @param {angular.$timeout} $timeout Angular timeout service.\n   * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n   * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n   * @param {!ngeo.map.BackgroundLayerMgr} ngeoBackgroundLayerMgr Background layer\n   *     manager.\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources service.\n   *     data sources service.\n   * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n   * @param {!gmf.datasource.WFSAliases} gmfWFSAliases Gmf WFS aliases service.\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfDataSourcesManager\n   */\n  constructor($q, $rootScope, $timeout, gmfThemes, gmfTreeManager,\n    ngeoBackgroundLayerMgr, ngeoDataSources, ngeoLayerHelper, ngeoRuleHelper,\n    ngeoWMSTime, gmfWFSAliases\n  ) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = $rootScope;\n\n    /**\n     * @type {angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {gmf.theme.Themes}\n     * @private\n     */\n    this.gmfThemes_ = gmfThemes;\n\n    /**\n     * @type {gmf.layertree.TreeManager}\n     * @private\n     */\n    this.gmfTreeManager_ = gmfTreeManager;\n\n    /**\n     * @type {!ngeo.map.BackgroundLayerMgr}\n     * @private\n     */\n    this.ngeoBackgroundLayerMgr_ = ngeoBackgroundLayerMgr;\n\n    /**\n     * @type {ngeo.datasource.DataSources}\n     * @private\n     */\n    this.ngeoDataSources_ = ngeoDataSources;\n\n    /**\n     * The collection of DataSources from ngeo, which gets updated by this\n     * service. When the theme changes, first we remove all data sources, then\n     * the 'active' data source are added here.\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n    /**\n     * @type {!ngeo.misc.WMSTime}\n     * @private\n     */\n    this.ngeoWMSTime_ = ngeoWMSTime;\n\n    /**\n     * @type {!gmf.datasource.WFSAliases}\n     * @private\n     */\n    this.gmfWFSAliases_ = gmfWFSAliases;\n\n\n    // === Inner properties ===\n\n    /**\n     * While loading a new theme, this is where all of the created data sources\n     * are put using the id as key for easier find in the future.\n     * @type {Object.<number, gmf.datasource.OGC>}\n     * @private\n     */\n    this.dataSourcesCache_ = {};\n\n    /**\n     * A reference to the dimensions object.\n     * @type {ngeox.Dimensions|undefined}\n     * @private\n     */\n    this.dimensions_;\n\n    /**\n     * The cache of layertree leaf controller, i.e. those that are added to\n     * the tree manager. When treeCtrl is added in this cache, it's given\n     * a reference to its according data source.\n     * @type {gmfx.datasource.ManagerTreeCtrlCache}\n     * @private\n     */\n    this.treeCtrlCache_ = {};\n\n    /**\n     * The function to call to unregister the `watchCollection` event on\n     * the root layer tree controller children.\n     * @type {?Function}\n     * @private\n     */\n    this.treeCtrlsUnregister_ = null;\n\n    // === Events ===\n\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleNgeoBackgroundLayerChange_,\n      this\n    );\n    olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n  }\n\n\n  /**\n   * Set the map to use with your datasources.\n   * @param {!ol.Map} map The map to use.\n   * @export\n   */\n  setDatasourceMap(map) {\n    this.ngeoDataSources_.map = map;\n  }\n\n  /**\n   * @param {!ngeox.Dimensions} dimensions A reference to the dimensions\n   *     object to keep a reference of in this service.\n   */\n  setDimensions(dimensions) {\n    this.dimensions_ = dimensions;\n  }\n\n  /**\n   * Called when the themes change. Remove any existing data sources first,\n   * then create and add data sources from the loaded themes.\n   * @private\n   */\n  handleThemesChange_() {\n    // (1) Clear\n    this.clearDataSources_();\n    if (this.treeCtrlsUnregister_) {\n      this.treeCtrlsUnregister_();\n    }\n    this.clearTreeCtrlCache_();\n\n    // (2) Re-create data sources and event listeners\n    this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n      const promiseThemes = this.gmfThemes_.getThemesObject().then((themes) => {\n        // Create a DataSources for each theme\n        for (const theme of themes) {\n          for (const child of theme.children) {\n            googAsserts.assert(child);\n            this.createDataSource_(child, child, ogcServers);\n          }\n        }\n      });\n\n      const promiseBgLayers = this.gmfThemes_.getBackgroundLayersObject().then(\n        (backgroundLayers) => {\n          // Create a DataSource for each background layer\n          for (const backgroundLayer of backgroundLayers) {\n            this.createDataSource_(null, backgroundLayer, ogcServers);\n          }\n        }\n      );\n\n      // Then add the data sources that are active in the ngeo collection\n      this.q_.all([promiseThemes, promiseBgLayers]).then(() => {\n        this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(\n          () => {\n            if (this.gmfTreeManager_.rootCtrl) {\n              return this.gmfTreeManager_.rootCtrl.children;\n            }\n          },\n          this.handleTreeManagerRootChildrenChange_.bind(this)\n        );\n      });\n    });\n  }\n\n  /**\n   * Called when the list of tree controllers within the tree manager\n   * root controller changes. In other words, this method is called\n   * after nodes are being added added or removed from the tree,\n   * i.e. from the child nodes collection.\n   *\n   * A timeout is required  because the collection event is fired before\n   * the leaf nodes are created and they are the ones we're looking for here.\n   *\n   * This method handles the registration/unregistration of tree nodes that\n   * are added or removed, pushing it to the cache or removing it from the\n   * cache.\n   *\n   * @param {Array.<ngeo.layertree.Controller>|undefined} value List of tree\n   *     controllers.\n   * @private\n   */\n  handleTreeManagerRootChildrenChange_(value) {\n\n    this.timeout_(() => {\n\n      // (1) No need to do anything if the value is not set\n      if (!value) {\n        return;\n      }\n\n      // (2) Collect 'leaf' treeCtrls\n      const newTreeCtrls = [];\n      const visitor = (treeCtrls, treeCtrl) => {\n        const node = /** @type {!gmfThemes.GmfGroup|!gmfThemes.GmfLayer} */ (\n          treeCtrl.node);\n        const children = node.children;\n        if (!children) {\n          treeCtrls.push(treeCtrl);\n        }\n      };\n      for (let i = 0, ii = value.length; i < ii; i++) {\n        value[i].traverseDepthFirst(visitor.bind(this, newTreeCtrls));\n      }\n\n      // (3) Add new 'treeCtrls'\n      for (let i = 0, ii = newTreeCtrls.length; i < ii; i++) {\n        const newTreeCtrl = newTreeCtrls[i];\n        const cacheItem = this.getTreeCtrlCacheItem_(newTreeCtrl);\n        if (!cacheItem) {\n          this.addTreeCtrlToCache_(newTreeCtrl);\n        }\n      }\n\n      // (4) Remove treeCtrls that are no longer in the newTreeCtrl\n      const cache = this.treeCtrlCache_;\n      for (const id in this.treeCtrlCache_) {\n        const item = cache[id];\n        if (!newTreeCtrls.includes(item.treeCtrl)) {\n          this.removeTreeCtrlCacheItem_(item);\n        }\n      }\n    });\n  }\n\n  /**\n   * Remove the data sources from the ngeo collection that are in the cache,\n   * i.e. those created by this service, then clear the cache.\n   * @private\n   */\n  clearDataSources_() {\n\n    // (1) Remove data sources from ngeo collection\n    const dataSources = this.dataSources_.getArray();\n    for (let i = dataSources.length - 1, ii = 0; i >= ii; i--) {\n      if (this.dataSourcesCache_[dataSources[i].id]) {\n        // Use the `remove` method of the `ol.Collection` object for it\n        // to update its length accordingly and trigger the REMOVE event as\n        // well.\n        this.dataSources_.remove(dataSources[i]);\n      }\n    }\n\n    // (2) Clear the cache\n    olObj.clear(this.dataSourcesCache_);\n  }\n\n  /**\n   * Create a data source using the information on the node, group node\n   * and OGC servers. If the node has children, then we loop in those to get\n   * leaf nodes. Only leaf nodes end up creating a data source. If a data\n   * source with the same id already exists, then the node is skipped.\n   *\n   * Once a data source is created, it is added to the data sources cache.\n   *\n   * @param {gmfThemes.GmfGroup} firstLevelGroup The first level group node.\n   * @param {!gmfThemes.GmfGroup|!gmfThemes.GmfLayer} node The node, which\n   *     may have children or not.\n   * @param {!gmfThemes.GmfOgcServers} ogcServers OGC servers.\n   * @private\n   */\n  createDataSource_(firstLevelGroup, node, ogcServers) {\n\n    const children = node.children;\n\n    // (1) Group node (node that has children). Loop in the children\n    //     individually and create a data source for each one of them. The\n    //     group node itself is **skipped**.\n    if (children) {\n      for (const child of children) {\n        googAsserts.assert(child);\n        this.createDataSource_(firstLevelGroup, child, ogcServers);\n      }\n      return;\n    }\n\n    // From there on, the node is a layer node.\n    const gmfLayer = /** @type gmfThemes.GmfLayer */ (node);\n\n    // (2) Skip layer node if a data source with the same id exists\n    const id = olBase.getUid(gmfLayer);\n    if (this.dataSourcesCache_[id]) {\n      return;\n    }\n\n    // From there on, a data source will be created\n    const meta = gmfLayer.metadata;\n    const ogcType = gmfLayer.type;\n    let maxResolution;\n    let minResolution;\n    let ogcLayers;\n    let ogcServer;\n    let wmtsLayer;\n    let wmtsUrl;\n    let ogcImageType;\n    let timeProperty;\n\n    if (ogcType === gmfThemeThemes.NodeType.WMTS) {\n      // (3) Manage WMTS\n      const gmfLayerWMTS = /** @type {gmfThemes.GmfLayerWMTS} */ (gmfLayer);\n\n      // Common options for WMTS\n      wmtsLayer = gmfLayerWMTS.layer;\n      wmtsUrl = gmfLayerWMTS.url;\n      maxResolution = meta.maxResolution;\n      minResolution = meta.minResolution;\n\n      // OGC Layers\n      const layers = meta.queryLayers || meta.wmsLayers;\n      if (layers) {\n        ogcLayers = layers.split(',').map((layer) => {\n          return {\n            maxResolution: maxResolution,\n            minResolution: minResolution,\n            name: layer,\n            queryable: true\n          };\n        });\n      }\n\n      // OGC Server\n      if (meta.ogcServer && ogcServers[meta.ogcServer]) {\n        ogcServer = ogcServers[meta.ogcServer];\n      }\n      ogcImageType = gmfLayerWMTS.imageType;\n    } else if (ogcType === gmfThemeThemes.NodeType.WMS) {\n      // (4) Manage WMS\n      const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n      // Common options for WMS\n      maxResolution = gmfLayerWMS.maxResolutionHint;\n      minResolution = gmfLayerWMS.minResolutionHint;\n\n      // OGC Layers\n      ogcLayers = gmfLayerWMS.childLayers.map((childLayer) => {\n        return {\n          maxResolution: childLayer.maxResolutionHint,\n          minResolution: childLayer.minResolutionHint,\n          name: childLayer.name,\n          queryable: childLayer.queryable\n        };\n      });\n\n      // OGC Server\n      const ogcServerName = (!firstLevelGroup || firstLevelGroup.mixed) ?\n        gmfLayerWMS.ogcServer : firstLevelGroup.ogcServer;\n      googAsserts.assert(ogcServerName);\n      ogcServer = ogcServers[ogcServerName];\n      ogcImageType = ogcServer.imageType;\n\n      // Time property\n      if (gmfLayerWMS.time) {\n        timeProperty = gmfLayerWMS.time;\n      } else if (firstLevelGroup && firstLevelGroup.time) {\n        timeProperty = firstLevelGroup.time;\n      }\n    }\n\n    // (5) ogcServer\n    const ogcServerType = ogcServer ? ogcServer.type : undefined;\n    const wmsIsSingleTile = ogcServer ? ogcServer.isSingleTile : undefined;\n    const wfsUrl = ogcServer && ogcServer.wfsSupport ?\n      ogcServer.urlWfs : undefined;\n    const wmsUrl = ogcServer ? ogcServer.url : undefined;\n\n    let wfsOutputFormat = ngeoDatasourceOGC.WFSOutputFormat.GML3;\n    // qgis server only supports GML2 output\n    if (ogcServerType === ngeoDatasourceOGC.ServerType.QGISSERVER) {\n      wfsOutputFormat = ngeoDatasourceOGC.WFSOutputFormat.GML2;\n    }\n\n    // (6) Snapping\n    const snappable = !!meta.snappingConfig;\n    const snappingTolerance = meta.snappingConfig ?\n      meta.snappingConfig.tolerance : undefined;\n    const snappingToEdges = meta.snappingConfig ?\n      meta.snappingConfig.edge : undefined;\n    const snappingToVertice = meta.snappingConfig ?\n      meta.snappingConfig.vertex : undefined;\n\n    // (7) Dimensions\n    const dimensions = this.dimensions_;\n    const dimensionsConfig = node.dimensions || firstLevelGroup.dimensions;\n\n    // (8) Time values (lower or lower/upper)\n    let timeLowerValue;\n    let timeUpperValue;\n    if (timeProperty) {\n      const timeValues = this.ngeoWMSTime_.getOptions(timeProperty)['values'];\n      if (Array.isArray(timeValues)) {\n        timeLowerValue = timeValues[0];\n        timeUpperValue = timeValues[1];\n      } else {\n        timeLowerValue = timeValues;\n      }\n    }\n\n    // (9) Common options\n    const copyable = meta.copyable;\n    const identifierAttribute = meta.identifierAttributeField;\n    const name = gmfLayer.name;\n    const timeAttributeName = meta.timeAttribute;\n    const visible = meta.isChecked === true;\n\n    // Create the data source and add it to the cache\n    this.dataSourcesCache_[id] = new gmfDatasourceOGC({\n      copyable,\n      dimensions,\n      dimensionsConfig,\n      gmfLayer,\n      id,\n      identifierAttribute,\n      maxResolution,\n      minResolution,\n      name,\n      ogcImageType,\n      ogcLayers,\n      ogcServerType,\n      ogcType,\n      snappable,\n      snappingTolerance,\n      snappingToEdges,\n      snappingToVertice,\n      timeAttributeName,\n      timeLowerValue,\n      timeProperty,\n      timeUpperValue,\n      visible,\n      wfsOutputFormat,\n      wfsUrl,\n      wmsIsSingleTile,\n      wmsUrl,\n      wmtsLayer,\n      wmtsUrl\n    });\n  }\n\n  /**\n   * If the given Layertree controller is a 'leaf', add it to the cache.\n   * Also, set its according data source. Finally, add the data source to\n   * the ngeo collection.\n   *\n   * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to add\n   * @private\n   */\n  addTreeCtrlToCache_(treeCtrl) {\n\n    const id = olBase.getUid(treeCtrl.node);\n    const dataSource = this.dataSourcesCache_[id];\n    googAsserts.assert(dataSource, 'DataSource should be set');\n    treeCtrl.setDataSource(dataSource);\n\n    const stateWatcherUnregister = this.rootScope_.$watch(\n      () => treeCtrl.getState(),\n      this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n    );\n\n    const filterRulesWatcherUnregister = this.rootScope_.$watch(\n      () => {\n        const hasFilters = dataSource.filterRules !== null;\n        const isVisible = dataSource.visible;\n        return hasFilters && isVisible;\n      },\n      this.handleDataSourceFilterRulesChange_.bind(this, dataSource)\n    );\n\n    // Watch for time values change to update the WMS layer\n    let timeLowerValueWatcherUnregister;\n    let timeUpperValueWatcherUnregister;\n    let wmsLayer;\n    if (dataSource.timeProperty &&\n        dataSource.ogcType === ngeoDatasourceOGC.Type.WMS\n    ) {\n      timeLowerValueWatcherUnregister = this.rootScope_.$watch(\n        () => dataSource.timeLowerValue,\n        this.handleDataSourceTimeValueChange_.bind(this, dataSource)\n      );\n\n      if (dataSource.timeProperty.mode === 'range') {\n        timeUpperValueWatcherUnregister = this.rootScope_.$watch(\n          () => dataSource.timeUpperValue,\n          this.handleDataSourceTimeValueChange_.bind(this, dataSource)\n        );\n      }\n\n      wmsLayer = googAsserts.assertInstanceof(\n        gmfLayertreeSyncLayertreeMap.getLayer(treeCtrl),\n        olLayerImage\n      );\n    }\n\n    this.treeCtrlCache_[id] = {\n      filterRulesWatcherUnregister,\n      stateWatcherUnregister,\n      timeLowerValueWatcherUnregister,\n      timeUpperValueWatcherUnregister,\n      treeCtrl,\n      wmsLayer\n    };\n\n    this.dataSources_.push(dataSource);\n\n    this.gmfWFSAliases_.describe(dataSource);\n  }\n\n  /**\n   * Remove a treeCtrl cache item. Unregister event listeners and remove the\n   * data source from the ngeo collection.\n   *\n   * @param {gmfx.datasource.ManagerTreeCtrlCacheItem} item Layertree\n   *     controller cache item\n   * @private\n   */\n  removeTreeCtrlCacheItem_(item) {\n\n    // (1) Remove data source\n    const dataSource = item.treeCtrl.getDataSource();\n    googAsserts.assert(dataSource, 'DataSource should be set');\n    this.dataSources_.remove(dataSource);\n\n    // (2) Remove item and clear event listeners\n    item.treeCtrl.setDataSource(null);\n    item.filterRulesWatcherUnregister();\n    item.stateWatcherUnregister();\n    if (item.timeLowerValueWatcherUnregister) {\n      item.timeLowerValueWatcherUnregister();\n    }\n    if (item.timeUpperValueWatcherUnregister) {\n      item.timeUpperValueWatcherUnregister();\n    }\n    delete this.treeCtrlCache_[olBase.getUid(item.treeCtrl.node)];\n  }\n\n  /**\n   * Clears the layer tree controller cache. At the same time, each item gets\n   * its data source reference unset and state watcher unregistered.\n   *\n   * The data source gets also removed from the ngeo data sources collection.\n   * @private\n   */\n  clearTreeCtrlCache_() {\n    for (const id in this.treeCtrlCache_) {\n      this.removeTreeCtrlCacheItem_(this.treeCtrlCache_[id]);\n    }\n  }\n\n  /**\n   * Called when the state of a 'leaf' layertree controller changes.\n   * Update the `visible` property of the data source according to the\n   * state of the layertree controller.\n   *\n   * Note: The possible states can only be 'on' or 'off', because the\n   * layertree controller being a 'leaf'.\n   *\n   * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n   * @param {string|undefined} newVal New state value\n   * @private\n   */\n  handleTreeCtrlStateChange_(treeCtrl, newVal) {\n    const treeDataSource = treeCtrl.getDataSource();\n    googAsserts.assert(treeDataSource, 'DataSource should be set');\n    const visible = newVal === 'on';\n    treeDataSource.visible = visible;\n\n    // In GMF, multiple data sources can be combined into one ol.layer.Layer\n    // object. When changing the state of a data source, we need to make\n    // sure that the FILTER param match order of the current LAYERS param.\n    //\n    // Note: we only need to do this ONCE, as there can be only one\n    // data source being filtered at a time\n    const siblingDataSourceIds = gmfLayertreeSyncLayertreeMap.getLayer(\n      treeCtrl).get('querySourceIds');\n    if (Array.isArray(siblingDataSourceIds)) {\n      const dataSources = this.dataSources_.getArray();\n      for (const dataSource of dataSources) {\n        if (dataSource instanceof gmfDatasourceOGC &&\n            dataSource.filterRules !== null &&\n            dataSource.id !== treeDataSource.id &&\n            siblingDataSourceIds.includes(dataSource.id) &&\n            dataSource.visible\n        ) {\n          this.handleDataSourceFilterRulesChange_(dataSource, true);\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * Returns a layertree controller cache item, if it exists.\n   *\n   * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n   * @return {gmfx.datasource.ManagerTreeCtrlCacheItem} Cache item\n   * @private\n   */\n  getTreeCtrlCacheItem_(treeCtrl) {\n    return this.treeCtrlCache_[olBase.getUid(treeCtrl.node)] || null;\n  }\n\n  /**\n   * Called when both the 'visible' and 'filterRules' properties of a data\n   * source change.\n   *\n   * If the data source is filtrable, then make sure that when it gets rules\n   * set to apply them as OGC filters to the OpenLayers layer, more precisely\n   * as a `FILTER` parameter in the layer's source parameters.\n   *\n   * @param {!gmf.datasource.OGC} dataSource Data source.\n   * @param {boolean} value Value.\n   * @private\n   */\n  handleDataSourceFilterRulesChange_(dataSource, value) {\n\n    // Skip data sources that are not filtrables OR those that do not have\n    // the WMS ogcType, i.e. those that do not have an OpenLayers layer\n    // to update\n    if (dataSource.filtrable !== true ||\n        dataSource.ogcType !== ngeoDatasourceOGC.Type.WMS\n    ) {\n      return;\n    }\n\n    const id = olBase.getUid(dataSource.gmfLayer);\n    const item = this.treeCtrlCache_[id];\n    googAsserts.assert(item);\n    const treeCtrl = item.treeCtrl;\n\n    const layer = gmfLayertreeSyncLayertreeMap.getLayer(treeCtrl);\n    googAsserts.assert(\n      layer instanceof olLayerImage ||\n      layer instanceof olLayerTile\n    );\n\n    const source = layer.getSource();\n    googAsserts.assert(\n      source instanceof olSourceImageWMS ||\n      source instanceof olSourceTileWMS\n    );\n\n    const filtrableLayerName = dataSource.getFiltrableOGCLayerName();\n    const projCode = treeCtrl.map.getView().getProjection().getCode();\n    const filterString = dataSource.visible ?\n      this.ngeoRuleHelper_.createFilterString({\n        dataSource,\n        projCode\n      }) :\n      null;\n\n    const filterParam = 'FILTER';\n    let filterParamValue = null;\n\n    if (filterString) {\n      const params = source.getParams();\n      const layersParam = params['LAYERS'];\n      const layersList = layersParam.split(',');\n      googAsserts.assert(layersList.length >= 1);\n\n      if (layersList.length === 1) {\n        // When there's only one layer in the `LAYERS` parameters, then\n        // the filter string is given as-is.\n        filterParamValue = filterString;\n      } else {\n        // When there's more then one layer, then each filter must be wrapped\n        // between parenthesis and the order must also match the `LAYERS`\n        // parameter as well.\n        const filterParamValues = [];\n        for (let i = 0, ii = layersList.length; i < ii; i++) {\n          if (layersList[i] === filtrableLayerName) {\n            filterParamValues.push(`(${filterString})`);\n          } else {\n            filterParamValues.push('()');\n          }\n        }\n        filterParamValue = filterParamValues.join('');\n      }\n    }\n\n    source.updateParams({\n      [filterParam]: filterParamValue\n    });\n  }\n\n  /**\n   * Called when either the `timeLowerValue` or `timeUpperValue` property of a\n   * data source changes.\n   *\n   * Get the range value from the data source, then update the WMS layer\n   * thereafter.\n   *\n   * @param {!gmf.datasource.OGC} dataSource Data source.\n   * @private\n   */\n  handleDataSourceTimeValueChange_(dataSource) {\n\n    const id = olBase.getUid(dataSource.gmfLayer);\n    const item = this.treeCtrlCache_[id];\n    googAsserts.assert(item);\n    const wmsLayer = googAsserts.assert(item.wmsLayer);\n    const wmsSource = googAsserts.assertInstanceof(\n      wmsLayer.getSource(),\n      olSourceImageWMS\n    );\n\n    const timeProperty = googAsserts.assert(dataSource.timeProperty);\n    let timeParam;\n    const range = dataSource.timeRangeValue;\n    if (range) {\n      timeParam = this.ngeoWMSTime_.formatWMSTimeParam(timeProperty, range);\n    }\n\n    // No need to update the TIME param if already the same value;\n    const params = wmsSource.getParams();\n    const currentTimeParam = params['TIME'];\n    if (currentTimeParam === timeParam) {\n      return;\n    }\n\n    // The `timeParam` can be undefined, which means that the TIME property\n    // gets reset.\n    this.ngeoLayerHelper_.updateWMSLayerState(\n      wmsLayer,\n      wmsSource.getParams()['LAYERS'],\n      timeParam\n    );\n  }\n\n  /**\n   * Called when the background layer changes. Add/Remove the according data\n   * sources to/from the ngeo data sources collection. Update the data source\n   * `visible` property as well.\n   *\n   * The `querySourceIds` property in the layer is used to determine the\n   * data sources that are bound to the layer.\n   *\n   * @param {!ngeox.BackgroundEvent} evt Event.\n   * @private\n   */\n  handleNgeoBackgroundLayerChange_(evt) {\n\n    const previousBackgroundLayer = evt.detail.previous;\n    const currentBackgroundLayer = evt.detail.current;\n    const cache = this.dataSourcesCache_;\n\n    // Remove data sources linked to previous background layer\n    if (previousBackgroundLayer) {\n      const ids = previousBackgroundLayer.get('querySourceIds');\n      if (Array.isArray(ids)) {\n        for (const id of ids) {\n          const dataSource = cache[id];\n          if (dataSource) {\n            dataSource.visible = false;\n            this.dataSources_.remove(dataSource);\n          }\n        }\n      }\n    }\n\n    // Add data sources linked to current background layer\n    if (currentBackgroundLayer) {\n      const ids = currentBackgroundLayer.get('querySourceIds');\n      if (Array.isArray(ids)) {\n        for (const id of ids) {\n          const dataSource = cache[id];\n          if (dataSource) {\n            dataSource.visible = true;\n            this.dataSources_.push(dataSource);\n          }\n        }\n      }\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfDataSourcesManager', [\n  gmfDatasourceWFSAliases.module.name,\n  gmfLayertreeSyncLayertreeMap.module.name,\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoFilterRuleHelper.module.name,\n  ngeoDatasourceDataSources.module.name,\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('gmfDataSourcesManager', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.module\n */\nimport gmfDatasourceDataSourceBeingFiltered from 'gmf/datasource/DataSourceBeingFiltered.js';\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\nimport gmfDatasourceHelper from 'gmf/datasource/Helper.js';\nimport gmfDatasourceManager from 'gmf/datasource/Manager.js';\nimport gmfDatasourceWFSAliases from 'gmf/datasource/WFSAliases.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDatasourceModule', [\n  gmfDatasourceDataSourceBeingFiltered.module.name,\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  gmfDatasourceHelper.module.name,\n  gmfDatasourceManager.module.name,\n  gmfDatasourceWFSAliases.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Disclaimer\n */\nimport 'bootstrap/js/alert.js';\nimport googAsserts from 'goog/asserts.js';\n\nimport ngeoMessagePopup from 'ngeo/message/Popup.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\nimport 'font-awesome/css/font-awesome.css';\n\n/**\n * Provides methods to display any sort of messages, disclaimers, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeox.PopupFactory} ngeoCreatePopup Popup service.\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @ngdoc service\n * @ngname ngeoDisclaimer\n * @ngInject\n */\nconst exports = function($sce, gettextCatalog, ngeoCreatePopup) {\n\n  /**\n   * @private\n   * @type {angular.$sce}\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @private\n   * @type {ngeox.PopupFactory}\n   */\n  this.createPopup_ = ngeoCreatePopup;\n\n  ngeoMessageMessage.call(this);\n\n  const container = angular.element('<div class=\"ngeo-disclaimer\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * Cache of messages.\n   * @type {Object.<string, angular.JQLite|ngeo.message.Popup>}\n   * @private\n   */\n  this.messages_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Show disclaimer message string or object or list of disclamer message\n * strings or objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.alert = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Close disclaimer message string or object or list of disclamer message\n * strings or objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.close = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.closeMessage_, this);\n};\n\n\n/**\n * Show the message.\n * @param {ngeox.Message} message Message.\n * @protected\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const gettextCatalog = this.gettextCatalog_;\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  // No need to do anything if message already exist.\n  const uid = this.getMessageUid_(message);\n  if (this.messages_[uid] !== undefined) {\n    return;\n  }\n\n  const showInPopup = message.popup === true;\n\n  if (showInPopup) {\n    // display the message in a popup, i.e. using the ngeo create popup\n    const popup = this.createPopup_();\n    const content = this.sce_.trustAsHtml(message.msg);\n    popup.open({\n      autoDestroy: true,\n      content: content,\n      title: '&nbsp;'\n    });\n\n    // Watch the open property\n    popup.scope.$watch('open', (newVal, oldVal) => {\n      if (!newVal) {\n        this.closeMessage_(message);\n      }\n    });\n\n    this.messages_[uid] =  popup;\n\n  } else {\n    // display the message using a boostrap dismissible alert\n    const classNames = ['alert', 'fade', 'alert-dismissible'];\n    switch (type) {\n      case ngeoMessageMessage.Type.ERROR:\n        classNames.push('alert-danger');\n        break;\n      case ngeoMessageMessage.Type.INFORMATION:\n        classNames.push('alert-info');\n        break;\n      case ngeoMessageMessage.Type.SUCCESS:\n        classNames.push('alert-success');\n        break;\n      case ngeoMessageMessage.Type.WARNING:\n        classNames.push('alert-warning');\n        break;\n      default:\n        break;\n    }\n\n    const el = angular.element(\n      `<div role=\"alert\" class=\"${classNames.join(' ')}\"></div>`);\n    const button = angular.element(\n      `<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"${\n        gettextCatalog.getString('Close')\n      }\"><span aria-hidden=\"true\" class=\"fa fa-times\"></span></button>`);\n    const msg = angular.element('<span />').html(message.msg);\n    el.append(button).append(msg);\n\n    let container;\n\n    if (message.target) {\n      container = angular.element(message.target);\n    } else {\n      container = this.container_;\n    }\n\n    container.append(el);\n    el.addClass('in');\n\n    // Listen when the message gets closed to cleanup the cache of messages\n    el.on('closed.bs.alert', () => {\n      this.closeMessage_(message);\n    });\n\n    this.messages_[uid] =  el;\n  }\n};\n\n\n/**\n * @param {ngeox.Message} message Message.\n * @return {string} The uid.\n * @private\n */\nexports.prototype.getMessageUid_ = function(message) {\n  return `${message.msg}-${message.type}`;\n};\n\n\n/**\n * Close the message.\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.closeMessage_ = function(message) {\n  const uid = this.getMessageUid_(message);\n  const obj = this.messages_[uid];\n\n  // (1) No need to do anything if message doesn't exist\n  if (obj === undefined) {\n    return;\n  }\n\n  // (2) Close message (popup or alert)\n  if (obj instanceof ngeoMessagePopup) {\n    // (2.1) Close popup, if not already closed\n    if (obj.getOpen()) {\n      obj.setOpen(false);\n    }\n  } else {\n    // (2.2) Check if the message hasn't been closed using the UI, i.e. by\n    //       clicking the close button. If not, then close it.\n    if (obj.hasClass('in')) {\n      obj.alert('close');\n    }\n  }\n\n  // (3) Remove message from cache since it's closed now.\n  delete this.messages_[uid];\n};\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoDisclaimer', [\n  ngeoMessagePopup.module.name,\n]);\n\nexports.module.service('ngeoDisclaimer', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.disclaimer.component\n */\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport gmfBase from 'gmf/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageDisclaimer from 'ngeo/message/Disclaimer.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\n\nimport 'angular-sanitize';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('gmfDisclaimer', [\n  'ngSanitize',\n  ngeoMapLayerHelper.module.name,\n  ngeoMessageDisclaimer.module.name,\n  ngeoMiscEventHelper.module.name,\n]);\n\n\n/**\n * @constructor\n * @private\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$sce} $sce Angular sce service.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!ngeox.PopupFactory} ngeoCreatePopup Popup service.\n * @param {!ngeo.message.Disclaimer} ngeoDisclaimer Ngeo Disclaimer service.\n * @param {!ngeo.misc.EventHelper} ngeoEventHelper Ngeo Event Helper.\n * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDisclaimerController\n */\nexports.Controller_ = function($element, $scope, $sce, $timeout,\n  gettextCatalog, ngeoCreatePopup, ngeoDisclaimer, ngeoEventHelper, ngeoLayerHelper) {\n\n  /**\n   * @type {?ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.external;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.popup;\n\n  /**\n   * Visibility that is set to true when a new msg is there.\n   * @type {boolean}\n   * @export\n   */\n  this.visibility = false;\n\n  /**\n   * Trusted html messages that can be displayed as html.\n   * @type {string|undefined}\n   * @export\n   */\n  this.msg;\n\n  /**\n   * @type {!Array<string>}\n   * @export\n   */\n  this.msgs_ = [];\n\n  /**\n   * @type {!angular.$sce}\n   * @private\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {!angular.JQLite}\n   * @private\n   */\n  this.element_ = $element;\n\n  /**\n   * @type {!ngeox.PopupFactory}\n   * @private\n   */\n  this.createPopup_ = ngeoCreatePopup;\n\n  /**\n   * @type {!ngeo.message.Disclaimer}\n   * @private\n   */\n  this.disclaimer_ = ngeoDisclaimer;\n\n  /**\n   * @type {!ngeo.misc.EventHelper}\n   * @private\n   */\n  this.eventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {!ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {?ol.layer.Group}\n   * @private\n   */\n  this.dataLayerGroup_ = null;\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.dataLayerGroup_ = this.ngeoLayerHelper_.getGroupFromMap(this.map,\n    gmfBase.DATALAYERGROUP_NAME);\n  this.registerLayer_(this.dataLayerGroup_);\n};\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleLayersAdd_ = function(evt) {\n  this.timeout_(() => {\n    const layer = evt.element;\n    googAsserts.assertInstanceof(layer, olLayerBase);\n    this.registerLayer_(layer);\n  });\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleLayersRemove_ = function(evt) {\n  const layer = evt.element;\n  googAsserts.assertInstanceof(layer, olLayerBase);\n  this.unregisterLayer_(layer);\n};\n\n\n/**\n * @param {ol.layer.Base} layer Layer.\n * @private\n */\nexports.Controller_.prototype.registerLayer_ = function(layer) {\n\n  const layerUid = olBase.getUid(layer);\n\n  if (layer instanceof olLayerGroup) {\n\n    // (1) Listen to added/removed layers to this group\n    this.eventHelper_.addListenerKey(\n      layerUid,\n      olEvents.listen(\n        layer.getLayers(),\n        'add',\n        this.handleLayersAdd_,\n        this\n      )\n    );\n    this.eventHelper_.addListenerKey(\n      layerUid,\n      olEvents.listen(\n        layer.getLayers(),\n        'remove',\n        this.handleLayersRemove_,\n        this\n      )\n    );\n\n    // (2) Register existing layers in the group\n    layer.getLayers().forEach((layer) => {\n      this.registerLayer_(layer);\n    });\n\n  } else {\n\n    // Show disclaimer messages for this layer\n    const disclaimers = layer.get('disclaimers');\n    if (disclaimers && Array.isArray(disclaimers)) {\n      disclaimers.forEach((disclaimer) => {\n        this.showDisclaimerMessage_(disclaimer);\n      });\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Base} layer Layer.\n * @private\n */\nexports.Controller_.prototype.unregisterLayer_ = function(layer) {\n\n  const layerUid = olBase.getUid(layer);\n\n  if (layer instanceof olLayerGroup) {\n\n    // (1) Clear event listeners\n    this.eventHelper_.clearListenerKey(layerUid);\n\n    // (2) Unregister existing layers in the group\n    layer.getLayers().forEach(layer => this.unregisterLayer_(layer));\n\n  } else {\n\n    // Close disclaimer messages for this layer\n    const disclaimers = layer.get('disclaimers');\n    if (disclaimers && Array.isArray(disclaimers)) {\n      disclaimers.forEach((disclaimer) => {\n        this.closeDisclaimerMessage_(disclaimer);\n      });\n    }\n  }\n\n};\n\n\nexports.Controller_.prototype.$onDestroy = function() {\n  this.unregisterLayer_(this.dataLayerGroup_);\n};\n\n\n/**\n * @param {string} msg Disclaimer message.\n * @private\n */\nexports.Controller_.prototype.showDisclaimerMessage_ = function(msg) {\n  msg = this.gettextCatalog_.getString(msg);\n  if (this.external) {\n    if (this.msgs_.indexOf(msg) < 0) {\n      this.msgs_.push(msg);\n    }\n    this.msg = `${this.sce_.trustAsHtml(this.msgs_.join('<br />'))}`;\n    this.visibility = true;\n  } else {\n    this.disclaimer_.alert({\n      popup: this.popup,\n      msg: msg,\n      target: this.element_,\n      type: ngeoMessageMessage.Type.WARNING\n    });\n  }\n};\n\n\n/**\n * @param {string} msg Disclaimer message.\n * @private\n */\nexports.Controller_.prototype.closeDisclaimerMessage_ = function(msg) {\n  msg = this.gettextCatalog_.getString(msg);\n  if (this.external) {\n    this.visibility = false;\n    this.msgs_.length = 0;\n    this.msg = '';\n  } else {\n    this.disclaimer_.close({\n      popup: this.popup,\n      msg: msg,\n      target: this.element_,\n      type: ngeoMessageMessage.Type.WARNING\n    });\n  }\n};\n\n\n/**\n * Provide a \"disclaimer\" component for GeoMapFish that is bound to the\n * layers added and removed from a map.\n *\n * Example:\n *\n *      <gmf-disclaimer\n *        gmf-disclaimer-map=\"::ctrl.map\">\n *      </gmf-disclaimer>\n *\n * You can also display the disclaimer messages in popups or use them in another\n * context. The example below show you how to display the disclaimer messages\n * in a ngeo-modal window (external case).\n *\n * Example:\n *\n *      <gmf-disclaimer\n *        gmf-disclaimer-map=\"::ctrl.map\"\n *        gmf-disclaimer-external=\"::true\"\n *        gmf-disclaimer-external-msg=\"disclaimerMsg\"\n *        gmf-disclaimer-external-visibility=\"disclaimerVisibility\">\n *      </gmf-disclaimer>\n *      <ngeo-modal ng-model=\"disclaimerVisibility\">\n *       <div class=\"modal-header\">\n *         <button type=\"button\" class=\"close\" data-dismiss=\"modal\"\n *                 aria-hidden=\"true\">&times;</button>\n *       </div>\n *       <div class=\"modal-body\">\n *         <div ng-bind-html=\"disclaimerMsg\"></div>\n *       </div>\n *     </ngeo-modal>\n *\n * @htmlAttribute {boolean} gmf-disclaimer-popup Whether to show the disclaimer\n *     messages in popups or not. Defaults to `false`.\n * @htmlAttribute {boolean?} gmf-disclaimer-external Whether to use disclaimer\n *     messages elsewhere or not. Default to `false`. If true, you should use\n *     the gmf-disclaimer-external-msg and the\n *     gmf-disclaimer-external-visibility too.\n * @htmlAttribute {boolean?} gmf-disclaimer-external-visibility variable that\n *     will be set to true if the disclaimers contain a new message. To uses it,\n *     you must set the gmf-disclaimer-external to true.\n * @htmlAttribute {string?} gmf-disclaimer-external-msg variable that will\n *     contains the disclaimer messages. To uses it, you must set the\n *     gmf-disclaimer-external to true.\n * @htmlAttribute {ol.Map=} gmf-disclaimer-map The map.\n *\n * @ngdoc component\n * @ngname gmfDisclaimer\n */\nexports.component_ = {\n  controller: exports.Controller_,\n  bindings: {\n    'popup': '<?gmfDisclaimerPopup',\n    'map': '=gmfDisclaimerMap',\n    'external': '<?gmfDisclaimerExternal',\n    'visibility': '=?gmfDisclaimerExternalVisibility',\n    'msg': '=?gmfDisclaimerExternalMsg'\n  }\n};\n\n\nexports.component('gmfDisclaimer', exports.component_);\n\n\nexport default exports;\n","/**\n * @module gmf.filters.SavedFilters\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class {\n\n  /**\n   * The GeoMapFish service responsible of storing filters that can be applied\n   * to data sources. A filter consists of:\n   *\n   * - a condition\n   * - a list of directed rules\n   * - a list of custom rules\n   * - a data source\n   * - a name\n   *\n   * The filters are saved in the browser local storage, if available.\n   * Otherwise, they are kept in this service for the duration of the visit.\n   *\n   * @param {!angular.Scope} $rootScope Angular rootScope.\n   * @struct\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfSavedFilters\n   */\n  constructor($rootScope) {\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = $rootScope;\n\n    /**\n     * This service can have a data source id bound to it, which automatically\n     * populates an array of items that are only bound to this data source.\n     * @type {?number}\n     * @private\n     */\n    this.currentDataSourceId_ = null;\n\n    /**\n     * @type {!Array.<!gmf.filters.SavedFilters.Item>}\n     * @private\n     */\n    this.currentDataSourceItems_ = [];\n\n    /**\n     * The used by this service to save in the local storage.\n     * @type {string}\n     * @private\n     */\n    this.localStorageKey_ = 'gmf_savedfilters';\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.useLocalStorage_ = true;\n\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n\n    /**\n     * @type {!Array.<!gmf.filters.SavedFilters.Item>}\n     * @private\n     */\n    this.items_ = [];\n\n    this.rootScope_.$watchCollection(\n      () => this.items,\n      () => {\n        this.rePopulateCurrentDataSourceItems_();\n      }\n    );\n\n    if (this.useLocalStorage_) {\n      this.loadItemsFromLocalStorage_();\n    }\n\n  }\n\n  /**\n   * @return {!Array.<!gmf.filters.SavedFilters.Item>} Items\n   * @export\n   */\n  get currentDataSourceItems() {\n    return this.currentDataSourceItems_;\n  }\n\n  /**\n   * @param {?number} id Current data source id.\n   * @export\n   */\n  set currentDataSourceId(id) {\n    this.currentDataSourceId_ = id;\n    this.rePopulateCurrentDataSourceItems_();\n  }\n\n  /**\n   * @return {!Array.<!gmf.filters.SavedFilters.Item>} Items\n   * @export\n   */\n  get items() {\n    return this.items_;\n  }\n\n  /**\n   * Read the filter items that are saved in the local storage and set them\n   * as this service's items.\n   * @private\n   */\n  loadItemsFromLocalStorage_() {\n    if (window.localStorage[this.localStorageKey_]) {\n      const items = JSON.parse(window.localStorage[this.localStorageKey_]);\n      googAsserts.assertArray(items);\n      this.items_ = items;\n    }\n  }\n\n  /**\n   * Search for an item using a given name and data source id. Returns the\n   * index if it exists, otherwise -1 is returned.\n   * @param {string} name Name.\n   * @param {number} id Data source id.\n   * @return {number} The index of the item, if it exists.\n   * @export\n   */\n  indexOfItem(name, id) {\n\n    let item;\n    let idx = -1;\n    for (let i = 0, ii = this.items_.length; i < ii; i++) {\n      item = this.items[i];\n      if (item.dataSourceId === id && item.name === name) {\n        idx = i;\n        break;\n      }\n    }\n\n    return idx;\n  }\n\n  /**\n   * @param {!gmf.filters.SavedFilters.Item} item Item.\n   * @export\n   */\n  save(item) {\n\n    // (1) Add or replace item\n    const idx = this.indexOfItem(item.name, item.dataSourceId);\n    if (idx !== -1) {\n      this.items[idx] = item;\n    } else {\n      this.items.push(item);\n    }\n\n    // (2) Update local storage\n    if (this.useLocalStorage_) {\n      this.saveItemsInLocalStorage_();\n    }\n  }\n\n  /**\n   * @param {!gmf.filters.SavedFilters.Item} item Item.\n   * @export\n   */\n  remove(item) {\n\n    // (1) Remove the item\n    const found = olArray.remove(this.items, item);\n\n    // (2) Update local storage\n    if (found && this.useLocalStorage_) {\n      this.saveItemsInLocalStorage_();\n    }\n  }\n\n  /**\n   * Save all items in the local storage.\n   * @private\n   */\n  saveItemsInLocalStorage_() {\n    window.localStorage[this.localStorageKey_] = JSON.stringify(this.items);\n  }\n\n  /**\n   * @private\n   */\n  rePopulateCurrentDataSourceItems_() {\n    // (1) Clear existing items\n    this.currentDataSourceItems_.length = 0;\n\n    // (2) Populate\n    if (this.currentDataSourceId_ !== null) {\n      for (const item of this.items) {\n        if (item.dataSourceId === this.currentDataSourceId_) {\n          this.currentDataSourceItems_.push(item);\n        }\n      }\n    }\n  }\n\n};\n\n\nexports.module = angular.module('gmfSavedFilters', []);\n\nexports.module.service('gmfSavedFilters', exports);\n\n\n/**\n * The definition of a saved filter item.\n * @constructor\n * @struct\n * @export\n */\nexports.Item = function() {};\n\n\n/**\n * The condition of the saved filter item.\n * @type {string}\n * @export\n */\nexports.Item.prototype.condition;\n\n\n/**\n * The list of custom rules of the saved filter item.\n * @type {!Array.<!ngeox.rule.AnyOptions>}\n * @export\n */\nexports.Item.prototype.customRules;\n\n\n/**\n * The data source id related to the filter.\n * @type {number}\n * @export\n */\nexports.Item.prototype.dataSourceId;\n\n\n/**\n * The list of directed rules of the saved filter item.\n * @type {!Array.<!ngeox.rule.AnyOptions>}\n * @export\n */\nexports.Item.prototype.directedRules;\n\n\n/**\n * A human-readable name given to the saved filter item.\n * @type {string}\n * @export\n */\nexports.Item.prototype.name;\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.ruleComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMenu from 'ngeo/Menu.js';\nimport ngeoDrawComponent from 'ngeo/draw/component.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionModify from 'ngeo/interaction/Modify.js';\nimport ngeoInteractionRotate from 'ngeo/interaction/Rotate.js';\nimport ngeoInteractionTranslate from 'ngeo/interaction/Translate.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDatepickerComponent from 'ngeo/misc/datepickerComponent.js';\n\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\nimport ngeoRuleGeometry from 'ngeo/rule/Geometry.js';\nimport ngeoRuleSelect from 'ngeo/rule/Select.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport olCollection from 'ol/Collection.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olArray from 'ol/array.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\nimport 'font-awesome/css/font-awesome.css';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('ngeoRule', [\n  ngeoDrawComponent.name,\n  ngeoFilterRuleHelper.module.name,\n  ngeoMapFeatureOverlay.module.name,\n  ngeoMiscDatepickerComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/filter/rulecomponent', require('./rulecomponent.html'));\n});\n\n\nexports.value('ngeoRuleTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoRuleTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/filter/rulecomponent';\n  });\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoRuleTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoRuleTemplateUrl($attrs, ngeoRuleTemplateUrl) {\n  return ngeoRuleTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.RuleController_ = class {\n\n  /**\n   * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!angular.$timeout} $timeout Angular timeout service.\n   * @param {!ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @param {!ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate\n   *     manager service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname NgeoRuleController\n   */\n  constructor(gettextCatalog, $scope, $timeout, ngeoFeatureHelper,\n    ngeoRuleHelper, ngeoToolActivateMgr) {\n\n    // Binding properties\n\n    /**\n     * @type {!ngeo.map.FeatureOverlay}\n     * @export\n     */\n    this.featureOverlay;\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * The original rule.\n     * @type {!ngeo.rule.Rule}\n     * @export\n     */\n    this.rule;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.toolGroup;\n\n\n    // Injected properties\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {!ngeo.misc.FeatureHelper}\n     * @private\n     */\n    this.ngeoFeatureHelper_ = ngeoFeatureHelper;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n    /**\n     * @type {!ngeo.misc.ToolActivateMgr}\n     * @private\n     */\n    this.ngeoToolActivateMgr_ = ngeoToolActivateMgr;\n\n\n    // Inner properties\n\n    /**\n     * The cloned rule. Changes in the UI are applied to the clone 'on-the-fly'.\n     * Changes in the clone are applied back in the original rule when the\n     * apply button is clicked.\n     * @type {!ngeo.rule.Rule}\n     * @export\n     */\n    this.clone;\n\n    const operatorType = ngeoRuleRule.OperatorType;\n    const spatialOperatorType = ngeoRuleRule.SpatialOperatorType;\n    const temporalOperatorType = ngeoRuleRule.TemporalOperatorType;\n\n    /**\n     * @type {Object.<string, string>}\n     * @export\n     */\n    this.operators = {\n      [operatorType.EQUAL_TO]: gettextCatalog.getString('Is equal to'),\n      [operatorType.GREATER_THAN]: gettextCatalog.getString('Is greater than'),\n      [operatorType.GREATER_THAN_OR_EQUAL_TO]: gettextCatalog.getString(\n        'Is greater than or equal to'),\n      [operatorType.LESSER_THAN]: gettextCatalog.getString('Is lesser than'),\n      [operatorType.LESSER_THAN_OR_EQUAL_TO]: gettextCatalog.getString(\n        'Is lesser than or equal to'),\n      [operatorType.NOT_EQUAL_TO]: gettextCatalog.getString('Is not equal to'),\n      [operatorType.LIKE]: gettextCatalog.getString('Contains'),\n      [spatialOperatorType.CONTAINS]: gettextCatalog.getString('Contains'),\n      [spatialOperatorType.INTERSECTS]: gettextCatalog.getString('Intersects'),\n      [spatialOperatorType.WITHIN]: gettextCatalog.getString('Is inside of'),\n      [temporalOperatorType.BEGINS]: gettextCatalog.getString('Begins at'),\n      [temporalOperatorType.DURING]: gettextCatalog.getString('During'),\n      [temporalOperatorType.ENDS]: gettextCatalog.getString('Ends at'),\n      [temporalOperatorType.EQUALS]: gettextCatalog.getString('Is equal to')\n    };\n\n    /**\n     * @type {Object.<string, string>}\n     * @export\n     */\n    this.operatorsShortFormat = {\n      [operatorType.EQUAL_TO]: '=',\n      [operatorType.GREATER_THAN]: '>',\n      [operatorType.GREATER_THAN_OR_EQUAL_TO]: '>=',\n      [operatorType.LESSER_THAN]: '<',\n      [operatorType.LESSER_THAN_OR_EQUAL_TO]: '<=',\n      [operatorType.NOT_EQUAL_TO]: '!=',\n      [operatorType.LIKE]: '~',\n      [temporalOperatorType.BEGINS]: '>=',\n      [temporalOperatorType.ENDS]: '<=',\n      [temporalOperatorType.EQUALS]: '='\n    };\n\n    /**\n     * Time property used when the rule is of type 'date|datetime' and uses\n     * a range of date.\n     * @type {!ngeox.TimeProperty}\n     * @export\n     */\n    this.timeRangeMode = {\n      widget: 'datepicker',\n      maxValue: this.createDate_(),\n      minValue: this.createWeekAgoDate_(),\n      maxDefValue: null,\n      minDefValue: null,\n      mode: 'range',\n      interval: [0, 1, 0, 0]\n    };\n\n    /**\n     * Time property used when the rule is of type 'date|datetime' and uses\n     * a single date.\n     * @type {!ngeox.TimeProperty}\n     * @export\n     */\n    this.timeValueMode = {\n      widget: 'datepicker',\n      maxValue: this.createDate_(),\n      minValue: this.createDate_(),\n      maxDefValue: null,\n      minDefValue: null,\n      mode: 'value',\n      interval: [0, 1, 0, 0]\n    };\n\n    /**\n     * @type {!ngeo.misc.ToolActivate}\n     * @private\n     */\n    this.toolActivate_;// = new ngeo.misc.ToolActivate(this.rule, 'active');\n\n    /**\n     * @type {!Array.<Function>}\n     * @private\n     */\n    this.unlisteners_ = [];\n\n\n    // Inner properties when dealing with a `ngeo.rule.Geometry`\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.drawActive = false;\n\n    /**\n     * @type {!ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.drawToolActivate = new ngeoMiscToolActivate(this, 'drawActive');\n\n    /**\n     * @type {!ol.Collection.<!ol.Feature>}\n     * @export\n     */\n    this.drawnFeatures = new olCollection();\n\n    /**\n     * @type {?ngeo.Menu}\n     * @private\n     */\n    this.menu_ = null;\n\n    /**\n     * @type {!ol.Collection.<!ol.Feature>}\n     * @export\n     */\n    this.selectedFeatures = new olCollection();\n\n    /**\n     * @type {!ol.Collection.<!ol.interaction.Interaction>}\n     * @private\n     */\n    this.interactions_ = new olCollection();\n\n    /**\n     * @type {!ngeo.interaction.Modify}\n     * @private\n     */\n    this.modify_ = new ngeoInteractionModify({\n      features: this.selectedFeatures,\n      style: ngeoFeatureHelper.getVertexStyle(false)\n    });\n    this.interactions_.push(this.modify_);\n\n    /**\n     * @type {ngeo.interaction.Rotate}\n     * @private\n     */\n    this.rotate_ = new ngeoInteractionRotate({\n      features: this.selectedFeatures,\n      style: new olStyleStyle({\n        text: new olStyleText({\n          text: '\\uf01e',\n          font: 'normal 18px FontAwesome',\n          fill: new olStyleFill({\n            color: '#7a7a7a'\n          })\n        })\n      })\n    });\n    this.interactions_.push(this.rotate_);\n\n    /**\n     * @type {ngeo.interaction.Translate}\n     * @private\n     */\n    this.translate_ = new ngeoInteractionTranslate({\n      features: this.selectedFeatures,\n      style: new olStyleStyle({\n        text: new olStyleText({\n          text: '\\uf047',\n          font: 'normal 18px FontAwesome',\n          fill: new olStyleFill({\n            color: '#7a7a7a'\n          })\n        })\n      })\n    });\n    this.interactions_.push(this.translate_);\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    this.initializeInteractions_();\n\n    /**\n     * @type {!ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.modifyToolActivate = new ngeoMiscToolActivate(\n      this.modify_,\n      'active'\n    );\n\n    /**\n     * @type {ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.rotateToolActivate = new ngeoMiscToolActivate(\n      this.rotate_,\n      'active'\n    );\n\n    /**\n     * @type {ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.translateToolActivate = new ngeoMiscToolActivate(\n      this.translate_,\n      'active'\n    );\n\n    /**\n     * The geometry type used by the clone feature.\n     * @type {?string}\n     * @export\n     */\n    this.geomType = null;\n  }\n\n  /**\n   * Called on initialization of the controller.\n   *\n   * Clone the rule to be able to work with the clone directly.\n   */\n  $onInit() {\n    this.clone = this.ngeoRuleHelper_.cloneRule(this.rule);\n\n    this.toolActivate_ = new ngeoMiscToolActivate(this.rule, 'active');\n\n    this.ngeoToolActivateMgr_.registerTool(\n      this.toolGroup, this.toolActivate_);\n\n    this.scope_.$watch(\n      () => this.rule.active,\n      this.handleActiveChange_.bind(this)\n    );\n\n    // If the rule is a DATE or DATETIME, then a datepicker directive is used.\n    // It is not possible to set the current values to the datepicker, but you\n    // can set the initial values. This is why it is created when the rule\n    // becomes active (see the partials/rule.html).\n    //\n    // This chunk of code ensures that the rule properties are synchronized\n    // with the TimeProperty objects required to build the datepickers.\n    if (this.clone.type === ngeoFormatAttributeType.DATE ||\n        this.clone.type === ngeoFormatAttributeType.DATETIME\n    ) {\n      // Watch 'expression'\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.getExpression(),\n        (newVal) => {\n          const value = newVal === null ? this.createDate_() : newVal;\n          this.timeValueMode.minValue = value;\n        }\n      ));\n      // Watch 'lowerBoundary'\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.lowerBoundary,\n        (newVal) => {\n          const value = newVal === null ? this.createWeekAgoDate_() : newVal;\n          this.timeRangeMode.minValue = value;\n        }\n      ));\n      // Watch 'upperBoundary'\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.upperBoundary,\n        (newVal) => {\n          const value = newVal === null ? this.createDate_() : newVal;\n          this.timeRangeMode.maxValue = value;\n        }\n      ));\n    } else if (this.clone.type === ngeoFormatAttributeType.GEOMETRY) {\n\n      // Watch 'operator' of clone. Make sure any existing geometry is\n      // supported by the newly selected operator. If it doesn't, reset\n      // the expression, i.e. geometry.\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.operator,\n        (newVal) => {\n          if (newVal &&\n              newVal === ngeoRuleRule.SpatialOperatorType.CONTAINS\n          ) {\n            const clone = googAsserts.assertInstanceof(\n              this.clone, ngeoRuleGeometry);\n            const geometry = clone.feature.getGeometry();\n            if (geometry) {\n              const geomType = this.ngeoFeatureHelper_.getType(clone.feature);\n              const supportedTypes = [\n                ngeoGeometryType.CIRCLE,\n                ngeoGeometryType.POLYGON,\n                ngeoGeometryType.RECTANGLE\n              ];\n              if (!olArray.includes(supportedTypes, geomType)) {\n                this.clone.setExpression(null);\n              }\n            }\n          }\n        }\n      ));\n\n      // Watch 'expression' of clone. Set 'geomType' property accordingly.\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.expression,\n        (newVal) => {\n          if (newVal) {\n            const clone = googAsserts.assertInstanceof(\n              this.clone, ngeoRuleGeometry);\n            this.geomType = this.ngeoFeatureHelper_.getType(clone.feature);\n          } else {\n            this.geomType = null;\n          }\n        }\n      ));\n\n      // Watch both 'expression', 'active' and the modify control to be all\n      // thruthy. When that's the case, the clone feature is added to the\n      // selection collection.\n      this.unlisteners_.push(this.scope_.$watch(\n        () => {\n          const hasExpression = this.clone.getExpression() !== null;\n          const isActive = this.rule.active === true;\n          const editToolIsActive = this.modify_.getActive() ||\n                this.rotate_.getActive() ||\n                this.translate_.getActive();\n          return hasExpression && isActive && editToolIsActive;\n        },\n        (newVal) => {\n          if (newVal) {\n            const clone = googAsserts.assertInstanceof(\n              this.clone, ngeoRuleGeometry);\n            this.selectedFeatures.push(clone.feature);\n          } else {\n            this.selectedFeatures.clear();\n          }\n        }\n      ));\n    }\n  }\n\n  /**\n   * Called on destruction of the controller.\n   */\n  $onDestroy() {\n    if (this.rule.active) {\n      this.rule.active = false;\n      // in $onDestroy, setting active to false will not call the handler. Call\n      // it manually to let it do its magic\n      this.handleActiveChange_(false, true);\n    }\n    this.ngeoToolActivateMgr_.unregisterTool(\n      this.toolGroup, this.toolActivate_);\n    for (let i = 0, ii = this.unlisteners_.length; i < ii; i++) {\n      this.unlisteners_[i]();\n    }\n    this.unlisteners_.length = 0;\n    this.clone.destroy();\n  }\n\n  /**\n   * @export\n   */\n  toggle() {\n    if (this.rule.active) {\n      this.cancel();\n    } else {\n      this.rule.active = true;\n    }\n  }\n\n  /**\n   * Apply the changes that were made in the original rule.\n   * @export\n   */\n  apply() {\n    this.ngeoRuleHelper_.extendRule(this.clone, this.rule);\n    this.rule.active = false;\n  }\n\n  /**\n   * Revert the changes that were made in the clone rule.\n   * @export\n   */\n  cancel() {\n    this.ngeoRuleHelper_.extendRule(this.rule, this.clone);\n    this.rule.active = false;\n  }\n\n  /**\n   * Reset both original and clone rules.\n   * @export\n   */\n  reset() {\n    this.clone.reset();\n    this.rule.reset();\n  }\n\n  /**\n   * Called when a choice is clicked, when using a `ngeo.rule.Select` rule type.\n   * Add/remove the choice to/from the `expression` of the rule.\n   * @param {string|number} choice Choice that has been clicked.\n   * @export\n   */\n  toggleChoiceSelection(choice) {\n    const rule = googAsserts.assertInstanceof(this.clone, ngeoRuleSelect);\n    const choices = rule.getExpression() ? rule.getExpression().split(',') : [];\n    const idx = choices.indexOf(choice);\n    if (idx > -1) {\n      choices.splice(idx, 1);\n    } else {\n      choices.push(choice);\n    }\n    rule.setExpression(choices.length ? choices.join(',') : null);\n  }\n\n\n  /**\n   * @param {Object} date Date\n   * @export\n   */\n  onDateSelected(date) {\n    this.clone.setExpression(date['start']);\n  }\n\n  /**\n   * @param {Object} date Date\n   * @export\n   */\n  onDateRangeSelected(date) {\n    this.clone.lowerBoundary = date['start'];\n    this.clone.upperBoundary = date['end'];\n  }\n\n  /**\n   * @param {number=} opt_timeDelta Time delta to go back in the past.\n   * @return {string} ISO string of the date\n   * @private\n   */\n  createDate_(opt_timeDelta) {\n\n    const date = new Date();\n\n    if (opt_timeDelta !== undefined) {\n      const time = date.getTime() - opt_timeDelta;\n      date.setTime(time);\n    }\n\n    return date.toISOString();\n  }\n\n  /**\n   * @return {string} ISO string of the date\n   * @private\n   */\n  createWeekAgoDate_() {\n    return this.createDate_(1000 * 60 * 60 * 24 * 7); // A week ago date\n  }\n\n  /**\n   * @param {number} time Time.\n   * @return {string} Date\n   * @export\n   */\n  timeToDate(time) {\n    const date = new Date(time);\n    return date.toLocaleDateString();\n  }\n\n\n  // === Methods used when bound to a `ngeo.rule.Geometry`\n\n\n  /**\n   * Called when the active property of a rule changes. Only used when this\n   * component is bound to a geometry rule.\n   *\n   * Manage the activation/deactivation of the interactions.\n   *\n   * @param {boolean} active Whether the rule is active or not.\n   * @param {boolean} oldActive Whether the rule was active or not.\n   * @private\n   */\n  handleActiveChange_(active, oldActive) {\n\n    if (!(this.rule instanceof ngeoRuleGeometry) ||\n        !(this.clone instanceof ngeoRuleGeometry) ||\n        active === oldActive\n    ) {\n      return;\n    }\n\n    const keys = this.listenerKeys_;\n    const uid = ['ngeo-rule-', olBase.getUid(this)].join('-');\n    const toolMgr = this.ngeoToolActivateMgr_;\n\n    const ruleFeature = this.rule.feature;\n    const cloneFeature = this.clone.feature;\n\n    const mapDiv = this.map.getViewport();\n    googAsserts.assertElement(mapDiv);\n\n    if (active) {\n      keys.push(\n        olEvents.listen(\n          this.drawnFeatures,\n          'add',\n          this.handleFeaturesAdd_,\n          this\n        )\n      );\n\n      keys.push(\n        olEvents.listen(\n          mapDiv,\n          'contextmenu',\n          this.handleMapContextMenu_,\n          this\n        )\n      );\n\n      keys.push(\n        olEvents.listen(\n          this.translate_,\n          'translateend',\n          this.handleTranslateEnd_,\n          this\n        )\n      );\n\n      keys.push(\n        olEvents.listen(\n          this.rotate_,\n          'rotateend',\n          this.handleRotateEnd_,\n          this\n        )\n      );\n\n      this.featureOverlay.removeFeature(ruleFeature);\n      this.featureOverlay.addFeature(cloneFeature);\n\n      this.registerInteractions_();\n\n      toolMgr.registerTool(uid, this.drawToolActivate, false);\n      toolMgr.registerTool(uid, this.modifyToolActivate, true);\n      toolMgr.registerTool(uid, this.rotateToolActivate, false);\n      toolMgr.registerTool(uid, this.translateToolActivate, false);\n\n      this.modify_.setActive(true);\n\n      if (cloneFeature.getGeometry()) {\n        this.ngeoFeatureHelper_.setStyle(cloneFeature, true);\n      }\n\n    } else {\n      cloneFeature.setStyle(null);\n      keys.forEach(olEvents.unlistenByKey);\n      keys.length = 0;\n\n      this.drawActive = false;\n\n      toolMgr.unregisterTool(uid, this.drawToolActivate);\n      toolMgr.unregisterTool(uid, this.modifyToolActivate);\n      toolMgr.unregisterTool(uid, this.rotateToolActivate);\n      toolMgr.unregisterTool(uid, this.translateToolActivate);\n\n      this.modify_.setActive(false);\n\n      this.unregisterInteractions_();\n\n      if (this.selectedFeatures.getLength()) {\n        this.featureOverlay.removeFeature(cloneFeature);\n      }\n      this.featureOverlay.addFeature(ruleFeature);\n\n      this.selectedFeatures.clear();\n    }\n  }\n\n  /**\n   * Initialize interactions by setting them inactive and decorating them\n   * @private\n   */\n  initializeInteractions_() {\n    this.interactions_.forEach((interaction) => {\n      interaction.setActive(false);\n      ngeoMiscDecorate.interaction(interaction);\n    });\n  }\n\n  /**\n   * Register interactions by adding them to the map\n   * @private\n   */\n  registerInteractions_() {\n    this.interactions_.forEach((interaction) => {\n      this.map.addInteraction(interaction);\n    });\n  }\n\n  /**\n   * Register interactions by removing them to the map\n   * @private\n   */\n  unregisterInteractions_() {\n    this.interactions_.forEach((interaction) => {\n      this.map.removeInteraction(interaction);\n    });\n  }\n\n  /**\n   * @param {ol.Collection.Event} evt Event.\n   * @private\n   */\n  handleFeaturesAdd_(evt) {\n    // timeout to prevent double-click to zoom the map\n    this.timeout_(() => {\n\n      const clone = googAsserts.assertInstanceof(\n        this.clone, ngeoRuleGeometry);\n      const feature = clone.feature;\n\n      // (1) Apply geometry\n      const drawnFeature = googAsserts.assertInstanceof(\n        evt.element,\n        olFeature\n      );\n      const geometry = googAsserts.assertInstanceof(\n        drawnFeature.getGeometry(),\n        olGeomGeometry\n      );\n      clone.geometry = geometry;\n\n      // (2) Deactivate draw tools\n      this.drawActive = false;\n\n      // (3) Set properties, then style\n      const properties = this.ngeoFeatureHelper_.getNonSpatialProperties(\n        drawnFeature);\n      this.ngeoFeatureHelper_.clearNonSpatialProperties(feature);\n      feature.setProperties(properties);\n      this.ngeoFeatureHelper_.setStyle(feature, true);\n\n      this.scope_.$apply();\n    });\n  }\n\n  /**\n   * Return the type of geometry used by the rule feature. Used in the template.\n   * @return {string} Geometry type.\n   * @export\n   */\n  getRuleGeometryType() {\n    const rule = googAsserts.assertInstanceof(this.rule, ngeoRuleGeometry);\n    return this.ngeoFeatureHelper_.getType(rule.feature);\n  }\n\n  /**\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleMapContextMenu_(evt) {\n\n    // (1) Remove previous menu, if any\n    this.removeMenu_();\n\n    // (2) Get feature at pixel\n    const pixel = this.map.getEventPixel(evt);\n    const coordinate = this.map.getCoordinateFromPixel(pixel);\n\n    let feature = this.map.forEachFeatureAtPixel(\n      pixel,\n      (feature) => {\n        let ret = false;\n        if (olArray.includes(this.selectedFeatures.getArray(), feature)) {\n          ret = feature;\n        }\n        return ret;\n      }\n    );\n\n    feature = feature ? feature : null;\n\n    // (3) If the clicked feature is the selected one, plus if it has a certain\n    //     type of geometry, then show the menu\n    const actions = [];\n    if (feature) {\n\n      const type = this.ngeoFeatureHelper_.getType(feature);\n      const  gettextCatalog = this.gettextCatalog_;\n\n      if (type == ngeoGeometryType.CIRCLE ||\n          type == ngeoGeometryType.LINE_STRING ||\n          type == ngeoGeometryType.POLYGON ||\n          type == ngeoGeometryType.RECTANGLE) {\n        actions.push({\n          cls: 'fa fa-arrows',\n          label: gettextCatalog.getString('Move'),\n          name: 'move'\n        });\n      }\n      if (type == ngeoGeometryType.LINE_STRING ||\n          type == ngeoGeometryType.POLYGON ||\n          type == ngeoGeometryType.RECTANGLE) {\n        actions.push({\n          cls: 'fa fa-rotate-right',\n          label: gettextCatalog.getString('Rotate'),\n          name: 'rotate'\n        });\n      }\n    }\n\n    if (actions.length) {\n      // (4) Create and show menu\n      this.menu_ = new ngeoMenu({\n        actions\n      });\n\n      olEvents.listen(\n        this.menu_,\n        'actionclick',\n        this.handleMenuActionClick_,\n        this\n      );\n      this.map.addOverlay(this.menu_);\n\n      this.menu_.open(coordinate);\n\n      evt.preventDefault();\n      evt.stopPropagation();\n\n      this.scope_.$apply();\n    }\n  }\n\n  /**\n   * Remove contextual menu, if any.\n   * @private\n   */\n  removeMenu_() {\n    if (this.menu_) {\n      olEvents.unlisten(\n        this.menu_,\n        'actionclick',\n        this.handleMenuActionClick_,\n        this\n      );\n      this.map.removeOverlay(this.menu_);\n      this.menu_ = null;\n    }\n  }\n\n  /**\n   * @param {ngeox.MenuEvent} evt Event.\n   * @private\n   */\n  handleMenuActionClick_(evt) {\n    const action = evt.detail.action;\n\n    switch (action) {\n      case 'move':\n        this.translate_.setActive(true);\n        this.scope_.$apply();\n        break;\n      case 'rotate':\n        this.rotate_.setActive(true);\n        this.scope_.$apply();\n        break;\n      default:\n        console.log(`FIXME - support: ${action}`);\n        break;\n    }\n  }\n\n  /**\n   * @param {ngeox.RotateEvent} evt Event.\n   * @private\n   */\n  handleRotateEnd_(evt) {\n    this.rotate_.setActive(false);\n    this.scope_.$apply();\n  }\n\n  /**\n   * @param {ol.interaction.Translate.Event} evt Event.\n   * @private\n   */\n  handleTranslateEnd_(evt) {\n    this.translate_.setActive(false);\n    this.scope_.$apply();\n  }\n\n};\n\n\n/**\n * The rule component is bound to a `ngeo.rule.Rule` object and shows UI\n * components to be able to edit its properties, such as: operator, expression,\n * etc. The actual properties depend on the type of rule.\n *\n * Also, changes are not made on-the-fly. A button must be clicked for the\n * changes to be applied to the rule.\n */\nexports.component('ngeoRule', {\n  bindings: {\n    'featureOverlay': '<',\n    'map': '<',\n    'rule': '<',\n    'toolGroup': '<'\n  },\n  controller: exports.RuleController_,\n  templateUrl: ngeoRuleTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleComponent from 'ngeo/filter/ruleComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleGeometry from 'ngeo/rule/Geometry.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport 'font-awesome/css/font-awesome.css';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFilter', [\n  ngeoFilterRuleHelper.module.name,\n  ngeoFilterRuleComponent.name,\n  ngeoMapFeatureOverlay.module.name,\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/filter', require('./component.html'));\n});\n\n\nexports.value('ngeoFilterTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoFilterTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/filter';\n  });\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoFilterTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoFilterTemplateUrl($attrs, ngeoFilterTemplateUrl) {\n  return ngeoFilterTemplateUrl($attrs);\n}\n\n\nexports.component('ngeoFilter', {\n  bindings: {\n    'aRuleIsActive': '=',\n    'customRules': '<',\n    // It's 'datasource' instead of 'dataSource', because that would require\n    // the attribute to be 'data-source', and Angular strips the 'data-'.\n    'datasource': '<',\n    'directedRules': '<',\n    'featureOverlay': '<',\n    'map': '<',\n    'toolGroup': '<'\n  },\n  controller: 'ngeoFilterController',\n  templateUrl: ngeoFilterTemplateUrl\n});\n\n/**\n * @private\n */\nexports.FilterController_ = class {\n\n  /**\n   * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!angular.$timeout} $timeout Angular timeout service.\n   * @param {!ngeo.query.MapQuerent} ngeoMapQuerent The ngeo map querent service.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname NgeoFilterController\n   */\n  constructor(gettextCatalog, $scope, $timeout, ngeoMapQuerent,\n    ngeoRuleHelper) {\n\n    // === Binding properties ===\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.aRuleIsActive;\n\n    /**\n     * @type {Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.customRules;\n\n    /**\n     * @type {!ngeo.datasource.OGC}\n     * @export\n     */\n    this.datasource;\n\n    /**\n     * @type {Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.directedRules;\n\n    /**\n     * @type {!ngeo.map.FeatureOverlay}\n     * @export\n     */\n    this.featureOverlay;\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.toolGroup;\n\n\n    // === Injected properties ===\n\n    /**\n     * @type {!angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {!ngeo.query.MapQuerent}\n     * @private\n     */\n    this.ngeoMapQuerent_ = ngeoMapQuerent;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n\n    // === Inner properties ===\n\n    /**\n     * @type {Array.<!ngeox.FilterCondition>}\n     * @export\n     */\n    this.conditions = [\n      {\n        text: gettextCatalog.getString('All'),\n        value: ngeoFilterCondition.AND\n      },\n      {\n        text: gettextCatalog.getString('At least one'),\n        value: ngeoFilterCondition.OR\n      },\n      {\n        text: gettextCatalog.getString('None'),\n        value: ngeoFilterCondition.NOT\n      }\n    ];\n\n    /**\n     * List of geometry attributes.\n     * @type {Array.<!ngeox.Attribute>}\n     * @export\n     */\n    this.geometryAttributes = [];\n\n    /**\n     * List of other attribute names.\n     * @type {Array.<!ngeox.Attribute>}\n     * @export\n     */\n    this.otherAttributes = [];\n\n    /**\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.ruleUnlisteners_ = {};\n  }\n\n\n  /**\n   * Called on initialization of the controller.\n   *\n   * Loop through the attributes of the data source and separated them in 2\n   * lists: geometry and the others. Then, apply the filters to the data source.\n   */\n  $onInit() {\n\n    this.scope_.$watch(\n      () => this.aRuleIsActive,\n      this.handleARuleIsActiveChange_.bind(this)\n    );\n\n    // (1) Separate the attributes in 2: geometry and the others.\n    const attributes = googAsserts.assert(this.datasource.attributes);\n    for (const attribute of attributes) {\n      if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n        this.geometryAttributes.push(attribute);\n      } else {\n        this.otherAttributes.push(attribute);\n      }\n    }\n\n    // (2) All rules that have geometry are added in the featureOverlay\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      this.registerRule_(rule);\n    }\n\n    // (3) Apply the filters\n    this.apply();\n  }\n\n\n  /**\n   * Called on destruction of the controller.\n   *\n   * Reset the `filterRules` of the data source back to `null`.\n   * Clear the feature overlay.\n   */\n  $onDestroy() {\n    if (this.datasource.filterRules !== null) {\n      this.datasource.filterRules = null;\n    }\n    this.featureOverlay.clear();\n  }\n\n\n  /**\n   * @return {boolean} True if at least one rule is currently defined.\n   * @export\n   */\n  hasARule() {\n    return [].concat(this.customRules, this.directedRules).length > 0;\n  }\n\n\n  /**\n   * Loop in all directed and custom rules. Apply the rules that have a proper\n   * value inside the data source, in the `filterRules` property.\n   * @export\n   */\n  apply() {\n    // (1) Reset\n    this.datasource.filterRules = null;\n\n    // (2) Then set if there are filter rules with value.\n    this.timeout_(() => {\n      const filterRules = this.getRulesWithValue_();\n      if (filterRules.length) {\n        this.datasource.filterRules = filterRules;\n        // The current query results are cleared when we apply a filter.\n        this.ngeoMapQuerent_.clear();\n      }\n    });\n  }\n\n\n  /**\n   * Loop in all directed and custom rules. Issue a request to obtain the data\n   * and show the result.\n   * @export\n   */\n  getData() {\n    const filterRules = this.getRulesWithValue_();\n\n    // No need to do anything if there's no rules.\n    if (!filterRules.length) {\n      return;\n    }\n\n    const dataSource = this.datasource;\n    const limit = 1000;\n    const map = this.map;\n    const projCode = map.getView().getProjection().getCode();\n    const filter = this.ngeoRuleHelper_.createFilter({\n      dataSource: dataSource,\n      filterRules: filterRules,\n      srsName: projCode\n    });\n    googAsserts.assert(filter);\n\n    this.ngeoMapQuerent_.issue({\n      dataSources: [dataSource],\n      filter: filter,\n      limit: limit,\n      map: map\n    });\n  }\n\n\n  /**\n   * Loop in all directed and custom rules and collect those with a value.\n   * @return {Array.<!ngeo.rule.Rule>} Rules with value.\n   * @private\n   */\n  getRulesWithValue_() {\n    const filterRules = [];\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      if (rule.value) {\n        filterRules.push(rule);\n      }\n    }\n    return filterRules;\n  }\n\n\n  /**\n   * Create and add a new custom rule using an attribute. The rule is activated\n   * after being created.\n   * @param {!ngeox.Attribute} attribute Attribute to use to create the custom\n   * rule.\n   * @export\n   */\n  createAndAddCustomRule(attribute) {\n    const rule = this.ngeoRuleHelper_.createRuleFromAttribute(attribute, true);\n    this.registerRule_(rule);\n    this.customRules.push(rule);\n\n    // Activate asynchronously allows the toolActivate manager to do its magic,\n    this.timeout_(() => {\n      rule.active = true;\n    }, 1);\n  }\n\n\n  /**\n   * @param {!ngeox.FilterCondition} condition Condition to set.\n   * @export\n   */\n  setCondition(condition) {\n    if (this.datasource.filterCondition !== condition.value) {\n      this.datasource.filterCondition = condition.value;\n    }\n  }\n\n  /**\n   * Remove a custom rule. Deactivate it first, then give time to the\n   * `ngeo-rule` directive to manage the deactivation of the rule.\n   * @param {!ngeo.rule.Rule} rule Custom rule to remove.\n   * @export\n   */\n  removeCustomRule(rule) {\n    rule.active = false;\n    this.timeout_(() => {\n      olArray.remove(this.customRules, rule);\n      this.unregisterRule_(rule);\n      rule.destroy();\n    });\n  }\n\n  /**\n   * @param {!ngeo.rule.Rule} rule Rule.\n   * @export\n   */\n  registerRule_(rule) {\n    const uid = olBase.getUid(rule);\n    this.ruleUnlisteners_[uid] = this.scope_.$watch(\n      () => rule.active,\n      this.handleRuleActiveChange_.bind(this)\n    );\n\n    if (rule instanceof ngeoRuleGeometry) {\n      this.featureOverlay.addFeature(rule.feature);\n    }\n  }\n\n  /**\n   * @param {!ngeo.rule.Rule} rule Rule.\n   * @export\n   */\n  unregisterRule_(rule) {\n    const uid = olBase.getUid(rule);\n    const unlistener = this.ruleUnlisteners_[uid];\n    googAsserts.assert(unlistener);\n    unlistener();\n    delete this.ruleUnlisteners_[uid];\n\n    if (rule instanceof ngeoRuleGeometry) {\n      this.featureOverlay.removeFeature(rule.feature);\n    }\n  }\n\n  /**\n   * Called when the active property of a rule changes. Set the `aRuleIsActive`\n   * property accordingly.\n   * @private\n   */\n  handleRuleActiveChange_() {\n    let aRuleIsActive = false;\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      if (rule.active) {\n        aRuleIsActive = true;\n        break;\n      }\n    }\n    this.aRuleIsActive = aRuleIsActive;\n  }\n\n  /**\n   * Called when the `aRuleIsActive` property changes. Make sure that\n   * no rule is still active if the property is `false`.\n   * @private\n   */\n  handleARuleIsActiveChange_() {\n    if (this.aRuleIsActive) {\n      return;\n    }\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      if (rule.active) {\n        rule.active = false;\n        break;\n      }\n    }\n  }\n\n};\n\nexports.controller('ngeoFilterController', exports.FilterController_);\n\n\nexport default exports;\n","/**\n * @module gmf.filters.filterselectorComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\n\nimport gmfDatasourceDataSourceBeingFiltered from 'gmf/datasource/DataSourceBeingFiltered.js';\n\n/** @suppress {extraRequire} */\nimport gmfDatasourceHelper from 'gmf/datasource/Helper.js';\n\nimport gmfDatasourceOGC from 'gmf/datasource/OGC.js';\nimport gmfFiltersSavedFilters from 'gmf/filters/SavedFilters.js';\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessageModalComponent from 'ngeo/message/modalComponent.js';\n\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoFilterComponent from 'ngeo/filter/component.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olArray from 'ol/array.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\nconst exports = angular.module('gmfFilterselector', [\n  gmfAuthenticationService.module.name,\n  gmfDatasourceDataSourceBeingFiltered.module.name,\n  gmfDatasourceHelper.module.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoMessageModalComponent.name,\n  ngeoFilterRuleHelper.module.name,\n  ngeoFilterComponent.name,\n  gmfFiltersSavedFilters.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/filters/filterselectorcomponent', require('./filterselectorcomponent.html'));\n});\n\nexports.value('gmfFilterselectorTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfFilterselectorTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/filters/filterselectorcomponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfFilterselectorTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfFilterselectorTemplateUrl($attrs, gmfFilterselectorTemplateUrl) {\n  return gmfFilterselectorTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!angular.$timeout} $timeout Angular timeout service.\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {gmfx.datasource.DataSourceBeingFiltered} gmfDataSourceBeingFiltered\n   *     The Gmf value service that determines the data source currently being\n   *     filtered.\n   * @param {gmf.datasource.Helper} gmfDataSourcesHelper Gmf data\n   *     sources helper service.\n   * @param {gmf.filters.SavedFilters} gmfSavedFilters Gmf saved filters service.\n   * @param {gmfx.User} gmfUser User.\n   * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n   * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Ngeo FeatureOverlay\n   *     manager\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfFilterselectorController\n   */\n  constructor($scope, $timeout, gettextCatalog, gmfDataSourceBeingFiltered,\n    gmfDataSourcesHelper, gmfSavedFilters, gmfUser, ngeoNotification,\n    ngeoFeatureOverlayMgr, ngeoRuleHelper\n  ) {\n\n    // Binding properties\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.active;\n\n    $scope.$watch(\n      () => this.active,\n      this.handleActiveChange_.bind(this)\n    );\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.toolGroup;\n\n\n    // Injected properties\n\n    /**\n     * @type {!angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * The data source that can either be selected from the list or have\n     * its value set from an external source (for example: the layertree)\n     * and that requires to be ready before it can be filtered.\n     * @type {gmfx.datasource.DataSourceBeingFiltered}\n     * @export\n     */\n    this.gmfDataSourceBeingFiltered = gmfDataSourceBeingFiltered;\n\n    $scope.$watch(\n      () => this.gmfDataSourceBeingFiltered.dataSource,\n      this.handleSelectedDataSourceChange_.bind(this)\n    );\n\n    /**\n     * @type {gmf.datasource.Helper}\n     * @private\n     */\n    this.gmfDataSourcesHelper_ = gmfDataSourcesHelper;\n\n    /**\n     * @type {gmf.filters.SavedFilters}\n     * @export\n     */\n    this.gmfSavedFilters = gmfSavedFilters;\n\n    // Close manage modal if the last item is removed.\n    $scope.$watchCollection(\n      () => this.gmfSavedFilters.currentDataSourceItems,\n      () => {\n        if (this.gmfSavedFilters.currentDataSourceItems.length === 0 &&\n           this.saveFilterManageModalShown) {\n          this.saveFilterManageModalShown = false;\n        }\n      }\n    );\n\n    /**\n     * @type {gmfx.User}\n     * @private\n     */\n    this.gmfUser_ = gmfUser;\n\n    $scope.$watch(\n      () => this.gmfUser_.functionalities,\n      this.handleGmfUserFunctionalitiesChange_.bind(this)\n    );\n\n    /**\n     * @type {ngeo.message.Notification}\n     * @private\n     */\n    this.ngeoNotification_ = ngeoNotification;\n\n    /**\n     * @type {!ngeo.map.FeatureOverlay}\n     * @export\n     */\n    this.featureOverlay = googAsserts.assert(\n      ngeoFeatureOverlayMgr.getFeatureOverlay()\n    );\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n\n    // Inner properties\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.aRuleIsActive = false;\n\n    /**\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.customRules = null;\n\n    /**\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.directedRules = null;\n\n    /**\n     * @type {Array.<gmf.datasource.OGC>}\n     * @export\n     */\n    this.filtrableDataSources = [];\n\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n    this.filtrableLayerNodeNames_ = null;\n\n    /**\n     * @type {gmfx.datasource.DataSources}\n     * @private\n     */\n    this.gmfDataSources_ = gmfDataSourcesHelper.collection;\n\n    /**\n     * @type {Array.<ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    /**\n     * The data source ready to be filtered, after it has been selected and\n     * prepared.\n     * @type {?gmf.datasource.OGC}\n     * @export\n     */\n    this.readyDataSource = null;\n\n    /**\n     * @type {!gmf.filters.filterselectorComponent.Controller_.RuleCache}\n     * @private\n     */\n    this.ruleCache_ = {};\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.saveFilterSaveModalShown = false;\n\n    // When the modal closes, reset name\n    $scope.$watch(\n      () => this.saveFilterSaveModalShown,\n      () => {\n        this.saveFilterName = '';\n      }\n    );\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.saveFilterName = '';\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.saveFilterManageModalShown = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.enableDataSourceRegistration_ = false;\n\n    $scope.$watch(\n      () => this.enableDataSourceRegistration_,\n      this.handleEnableDataSourceRegistrationChange_.bind(this)\n    );\n\n    /**\n     * The name of the data source that should be automatically selected\n     * by this component.\n     * @type {string|undefined}\n     * @private\n     */\n    this.defaultFiltrableDataSourceName_;\n\n    // Initialize the data sources registration\n    this.toggleDataSourceRegistration_();\n  }\n\n\n  /**\n   * @private\n   */\n  handleGmfUserFunctionalitiesChange_() {\n    const usrFunc = this.gmfUser_.functionalities;\n    if (usrFunc && usrFunc['filterable_layers']) {\n      this.filtrableLayerNodeNames_ = usrFunc['filterable_layers'];\n    } else {\n      this.filtrableLayerNodeNames_ = null;\n    }\n    if (usrFunc &&\n        usrFunc['preset_layer_filter'] &&\n        usrFunc['preset_layer_filter'][0]\n    ) {\n      this.defaultFiltrableDataSourceName_ = usrFunc['preset_layer_filter'][0];\n    } else {\n      this.defaultFiltrableDataSourceName_ = undefined;\n    }\n    this.toggleDataSourceRegistration_();\n  }\n\n\n  /**\n   * @private\n   */\n  toggleDataSourceRegistration_() {\n    const newDataSourceRegistration = !!this.filtrableLayerNodeNames_;\n    if (this.enableDataSourceRegistration_ !== newDataSourceRegistration) {\n      this.enableDataSourceRegistration_ = newDataSourceRegistration;\n    }\n  }\n\n\n  /**\n   * Called when the active property changes. Toggle data source registration.\n   * Also, when deactivated, deselect data source.\n   * @param {boolean} active Active.\n   * @private\n   */\n  handleActiveChange_(active) {\n    if (!active) {\n      this.aRuleIsActive = false;\n      this.timeout_(() => {\n        this.gmfDataSourceBeingFiltered.dataSource = null;\n      });\n    }\n  }\n\n\n  /**\n   * @param {boolean} register Whether register the data sources or not.\n   * @private\n   */\n  handleEnableDataSourceRegistrationChange_(register) {\n    const keys = this.listenerKeys_;\n\n    if (register) {\n      // Listen to data sources being added/removed\n      keys.push(\n        olEvents.listen(this.gmfDataSources_, 'add', this.handleDataSourcesAdd_, this),\n        olEvents.listen(this.gmfDataSources_, 'remove', this.handleDataSourcesRemove_, this)\n      );\n\n      // Manage the data sources that are already in the collection\n      this.gmfDataSources_.forEach(this.registerDataSource_, this);\n\n    } else {\n      keys.forEach(olEvents.unlistenByKey);\n      keys.length = 0;\n\n      // Remove data sources that are in the collection\n      this.filtrableDataSources.length = 0;\n    }\n  }\n\n\n  /**\n   * Called when a data source is added to the collection of ngeo data sources.\n   * If the data source is 'valid', add it to the list of filtrable data\n   * sources.\n   *\n   * @param {ol.Collection.Event} evt Collection event.\n   * @private\n   */\n  handleDataSourcesAdd_(evt) {\n    const dataSource = evt.element;\n    if (dataSource instanceof gmfDatasourceOGC) {\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n\n  /**\n   * Called when a data source is removed from the collection of ngeo data\n   * sources. If the data source is 'valid', remove it from the list of\n   * filtrable data sources.\n   *\n   * @param {ol.Collection.Event} evt Collection event.\n   * @private\n   */\n  handleDataSourcesRemove_(evt) {\n    const dataSource = evt.element;\n    if (dataSource instanceof gmfDatasourceOGC) {\n      this.unregisterDataSource_(dataSource);\n    }\n  }\n\n\n  /**\n   * Register a data source if filtrable.  If it's the first time that the\n   * data source is about to be registered, then the `filtrable` property\n   * is set. Otherwise, it's used.\n   *\n   * @param {gmf.datasource.OGC} dataSource Data source\n   * @private\n   */\n  registerDataSource_(dataSource) {\n    if (dataSource.filtrable === null) {\n      dataSource.filtrable = this.isDataSourceFiltrable_(dataSource);\n    }\n\n    if (dataSource.filtrable) {\n      this.filtrableDataSources.push(dataSource);\n\n      if (this.defaultFiltrableDataSourceName_ !== undefined &&\n          dataSource.name === this.defaultFiltrableDataSourceName_\n      ) {\n        this.gmfDataSourceBeingFiltered.dataSource = dataSource;\n      }\n    }\n  }\n\n\n  /**\n   * Unregister a data source if it's filtrable. Also, if it's the one\n   * that was currently selected, deselect it.\n   * @param {gmf.datasource.OGC} dataSource Data source\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n    if (dataSource.filtrable) {\n      olArray.remove(this.filtrableDataSources, dataSource);\n\n      if (this.gmfDataSourceBeingFiltered.dataSource === dataSource) {\n        this.gmfDataSourceBeingFiltered.dataSource = null;\n      }\n    }\n  }\n\n\n  /**\n   * Determines whether the data source is valid for addition (or removal) to\n   * the list of filtrable data sources or not.\n   *\n   * To be filtrable, the data source must:\n   *\n   *  1) have its name in the list of filtrable layer node names\n   *  2) support WFS\n   *  3) have only one ogcLayers defined\n   *  4) the ogcLayer must be queryable\n   *\n   * If 1) is true but not any of the others, then the server has not been\n   * configured properly. In this case, a warning notification can be shown.\n   *\n   * @param {gmf.datasource.OGC} dataSource GMF data source object\n   * @param {boolean=} opt_notify Whether to show a warning notification or not\n   *     in case of a data source that has its name is in the list of\n   *     filtrable layer node names but it doesn't match the other requirements.\n   *     Defaults to `true.`\n   * @return {boolean} Whether the data source is valid to add to the list or\n   *     not.\n   * @private\n   */\n  isDataSourceFiltrable_(dataSource, opt_notify) {\n    let filtrable = true;\n    const gettext = this.gettextCatalog_;\n    const notify = opt_notify !== false;\n    const names = googAsserts.assert(this.filtrableLayerNodeNames_);\n    const msgs = [];\n\n    // (1) The name of the DS must be in list of filtrable layer node names\n    if (olArray.includes(names, dataSource.name)) {\n\n      // (2) The DS must support WFS\n      if (!dataSource.supportsWFS) {\n        msgs.push(gettext.getString(\n          'The data source doesn\\'t support WFS, which is required ' +\n          'to fetch the attributes to build the filter rules.'\n        ));\n      }\n\n      // (3) The DS must have only one ogcLayer\n      if (!dataSource.ogcLayers || !dataSource.ogcLayers.length) {\n        msgs.push(gettext.getString(\n          'The data source must have only 1 ogcLayer defined.'\n        ));\n      } else if (!dataSource.ogcLayers[0].queryable) {\n        // (4) The ogcLayer must be queryable\n        msgs.push(gettext.getString(\n          'The ogcLayer within the data source must be queryable.'\n        ));\n      }\n\n      filtrable = !msgs.length;\n\n      // Notify if the name is in list of filtrable layer node names but\n      // there are missing requirements.\n      if (notify && !filtrable) {\n        const p1 = gettext.getString(\n          `The following data source is marked as being filtrable,\n          but is missing some requirements: `\n        );\n        const p2 = `${dataSource.name} (${dataSource.id}).`;\n        const p3 = gettext.getString(\n          `Please, contact your administrator about this.\n          Here are the reasons: `\n        );\n        msgs.unshift(`${p1} ${p2} ${p3}`);\n        console.warn(msgs.join(' '));\n        this.ngeoNotification_.notify({\n          msg: msgs.join(' '),\n          type: ngeoMessageMessage.Type.WARNING\n        });\n      }\n    } else {\n      filtrable = false;\n    }\n\n    return filtrable;\n  }\n\n  /**\n   * @param {?gmf.datasource.OGC} dataSource Newly selected data source\n   *     object.\n   * @private\n   */\n  handleSelectedDataSourceChange_(dataSource) {\n\n    this.aRuleIsActive = false;\n    this.customRules = null;\n    this.directedRules = null;\n    this.readyDataSource = null;\n    this.gmfSavedFilters.currentDataSourceId = null;\n\n    // No need to do anything if no data source is selected\n    if (!dataSource) {\n      return;\n    }\n\n    // A data source has been selected. Make sure the component is active.\n    if (!this.active) {\n      this.active = true;\n    }\n\n    this.gmfDataSourcesHelper_.prepareFiltrableDataSource(\n      dataSource\n    ).then((dataSource) => {\n\n      // Data source is ready. Get any existing rules or create new ones from\n      // the attributes\n      let item = this.getRuleCacheItem_(dataSource);\n      if (!item) {\n        item = {\n          customRules: [],\n          directedRules: []\n        };\n        this.setRuleCacheItem_(dataSource, item);\n        if (dataSource.gmfLayer.metadata &&\n            dataSource.gmfLayer.metadata.directedFilterAttributes &&\n            dataSource.gmfLayer.metadata.directedFilterAttributes.length\n        ) {\n          const directedAttributes =\n              dataSource.gmfLayer.metadata.directedFilterAttributes;\n          const attributes = googAsserts.assert(dataSource.attributes);\n          for (const attribute of attributes) {\n            if (olArray.includes(directedAttributes, attribute.name)) {\n              item.directedRules.push(\n                this.ngeoRuleHelper_.createRuleFromAttribute(attribute)\n              );\n            }\n          }\n        }\n      }\n\n      this.customRules = item.customRules;\n      this.directedRules = item.directedRules;\n      this.readyDataSource = dataSource;\n      this.gmfSavedFilters.currentDataSourceId = dataSource.id;\n\n    });\n  }\n\n  /**\n   * @param {ngeo.datasource.DataSource} dataSource Data source.\n   * @return {?gmf.filters.filterselectorComponent.Controller_.RuleCacheItem} Rule cache item.\n   * @private\n   */\n  getRuleCacheItem_(dataSource) {\n    return this.ruleCache_[dataSource.id] || null;\n  }\n\n  /**\n   * @param {ngeo.datasource.DataSource} dataSource Data source.\n   * @param {gmf.filters.filterselectorComponent.Controller_.RuleCacheItem} item Rule cache item.\n   * @private\n   */\n  setRuleCacheItem_(dataSource, item) {\n    this.ruleCache_[dataSource.id] = item;\n  }\n\n  /**\n   * @export\n   */\n  saveFilterShowModal() {\n    this.saveFilterSaveModalShown = true;\n  }\n\n  /**\n   * @export\n   */\n  saveFilterSave() {\n\n    const name = this.saveFilterName;\n    const dataSource = googAsserts.assert(this.readyDataSource);\n    const dataSourceId = dataSource.id;\n    const alreadyExist = (this.gmfSavedFilters.indexOfItem(\n      name, dataSourceId) !== -1);\n    const condition = dataSource.filterCondition;\n\n    const msg = this.gettextCatalog_.getString(\n      `A filter with the same name already exists.\n      Do you want to overwrite it?`\n    );\n    if (!alreadyExist || confirm(msg)) {\n      // (1) Serialize the existing custom and directed rules\n      const customRules = this.customRules ?\n        this.ngeoRuleHelper_.serializeRules(this.customRules) : [];\n      const directedRules = this.directedRules ?\n        this.ngeoRuleHelper_.serializeRules(this.directedRules) : [];\n\n      // (2) Ask the service to save it\n      const item = /** @type {!gmf.filters.SavedFilters.Item} */ ({\n        condition,\n        customRules,\n        dataSourceId,\n        directedRules,\n        name\n      });\n      this.gmfSavedFilters.save(item);\n\n      // (3) Close popup, which resets the name\n      this.saveFilterSaveModalShown = false;\n    }\n  }\n\n  /**\n   * Load a saved filter item, replacing the current rules.\n   * @param {!gmf.filters.SavedFilters.Item} filterItem Filter item.\n   * @export\n   */\n  saveFilterLoadItem(filterItem) {\n\n    const dataSource = googAsserts.assert(this.readyDataSource);\n\n    // (1) Reset current rules\n    this.customRules = null;\n    this.directedRules = null;\n\n    const customRules = this.ngeoRuleHelper_.createRules(\n      filterItem.customRules);\n    const directedRules = this.ngeoRuleHelper_.createRules(\n      filterItem.directedRules);\n\n    // Timeout, which ensures the destruction of the previous filter component\n    // and the creation of a new one\n    this.timeout_(() => {\n      // (2) Set rules\n      this.customRules = customRules;\n      this.directedRules = directedRules;\n\n      // (3) Set condition\n      dataSource.filterCondition = filterItem.condition;\n\n      // (4) Update cache item\n      const cacheItem = googAsserts.assert(this.getRuleCacheItem_(dataSource));\n      cacheItem.customRules = customRules;\n      cacheItem.directedRules = directedRules;\n    });\n  }\n\n  /**\n   * @export\n   */\n  saveFilterManage() {\n    this.saveFilterManageModalShown = true;\n  }\n\n  /**\n   * Remove a saved filter item.\n   * @param {!gmf.filters.SavedFilters.Item} item Filter item.\n   * @export\n   */\n  saveFilterRemoveItem(item) {\n    this.gmfSavedFilters.remove(item);\n  }\n\n};\n\n\n/**\n * @typedef {Object.<number, !gmf.filters.filterselectorComponent.Controller_.RuleCacheItem>}\n */\nexports.Controller_.RuleCache;\n\n\n/**\n * @typedef {{\n *     customRules: (Array.<ngeo.rule.Rule>),\n *     directedRules: (Array.<ngeo.rule.Rule>)\n * }}\n */\nexports.Controller_.RuleCacheItem;\n\n\nexports.component('gmfFilterselector', {\n  bindings: {\n    active: '=',\n    map: '<',\n    toolGroup: '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfFilterselectorTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module gmf.filters.module\n */\nimport gmfFiltersFilterselectorComponent from 'gmf/filters/filterselectorComponent.js';\nimport gmfFiltersSavedFilters from 'gmf/filters/SavedFilters.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfFiltersModule', [\n  gmfFiltersFilterselectorComponent.name,\n  gmfFiltersSavedFilters.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.timeSliderComponent\n */\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\n\nimport 'jquery-ui/ui/widgets/slider.js';\nimport 'angular-ui-slider';\nimport './timeslider.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeTimeSliderComponent', [\n  ngeoMiscWMSTime.module.name,\n  'ui.slider',\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/layertree/timesliderComponent', require('./timesliderComponent.html'));\n});\n\n\n/**\n * Provide a directive to select a single date or a range of dates with a slider\n * Example:\n *\n *      <gmf-time-slider\n *          gmf-time-slider-time=\"{\n *            maxValue: '2013-12-31T00:00:00Z',\n *            minValue: '2006-01-01T00:00:00Z',\n *            mode: 'range'}\"\n *          gmf-time-slider-on-date-selected=\"ctrl.onDateSelected(time)\">\n *      </gmf-time-slider>\n *\n * @htmlAttribute {ngeox.TimeProperty} gmf-time-slider-time parameter for initialization.\n * @htmlAttribute {function()} gmf-time-slider-on-date-selected Expression evaluated after\n * date(s) changed\n * @param {angular.$timeout} $timeout angular timeout service\n * @param {angular.$filter} $filter angular filter service\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfTimeSlider\n */\nexports.directive_ = function($timeout, $filter) {\n  return {\n    scope: {\n      onDateSelected: '&gmfTimeSliderOnDateSelected',\n      time: '=gmfTimeSliderTime'\n    },\n    bindToController: true,\n    controller: 'gmfTimeSliderController as sliderCtrl',\n    restrict: 'AE',\n    templateUrl: 'gmf/layertree/timesliderComponent',\n    link: /** @type {!angular.LinkingFunctions} */ ({\n      pre: function preLink(scope, element, attrs, ctrl) {\n        ctrl.init();\n\n        ctrl.sliderOptions['stop'] = onSliderReleased_;\n        ctrl.sliderOptions['slide'] = computeDates_;\n\n        function onSliderReleased_(e, sliderUi) {\n          ctrl.onDateSelected({\n            time: computeDates_(e, sliderUi)\n          });\n          scope.$apply();\n        }\n\n        function computeDates_(e, sliderUi) {\n          let sDate, eDate, wmstime;\n          if (sliderUi.values) {\n            sDate = new Date(ctrl.getClosestValue_(sliderUi.values[0]));\n            eDate = new Date(ctrl.getClosestValue_(sliderUi.values[1]));\n            ctrl.dates = [sDate, eDate];\n            wmstime = {\n              start: sDate.getTime(),\n              end: eDate.getTime()\n            };\n          } else {\n            sDate = new Date(ctrl.getClosestValue_(sliderUi.value));\n            ctrl.dates = sDate;\n            wmstime = {\n              start: sDate.getTime()\n            };\n          }\n          scope.$apply();\n          return wmstime;\n        }\n      }\n    })\n  };\n};\n\n\nexports.directive('gmfTimeSlider', exports.directive_);\n\n\n/**\n * TimeSliderController - directive controller\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.WMSTime} ngeoWMSTime WMSTime service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfTimeSliderController\n */\nexports.Controller_ = function($scope, ngeoWMSTime) {\n\n  /**\n   * @type {ngeo.misc.WMSTime}\n   * @private\n   */\n  this.ngeoWMSTime_ = ngeoWMSTime;\n\n  /**\n   * Function called after date(s) changed/selected\n   * @function\n   * @export\n   */\n  this.onDateSelected;\n\n\n  /**\n   * A time object for directive initialization\n   * @type {ngeox.TimeProperty}\n   * @export\n   */\n  this.time;\n\n  /**\n   * If the component is used to select a date range\n   * @type {boolean}\n   * @export\n   */\n  this.isModeRange;\n\n  /**\n   * Minimal value of the slider (time in ms)\n   * @type {number}\n   * @export\n   */\n  this.minValue;\n\n  /**\n   * Maximal value of the slider (time in ms)\n   * @type {number}\n   * @export\n   */\n  this.maxValue;\n\n  /**\n   * Used when WMS time object has a property 'values' instead of an interval\n   * @type (?Array<number>)\n   */\n  this.timeValueList;\n\n  /**\n   * Default Slider options (used by ui-slider directive)\n   * @type {{\n   *  range : boolean,\n   *  min : number,\n   *  max : number\n   * }}\n   * @export\n   */\n  this.sliderOptions;\n\n  /**\n   * Model for the ui-slider directive (date in ms format)\n   * @type {Array.<number>|number}\n   * @export\n   */\n  this.dates;\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.init = function() {\n  this.timeValueList = this.getTimeValueList_();\n\n  // Fetch the initial options for the component\n  const initialOptions_ = this.ngeoWMSTime_.getOptions(this.time);\n  this.isModeRange = this.time.mode === 'range';\n  this.minValue = initialOptions_.minDate;\n  this.maxValue = initialOptions_.maxDate;\n  this.dates = this.isModeRange ? [initialOptions_.values[0], initialOptions_.values[1]] :\n    initialOptions_.values;\n  this.sliderOptions = {\n    range: this.isModeRange,\n    min: this.minValue,\n    max: this.maxValue\n  };\n};\n\n/**\n * TimeSliderController.prototype.getTimeValueList_ - Get a list of time value instead\n * of using the wmstime interval as a list of possibles values\n * @private\n * @return {Array<number>}  - List of timestamp representing possible values\n */\nexports.Controller_.prototype.getTimeValueList_ = function() {\n  const wmsTime = this.time;\n  let timeValueList = null;\n  const minDate = new Date(this.minValue);\n  const maxDate = new Date(this.maxValue);\n\n  if (wmsTime.values) {\n    timeValueList = [];\n    wmsTime.values.forEach((date) => {\n      timeValueList.push(new Date(date).getTime());\n    });\n  } else {\n    const maxNbValues = 1024;\n    const endDate = new Date(minDate.getTime());\n    endDate.setFullYear(minDate.getFullYear() + maxNbValues * wmsTime.interval[0]);\n    endDate.setMonth(minDate.getMonth() + maxNbValues * wmsTime.interval[1],\n      minDate.getDate() + maxNbValues * wmsTime.interval[2]);\n    endDate.setSeconds(minDate.getSeconds() + maxNbValues * wmsTime.interval[3]);\n\n    if (endDate > maxDate) {\n      // Transform interval to a list of values when the number\n      // of values is below a threshold (maxNbValues)\n      timeValueList = [];\n      for (let i = 0; ; i++) {\n        const nextDate = new Date(minDate.getTime());\n        nextDate.setFullYear(minDate.getFullYear() + i * wmsTime.interval[0]);\n        nextDate.setMonth(minDate.getMonth() + i * wmsTime.interval[1],\n          minDate.getDate() + i * wmsTime.interval[2]);\n        nextDate.setSeconds(minDate.getSeconds() + i * wmsTime.interval[3]);\n        if (nextDate <= maxDate) {\n          timeValueList.push(nextDate.getTime());\n        } else {\n          break;\n        }\n      }\n    }\n  }\n  return timeValueList;\n};\n\n\n/**\n * Compute the closest available date from the given timestamp\n * @param  {number} timestamp selected datetime (in ms format)\n * @return {number} the closest available datetime (in ms format) from the timestamp\n * @private\n */\nexports.Controller_.prototype.getClosestValue_ = function(timestamp) {\n  if (timestamp <= this.minValue) {\n    return this.minValue;\n  }\n\n  if (timestamp >= this.maxValue) {\n    return this.maxValue;\n  }\n\n  if (this.timeValueList) {\n    // Time stops are defined as a list of values\n    let index;\n    let leftIndex = 0;\n    let rightIndex = this.timeValueList.length - 1;\n\n    while ((rightIndex - leftIndex) > 1) {\n      index = Math.floor((leftIndex + rightIndex) / 2);\n      if (this.timeValueList[index] >= timestamp) {\n        rightIndex = index;\n      } else {\n        leftIndex = index;\n      }\n    }\n\n    const leftDistance = Math.abs(this.timeValueList[leftIndex] - timestamp);\n    const rightDistance = Math.abs(this.timeValueList[rightIndex] - timestamp);\n\n    return this.timeValueList[leftDistance < rightDistance ? leftIndex : rightIndex];\n  } else {\n    // Time stops are defined by a start date plus an interval\n    const targetDate = new Date(timestamp);\n    const startDate = new Date(this.minValue);\n    let bestDate = new Date(this.minValue);\n    const maxDate = new Date(this.maxValue);\n    let bestDistance = Math.abs(targetDate - bestDate);\n\n    for (let i = 1; ; i++) {\n      // The start date should always be used as a reference\n      // because adding a month twice could differ from adding\n      // two months at once\n      const next = new Date(startDate.getTime());\n      next.setFullYear(startDate.getFullYear() + i * this.time.interval[0]);\n      next.setMonth(startDate.getMonth() + i *  this.time.interval[1],\n        startDate.getDate() + i * this.time.interval[2]);\n      next.setSeconds(startDate.getSeconds() + i * this.time.interval[3]);\n\n      if (next > maxDate) {\n        break;\n      }\n\n      const distance = Math.abs(targetDate - next);\n      if (distance <= bestDistance) {\n        bestDate = next;\n        bestDistance = distance;\n      } else {\n        break;\n      }\n    }\n\n    return bestDate.getTime();\n  }\n};\n\n\n/**\n * Format and localize time regarding a resolution.\n * @param {number} time (in ms format) timestamp to format and localize.\n * @return {string} Localized date string regarding the resolution.\n * @export\n */\nexports.Controller_.prototype.getLocalizedDate = function(time) {\n  return this.ngeoWMSTime_.formatTimeValue(time, this.time.resolution);\n};\n\n\nexports.controller('gmfTimeSliderController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.module\n */\nimport gmfLayertreeComponent from 'gmf/layertree/component.js';\nimport gmfLayertreeDatasourceGroupTreeComponent from 'gmf/layertree/datasourceGroupTreeComponent.js';\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport gmfLayertreeTimeSliderComponent from 'gmf/layertree/timeSliderComponent.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\n\nimport './common.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeModule', [\n  gmfLayertreeComponent.name,\n  gmfLayertreeDatasourceGroupTreeComponent.name,\n  gmfLayertreeSyncLayertreeMap.module.name,\n  gmfLayertreeTimeSliderComponent.name,\n  gmfLayertreeTreeManager.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.permalink.module\n */\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\nimport gmfPermalinkShareService from 'gmf/permalink/ShareService.js';\nimport gmfPermalinkShareComponent from 'gmf/permalink/shareComponent.js';\n\nimport './share.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfPermalinkModule', [\n  gmfPermalinkPermalink.module.name,\n  gmfPermalinkShareService.module.name,\n  gmfPermalinkShareComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n * @ngInject\n */\nexports.directive_ = function($window) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      // Get the 'window resize' attributes, which are optional. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.scaleselector\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport olMap from 'ol/Map.js';\nimport * as olEvents from 'ol/events.js';\nimport 'bootstrap/js/dropdown.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoScaleselector', []);\n\n\nexports.value('ngeoScaleselectorTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoScaleselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/map/scaleselector';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/map/scaleselector', require('./scaleselector.html'));\n});\n\n\n/**\n * Provides the \"ngeoScaleselector\" directive, a widget for\n * selecting map scales.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\" ngeo-scaleselector-map=\"ctrl.map\">\n *     </div>\n *\n * The expression passed to the ngeo-scaleselector attribute should return an\n * array of this form:\n *\n *    [20000, 10000, 5000, 2500]\n *\n * That directive's partial uses Bootstrap's `dropdown` and `dropdown-menu`\n * classes, and `data-toggle=\"dropdown\"`, so it is meant to be used with\n * Bootstrap's \"dropdown\" jQuery plugin.\n *\n * You can pass options to configure the behaviors of this element. Options is\n * a {@link ngeox.ScaleselectorOptions} object.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\"\n *       ngeo-scaleselector-map=\"ctrl.map\"\n *       ngeo-scaleselector-options=\"ctrl.scaleSelectorOptions\">\n *     </div>\n *\n * By default the directive uses \"scaleselector.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoScaleselectorTemplateUrl\" value.\n *\n * The directive has its own scope, but it is not isolate scope. That scope\n * includes a reference to the directive's controller: the \"scaleselectorCtrl\"\n * scope property.\n *\n * The directive doesn't create any watcher. In particular the object including\n * the scales information is now watched.\n *\n * See our live example: [../examples/scaleselector.html](../examples/scaleselector.html)\n *\n * @htmlAttribute {!Array.<number>} ngeo-scaleselector The available scales.\n * @htmlAttribute {ol.Map} ngeo-scaleselector-map The map.\n * @htmlAttribute {ngeox.ScaleselectorOptions} ngeo-scaleselector-options\n *     Optional. The configuration options.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoScaleselectorTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoScaleselector\n */\nconst directive = function(ngeoScaleselectorTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoScaleselectorController',\n    templateUrl: ngeoScaleselectorTemplateUrl\n  };\n};\n\n\nexports.directive('ngeoScaleselector', directive);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nconst ScaleselectorController = function($scope, $element, $attrs) {\n\n  const scalesExpr = $attrs['ngeoScaleselector'];\n\n  /**\n   * The zoom level/scale map object.\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scales = /** @type {!Array.<number>} */\n    ($scope.$eval(scalesExpr));\n  googAsserts.assert(this.scales !== undefined);\n\n  /**\n   * @type {Array.<number>}\n   * @export\n   */\n  this.zoomLevels;\n\n  $scope.$watch(() => Object.keys(this.scales).length, (newLength) => {\n    this.zoomLevels = Object.keys(this.scales).map(Number);\n    this.zoomLevels.sort(olArray.numberSafeCompareFunction);\n  });\n\n  const mapExpr = $attrs['ngeoScaleselectorMap'];\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  googAsserts.assertInstanceof(this.map_, olMap);\n\n  const optionsExpr = $attrs['ngeoScaleselectorOptions'];\n  const options = $scope.$eval(optionsExpr);\n\n  /**\n   * @type {!ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.options = ScaleselectorController.getOptions_(options);\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.resolutionChangeKey_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.currentScale = undefined;\n\n  const view = this.map_.getView();\n  if (view !== null) {\n    const currentZoom = this.map_.getView().getZoom();\n    if (currentZoom !== undefined) {\n      this.currentScale = this.getScale(currentZoom);\n    }\n  }\n\n  olEvents.listen(this.map_, 'change:view', this.handleViewChange_, this);\n\n  this.registerResolutionChangeListener_();\n\n  $scope['scaleselectorCtrl'] = this;\n\n};\n\n\n/**\n * @param {?} options Options after expression evaluation.\n * @return {!ngeox.ScaleselectorOptions} Options object.\n * @private\n */\nScaleselectorController.getOptions_ = function(options) {\n  let dropup = false;\n  if (options !== undefined) {\n    dropup = options['dropup'] == true;\n  }\n  return /** @type {ngeox.ScaleselectorOptions} */ ({\n    dropup: dropup\n  });\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @return {number} Scale.\n * @export\n */\nScaleselectorController.prototype.getScale = function(zoom) {\n  return this.scales[zoom];\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @export\n */\nScaleselectorController.prototype.changeZoom = function(zoom) {\n  this.map_.getView().setZoom(zoom);\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nScaleselectorController.prototype.handleResolutionChange_ = function(e) {\n  const view = this.map_.getView();\n  const currentScale = this.scales[/** @type {number} */ (view.getZoom())];\n\n  // handleResolutionChange_ is a change:resolution listener. The listener\n  // may be executed outside the Angular context, for example when the user\n  // double-clicks to zoom on the map.\n  //\n  // But it may also be executed inside the Angular context, when a function\n  // in Angular context calls setZoom or setResolution on the view, which\n  // is for example what happens when this controller's changeZoom function\n  // is called.\n  //\n  // For that reason we use $applyAsync instead of $apply here.\n\n  if (currentScale !== undefined) {\n    this.$scope_.$applyAsync(() => {\n      this.currentScale = currentScale;\n    });\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nScaleselectorController.prototype.handleViewChange_ = function(e) {\n  this.registerResolutionChangeListener_();\n  this.handleResolutionChange_(null);\n};\n\n\n/**\n * @private\n */\nScaleselectorController.prototype.registerResolutionChangeListener_ = function() {\n  if (this.resolutionChangeKey_ !== null) {\n    olEvents.unlistenByKey(this.resolutionChangeKey_);\n  }\n  const view = this.map_.getView();\n  this.resolutionChangeKey_ = olEvents.listen(view,\n    'change:resolution', this.handleResolutionChange_,\n    this);\n};\n\n\nexports.controller('NgeoScaleselectorController', ScaleselectorController);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.module\n */\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport ngeoMapComponent from 'ngeo/map/component.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMapRecenter from 'ngeo/map/recenter.js';\nimport ngeoMapResizemap from 'ngeo/map/resizemap.js';\nimport ngeoMapScaleselector from 'ngeo/map/scaleselector.js';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.map.FeatureOverlay (already required by ngeo.map.FeatureOverlayMgr)\n *\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMapModule', [\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapComponent.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMapRecenter.name,\n  ngeoMapResizemap.name,\n  ngeoMapScaleselector.name\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.map.component\n */\nimport gmfPermalinkModule from 'gmf/permalink/module.js';\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\nimport ngeoMapModule from 'ngeo/map/module.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapComponent', [\n  gmfPermalinkModule.name,\n  gmfEditingSnapping.module.name,\n  ngeoMapModule.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/map', require('./component.html'));\n});\n\n\n/**\n * A \"map\" directive for a GeoMapFish application.\n *\n * Example:\n *\n *      <gmf-map gmf-map-map=\"mainCtrl.map\"></gmf-map>\n *\n * @htmlAttribute {ol.Map} gmf-map-map The map.\n * @htmlAttribute {boolean|undefined} gmf-map-manage-resize Whether to update\n *     the size of the map on browser window resize.\n * @htmlAttribute {boolean|undefined} gmf-map-resize-transition The duration\n *     (milliseconds) of the animation that may occur on the div containing\n *     the map. Used to smoothly resize the map while the animation is in\n *     progress.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMap\n */\nexports.directive_ = function() {\n  return {\n    scope: {\n      'map': '<gmfMapMap',\n      'manageResize': '<gmfMapManageResize',\n      'resizeTransition': '<gmfMapResizeTransition'\n    },\n    controller: 'GmfMapController as ctrl',\n    bindToController: true,\n    templateUrl: 'gmf/map'\n  };\n};\n\nexports.directive('gmfMap', exports.directive_);\n\n\n/**\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.editing.Snapping} gmfSnapping The gmf snapping service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMapController\n */\nexports.Controller_ = function(ngeoFeatureOverlayMgr, gmfPermalink, gmfSnapping) {\n\n  // Scope properties\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.manageResize;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n\n  // Injected properties\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.editing.Snapping}\n   * @private\n   */\n  this.gmfSnapping_ = gmfSnapping;\n};\n\n\n/**\n * Called on initialization of the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.ngeoFeatureOverlayMgr_.init(this.map);\n  this.gmfPermalink_.setMap(this.map);\n  this.gmfSnapping_.setMap(this.map);\n};\n\n\nexports.controller('GmfMapController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.map.mousepositionComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport olControlMousePosition from 'ol/control/MousePosition.js';\nimport * as olProj from 'ol/proj.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapMouseposition', [\n  ngeoMiscFilters.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/map/mousepositionComponent', require('./mousepositionComponent.html'));\n});\n\n\nexports.value('gmfMapMousepositionTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfMapMousepositionTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/map/mousepositionComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfMapMousepositionTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfMapMousepositionTemplateUrl($attrs, gmfMapMousepositionTemplateUrl) {\n  return gmfMapMousepositionTemplateUrl($attrs);\n}\n\n/**\n * Provide a component to display the mouse position coordinates depending\n * on the chosen projection. The component also provides a projection picker\n * to choose how the coordinates are displayed.\n * service.\n *\n * Example:\n *  <gmf-mouseposition gmf-mouseposition-map=\"ctrl.map\"\n *     gmf-mouseposition-projections=\"ctrl.projections\">\n *  </gmf-mouseposition>\n *\n * @htmlAttribute {ol.Map} gmf-mouseposition-map The map.\n * @htmlAttribute {Array.<gmfx.MousePositionProjection>}\n *    gmf-mouseposition-projection The list of the projections.\n *\n * @ngdoc component\n * @ngname gmfMouseposition\n */\nexports.component_ = {\n  controller: 'gmfMousepositionController as ctrl',\n  bindings: {\n    'map': '<gmfMousepositionMap',\n    'projections': '<gmfMousepositionProjections'\n  },\n  templateUrl: gmfMapMousepositionTemplateUrl\n};\n\nexports.component('gmfMouseposition',\n  exports.component_);\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.$filter} $filter Angular filter.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfMousepositionController\n */\nexports.Controller_ = function($element, $filter, $scope, gettextCatalog) {\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {!Array.<!gmfx.MousePositionProjection>}\n   * @export\n   */\n  this.projections;\n\n  /**\n   * @type {!gmfx.MousePositionProjection}\n   * @export\n   */\n  this.projection;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.$element_ = $element;\n\n  /**\n   * @type {angular.$filter}\n   * @private\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type  {?ol.control.MousePosition}\n   * @private\n   */\n  this.control_ = null;\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.$scope_.$on('gettextLanguageChanged', () => {\n    this.initOlControl_();\n  });\n\n  // Init control once, in case of applications that never set the language.\n  this.initOlControl_();\n};\n\n\n/**\n * Init the ol.control.MousePosition\n * @private\n */\nexports.Controller_.prototype.initOlControl_ = function() {\n  if (this.control_ !== null) {\n    this.map.removeControl(this.control_);\n  }\n\n  // function that apply the filter.\n  const formatFn = function(coordinates) {\n    const filterAndArgs = this.projection.filter.split(':');\n    const filter = this.$filter_(filterAndArgs.shift());\n    googAsserts.assertFunction(filter);\n    const args = filterAndArgs;\n    args.unshift(coordinates);\n    return filter.apply(this, args);\n  };\n\n  const gettextCatalog = this.gettextCatalog_;\n  this.control_ = new olControlMousePosition({\n    className: 'gmf-mouseposition-control',\n    coordinateFormat: formatFn.bind(this),\n    target: angular.element('.gmf-mouseposition-control-target', this.$element_)[0],\n    undefinedHTML: gettextCatalog.getString('Coordinates')\n  });\n\n  this.setProjection(this.projections[0]);\n\n  this.map.addControl(this.control_);\n};\n\n\n/**\n * @param {gmfx.MousePositionProjection} projection The new projection to use.\n * @export\n */\nexports.Controller_.prototype.setProjection = function(projection) {\n  this.control_.setProjection(olProj.get(projection.code));\n  this.projection = projection;\n};\n\nexports.controller('gmfMousepositionController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.map.module\n */\nimport gmfMapComponent from 'gmf/map/component.js';\nimport gmfMapMousepositionComponent from 'gmf/map/mousepositionComponent.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapModule', [\n  gmfMapComponent.name,\n  gmfMapMousepositionComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.grid.Config\n */\nimport * as olBase from 'ol/index.js';\n\n/**\n * @param {Array.<Object>|undefined} data Entries/objects to be shown in a grid.\n * @param {Array.<ngeox.GridColumnDef>|undefined} columnDefs Column definition of a grid.\n * @constructor\n * @struct\n * @export\n */\nconst exports = function(data, columnDefs) {\n  /**\n   * @type {Array.<Object>|undefined}\n   * @export\n   */\n  this.data = data;\n\n  /**\n   * @type {Array.<ngeox.GridColumnDef>|undefined}\n   * @export\n   */\n  this.columnDefs = columnDefs;\n\n  /**\n   * @type {!Object.<string, Object>}\n   * @export\n   */\n  this.selectedRows = {};\n};\n\n\n/**\n * Get an ID for a row.\n * @param {Object} attributes An entry/row.\n * @return {string} Unique id for this object.\n * @export\n */\nexports.getRowUid = function(attributes) {\n  return `${olBase.getUid(attributes)}`;\n};\n\n\n/**\n * Is the given row selected?\n * @param {Object} attributes An entry/row.\n * @return {boolean} True if already selected. False otherwise.\n * @export\n */\nexports.prototype.isRowSelected = function(attributes) {\n  return !!this.selectedRows[exports.getRowUid(attributes)];\n};\n\n\n/**\n * Returns the number of selected rows.\n * @return {number} Number of selected rows.\n * @export\n */\nexports.prototype.getSelectedCount = function() {\n  return Object.keys(this.selectedRows).length;\n};\n\n\n/**\n * Returns the selected rows.\n * @return {Array.<Object>} Selected rows in the current ordering.\n * @export\n */\nexports.prototype.getSelectedRows = function() {\n  return this.data.filter(row => this.isRowSelected(row));\n};\n\n\n/**\n * @param {Object} attributes An entry/row.\n * @public\n */\nexports.prototype.selectRow = function(attributes) {\n  const uid = exports.getRowUid(attributes);\n  this.selectedRows[uid] = attributes;\n};\n\n\n/**\n * @param {Object} attributes An entry/row.\n * @public\n */\nexports.prototype.toggleRow = function(attributes) {\n  const uid = exports.getRowUid(attributes);\n  const isSelected = this.isRowSelected(attributes);\n  if (isSelected) {\n    delete this.selectedRows[uid];\n  } else {\n    this.selectedRows[uid] = attributes;\n  }\n};\n\n\n/**\n * Select all rows.\n * @export\n */\nexports.prototype.selectAll = function() {\n  this.data.forEach((attributes) => {\n    this.selectRow(attributes);\n  });\n};\n\n\n/**\n * Deselect all rows.\n * @export\n */\nexports.prototype.unselectAll = function() {\n  for (const rowId in this.selectedRows) {\n    delete this.selectedRows[rowId];\n  }\n};\n\n\n/**\n * Invert selection.\n * @export\n */\nexports.prototype.invertSelection = function() {\n  this.data.forEach((attributes) => {\n    this.toggleRow(attributes);\n  });\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoGridConfig', []);\n\n\nexport default exports;\n","/**\n * @module ngeo.grid.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGridConfig from 'ngeo/grid/Config.js';\nimport * as olHas from 'ol/has.js';\n\nimport 'floatthead';\nimport 'angular-float-thead';\nimport 'font-awesome/css/font-awesome.css';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoGrid', [\n  ngeoGridConfig.module.name,\n  ngeoMiscFilters.name,\n  'floatThead',\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/grid', require('./component.html'));\n});\n\n\nexports.value('ngeoGridTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoGridTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/grid';\n  }\n);\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoGridTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoGridTemplateUrl($attrs, ngeoGridTemplateUrl) {\n  return ngeoGridTemplateUrl($attrs);\n}\n\n\n/**\n * A grid component for displaying tabular data. The columns of the grid\n * are sortable, rows can be selected with a single click (also in combination\n * with SHIFT and CTRL/Meta).\n *\n * Example:\n *\n *     <ngeo-grid\n *       ngeo-grid-configuration=\"::ctrl.gridConfiguration\"\n *     </ngeo-grid>\n *\n * @htmlAttribute {ngeo.grid.Config} ngeo-grid-configuration The\n * configuration to use.\n *\n * @ngdoc component\n * @ngname ngeoGrid\n */\nexports.component_ = {\n  controller: 'ngeoGridController as ctrl',\n  bindings: {\n    'configuration': '=ngeoGridConfiguration'\n  },\n  templateUrl: ngeoGridTemplateUrl\n};\n\nexports.component('ngeoGrid', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoGridController\n */\nexports.Controller_ = function($scope) {\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {ngeo.grid.Config}\n   * @export\n   */\n  this.configuration;\n\n  /**\n   * @type {Object.<string, Object>}\n   * @export\n   */\n  this.selectedRows;\n\n  /**\n   * The name of the column used to sort the grid.\n   * @type {string}\n   * @export\n   */\n  this.sortedBy;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.sortAscending = true;\n\n  /**\n   * Configuration object for float-thead.\n   * @type {Object}\n   * @export\n   */\n  this.floatTheadConfig = {\n    'scrollContainer': function($table) {\n      return $table.closest('.ngeo-grid-table-container');\n    }\n  };\n};\n\n\n/**\n * Init the controller\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.selectedRows = this.configuration.selectedRows;\n};\n\n\n/**\n * Sort function that always puts undefined values to the bottom of the grid.\n * A new call will sort ascending. A next one will sort descending (and so\n * on).\n * @param {string} columnName The name of the column that should be used to\n *    sort the data.\n * @export\n */\nexports.Controller_.prototype.sort = function(columnName) {\n  this.sortAscending = this.sortedBy === columnName ? !this.sortAscending : true;\n  this.sortedBy = columnName;\n\n  const asc = this.sortAscending ? 1 : -1;\n  this.configuration.data.sort((attributes1, attributes2) => {\n    if (!attributes1[columnName]) {\n      return 1;\n    }\n    if (!attributes2[columnName]) {\n      return -1;\n    }\n    return attributes1[columnName] > attributes2[columnName] ? asc : -asc;\n  });\n};\n\n\n/**\n * Handler for clicks on a row.\n * @param {Object} attributes An entry/row.\n * @param {jQuery.Event} event Event.\n * @export\n */\nexports.Controller_.prototype.clickRow = function(attributes, event) {\n  const shiftKey = this.isShiftKeyOnly_(event);\n  const platformModifierKey = this.isPlatformModifierKeyOnly_(event);\n\n  this.clickRow_(attributes, shiftKey, platformModifierKey);\n};\n\n\n/**\n * @param {Object} attributes An entry/row.\n * @param {boolean} shiftKey Shift pressed?\n * @param {boolean} platformModifierKey CTRL/Meta pressed?\n * @private\n */\nexports.Controller_.prototype.clickRow_ = function(\n  attributes, shiftKey, platformModifierKey) {\n\n  if (shiftKey && !platformModifierKey) {\n    this.selectRange_(attributes);\n  } else if (!shiftKey && platformModifierKey) {\n    this.configuration.toggleRow(attributes);\n  } else {\n    const isSelected = this.configuration.isRowSelected(attributes);\n    this.configuration.unselectAll();\n    if (!isSelected) {\n      this.configuration.selectRow(attributes);\n    }\n  }\n};\n\n\n/**\n * Selects all rows between the given row and the closest already selected row.\n * @param {Object} attributes An entry/row.\n * @private\n */\nexports.Controller_.prototype.selectRange_ = function(attributes) {\n  const targetUid = ngeoGridConfig.getRowUid(attributes);\n  const data = this.configuration.data;\n\n  if (this.configuration.isRowSelected(attributes)) {\n    return;\n  }\n\n  // get the position of the clicked and all already selected rows\n  /** @type {number|undefined} */\n  let posClickedRow = undefined;\n  const posSelectedRows = [];\n  for (let i = 0; i < data.length; i++) {\n    const currentRow = data[i];\n    const currentUid = ngeoGridConfig.getRowUid(currentRow);\n\n    if (targetUid === currentUid) {\n      posClickedRow = i;\n    } else if (this.configuration.isRowSelected(currentRow)) {\n      posSelectedRows.push(i);\n    }\n  }\n  googAsserts.assert(posClickedRow !== undefined);\n\n  if (posSelectedRows.length == 0) {\n    // if no other row is selected, select the clicked one and stop\n    this.configuration.selectRow(attributes);\n  }\n\n  // find the selected row which is the closest to the clicked row\n  let distance = Infinity;\n  let posClosestRow = posSelectedRows[0];\n  for (let j = 0; j < posSelectedRows.length; j++) {\n    const currentPos = posSelectedRows[j];\n    const currentDistance = Math.abs(currentPos - posClickedRow);\n    if (distance > currentDistance) {\n      distance = currentDistance;\n      posClosestRow = currentPos;\n    }\n    // note: this could be optimized because `posSelectedRows` is ordered.\n  }\n\n  // then select all rows between the clicked one and the closest\n  const rangeStart = (posClickedRow < posClosestRow) ? posClickedRow : posClosestRow;\n  const rangeEnd = (posClickedRow > posClosestRow) ? posClickedRow : posClosestRow;\n\n  for (let l = rangeStart; l <= rangeEnd; l++) {\n    this.configuration.selectRow(data[l]);\n  }\n};\n\n\n/**\n * Prevent the default browser behaviour of selecting text\n * when selecting multiple rows with SHIFT or CTRL/Meta.\n * @param {jQuery.Event} event Event.\n * @export\n */\nexports.Controller_.prototype.preventTextSelection = function(event) {\n  const shiftKey = this.isShiftKeyOnly_(event);\n  const platformModifierKey = this.isPlatformModifierKeyOnly_(event);\n\n  if (shiftKey || platformModifierKey) {\n    event.preventDefault();\n  }\n};\n\n\n/**\n * Same as `ol.events.condition.platformModifierKeyOnly`.\n * @param {jQuery.Event} event Event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @private\n */\nexports.Controller_.prototype.isPlatformModifierKeyOnly_ = function(event) {\n  return !event.altKey &&\n    (olHas.MAC ? event.metaKey : event.ctrlKey) &&\n    !event.shiftKey;\n};\n\n\n/**\n * Same as `ol.events.condition.shiftKeyOnly`.\n * @param {jQuery.Event} event Event.\n * @return {boolean} True if only the shift key is pressed.\n * @private\n */\nexports.Controller_.prototype.isShiftKeyOnly_ = function(event) {\n  return (\n    !event.altKey &&\n      !(event.metaKey || event.ctrlKey) &&\n      event.shiftKey);\n};\n\n\nexports.controller('ngeoGridController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.query.gridComponent\n */\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadCsv from 'ngeo/download/Csv.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\n/** @suppress {extraRequire} */\nimport ngeoGridComponent from 'ngeo/grid/component.js';\n\nimport ngeoGridConfig from 'ngeo/grid/Config.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\n/** @suppress {extraRequire} - required for `ngeoQueryResult` */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport olCollection from 'ol/Collection.js';\nimport * as olExtent from 'ol/extent.js';\nimport olMap from 'ol/Map.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfQueryGridComponent', [\n  ngeoDownloadCsv.module.name,\n  ngeoDownloadService.name,\n  ngeoGridComponent.name,\n  ngeoGridConfig.module.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\nexports.value('gmfDisplayquerygridTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfDisplayquerygridTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/query/gridComponent';\n  }\n);\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/query/gridComponent', require('./gridComponent.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfDisplayquerygridTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfDisplayquerygridTemplateUrl($element, $attrs, gmfDisplayquerygridTemplateUrl) {\n  return gmfDisplayquerygridTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provides a component to display results of the {@link ngeo.queryResult} in a\n * grid and shows related features on the map using\n * the {@link ngeo.map.FeatureOverlayMgr}.\n *\n * You can override the default component's template by setting the\n * value `gmfDisplayquerygridTemplateUrl`.\n *\n * Features displayed on the map use a default style but you can override these\n * styles by passing ol.style.Style objects as attributes of this component.\n *\n * Note: the following ng-class need to be present in the interface <body> element to display the footer\n * when the grid is active (initially there should be the code for the profile tool):\n *      <body ng-class=\"{'gmf-profile-chart-active': !!profileChartActive, 'gmf-query-grid-active': !!queryGridActive}\">\n *\n * Example:\n *\n *      <gmf-displayquerygrid\n *        gmf-displayquerygrid-map=\"ctrl.map\"\n *        gmf-displayquerygrid-featuresstyle=\"ctrl.styleForAllFeatures\"\n *        gmf-displayquerygrid-selectedfeaturestyle=\"ctrl.styleForTheCurrentFeature\">\n *      </gmf-displayquerygrid>\n *\n * @htmlAttribute {boolean} gmf-displayquerygrid-active The active state of the component.\n * @htmlAttribute {ol.style.Style} gmf-displayquerygrid-featuresstyle A style\n *     object for all features from the result of the query.\n * @htmlAttribute {ol.style.Style} gmf-displayquerygrid-selectedfeaturestyle A style\n *     object for the currently selected features.\n * @htmlAttribute {ol.Map} gmf-displayquerygrid-map The map.\n * @htmlAttribute {boolean?} gmf-displayquerygrid-removeemptycolumns Optional. Should\n *     empty columns be hidden? Default: `false`.\n * @htmlAttribute {number?} gmf-displayquerygrid-maxrecenterzoom Optional. Maximum\n *     zoom-level to use when zooming to selected features.\n * @htmlAttribute {gmfx.GridMergeTabs?} gmf-displayquerygrid-gridmergetabs Optional.\n *     Configuration to merge grids with the same attributes into a single grid.\n *\n * @ngdoc component\n * @ngname gmfDisplayquerygrid\n */\nexports.component_ = {\n  controller: 'GmfDisplayquerygridController as ctrl',\n  bindings: {\n    'active': '=?gmfDisplayquerygridActive',\n    'featuresStyleFn': '&gmfDisplayquerygridFeaturesstyle',\n    'selectedFeatureStyleFn': '&gmfDisplayquerygridSelectedfeaturestyle',\n    'getMapFn': '&gmfDisplayquerygridMap',\n    'removeEmptyColumnsFn': '&?gmfDisplayquerygridRemoveemptycolumns',\n    'maxResultsFn': '&?gmfDisplayquerygridMaxresults',\n    'maxRecenterZoomFn': '&?gmfDisplayquerygridMaxrecenterzoom',\n    'mergeTabs': '<?gmfDisplayquerygridMergetabs'\n  },\n  templateUrl: gmfDisplayquerygridTemplateUrl\n};\n\n\nexports.component('gmfDisplayquerygrid', exports.component_);\n\n\n/**\n * Controller for the query grid.\n *\n * @param {!angular.$injector} $injector Main injector.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeox.QueryResult} ngeoQueryResult ngeo query result.\n * @param {!ngeo.query.MapQuerent} ngeoMapQuerent ngeo map querent service.\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n *     overlay manager service.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!ngeo.download.Csv} ngeoCsvDownload CSV download service.\n * @param {!angular.JQLite} $element Element.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDisplayquerygridController\n */\nexports.Controller_ = function($injector, $scope, ngeoQueryResult, ngeoMapQuerent,\n  ngeoFeatureOverlayMgr, $timeout, ngeoCsvDownload, $element) {\n\n  const queryOptions = /** @type {ngeox.QueryOptions} */ (\n    $injector.has('ngeoQueryOptions') ?\n      $injector.get('ngeoQueryOptions') : {});\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {!ngeox.QueryResult}\n   * @export\n   */\n  this.ngeoQueryResult = ngeoQueryResult;\n\n  /**\n   * @type {!ngeo.query.MapQuerent}\n   * @private\n   */\n  this.ngeoMapQuerent_ = ngeoMapQuerent;\n\n  /**\n   * @type {!ngeo.download.Csv}\n   * @private\n   */\n  this.ngeoCsvDownload_ = ngeoCsvDownload;\n\n  /**\n   * @type {!angular.JQLite}\n   * @private\n   */\n  this.$element_ = $element;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.maxResults = queryOptions.limit !== undefined ? queryOptions.limit : 50;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.pending = false;\n\n  /**\n   * @type {!Object.<string, gmfx.GridSource>}\n   * @export\n   */\n  this.gridSources = {};\n\n  /**\n   * IDs of the grid sources in the order they were loaded.\n   * @type {!Array.<string>}\n   * @export\n   */\n  this.loadedGridSources = [];\n\n  /**\n   * The id of the currently shown query source.\n   * @type {string|number|null}\n   * @export\n   */\n  this.selectedTab = null;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.removeEmptyColumns_ = false;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.maxRecenterZoom;\n\n  /**\n   * @type {!gmfx.GridMergeTabs}\n   * @export\n   */\n  this.mergeTabs = {};\n\n  /**\n   * A mapping between row uid and the corresponding feature for each\n   * source.\n   * @type {!Object.<string, Object.<string, ol.Feature>>}\n   * @private\n   */\n  this.featuresForSources_ = {};\n\n  // Styles for displayed features (features) and selected features\n  // (highlightFeatures_) (user can set both styles).\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.features_ = new olCollection();\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.highlightFeatures_ = new olCollection();\n\n  /**\n   * Filename\n   * @type {string}\n   * @private\n   */\n  this.filename_ = $injector.has('gmfCsvFilename') ?\n    $injector.get('gmfCsvFilename') : 'query-results.csv';\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  // Watch the ngeo query result service.\n  this.$scope_.$watchCollection(\n    () => ngeoQueryResult,\n    (newQueryResult, oldQueryResult) => {\n      if (newQueryResult !== oldQueryResult) {\n        this.updateData_();\n      }\n    });\n\n  /**\n   * An unregister function returned from `$scope.$watchCollection` for\n   * \"on-select\" changes (when rows are selected/unselected).\n   * @type {?function()}\n   * @private\n   */\n  this.unregisterSelectWatcher_ = null;\n};\n\n/**\n * Init the controller\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.removeEmptyColumns_ = this['removeEmptyColumnsFn'] ? this['removeEmptyColumnsFn']() === true : false;\n  this.maxRecenterZoom = this['maxRecenterZoomFn'] ? this['maxRecenterZoomFn']() : undefined;\n\n  const featuresOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  featuresOverlay.setFeatures(this.features_);\n  const featuresStyle = this['featuresStyleFn']();\n  if (featuresStyle !== undefined) {\n    googAsserts.assertInstanceof(featuresStyle, olStyleStyle);\n    featuresOverlay.setStyle(featuresStyle);\n  }\n\n  const highlightFeaturesOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  highlightFeaturesOverlay.setFeatures(this.highlightFeatures_);\n  let highlightFeatureStyle = this['selectedFeatureStyleFn']();\n  if (highlightFeatureStyle !== undefined) {\n    googAsserts.assertInstanceof(highlightFeatureStyle, olStyleStyle);\n  } else {\n    const fill = new olStyleFill({color: [255, 0, 0, 0.6]});\n    const stroke = new olStyleStroke({color: [255, 0, 0, 1], width: 2});\n    highlightFeatureStyle = new olStyleStyle({\n      fill: fill,\n      image: new olStyleCircle({\n        fill: fill,\n        radius: 5,\n        stroke: stroke\n      }),\n      stroke: stroke,\n      zIndex: 10\n    });\n  }\n  highlightFeaturesOverlay.setStyle(highlightFeatureStyle);\n\n  const mapFn = this['getMapFn'];\n  if (mapFn) {\n    const map = mapFn();\n    googAsserts.assertInstanceof(map, olMap);\n    this.map_ = map;\n  }\n};\n\n/**\n * Returns a list of grid sources in the order they were loaded.\n * @export\n * @return {Array.<gmfx.GridSource>} Grid sources.\n */\nexports.Controller_.prototype.getGridSources = function() {\n  return this.loadedGridSources.map(sourceLabel => this.gridSources[sourceLabel]);\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.updateData_ = function() {\n  // close if there are no results\n  if (this.ngeoQueryResult.total === 0 && !this.hasOneWithTooManyResults_()) {\n    const oldActive = this.active;\n    this.clear();\n    if (oldActive) {\n      // don't close if there are pending queries\n      this.active = this.ngeoQueryResult.pending;\n      this.pending = this.ngeoQueryResult.pending;\n    }\n    return;\n  }\n\n  this.active = true;\n  this.pending = false;\n  let sources = this.ngeoQueryResult.sources;\n  // merge sources if requested\n  if (Object.keys(this.mergeTabs).length > 0) {\n    sources = this.getMergedSources_(sources);\n  }\n\n  // create grids (only for source with features or with too many results)\n  sources.forEach((source) => {\n    if (source.tooManyResults) {\n      this.makeGrid_(null, source);\n    } else {\n      source.id = this.escapeValue(source.id);\n      const features = source.features;\n      if (features.length > 0) {\n        this.collectData_(source);\n      }\n    }\n  });\n\n  if (this.loadedGridSources.length === 0) {\n    // if no grids were created, do not show\n    this.active = false;\n    return;\n  }\n\n  // keep the first existing navigation tab open\n  if (this.selectedTab === null || !((`${this.selectedTab}`) in this.gridSources)) {\n    // selecting the tab is done in a timeout, because otherwise in rare cases\n    // `ng-class` might set the `active` class on multiple tabs.\n    this.$timeout_(() => {\n      const firstSourceId = this.loadedGridSources[0];\n      this.selectTab(this.gridSources[firstSourceId]);\n    }, 0);\n  }\n};\n\n\n/**\n * @private\n * @return {boolean} If one of the source has too many results.\n */\nexports.Controller_.prototype.hasOneWithTooManyResults_ = function() {\n  return this.ngeoQueryResult.sources.some(source => source.tooManyResults);\n};\n\n/**\n * Returns the value with all symbols and spaces replaced by an underscore.\n * @param {string|number} value A value to escape.\n * @returns {string|number} value An escaped value.\n * @export\n */\nexports.Controller_.prototype.escapeValue = function(value) {\n  // Work-around for Number.isInteger() when not always getting a number ...\n  if (Number.isInteger(/** @type {number} */ (value))) {\n    return value;\n  } else {\n    const toEscape = /[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\ |]/g;\n    if (value.match(toEscape) !== null) {\n      return value.replace(toEscape, '_');\n    } else {\n      return value;\n    }\n  }\n};\n\n\n/**\n * Returns if the given grid source is selected?\n * @export\n * @param {gmfx.GridSource} gridSource Grid source.\n * @return {boolean} Is selected?\n */\nexports.Controller_.prototype.isSelected = function(gridSource) {\n  return this.selectedTab === gridSource.source.label;\n};\n\n\n/**\n * Try to merge the mergable sources.\n * @param {Array.<ngeox.QueryResultSource>} sources Sources.\n * @return {Array.<ngeox.QueryResultSource>} The merged sources.\n * @private\n */\nexports.Controller_.prototype.getMergedSources_ = function(sources) {\n  const allSources = [];\n  /** @type {Object.<string, ngeox.QueryResultSource>} */\n  const mergedSources = {};\n\n  sources.forEach((source) => {\n    // check if this source can be merged\n    const mergedSource = this.getMergedSource_(source, mergedSources);\n\n    if (mergedSource === null) {\n      // this source should not be merged, add as is\n      allSources.push(source);\n    }\n  });\n\n  for (const mergedSourceId in mergedSources) {\n    allSources.push(mergedSources[mergedSourceId]);\n  }\n\n  return allSources;\n};\n\n\n/**\n * Check if the given source should be merged. If so, an artificial source\n * that will contain the features of all mergable sources is returned. If not,\n * `null` is returned.\n * @param {ngeox.QueryResultSource} source Source.\n * @param {Object.<string, ngeox.QueryResultSource>} mergedSources Merged sources.\n * @return {?ngeox.QueryResultSource} A merged source of null if the source should\n *    not be merged.\n * @private\n */\nexports.Controller_.prototype.getMergedSource_ = function(source, mergedSources) {\n  let mergeSourceId = null;\n\n  for (const currentMergeSourceId in this.mergeTabs) {\n    const sourceLabels = this.mergeTabs[currentMergeSourceId];\n    const containsSource = sourceLabels.some(sourceLabel => sourceLabel == source.label);\n    if (containsSource) {\n      mergeSourceId = currentMergeSourceId;\n      break;\n    }\n  }\n\n  if (mergeSourceId === null) {\n    // this source should not be merged\n    return null;\n  }\n\n  /** @type {ngeox.QueryResultSource} */\n  let mergeSource;\n  if (mergeSourceId in mergedSources) {\n    mergeSource = mergedSources[mergeSourceId];\n  } else {\n    mergeSource = {\n      features: [],\n      id: mergeSourceId,\n      label: mergeSourceId,\n      limit: this.maxResults,\n      pending: false,\n      queried: true,\n      tooManyResults: false,\n      totalFeatureCount: undefined\n    };\n    mergedSources[mergeSourceId] = mergeSource;\n  }\n\n  // add features of source to merge source\n  source.features.forEach((feature) => {\n    mergeSource.features.push(feature);\n  });\n\n  // if one of the source has too many results, the resulting merged source will\n  // also be marked with `tooManyResults` and will not contain any features.\n  mergeSource.tooManyResults = mergeSource.tooManyResults || source.tooManyResults;\n  if (mergeSource.tooManyResults) {\n    mergeSource.totalFeatureCount = (mergeSource.totalFeatureCount !== undefined) ?\n      mergeSource.totalFeatureCount + mergeSource.features.length : mergeSource.features.length;\n    mergeSource.features = [];\n  }\n  if (source.totalFeatureCount !== undefined) {\n    mergeSource.totalFeatureCount = (mergeSource.totalFeatureCount !== undefined) ?\n      mergeSource.totalFeatureCount + source.totalFeatureCount : source.totalFeatureCount;\n  }\n\n  return mergeSource;\n};\n\n\n/**\n * Collect all features in the queryResult object.\n * @param {ngeox.QueryResultSource} source Result source.\n * @private\n */\nexports.Controller_.prototype.collectData_ = function(source) {\n  const features = source.features;\n  const allProperties = [];\n  const featureGeometriesNames = [];\n  const featuresForSource = {};\n  let properties, featureGeometryName;\n  features.forEach((feature) => {\n    properties = feature.getProperties();\n    if (properties !== undefined) {\n      // Keeps distinct geometry names to remove theme later.\n      featureGeometryName = feature.getGeometryName();\n      if (featureGeometriesNames.indexOf(featureGeometryName) === -1) {\n        featureGeometriesNames.push(featureGeometryName);\n      }\n\n      allProperties.push(properties);\n      featuresForSource[ngeoGridConfig.getRowUid(properties)] = feature;\n    }\n  });\n\n  this.cleanProperties_(allProperties, featureGeometriesNames);\n  if (allProperties.length > 0) {\n    const gridCreated = this.makeGrid_(allProperties, source);\n    if (gridCreated) {\n      this.featuresForSources_[`${source.label}`] = featuresForSource;\n    }\n  }\n};\n\n\n/**\n * Remove all unwanted columns.\n * @param {Array.<Object>} allProperties A row.\n * @param {Array.<string>} featureGeometriesNames Geometry names.\n * @private\n */\nexports.Controller_.prototype.cleanProperties_ = function(\n  allProperties, featureGeometriesNames) {\n  allProperties.forEach((properties) => {\n    featureGeometriesNames.forEach((featureGeometryName) => {\n      delete properties[featureGeometryName];\n    });\n    delete properties['boundedBy'];\n    delete properties['ngeo_feature_type_'];\n  });\n\n  if (this.removeEmptyColumns_ === true) {\n    this.removeEmptyColumnsFn_(allProperties);\n  }\n};\n\n\n/**\n * Remove columns that will be completely empty between each properties.\n * @param {Array.<Object>} allProperties A row.\n * @private\n */\nexports.Controller_.prototype.removeEmptyColumnsFn_ = function(\n  allProperties) {\n  // Keep all keys that correspond to at least one value in a properties object.\n  const keysToKeep = [];\n  let i, key;\n  for (key in allProperties[0]) {\n    for (i = 0; i < allProperties.length; i++) {\n      if (allProperties[i][key] !== undefined) {\n        keysToKeep.push(key);\n        break;\n      }\n    }\n  }\n  // Get all keys that previously always refers always to an empty value.\n  let keyToRemove;\n  allProperties.forEach((properties) => {\n    keyToRemove = [];\n    for (key in properties) {\n      if (keysToKeep.indexOf(key) === -1) {\n        keyToRemove.push(key);\n      }\n    }\n    // Remove these keys.\n    keyToRemove.forEach((key) => {\n      delete properties[key];\n    });\n  });\n};\n\n\n/**\n * @param {?Array.<Object>} data Grid rows.\n * @param {ngeox.QueryResultSource} source Query source.\n * @return {boolean} Returns true if a grid was created.\n * @private\n */\nexports.Controller_.prototype.makeGrid_ = function(data, source) {\n  const sourceLabel = `${source.label}`;\n  let gridConfig = null;\n  if (data !== null) {\n    gridConfig = this.getGridConfiguration_(data);\n    if (gridConfig === null) {\n      return false;\n    }\n  }\n  if (this.loadedGridSources.indexOf(sourceLabel) == -1) {\n    this.loadedGridSources.push(sourceLabel);\n  }\n  this.gridSources[sourceLabel] = {\n    configuration: gridConfig,\n    source: source\n  };\n  return true;\n};\n\n\n/**\n * @param {Array.<!Object>} data Grid rows.\n * @return {?ngeo.grid.Config} Grid config.\n * @private\n */\nexports.Controller_.prototype.getGridConfiguration_ = function(\n  data) {\n  googAsserts.assert(data.length > 0);\n  const clone = {};\n  Object.assign(clone, data[0]);\n  delete clone.ol_uid;\n  const columns = Object.keys(clone);\n\n  /** @type {Array.<ngeox.GridColumnDef>} */\n  const columnDefs = [];\n  columns.forEach((column) => {\n    columnDefs.push(/** @type {ngeox.GridColumnDef} */ ({\n      name: column\n    }));\n  });\n\n  if (columnDefs.length > 0) {\n    return new ngeoGridConfig(data, columnDefs);\n  } else {\n    // no columns, do not show grid\n    return null;\n  }\n};\n\n\n/**\n * Remove the current selected feature and source and remove all features\n * from the map.\n * @export\n */\nexports.Controller_.prototype.clear = function() {\n  this.active = false;\n  this.pending = false;\n  this.gridSources = {};\n  this.loadedGridSources = [];\n  this.selectedTab = null;\n  this.tooManyResults = false;\n  this.features_.clear();\n  this.highlightFeatures_.clear();\n  this.ngeoMapQuerent_.clear();\n  this.featuresForSources_ = {};\n  if (this.unregisterSelectWatcher_) {\n    this.unregisterSelectWatcher_();\n  }\n};\n\n\n/**\n * Select the tab for the given grid source.\n * @param {gmfx.GridSource} gridSource Grid source.\n * @export\n */\nexports.Controller_.prototype.selectTab = function(gridSource) {\n  const source = gridSource.source;\n  this.selectedTab = source.label;\n\n  if (this.unregisterSelectWatcher_) {\n    this.unregisterSelectWatcher_();\n    this.unregisterSelectWatcher_ = null;\n  }\n\n  if (gridSource.configuration !== null) {\n    this.unregisterSelectWatcher_ = this.$scope_.$watchCollection(\n      () => gridSource.configuration.selectedRows,\n      (newSelected, oldSelectedRows) => {\n        if (Object.keys(newSelected) !== Object.keys(oldSelectedRows)) {\n          this.onSelectionChanged_();\n        }\n      });\n  }\n  this.updateFeatures_(gridSource);\n\n  this.reflowGrid_();\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.reflowGrid_ = function() {\n  // This is a \"work-around\" to make sure that the grid is rendered correctly.\n  // When a pane is activated by setting `this.selectedTab`, the class `active`\n  // is not yet set on the pane. That's why the class is set manually, and\n  // after the pane is shown (in the next digest loop), the grid table can\n  // be refreshed.\n  const id = this.escapeValue(this.selectedTab || '');\n  const activePane = this.$element_.find(`div.tab-pane#${id}`);\n  activePane.removeClass('active').addClass('active');\n  this.$timeout_(() => {\n    activePane.find('div.ngeo-grid-table-container table')['trigger']('reflow');\n  });\n};\n\n\n/**\n * Called when the row selection has changed.\n * @private\n */\nexports.Controller_.prototype.onSelectionChanged_ = function() {\n  if (this.selectedTab === null) {\n    return;\n  }\n\n  const gridSource = this.gridSources[`${this.selectedTab}`];\n  this.updateFeatures_(gridSource);\n};\n\n\n/**\n * @param {gmfx.GridSource} gridSource Grid source\n * @private\n */\nexports.Controller_.prototype.updateFeatures_ = function(gridSource) {\n  this.features_.clear();\n  this.highlightFeatures_.clear();\n\n  if (gridSource.configuration === null) {\n    return;\n  }\n\n  const sourceLabel = `${gridSource.source.label}`;\n  const featuresForSource = this.featuresForSources_[sourceLabel];\n  const selectedRows = gridSource.configuration.selectedRows;\n\n  for (const rowId in featuresForSource) {\n    const feature = featuresForSource[rowId];\n    if (rowId in selectedRows) {\n      this.highlightFeatures_.push(feature);\n    } else {\n      this.features_.push(feature);\n    }\n  }\n};\n\n\n/**\n * Get the currently shown grid source.\n * @export\n * @return {gmfx.GridSource|null} Grid source.\n */\nexports.Controller_.prototype.getActiveGridSource = function() {\n  if (this.selectedTab === null) {\n    return null;\n  } else {\n    return this.gridSources[`${this.selectedTab}`];\n  }\n};\n\n\n/**\n * Returns if a row of the currently active grid is selected?\n * @export\n * @return {boolean} Is one selected?\n */\nexports.Controller_.prototype.isOneSelected = function() {\n  const source = this.getActiveGridSource();\n  if (source === null || source.configuration === null) {\n    return false;\n  } else {\n    return source.configuration.getSelectedCount() > 0;\n  }\n};\n\n\n/**\n * Returns the number of selected rows of the currently active grid.\n * @export\n * @return {number} The number of selected rows.\n */\nexports.Controller_.prototype.getSelectedRowCount = function() {\n  const source = this.getActiveGridSource();\n  if (source === null || source.configuration === null) {\n    return 0;\n  } else {\n    return source.configuration.getSelectedCount();\n  }\n};\n\n\n/**\n * Select all rows of the currently active grid.\n * @export\n */\nexports.Controller_.prototype.selectAll = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    source.configuration.selectAll();\n  }\n};\n\n\n/**\n * Deselect all rows of the currently active grid.\n * @export\n */\nexports.Controller_.prototype.unselectAll = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    source.configuration.unselectAll();\n  }\n};\n\n\n/**\n * Invert the selection of the currently active grid.\n * @export\n */\nexports.Controller_.prototype.invertSelection = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    source.configuration.invertSelection();\n  }\n};\n\n\n/**\n * Zoom to the selected features.\n * @export\n */\nexports.Controller_.prototype.zoomToSelection = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    const extent = olExtent.createEmpty();\n    this.highlightFeatures_.forEach((feature) => {\n      olExtent.extend(extent, feature.getGeometry().getExtent());\n    });\n    const size = this.map_.getSize();\n    googAsserts.assert(size !== undefined);\n    const maxZoom = this.maxRecenterZoom;\n    this.map_.getView().fit(extent, {size, maxZoom});\n  }\n};\n\n\n/**\n * Start a CSV download for the selected features.\n * @export\n */\nexports.Controller_.prototype.downloadCsv = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    const columnDefs = source.configuration.columnDefs;\n    googAsserts.assert(columnDefs !== undefined);\n    const selectedRows = source.configuration.getSelectedRows();\n\n    this.ngeoCsvDownload_.startDownload(\n      selectedRows, columnDefs, this.filename_);\n  }\n};\n\n\nexports.controller('GmfDisplayquerygridController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.swipe\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMiscSwipe', []);\n\n\n/**\n * ===========================================\n * NOTE: It is an inversed copy of ngSwipe.\n * Angular ngSwipe assumes that vertical\n * swipe is a scroll.\n * For more details:\n * https://docs.angularjs.org/api/ngTouch/service/$swipe\n * ===========================================\n */\n\n/**\n * @ngdoc service\n * @name $verticalSwipe\n *\n * @description\n * The `$verticalSwipe` service is a service that abstracts the messier details of hold-and-drag swipe\n * behavior, to make implementing swipe-related directives more convenient.\n *\n * Requires the {@link ngTouch `ngTouch`} module to be installed.\n *\n * `$verticalSwipe` is used by the `ngeoSwipeUp` and `ngeoSwipeDown` directives.\n *\n * # Usage\n * The `$verticalSwipe` service is an object with a single method: `bind`. `bind` takes an element\n * which is to be watched for swipes, and an object with four handler functions. See the\n * documentation for `bind` below.\n */\n\nexports.factory('$verticalSwipe', [function() {\n  // The total distance in any direction before we make the call on swipe vs. scroll.\n  const MOVE_BUFFER_RADIUS = 10;\n\n  const POINTER_EVENTS = {\n    'mouse': {\n      start: 'mousedown',\n      move: 'mousemove',\n      end: 'mouseup'\n    },\n    'touch': {\n      start: 'touchstart',\n      move: 'touchmove',\n      end: 'touchend',\n      cancel: 'touchcancel'\n    },\n    'pointer': {\n      start: 'pointerdown',\n      move: 'pointermove',\n      end: 'pointerup',\n      cancel: 'pointercancel'\n    }\n  };\n\n  function getCoordinates(event) {\n    const originalEvent = event.originalEvent || event;\n    const touches = originalEvent.touches && originalEvent.touches.length ? originalEvent.touches : [originalEvent];\n    const e = (originalEvent.changedTouches && originalEvent.changedTouches[0]) || touches[0];\n\n    return {\n      x: e.clientX,\n      y: e.clientY\n    };\n  }\n\n  function getEvents(pointerTypes, eventType) {\n    const res = [];\n    angular.forEach(pointerTypes, (pointerType) => {\n      const eventName = POINTER_EVENTS[pointerType][eventType];\n      if (eventName) {\n        res.push(eventName);\n      }\n    });\n    return res.join(' ');\n  }\n\n  return {\n    /**\n     * @ngdoc method\n     * @name $verticalSwipe#bind\n     * @param {!angular.JQLite} element Element.\n     * @param {Object} eventHandlers - Event handlers object with `start`, `cancel` and `end` callbacks\n     * @param {Array<string>} pointerTypes - Types of pointer\n     *\n     * @description\n     * The main method of `$verticalSwipe`. It takes an element to be watched for swipe motions, and an\n     * object containing event handlers.\n     * The pointer types that should be used can be specified via the optional\n     * third argument, which is an array of strings `'mouse'`, `'touch'` and `'pointer'`. By default,\n     * `$verticalSwipe` will listen for `mouse`, `touch` and `pointer` events.\n     *\n     * The four events are `start`, `move`, `end`, and `cancel`. `start`, `move`, and `end`\n     * receive as a parameter a coordinates object of the form `{ x: 150, y: 310 }` and the raw\n     * `event`. `cancel` receives the raw `event` as its single parameter.\n     *\n     * `start` is called on either `mousedown`, `touchstart` or `pointerdown`. After this event, `$verticalSwipe` is\n     * watching for `touchmove`, `mousemove` or `pointermove` events. These events are ignored until the total\n     * distance moved in either dimension exceeds a small threshold.\n     *\n     * Once this threshold is exceeded, either the vertical or vertical delta is greater.\n     * - If the vertical distance is greater, this is a swipe and `move` and `end` events follow.\n     * - If the horizontal distance is greater, this is a scroll, and we let the browser take over.\n     *   A `cancel` event is sent.\n     *\n     * `move` is called on `mousemove`, `touchmove` and `pointermove` after the above logic has determined that\n     * a swipe is in progress.\n     *\n     * `end` is called when a swipe is successfully completed with a `touchend`, `mouseup` or `pointerup`.\n     *\n     * `cancel` is called either on a `touchcancel` or `pointercancel`  from the browser, or when we begin scrolling\n     * as described above.\n     *\n     */\n    bind(element, eventHandlers, pointerTypes) {\n      // Absolute total movement, used to control swipe vs. scroll.\n      let totalX, totalY;\n      // Coordinates of the start position.\n      let startCoords;\n      // Last event's position.\n      let lastPos;\n      // Whether a swipe is active.\n      let active = false;\n\n      pointerTypes = pointerTypes || ['mouse', 'touch', 'pointer'];\n      element.on(getEvents(pointerTypes, 'start'), (event) => {\n        startCoords = getCoordinates(event);\n        active = true;\n        totalX = 0;\n        totalY = 0;\n        lastPos = startCoords;\n        if (eventHandlers['start']) {\n          eventHandlers['start'](startCoords, event);\n        }\n      });\n      const events = getEvents(pointerTypes, 'cancel');\n      if (events) {\n        element.on(events, (event) => {\n          active = false;\n          if (eventHandlers['cancel']) {\n            eventHandlers['cancel'](event);\n          }\n        });\n      }\n\n      element.on(getEvents(pointerTypes, 'move'), (event) => {\n        if (!active) {\n          return;\n        }\n\n        // Android will send a touchcancel if it thinks we're starting to scroll.\n        // So when the total distance (+ or - or both) exceeds 10px in either direction,\n        // we either:\n        // - On totalX > totalY, we send preventDefault() and treat this as a swipe.\n        // - On totalY > totalX, we let the browser handle it as a scroll.\n\n        if (!startCoords) {\n          return;\n        }\n        const coords = getCoordinates(event);\n\n        totalX += Math.abs(coords.x - lastPos.x);\n        totalY += Math.abs(coords.y - lastPos.y);\n\n        lastPos = coords;\n\n        if (totalX < MOVE_BUFFER_RADIUS && totalY < MOVE_BUFFER_RADIUS) {\n          return;\n        }\n\n        // One of totalX or totalY has exceeded the buffer, so decide on swipe vs. scroll.\n        if (totalX > totalY) {\n          // Allow native scrolling to take over.\n          active = false;\n          if (eventHandlers['cancel']) {\n            eventHandlers['cancel'](event);\n          }\n          return;\n        } else {\n          // Prevent the browser from scrolling.\n          event.preventDefault();\n          if (eventHandlers['move']) {\n            eventHandlers['move'](coords, event);\n          }\n        }\n      });\n\n      element.on(getEvents(pointerTypes, 'end'), (event) => {\n        if (!active) {\n          return;\n        }\n        active = false;\n        if (eventHandlers['end']) {\n          eventHandlers['end'](getCoordinates(event), event);\n        }\n      });\n    }\n  };\n}]);\n\nexports.makeSwipeDirective_ = function(directiveName, direction, eventName) {\n  exports.directive(directiveName, ['$parse', '$verticalSwipe', function($parse, $verticalSwipe) {\n    // The maximum horizontal delta for a swipe should be less than 75px.\n    const MAX_HORIZONTAL_DISTANCE = 75;\n    // Horizontal distance should not be more than a fraction of the vertical distance.\n    const MAX_HORIZONTAL_RATIO = 0.3;\n    // At least a 30px lateral motion is necessary for a swipe.\n    const MIN_VERTICAL_DISTANCE = 30;\n\n    return function(scope, element, attr) {\n      const swipeHandler = $parse(attr[directiveName]);\n\n      let startCoords, valid;\n\n      function validSwipe(coords) {\n        // Check that it's within the coordinates.\n        // Absolute vertical distance must be within tolerances.\n        // Horizontal distance, we take the current X - the starting X.\n        // This is negative for downward swipes and positive for upward swipes.\n        // After multiplying by the direction (-1 for down, +1 for up), legal swipes\n        // (ie. same direction as the directive wants) will have a positive delta and\n        // illegal ones a negative delta.\n        // Therefore this delta must be positive, and larger than the minimum.\n        if (!startCoords) {\n          return false;\n        }\n        const deltaY = (coords.y - startCoords.y) * direction;\n        const deltaX = Math.abs(coords.x - startCoords.x);\n        return valid && // Short circuit for already-invalidated swipes.\n            deltaX < MAX_HORIZONTAL_DISTANCE &&\n            deltaY > 0 &&\n            deltaY > MIN_VERTICAL_DISTANCE &&\n            deltaX / deltaY < MAX_HORIZONTAL_RATIO;\n      }\n\n      const pointerTypes = ['touch'];\n      if (!angular.isDefined(attr['ngeoSwipeDisableMouse'])) {\n        pointerTypes.push('mouse');\n      }\n      $verticalSwipe.bind(element, {\n        'start': function(coords, event) {\n          startCoords = coords;\n          valid = true;\n        },\n        'cancel': function(event) {\n          valid = false;\n        },\n        'end': function(coords, event) {\n          if (validSwipe(coords)) {\n            scope.$apply(() => {\n              element.triggerHandler(eventName);\n              swipeHandler(scope, {$event: event});\n            });\n          }\n        }\n      }, pointerTypes);\n    };\n  }]);\n};\n\n// Down is negative Y-coordinate, up is positive.\nexports.makeSwipeDirective_('ngeoSwipeDown', 1, 'swipedown');\nexports.makeSwipeDirective_('ngeoSwipeUp', -1, 'swipeup');\n\n\nexport default exports;\n","/**\n * @module gmf.query.windowComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscSwipe from 'ngeo/misc/swipe.js';\n\n/** @suppress {extraRequire} - required for `ngeoQueryResult` */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport olCollection from 'ol/Collection.js';\nimport * as olObj from 'ol/obj.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nimport 'jquery-ui/ui/widgets/resizable.js';\nimport 'angular-animate';\nimport 'angular-touch';\nimport 'bootstrap/js/collapse.js';\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfQueryWindowComponent', [\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscSwipe.name,\n  ngeoQueryMapQuerent.module.name,\n  'ngAnimate',\n  'ngTouch',\n]);\n\n\nexports.config(['$animateProvider',\n  /**\n   * For performance reason, only perform animation on elements that have the\n   * `gmf-animatable` css class.\n   * @param {angular.$animateProvider} $animateProvider animate provider.\n   */\n  function($animateProvider) {\n    $animateProvider.classNameFilter(/gmf-animatable/);\n  }\n]);\n\n\nexports.value('gmfDisplayquerywindowTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfDisplayquerywindowTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/query/windowComponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/query/windowComponent', require('./windowComponent.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfDisplayquerywindowTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfDisplayquerywindowTemplateUrl($element, $attrs, gmfDisplayquerywindowTemplateUrl) {\n  return gmfDisplayquerywindowTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provide a component to display results of the {@link ngeo.queryResult}\n * and shows related features on the map using the {@link ngeo.map.FeatureOverlayMgr}.\n *\n * You can override the default component's template by setting the\n * value `gmfDisplayquerywindowTemplateUrl`.\n *\n * Features displayed on the map use a default style but you can override these\n * styles by passing ol.style.Style objects as attributes of this component.\n *\n * Example:\n *\n *      <gmf-displayquerywindow\n *        gmf-displayquerywindow-featuresstyle=\"ctrl.styleForAllFeatures\"\n *        gmf-displayquerywindow-selectedfeaturestyle=\"ctrl.styleForTheCurrentFeature\">\n *      </gmf-displayquerywindow>\n *\n * @htmlAttribute {ol.style.Style} gmf-displayquerywindow-featuresstyle A style\n *     object for all features from the result of the query.\n * @htmlAttribute {ol.style.Style} selectedfeaturestyle A style\n *     object for the current displayed feature.\n * @htmlAttribute {boolean=} defaultcollapsed If the query result window is\n *     collapsed.\n * @htmlAttribute {boolean} desktop If the component is used in the desktop\n *     application.\n * @htmlAttribute {boolean} showunqueriedlayers If also layers, that have not\n *     been queried for the last query, should be shown in the filter.\n *\n * @ngdoc component\n * @ngname gmfDisplayquerywindow\n */\nexports.component_ = {\n  controller: 'GmfDisplayquerywindowController as ctrl',\n  bindings: {\n    'draggableContainment': '<?gmfDisplayquerywindowDraggableContainment',\n    'featuresStyleFn': '&gmfDisplayquerywindowFeaturesstyle',\n    'selectedFeatureStyleFn': '&gmfDisplayquerywindowSelectedfeaturestyle',\n    'defaultCollapsedFn': '&?gmfDisplayquerywindowDefaultcollapsed',\n    'desktop': '=gmfDisplayquerywindowDesktop',\n    'showUnqueriedLayers': '=gmfDisplayquerywindowShowunqueriedlayers'\n  },\n  templateUrl: gmfDisplayquerywindowTemplateUrl\n};\n\n\nexports.component('gmfDisplayquerywindow', exports.component_);\n\n\n/**\n * @param {!jQuery} $element Element.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeox.QueryResult} ngeoQueryResult ngeo query result.\n * @param {!ngeo.query.MapQuerent} ngeoMapQuerent ngeo map querent service.\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n *     overlay manager service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDisplayquerywindowController\n */\nexports.Controller_ = function($element, $scope, ngeoQueryResult, ngeoMapQuerent,\n  ngeoFeatureOverlayMgr) {\n\n  /**\n   * @type {Element|string}\n   * @export\n   */\n  this.draggableContainment;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.desktop = false;\n\n  /**\n   * Is the window currently collapsed?\n   * When used for Desktop, it is shown non-collapsed.\n   * @type {boolean}\n   * @export\n   */\n  this.collapsed = !this.desktop;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.showUnqueriedLayers_ = false;\n\n  /**\n   * Object that is used to filter the source list in the template.\n   * @type {Object}\n   * @export\n   */\n  this.sourcesFilter = {'queried': true};\n\n  /**\n   * @type {ngeox.QueryResult}\n   * @export\n   */\n  this.ngeoQueryResult = {\n    sources: [],\n    total: 0,\n    pending: false\n  };\n\n  /**\n   * @type {!ngeo.query.MapQuerent}\n   * @private\n   */\n  this.ngeoMapQuerent_ = ngeoMapQuerent;\n\n  /**\n   * @type {?ngeox.QueryResultSource}\n   * @export\n   */\n  this.selectedSource = null;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.features_ = new olCollection();\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.highlightFeatures_ = new olCollection();\n\n  /**\n   * @type {?ngeox.QueryResultSource}\n   * @export\n   */\n  this.source = null;\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.feature = null;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.currentResult = -1;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isNext = true;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.animate = 0;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.open = false;\n\n  /**\n   * @const {!jQuery}\n   * @private\n   */\n  this.element_ = $element;\n\n  $scope.$watchCollection(\n    () => ngeoQueryResult,\n    (newQueryResult, oldQueryResult) => {\n      this.updateQueryResult_(newQueryResult);\n      if (newQueryResult.total > 0) {\n        this.show();\n      } else if (oldQueryResult !== newQueryResult) {\n        this.close();\n      }\n    });\n};\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.draggableContainment = this.draggableContainment || 'document';\n  this.desktop = this.desktop;\n  this.collapsed = this['defaultCollapsedFn'] ?\n    this['defaultCollapsedFn']() === true : !this.desktop;\n\n  this.showUnqueriedLayers_ = this['showUnqueriedLayers'] ?\n    this['showUnqueriedLayers'] === true : false;\n\n  this.sourcesFilter = this.showUnqueriedLayers_ ? {} : {'queried': true};\n\n  const featuresOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  featuresOverlay.setFeatures(this.features_);\n  const featuresStyle = this['featuresStyleFn']();\n  if (featuresStyle !== undefined) {\n    googAsserts.assertInstanceof(featuresStyle, olStyleStyle);\n    featuresOverlay.setStyle(featuresStyle);\n  }\n\n  const highlightFeaturesOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  highlightFeaturesOverlay.setFeatures(this.highlightFeatures_);\n  let highlightFeatureStyle = this['selectedFeatureStyleFn']();\n  if (highlightFeatureStyle !== undefined) {\n    googAsserts.assertInstanceof(highlightFeatureStyle, olStyleStyle);\n  } else {\n    const fill = new olStyleFill({color: [255, 0, 0, 0.6]});\n    const stroke = new olStyleStroke({color: [255, 0, 0, 1], width: 2});\n    highlightFeatureStyle = new olStyleStyle({\n      fill: fill,\n      image: new olStyleCircle({\n        fill: fill,\n        radius: 5,\n        stroke: stroke\n      }),\n      stroke: stroke\n    });\n  }\n  highlightFeaturesOverlay.setStyle(highlightFeatureStyle);\n\n  if (this.desktop) {\n    this.element_.find('.gmf-displayquerywindow .windowcontainer').draggable({\n      'cancel': 'input,textarea,button,select,option,tr',\n      'containment': this.draggableContainment\n    });\n    this.element_.find('.gmf-displayquerywindow .windowcontainer').resizable({\n      'minHeight': 240,\n      'minWidth': 240\n    });\n  }\n};\n\n\n/**\n * Remove current displayed results then get new results from the\n * ngeoQueryResult service. Display all results on the map and display,\n * highlight the first feature.\n * @export\n */\nexports.Controller_.prototype.show = function() {\n  this.clear();\n  this.updateFeatures_();\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.updateFeatures_ = function() {\n  this.setCurrentResult_(0, false);\n  if (this.source !== null) {\n    this.collectFeatures_();\n    this.highlightCurrentFeature_();\n    this.open = true;\n  }\n};\n\n/**\n * Select a source and a feature depending of the given position.\n * @param {number} position The index of the feature. If the position is bigger\n * than the length of the first source, get it in the next source. Etc.\n * @param {boolean} setHighlight True to set the highlight automatically.\n * @return {boolean} True if result has changed. False else.\n * @private\n */\nexports.Controller_.prototype.setCurrentResult_ = function(\n  position, setHighlight) {\n  let hasChanged = false;\n  if (position !== this.currentResult) {\n    let i, source, features;\n    const lastFeature = this.feature;\n    const sources = this.ngeoQueryResult.sources;\n    this.currentResult = position;\n    for (i = 0; i < sources.length; i++) {\n      source = sources[i];\n      if (this.selectedSource !== null && this.selectedSource !== source) {\n        // when filtering on a source, only consider features of the selected source\n        continue;\n      }\n      features = source.features;\n      if (position >= features.length) {\n        position -= features.length;\n      } else {\n        this.source = source;\n        this.feature = source.features[position];\n        hasChanged = true;\n        break;\n      }\n    }\n    if (setHighlight) {\n      this.highlightCurrentFeature_(lastFeature);\n    }\n  }\n  return hasChanged;\n};\n\n\n/**\n * Select the logical previous source and feature then highlight this feature on\n * the map.\n * @export\n */\nexports.Controller_.prototype.previous = function() {\n  let position = this.currentResult - 1;\n  if (position < 0) {\n    position = this.getResultLength() - 1;\n  }\n  const hasChanged = this.setCurrentResult_(position, true);\n  if (hasChanged) {\n    this.animate_(false);\n  }\n};\n\n\n/**\n * Select the logical next source and feature then highlight this feature on\n * the map.\n * @export\n */\nexports.Controller_.prototype.next = function() {\n  let position = this.currentResult + 1;\n  const positionMax = this.getResultLength() - 1;\n  if (position > positionMax) {\n    position = 0;\n  }\n  const hasChanged = this.setCurrentResult_(position, true);\n  if (hasChanged) {\n    this.animate_(true);\n  }\n};\n\n\n/**\n * Remove features without properties from the query result.\n * @param {ngeox.QueryResult} queryResult ngeo query result.\n * @private\n */\nexports.Controller_.prototype.updateQueryResult_ = function(queryResult) {\n  this.ngeoQueryResult.total = 0;\n  this.ngeoQueryResult.sources.length = 0;\n  for (let i = 0; i < queryResult.sources.length; i++) {\n    const source = queryResult.sources[i];\n    source.features = source.features.filter((feature) => {\n      googAsserts.assert(feature);\n      return !olObj.isEmpty(ngeoMiscFeatureHelper.getFilteredFeatureValues(feature));\n    });\n    this.ngeoQueryResult.sources.push(source);\n    this.ngeoQueryResult.total += source.features.length;\n  }\n};\n\n/**\n * Get the total count of features in the result of the query. If a source\n * has been select, only the number of features of that source are returned.\n * @return {number} Total number of features.\n * @export\n */\nexports.Controller_.prototype.getResultLength = function() {\n  if (this.selectedSource === null) {\n    return this.ngeoQueryResult.total;\n  } else {\n    return this.selectedSource.features.length;\n  }\n};\n\n\n/**\n * @return {boolean} If the first result is active.\n * @export\n */\nexports.Controller_.prototype.isFirst = function() {\n  return this.currentResult == 0;\n};\n\n\n/**\n * @return {boolean} If the last result is active.\n * @export\n */\nexports.Controller_.prototype.isLast = function() {\n  return this.currentResult == this.getResultLength() - 1;\n};\n\n\n/**\n * Delete the unwanted ol3 properties from the current feature then return the\n * properties.\n * @return {Object?} Filtered properties of the current feature or null.\n * @export\n */\nexports.Controller_.prototype.getFeatureValues = function() {\n  if (!this.feature) {\n    return null;\n  }\n  return ngeoMiscFeatureHelper.getFilteredFeatureValues(this.feature);\n};\n\n\n/**\n * Special function that's used to set the \"animation\" value after to set the\n * \"isNext\" value. The aim is to wait on Angular to add a class (corresponding\n * to \"isNext\") on the DOM before to set the \"animation\" value and do the\n * animation.\n * @param {boolean} isNext used to indicate if the user wants to see the next\n * or the previous result.\n * @private\n */\nexports.Controller_.prototype.animate_ = function(isNext) {\n  this.isNext = isNext;\n  this.animate++;\n};\n\n\n/**\n * Collect all features in the queryResult object.\n * @private\n */\nexports.Controller_.prototype.collectFeatures_ = function() {\n  const sources = this.ngeoQueryResult.sources;\n  this.features_.clear();\n  for (let i = 0; i < sources.length; i++) {\n    const source = sources[i];\n    if (this.selectedSource !== null && this.selectedSource !== source) {\n      // when filtering on a source, only add features of the selected source\n      continue;\n    }\n    const features = source.features;\n    for (let ii = 0; ii < features.length; ii++) {\n      this.features_.push(features[ii]);\n    }\n  }\n};\n\n\n/**\n * Highlight the current displayed feature.\n * @param {ol.Feature=} opt_lastFeature last highlighted feature. Require if\n * it exists because it must be added to the 'non-selected' features collection.\n * @private\n */\nexports.Controller_.prototype.highlightCurrentFeature_ =\nfunction(opt_lastFeature) {\n  this.highlightFeatures_.clear();\n  this.features_.remove(this.feature);\n  this.highlightFeatures_.push(this.feature);\n  if (opt_lastFeature !== undefined) {\n    this.features_.push(opt_lastFeature);\n  }\n};\n\n\n/**\n * Remove the current selected feature and source and remove all features\n * from the map.\n * @export\n */\nexports.Controller_.prototype.close = function() {\n  this.open = false;\n  this.clear();\n  this.ngeoMapQuerent_.clear();\n};\n\n\n/**\n * Remove the current selected feature and source and remove all features\n * from the map.\n * @export\n */\nexports.Controller_.prototype.clear = function() {\n  this.feature = null;\n  this.source = null;\n  this.currentResult = -1;\n  this.features_.clear();\n  this.highlightFeatures_.clear();\n  this.selectedSource = null;\n};\n\n\n/**\n * @param {ngeox.QueryResultSource} source The source to select.\n * @export\n */\nexports.Controller_.prototype.setSelectedSource = function(source) {\n  if (source !== null && source.features.length <= 0) {\n    // sources with no results can not be selected\n    return;\n  }\n  this.clear();\n  this.selectedSource = source;\n  this.updateFeatures_();\n};\n\n\nexports.controller('GmfDisplayquerywindowController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.query.extraModule\n */\nimport gmfQueryGridComponent from 'gmf/query/gridComponent.js';\nimport gmfQueryWindowComponent from 'gmf/query/windowComponent.js';\n\nimport './grid.less';\nimport './window.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfQueryExtraModule', [\n  gmfQueryGridComponent.name,\n  gmfQueryWindowComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.search.module\n */\nimport gmfSearchComponent from 'gmf/search/component.js';\nimport gmfSearchFulltextSearch from 'gmf/search/FulltextSearch.js';\n\nimport './search.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfSearchModule', [\n  gmfSearchComponent.name,\n  gmfSearchFulltextSearch.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.theme.selectorComponent\n */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport * as olEvents from 'ol/events.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfThemeSelectorComponent', [\n  gmfThemeManager.module.name,\n  gmfThemeThemes.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/theme/selectorComponent', require('./selectorComponent.html'));\n});\n\n\nexports.value('gmfThemeSelectorTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfThemeSelectorTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/theme/selectorComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfThemeSelectorTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfThemeSelectorTemplateUrl($attrs, gmfThemeSelectorTemplateUrl) {\n  return gmfThemeSelectorTemplateUrl($attrs);\n}\n\n\n/**\n * Note that this component works with the {@link gmf.layertree.TreeManager}.\n * Setting the theme will update the \"tree\" object of\n * this {@link gmf.layertree.TreeManager}.\n *\n * Example:\n *\n *      <a href class=\"btn btn-default btn-block btn-primary\" data-toggle=\"dropdown\">\n *          <span class=\"fa fa-grid\"></span>\n *          <span ng-if=\"mainCtrl.gmfThemeManager.modeFlush\">\n *            <span translate>Theme:</span>\n *            <b ng-if=\"!mainCtrl.gmfThemeManager.getThemeName()\" translate>Loading...</b>\n *            <b ng-if=\"mainCtrl.gmfThemeManager.getThemeName()\">{{mainCtrl.gmfThemeManager.getThemeName()|translate}}</b>\n *          </span>\n *          <span ng-if=\"!mainCtrl.gmfThemeManager.modeFlush\">\n *            <b ng-if=\"!mainCtrl.gmfThemeManager.themeName\" translate>Themes</b>\n *          </span>\n *          <span class=\"caret\"></span>\n *      </a>\n *      <gmf-themeselector\n *         id=\"themes\"\n *         data-header-title=\"Themes\"\n *         gmf-themeselector-filter=\"::mainCtrl.filter\">\n *      </gmf-themeselector>\n *\n * The theme selector can operate in a 'flush' (as above) or 'add' mode. For more information\n * about these modes, refer to the documentation of {@link gmf.layertree.TreeManager}.\n *\n * Example in 'add' mode:\n *\n *      <a href class=\"btn btn-default btn-block btn-primary\" data-toggle=\"dropdown\">\n *          <span class=\"fa fa-grid\"></span>\n *          <span translate>Themes</span>\n *          <span class=\"caret\"></span>\n *      </a>\n *      <gmf-themeselector\n *         id=\"themes\"\n *         data-header-title=\"Themes\"\n *         gmf-themeselector-filter=\"::mainCtrl.filter\">\n *      </gmf-themeselector>\n *      <script>\n *        (function() {\n *          let module = angular.module('app');\n *          module.value('gmfTreeManagerModeFlush', false);\n *        })();\n *      </script>\n *\n * @htmlAttribute {Function} gmf-themeselector-filter The themes filter.\n *\n * @type {!angular.Component}\n */\nexports.component_ = {\n  bindings: {\n    'filter': '<gmfThemeselectorFilter'\n  },\n  controller: 'gmfThemeselectorController',\n  templateUrl: gmfThemeSelectorTemplateUrl\n};\n\nexports.component('gmfThemeselector', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {gmf.theme.Manager} gmfThemeManager Tree manager service.\n * @param {gmf.theme.Themes} gmfThemes Themes service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfThemeselectorController\n */\nexports.Controller_ = function($scope, gmfThemeManager, gmfThemes) {\n\n  /**\n   * @type {gmf.theme.Manager}\n   * @export\n   */\n  this.gmfThemeManager = gmfThemeManager;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {Array.<Object>}\n   * @export\n   */\n  this.themes;\n\n  /**\n   * @type {Function|undefined}\n   * @export\n   */\n  this.filter;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  this.listenerKeys_.push(olEvents.listen(this.gmfThemes_, 'change', this.setThemes_, this));\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n\n};\n\n/**\n * Store the loaded themes locally applying a filter (if any), then set the\n * current theme.\n * @private\n */\nexports.Controller_.prototype.setThemes_ = function() {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    // Keep only the themes dedicated to the theme switcher\n    this.themes = this.filter ? themes.filter(this.filter) : themes;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfTheme} theme Theme.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.Controller_.prototype.setTheme = function(theme, opt_silent) {\n  if (theme) {\n    this.gmfThemeManager.addTheme(theme, opt_silent);\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  this.listenerKeys_.forEach(olEvents.unlistenByKey);\n  this.listenerKeys_.length = 0;\n};\n\n\nexports.controller('gmfThemeselectorController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.theme.module\n */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\nimport gmfThemeSelectorComponent from 'gmf/theme/selectorComponent.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfThemeModule', [\n  gmfThemeSelectorComponent.name,\n  gmfThemeManager.module.name,\n  gmfThemeThemes.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.displaywindowComponent\n */\nimport googAsserts from 'goog/asserts.js';\n\nimport 'font-awesome/css/font-awesome.css';\nimport 'jquery-ui/ui/widgets/resizable.js';\nimport 'jquery-ui/ui/widgets/draggable.js';\nimport 'angular-sanitize';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMessageDisplaywindowComponent', [\n  'ngSanitize',\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/message/displaywindowComponent', require('./displaywindowComponent.html'));\n});\n\n\nexports.value('ngeoMessageDisplaywindowTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoMessageDisplaywindowTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/message/displaywindowComponent';\n  });\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoMessageDisplaywindowTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoMessageDisplaywindowTemplateUrl($attrs, ngeoMessageDisplaywindowTemplateUrl) {\n  return ngeoMessageDisplaywindowTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!jQuery} $element Element.\n   * @param {!angular.$sce} $sce Angular sce service.\n   * @param {!angular.Scope} $scope Scope.\n   * @param {!angular.$compile} $compile The compile provider.\n   * @private\n   * @ngInject\n   * @ngdoc controller\n   * @ngname ngeoDisplaywindowComponentController\n   */\n  constructor($element, $sce, $scope, $compile) {\n\n    // === Binding Properties ===\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.clearOnClose;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.content = null;\n\n    /**\n     * @type {?string}\n     */\n    this.contentTemplate = null;\n\n    /**\n     * @type {?angular.Scope}\n     */\n    this.contentScope = null;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.draggable;\n\n    /**\n     * @type {Element|string}\n     * @export\n     */\n    this.draggableContainment;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.desktop;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.height = null;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.open;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.resizable;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.title = null;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.url = null;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.width = null;\n\n\n    // === Injected Properties ===\n\n    /**\n     * @type {!jQuery}\n     * @private\n     */\n    this.element_ = $element;\n\n    /**\n     * @type {!angular.$sce}\n     * @private\n     */\n    this.sce_ = $sce;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {angular.$compile}\n     * @private\n     */\n    this.compile_ = $compile;\n  }\n\n  /**\n   * Called on initialization of the component.\n   */\n  $onInit() {\n\n    // Initialize binding properties\n    this.clearOnClose = this.clearOnClose !== false;\n    this.content = this.content || null;\n    this.contentTemplate = this.contentTemplate || null;\n    this.contentScope = this.contentScope || null;\n    this.desktop = this.desktop !== false;\n    this.draggableContainment = this.draggableContainment || 'document';\n    this.open = this.open === true;\n\n    this.draggable = this.draggable !== undefined ?\n      this.draggable : this.desktop;\n    this.resizable = this.resizable !== undefined ?\n      this.resizable : this.desktop;\n\n    // Draggable\n    if (this.draggable) {\n      this.element_.find('.ngeo-displaywindow .windowcontainer').draggable({\n        'containment': this.draggableContainment,\n        'handle': 'div.header'\n      });\n    }\n\n    // Resizable\n    if (this.resizable) {\n      this.element_.find('.ngeo-displaywindow .windowcontainer').resizable({\n        'minHeight': 240,\n        'minWidth': 240\n      });\n    }\n\n    if (this.contentTemplate) {\n      const scope = googAsserts.assert(this.contentScope || this.scope_);\n      const compiled = this.compile_(this.contentTemplate)(scope);\n      const displayWindow = this.element_.find('.ngeo-displaywindow .windowcontainer .animation-container');\n      displayWindow.append(/** @type {?} */ (compiled));\n    }\n  }\n\n  /**\n   * @export\n   */\n  close() {\n    this.open = false;\n    if (this.clearOnClose) {\n      this.clear_();\n    }\n  }\n\n  /**\n   * @return {!Object.<string, string>} CSS style when using width/height\n   * @export\n   */\n  get style() {\n    return {\n      'height': this.height || '240px',\n      'width': this.width || '240px'\n    };\n  }\n\n  /**\n   * @return {string|undefined} Trusted url.\n   * @export\n   */\n  get urlTrusted() {\n    if (this.url) {\n      return /** @type {string} */ (this.sce_.trustAsResourceUrl(this.url));\n    }\n  }\n\n  /**\n   * @export\n   */\n  clear_() {\n    this.content = null;\n    this.height = null;\n    this.title = null;\n    this.url = null;\n    this.width = null;\n  }\n};\n\n\n/**\n * The `ngeo-displaywindow` component is an alternative to the `ngeo.message.Popup`.\n * What they have in common:\n *\n * - support title\n * - support url to be shown in an iframe\n * - support plain HTML content\n * - support sizing, i.e. height and width.\n * - support being opened/closed\n *\n * The differences with the `ngeo.message.Popup` are:\n *\n * - it supports being dragged\n * - it supports being resized\n * - support angularjs template content\n *\n * Example:\n *      <ngeo-displaywindow\n *        class=\"window1\"\n *        url=\"::ctrl.window1Content\"\n *        desktop=\"::false\"\n *        open=\"::true\"\n *        title=\"'Window 1 - The simplest window (close kills it)'\">\n *      </ngeo-displaywindow>\n *\n * @htmlAttribute {boolean=} ngeo-displaywindow-clear-on-close Whether to clear the content on close or not.\n * @htmlAttribute {string=} ngeo-displaywindow-content The html content. If not provided, you must provide\n *     an url.\n * @htmlAttribute {string=} ngeo-displaywindow-content-template AngularJS template. It gets compiled during runtime\n * with the supplied scope (ngeo-displaywindow-content-scope).\n * @htmlAttribute {angular.Scope=} ngeo-displaywindow-content-scope Scope used for ngeo-displaywindow-content-template.\n * @htmlAttribute {boolean=} ngeo-displaywindow-desktop If true, the window is draggable and resizable. If\n *     not set, you must set manually both parameter.\n * @htmlAttribute {boolean=} ngeo-displaywindow-draggable Whether the window is draggable or not.\n * @htmlAttribute {string=} ngeo-displaywindow-draggable-containment The zone (CSS selector) where the window\n *     is authorized to be dragged.\n * @htmlAttribute {string=} ngeo-displaywindow-height The default height of the window.\n * @htmlAttribute {boolean=} ngeo-displaywindow-open Whether the window is open or not.\n * @htmlAttribute {string=} ngeo-displaywindow-title The html title of the window.\n * @htmlAttribute {string=} ngeo-displaywindow-url The URL to open in an iframe, in the window. The content\n *     attribute must not be provided.\n * @htmlAttribute {string=} ngeo-displaywindow-width The default width of the window.\n * @ngdoc component\n * @ngname ngeoDisplaywindow\n */\nexports.component('ngeoDisplaywindow', {\n  bindings: {\n    'clearOnClose': '<?',\n    'content': '=?',\n    'contentTemplate': '<?',\n    'contentScope': '<?',\n    'desktop': '<?',\n    'draggable': '<?',\n    'draggableContainment': '<?',\n    'height': '=?',\n    'open': '=?',\n    'resizable': '<?',\n    'title': '=?',\n    'url': '=?',\n    'width': '=?'\n  },\n  controller: exports.Controller_,\n  templateUrl: ngeoMessageDisplaywindowTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.controlComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport olMap from 'ol/Map.js';\nimport olControlControl from 'ol/control/Control.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoControl', []);\n\n\n/**\n * Provides a directive that can be used to add a control to the map\n * using a DOM element.\n *\n * Example:\n *\n *     <div ngeo-control=\"ctrl.control\" ngeo-control-map=\"ctrl.map\"></div>\n *\n * The expression passed to \"ngeo-control\" should evaluate to a control\n * instance, and the expression passed to \"ngeo-control-map\" should\n * evaluate to a map instance.\n *\n * See our live example: [../examples/control.html](../examples/control.html)\n *\n * @htmlAttribute {ol.Map} ngeo-control-map The map.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoControl\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n\n      const control = /** @type {ol.control.Control} */\n              (scope.$eval(attrs['ngeoControl']));\n      googAsserts.assertInstanceof(control, olControlControl);\n\n      const map = /** @type {ol.Map} */\n              (scope.$eval(attrs['ngeoControlMap']));\n      googAsserts.assertInstanceof(map, olMap);\n\n      control.setTarget(element[0]);\n      map.addControl(control);\n    }\n  };\n};\n\n\nexports.directive('ngeoControl', exports.component_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.filereaderComponent\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFilereader', []);\n\n/**\n * This directive is to used on an input file element. When a file is selected\n * the directive uses the browser `FileReader` API to read the file. The file\n * content is provided to the directive user through the assignable expression.\n * Only works for text files (`readAsText` used for reading the file). And does\n * not work in Internet Explorer 9.\n *\n * Example:\n *\n *      <input type=\"file\" ngeo-filereader=\"ctrl.fileContent\"\n *        ngeo-filereader-supported=\"ctrl.supported\"/>\n *\n * See our live example: [../examples/importfeatures.html](../examples/importfeatures.html)\n *\n * @htmlAttribute {string} ngeo-filereader The content of the file read.\n * @htmlAttribute {boolean=} ngeo-filereader-supported Whether the FileReader API is supported.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoFilereader\n */\nexports.component_ = function($window) {\n  return {\n    restrict: 'A',\n    scope: {\n      'fileContent': '=ngeoFilereader',\n      'supported': '=?ngeoFilereaderSupported'\n    },\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      const supported = 'FileReader' in $window;\n      scope['supported'] = supported;\n      if (!supported) {\n        return;\n      }\n      element.on('change', (changeEvent) => {\n        /** @type {!FileReader} */\n        const fileReader = new $window.FileReader();\n        fileReader.onload = (\n          /**\n                 * @param {!ProgressEvent} evt Event.\n                 */\n          function(evt) {\n            scope.$apply(() => {\n              scope['fileContent'] = evt.target.result;\n            });\n          });\n        fileReader.readAsText(changeEvent.target.files[0]);\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoFilereader',\n  exports.component_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.getBrowserLanguage\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoGetBrowserLanguage', []);\n\n\n/**\n * Provides a function that returns the most appropriate 2-letter\n * language code depending on the list of available languages and the browser\n * languages settings.\n *\n * @param {angular.$window} $window Angular $window service.\n * @return {ngeox.miscGetBrowserLanguage} The \"GetBrowserLanguage\" function.\n *\n * @ngdoc service\n * @ngname ngeoGetBrowserLanguage\n * @ngInject\n */\nexports.factory_ = function($window) {\n  return (\n    /**\n     * @param {Array.<string>} availableLanguages Available languages.\n     * @return {string} The \"best\" language code.\n     */\n    function(availableLanguages) {\n      const nav = $window.navigator;\n      let browserLanguages = nav.languages || nav.language ||\n            nav.browserLanguage || nav.systemLanguage || nav.userLanguage;\n      if (!Array.isArray(browserLanguages)) {\n        browserLanguages = [browserLanguages];\n      }\n      browserLanguages = browserLanguages.map(item => item.substring(0, 2));\n      // remove duplicated language codes\n      browserLanguages = browserLanguages.filter((item, index, arr) => arr.indexOf(item) == index);\n      const supportedLanguages = browserLanguages.filter(item => availableLanguages.indexOf(item) != -1);\n      return supportedLanguages[0];\n    });\n};\n\nexports.factory('ngeoGetBrowserLanguage', exports.factory_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.extraModule\n */\nimport ngeoMiscAutoProjection from 'ngeo/misc/AutoProjection.js';\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\nimport ngeoMiscControlComponent from 'ngeo/misc/controlComponent.js';\nimport ngeoMiscDatepickerComponent from 'ngeo/misc/datepickerComponent.js';\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscFile from 'ngeo/misc/File.js';\nimport ngeoMiscFilereaderComponent from 'ngeo/misc/filereaderComponent.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoMiscGetBrowserLanguage from 'ngeo/misc/getBrowserLanguage.js';\nimport ngeoMiscSortableComponent from 'ngeo/misc/sortableComponent.js';\nimport ngeoMiscTime from 'ngeo/misc/Time.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMiscExtraModule', [\n  ngeoMiscAutoProjection.module.name,\n  ngeoMiscBtnComponent.name,\n  ngeoMiscControlComponent.name,\n  ngeoMiscDatepickerComponent.name,\n  ngeoMiscDebounce.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscFile.module.name,\n  ngeoMiscFilereaderComponent.name,\n  ngeoMiscFilters.name,\n  ngeoMiscGetBrowserLanguage.name,\n  ngeoMiscSortableComponent.name,\n  ngeoMiscTime.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.query.mapQueryComponent\n */\n/** @suppress {extraRequire} */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport * as olEvents from 'ol/events.js';\n\nconst exports = angular.module('ngeoMapQuery', [\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\n/**\n * Provides a \"map query\" directive.\n *\n * This directive is responsible of binding a map and the ngeo query service\n * together. While active, clicks made on the map are listened by the directive\n * and a request gets issued to the query service.\n *\n * This directive doesn't require to be rendered in a visible DOM element, but\n * it could be used with a ngeo-btn to manage the activation of the directive.\n * See below an example without any use of UI:\n *\n * Example:\n *\n *      <span\n *        ngeo-map-query=\"\"\n *        ngeo-map-query-map=\"::ctrl.map\"\n *        ngeo-map-query-active=\"ctrl.queryActive\"\n *        ngeo-map-query-autoclear=\"ctrl.queryAutoClear\">\n *      </span>\n *\n * See our live example: [../examples/mapquery.html](../examples/mapquery.html)\n *\n * @param {ngeo.query.MapQuerent} ngeoMapQuerent The ngeo map querent service.\n * @param {angular.$injector} $injector Main injector.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoMapQuery\n */\nexports.directive_ = function(ngeoMapQuerent, $injector) {\n  return {\n    restrict: 'A',\n    scope: false,\n    link: (scope, elem, attrs) => {\n      const map = scope.$eval(attrs['ngeoMapQueryMap']);\n      let clickEventKey_ = null;\n      let pointerMoveEventKey_ = null;\n\n      /**\n       * Called when the map is clicked while this controller is active. Issue\n       * a request to the query service using the coordinate that was clicked.\n       * @param {ol.MapBrowserEvent} evt The map browser event being fired.\n       */\n      const handleMapClick_ = function(evt) {\n        const coordinate = evt.coordinate;\n        ngeoMapQuerent.issue({\n          coordinate,\n          map\n        });\n      };\n\n      /**\n       * Called when the pointer is moved while this controller is active.\n       * Change the mouse pointer when hovering a non-transparent pixel on the\n       * map.\n       * @param {ol.MapBrowserEvent} evt The map browser event being fired.\n       */\n      const handlePointerMove_ = function(evt) {\n        if (!evt.dragging) {\n          const pixel = map.getEventPixel(evt.originalEvent);\n          const queryable = function(layer) {\n            const visible = layer.get('visible');\n            const sourceids = layer.get('querySourceIds');\n            return visible && !!sourceids;\n          };\n          const hit = map.forEachLayerAtPixel(pixel, () => true, undefined, queryable);\n          map.getTargetElement().style.cursor = hit ? 'pointer' : '';\n        }\n      };\n\n      /**\n       * Listen to the map events.\n       */\n      const activate_ = function() {\n        clickEventKey_ = olEvents.listen(map, 'singleclick', handleMapClick_);\n        const queryOptions = /** @type {ngeox.QueryOptions} */ (\n          $injector.has('ngeoQueryOptions') ? $injector.get('ngeoQueryOptions') : {}\n        );\n        if (queryOptions.cursorHover) {\n          pointerMoveEventKey_ = olEvents.listen(map, 'pointermove', handlePointerMove_);\n        }\n      };\n\n      /**\n       * Unlisten the map events.\n       */\n      const deactivate_ = function() {\n        if (clickEventKey_ !== null) {\n          olEvents.unlistenByKey(clickEventKey_);\n          clickEventKey_ = null;\n        }\n        if (pointerMoveEventKey_ !== null) {\n          olEvents.unlistenByKey(pointerMoveEventKey_);\n          pointerMoveEventKey_ = null;\n        }\n        if (scope.$eval(attrs['ngeoMapQueryAutoclear']) !== false) {\n          ngeoMapQuerent.clear();\n        }\n      };\n\n      // watch 'active' property -> activate/deactivate accordingly\n      scope.$watch(attrs['ngeoMapQueryActive'],\n        (newVal, oldVal) => {\n          if (newVal) {\n            activate_();\n          } else {\n            deactivate_();\n          }\n        }\n      );\n    }\n  };\n};\n\nexports.directive('ngeoMapQuery', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.WfsPermalink\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olExtent from 'ol/extent.js';\nimport * as olFormatFilter from 'ol/format/filter.js';\nimport olFormatWFS from 'ol/format/WFS.js';\n\n/**\n * WFS permalink service that can be used to load features with a WFS\n * GetFeature request given query parameters.\n *\n * Resulting features are then highlighted and\n * the map is zoomed to the nearest map extent.\n *\n * Parameters:\n *\n * - ``wfs_layer`` tells what layer will be queried\n * - ``wfs_showFeatures`` (boolean) tells if the features should be\n *   highlighted and listed (when true) or if the map should only be\n *   recentered on the features (when false). Default is true.\n * - other parameters will be considered as WFS attribute/values filters and\n *   must be of the form:\n *   ``wfs_<layer attribute name>=<a comma-separated list of values>``\n *\n * Example:\n * http://example.com?wfs_layer=parcels&wfs_city=Oslo&wfs_number=12,34,56\n * will load parcels #12, 34 and 56 of the city of Oslo.\n *\n * It is possible to define several groups of filtering parameters by:\n *\n * - adding a ``wfs_ngroups`` parameter telling how many groups are defined\n * - prefixing all filtering parameters by the number of each group,\n *   starting at 0. For instance ``wfs_0_<layer attribute name>``\n *\n * Example:\n * http://example.com?wfs_layer=parcels&wfs_ngroups=2\n * &wfs_0_city=Oslo&wfs_0_number=12,34,56&wfs_1_city=Paris&wfs_1_number=78,90\n * will load parcels #12, 34 and 56 of the city of Oslo as well as\n * parcels #78 and 90 of the city of Paris.\n *\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular $http service.\n * @param {ngeox.QueryResult} ngeoQueryResult The ngeo query result service.\n * @param {ngeox.WfsPermalinkOptions} ngeoWfsPermalinkOptions The options to\n *     configure the ngeo wfs permalink service with.\n * @ngdoc service\n * @ngname ngeoWfsPermalink\n * @ngInject\n */\nconst WfsPermalinkService = function($http, ngeoQueryResult, ngeoWfsPermalinkOptions) {\n\n  const options = ngeoWfsPermalinkOptions;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = options.url;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxFeatures_ = options.maxFeatures !== undefined ? options.maxFeatures : 50;\n\n  /**\n   * @type {Object<string, ngeox.WfsType>}\n   * @private\n   */\n  this.wfsTypes_ = {};\n\n  googAsserts.assertArray(options.wfsTypes, 'wfsTypes is not correctly set');\n  options.wfsTypes.forEach((wfsType) => {\n    this.wfsTypes_[wfsType.featureType] = wfsType;\n  });\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.defaultFeatureNS_ = options.defaultFeatureNS;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.defaultFeaturePrefix_ = options.defaultFeaturePrefix;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.pointRecenterZoom_ = options.pointRecenterZoom;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {ngeox.QueryResult}\n   * @private\n   */\n  this.result_ = ngeoQueryResult;\n};\n\n\n/**\n * Clear the results.\n * @export\n */\nWfsPermalinkService.prototype.clear = function() {\n  this.clearResult_();\n};\n\n\n/**\n * Build a WFS GetFeature request for the given query parameter data, send the\n * request and add the received features to {@link ngeox.QueryResult}.\n *\n * @param {ngeox.WfsPermalinkData} queryData Query data for the WFS request.\n * @param {ol.Map} map The ol3 map object to get the current projection from.\n * @export\n */\nWfsPermalinkService.prototype.issue = function(queryData, map) {\n  googAsserts.assert(this.url_,\n    'url is not set. to use the wfs permalink service, ' +\n      'set the value `ngeoWfsPermalinkOptions`');\n  this.clearResult_();\n\n  const typeName = queryData.wfsType;\n  if (!this.wfsTypes_.hasOwnProperty(typeName)) {\n    return;\n  }\n  const wfsType = this.wfsTypes_[typeName];\n\n  const filters = this.createFilters_(queryData.filterGroups);\n  if (filters === null) {\n    return;\n  }\n\n  this.issueRequest_(wfsType, filters, map, queryData.showFeatures);\n};\n\n\n/**\n * @param {ngeox.WfsType} wfsType Type.\n * @param {ol.format.filter.Filter} filter Filter.\n * @param {ol.Map} map The ol3 map object to get the current projection from.\n * @param {boolean} showFeatures Show features or only zoom to feature extent?\n * @private\n */\nWfsPermalinkService.prototype.issueRequest_ = function(wfsType, filter, map, showFeatures) {\n  const wfsFormat = new olFormatWFS();\n  const featureRequestXml = wfsFormat.writeGetFeature({\n    srsName: map.getView().getProjection().getCode(),\n    featureNS: (wfsType.featureNS !== undefined) ?\n      wfsType.featureNS : this.defaultFeatureNS_,\n    featurePrefix: (wfsType.featurePrefix !== undefined) ?\n      wfsType.featurePrefix : this.defaultFeaturePrefix_,\n    featureTypes: [wfsType.featureType],\n    outputFormat: 'GML3',\n    filter: filter,\n    maxFeatures: this.maxFeatures_\n  });\n\n  const featureRequest = new XMLSerializer().serializeToString(featureRequestXml);\n  const config = {\n    headers: {'Content-Type': 'text/xml; charset=UTF-8'}\n  };\n  this.$http_.post(this.url_, featureRequest, config).then((response) => {\n    const features = wfsFormat.readFeatures(response.data);\n    if (features.length == 0) {\n      return;\n    }\n\n    // zoom to features\n    const size = map.getSize();\n    if (size !== undefined) {\n      const maxZoom = this.pointRecenterZoom_;\n      const padding = [10, 10, 10, 10];\n      map.getView().fit(this.getExtent_(features), {size, maxZoom, padding});\n    }\n\n    // then show if requested\n    if (showFeatures) {\n      const resultSource = /** @type {ngeox.QueryResultSource} */ ({\n        'features': features,\n        'id': wfsType.featureType,\n        'identifierAttributeField': wfsType.label,\n        'label': wfsType.featureType,\n        'pending': false\n      });\n\n      this.result_.sources.push(resultSource);\n      this.result_.total = features.length;\n    }\n  });\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @return {ol.Extent} The extent of all features.\n * @private\n */\nWfsPermalinkService.prototype.getExtent_ = function(features) {\n  return features.reduce((extent, feature) => olExtent.extend(extent, feature.getGeometry().getExtent()), olExtent.createEmpty());\n};\n\n/**\n * Create OGC filters for the filter groups extracted from the query params.\n *\n * @param {Array.<ngeox.WfsPermalinkFilterGroup>} filterGroups Filter groups.\n * @return {ol.format.filter.Filter} OGC filters.\n * @private\n */\nWfsPermalinkService.prototype.createFilters_ = function(filterGroups) {\n  if (filterGroups.length == 0) {\n    return null;\n  }\n  const f = olFormatFilter;\n  const createFiltersForGroup = function(filterGroup) {\n    const filters = filterGroup.filters.map((filterDef) => {\n      const condition = filterDef.condition;\n      if (Array.isArray(condition)) {\n        return WfsPermalinkService.or_(condition.map(cond => f.equalTo(filterDef.property, cond)));\n      } else {\n        return f.equalTo(filterDef.property, filterDef.condition);\n      }\n    });\n    return WfsPermalinkService.and_(filters);\n  };\n  return WfsPermalinkService.or_(filterGroups.map(createFiltersForGroup));\n};\n\n\n/**\n * Join a list of filters with `and(...)`.\n *\n * @param {Array.<ol.format.filter.Filter>} filters The filters to join.\n * @return {ol.format.filter.Filter} The joined filters.\n * @private\n */\nWfsPermalinkService.and_ = function(filters) {\n  return WfsPermalinkService.joinFilters_(filters, olFormatFilter.and);\n};\n\n\n/**\n * Join a list of filters with `or(...)`.\n *\n * @param {Array.<ol.format.filter.Filter>} filters The filters to join.\n * @return {ol.format.filter.Filter} The joined filters.\n * @private\n */\nWfsPermalinkService.or_ = function(filters) {\n  return WfsPermalinkService.joinFilters_(filters, olFormatFilter.or);\n};\n\n\n/**\n * Join a list of filters with a given join function.\n *\n * @param {Array.<ol.format.filter.Filter>} filters The filters to join.\n * @param {function(!ol.format.filter.Filter, !ol.format.filter.Filter):\n *    ol.format.filter.Filter} joinFn The function to join two filters.\n * @return {ol.format.filter.Filter} The joined filters.\n * @private\n */\nWfsPermalinkService.joinFilters_ = function(filters, joinFn) {\n  return filters.reduce((combinedFilters, currentFilter) => {\n    if (combinedFilters === null) {\n      return currentFilter;\n    } else {\n      googAsserts.assert(currentFilter !== null);\n      return joinFn(combinedFilters, currentFilter);\n    }\n  }, null);\n};\n\n\n/**\n * Clear every features for all result sources and reset the total counter\n * as well.\n * @private\n */\nWfsPermalinkService.prototype.clearResult_ = function() {\n  this.result_.total = 0;\n  this.result_.sources.forEach((source) => {\n    source.features.length = 0;\n  });\n};\n\n\n/**\n * @type {!angular.Module}\n */\nWfsPermalinkService.module = angular.module('ngeoWfsPermalink', [\n  // FIXME add dependencies\n]);\n\n\n/**\n * Value that is supposed to be set in applications to enable the WFS\n * permalink functionality.\n */\nWfsPermalinkService.module.value('ngeoWfsPermalinkOptions',\n  /** @type {ngeox.WfsPermalinkOptions} */ ({\n    url: '',\n    wfsTypes: [],\n    defaultFeatureNS: '',\n    defaultFeaturePrefix: ''\n  })\n);\n\n\nWfsPermalinkService.module.service('ngeoWfsPermalink', WfsPermalinkService);\n\n\nexport default WfsPermalinkService;\n","/**\n * @module gmf.controllers.AbstractAppController\n */\nimport 'jquery';\nimport 'angular';\nimport 'angular-gettext';\nimport 'angular-dynamic-locale';\nimport gmfAuthenticationModule from 'gmf/authentication/module.js';\n\nimport gmfBackgroundlayerselectorComponent from 'gmf/backgroundlayerselector/component.js';\nimport gmfDatasourceModule from 'gmf/datasource/module.js';\nimport gmfDisclaimerComponent from 'gmf/disclaimer/component.js';\nimport gmfFiltersModule from 'gmf/filters/module.js';\nimport gmfLayertreeModule from 'gmf/layertree/module.js';\nimport gmfMapModule from 'gmf/map/module.js';\nimport gmfQueryExtraModule from 'gmf/query/extraModule.js';\nimport gmfSearchModule from 'gmf/search/module.js';\nimport gmfThemeModule from 'gmf/theme/module.js';\nimport ngeoMessageDisplaywindowComponent from 'ngeo/message/displaywindowComponent.js';\nimport ngeoMiscExtraModule from 'ngeo/misc/extraModule.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\nimport ngeoQueryMapQueryComponent from 'ngeo/query/mapQueryComponent.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoStatemanagerWfsPermalink from 'ngeo/statemanager/WfsPermalink.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport gmfThemeManager from 'gmf/theme/Manager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\n\n/**\n * Application abstract controller.\n *\n * This file includes `goog.require` for base components/directives used\n * by the HTML page and the controller to provide the configuration.\n *\n * @param {gmfx.Config} config A part of the application config.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.$injector} $injector Main injector.\n * @constructor\n * @ngdoc controller\n * @ngInject\n * @export\n */\nconst exports = function(config, $scope, $injector) {\n\n  /**\n   * Location service\n   * @type {ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = $injector.get('ngeoLocation');\n  if (this.ngeoLocation.hasParam('debug')) {\n    // make the injector globally available\n    window.injector = $injector;\n  }\n\n  googAsserts.assertInstanceof(this.map, olMap);\n\n  /**\n   * Ngeo FeatureHelper service\n   * @type {ngeo.misc.FeatureHelper}\n   */\n  const ngeoFeatureHelper = $injector.get('ngeoFeatureHelper');\n  ngeoFeatureHelper.setProjection(googAsserts.assert(this.map.getView().getProjection()));\n\n  /**\n   * @type {gmf.theme.Manager}\n   * @export\n   */\n  this.gmfThemeManager = $injector.get('gmfThemeManager');\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.get('gmfTreeManager');\n\n  /**\n   * Themes service\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.get('gmfThemes');\n\n  /**\n   * Permalink service\n   * @type {gmf.permalink.Permalink}\n   * @private\n   */\n  this.permalink_ = $injector.get('gmfPermalink');\n\n  /**\n   * Authentication service\n   * @type {gmf.authentication.Service}\n   */\n  const gmfAuthentication = $injector.get('gmfAuthenticationService');\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.hasEditableLayers = false;\n\n  /**\n   * @private\n   */\n  this.updateHasEditableLayers_ = function() {\n    this.gmfThemes_.hasEditableLayers().then((hasEditableLayers) => {\n      this.hasEditableLayers = hasEditableLayers;\n    });\n  };\n\n  /**\n   * @param {gmfx.AuthenticationEvent} evt Event.\n   */\n  const userChange = (evt) => {\n    const user = evt.detail.user;\n    const roleId = (user.username !== null) ? user.role_id : undefined;\n\n    // Open filter panel if 'open_panel' is set in functionalities and\n    // has 'layer_filter' as first value\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      const functionalities = this.gmfUser.functionalities;\n      if (functionalities &&\n          functionalities.open_panel &&\n          functionalities.open_panel[0] === 'layer_filter') {\n        this.filterSelectorActive = true;\n      }\n    });\n\n    // Reload theme and background layer when login status changes.\n    const previousThemeName = this.gmfThemeManager.getThemeName();\n    this.gmfThemeManager.setThemeName('', true);\n    if (evt.type !== 'ready') {\n      this.updateCurrentTheme_(previousThemeName);\n    }\n    // Reload themes when login status changes.\n    this.gmfThemes_.loadThemes(roleId);\n    this.updateHasEditableLayers_();\n  };\n\n  olEvents.listen(gmfAuthentication, 'ready', userChange);\n  olEvents.listen(gmfAuthentication, 'login', userChange);\n  olEvents.listen(gmfAuthentication, 'logout', userChange);\n\n  /**\n   * @type {Array.<gmfx.SearchComponentDatasource>}\n   * @export\n   */\n  this.searchDatasources = [{\n    labelKey: 'label',\n    groupValues: /** @type {Array.<string>} **/ ($injector.get('gmfSearchGroups')),\n    groupActions: /** @type {Array.<string>} **/ ($injector.get('gmfSearchActions')),\n    projection: `EPSG:${config.srid || 21781}`,\n    url: /** @type {string} **/ ($injector.get('fulltextsearchUrl'))\n  }];\n\n  /**\n   * @type {!Object.<string, string>}\n   * @export\n   */\n  this.dimensions = {};\n\n  // watch any change on dimensions object to refresh the url\n  this.permalink_.setDimensions(this.dimensions);\n\n  // Injecting the gmfDataSourcesManager service creates the data sources\n  const gmfDataSourcesManager = $injector.get('gmfDataSourcesManager');\n  // Init the datasources with our map.\n  gmfDataSourcesManager.setDatasourceMap(this.map);\n  // Give the dimensions to the gmfDataSourcesManager\n  gmfDataSourcesManager.setDimensions(this.dimensions);\n\n  if ($injector.has('gmfDefaultDimensions')) {\n    // Set defaults\n    const defaultDimensions = $injector.get('gmfDefaultDimensions');\n    for (const dim in defaultDimensions) {\n      if (this.dimensions[dim] === undefined) {\n        this.dimensions[dim] = defaultDimensions[dim];\n      }\n    }\n  }\n\n  /**\n   * @type {ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.backgroundLayerMgr_ = $injector.get('ngeoBackgroundLayerMgr');\n\n  // watch any change on dimensions object to refresh the background layer\n  $scope.$watchCollection(() => this.dimensions, () => {\n    this.backgroundLayerMgr_.updateDimensions(this.map, this.dimensions);\n  });\n\n  this.backgroundLayerMgr_.on('change', () => {\n    this.backgroundLayerMgr_.updateDimensions(this.map, this.dimensions);\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.leftNavVisible = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.rightNavVisible = false;\n\n  const queryFill = new olStyleFill({color: [255, 170, 0, 0.6]});\n  const queryStroke = new olStyleStroke({color: [255, 170, 0, 1], width: 2});\n\n  /**\n   * FeatureStyle used by the gmf.query.windowComponent\n   * @type {ol.style.Style}\n   * @export\n   */\n  this.queryFeatureStyle = new olStyleStyle({\n    fill: queryFill,\n    image: new olStyleCircle({\n      fill: queryFill,\n      radius: 5,\n      stroke: queryStroke\n    }),\n    stroke: queryStroke\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.filterSelectorActive = false;\n\n  /**\n   * The active state of the ngeo query directive.\n   * @type {boolean}\n   * @export\n   */\n  this.queryActive = true;\n\n  /**\n   * Set the clearing of the ngeoQuery after the deactivation of the query\n   * @type {boolean}\n   * @export\n   */\n  this.queryAutoClear = true;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.printPanelActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.printActive = false;\n\n  /**\n   * @type {ngeo.query.MapQuerent}\n   * @private\n   */\n  this.ngeoMapQuerent_ = $injector.get('ngeoMapQuerent');\n\n  // Don't deactivate ngeoQuery on print activation\n  $scope.$watch(() => this.printPanelActive, (newVal) => {\n    // Clear queries if another panel is open but not if user go back to the\n    // map form the print.\n    if (!newVal && !this.queryActive) {\n      this.ngeoMapQuerent_.clear();\n    }\n    this.queryAutoClear = !newVal;\n    this.printActive = newVal;\n  });\n\n  /**\n   * The active state of the directive responsible of point measurements.\n   * @type {boolean}\n   * @export\n   */\n  this.measurePointActive = false;\n\n  /**\n   * The active state of the directive responsible of length measurements.\n   * @type {boolean}\n   * @export\n   */\n  this.measureLengthActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawFeatureActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawProfilePanelActive = false;\n\n  /**\n   * @type {gmfx.User}\n   * @export\n   */\n  this.gmfUser = $injector.get('gmfUser');\n\n  /**\n   * @type {ngeox.miscGetBrowserLanguage}\n   */\n  this.getBrowserLanguage = $injector.get('ngeoGetBrowserLanguage');\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   */\n  this.stateManager = $injector.get('ngeoStateManager');\n\n  /**\n   * @type {tmhDynamicLocale}\n   */\n  this.tmhDynamicLocale = $injector.get('tmhDynamicLocale');\n\n  /**\n   * @type {angular.Scope}\n   */\n  this.$scope = $scope;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.lang;\n\n  /**\n   * Default language\n   * @type {string}\n   */\n  this.defaultLang = $injector.get('defaultLang');\n\n  /**\n   * Languages URL\n   * @type {!Object.<string, string>}\n   */\n  this.langUrls = $injector.get('langUrls');\n\n  /**\n   * The gettext catalog\n   * @type {angularGettext.Catalog}\n   */\n  this.gettextCatalog = $injector.get('gettextCatalog');\n\n  this.initLanguage();\n\n  const mapTools = 'mapTools';\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.mapToolsGroup = mapTools;\n\n  /**\n   * The ngeo feature overlay manager service\n   * @type {ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.get('ngeoFeatureOverlayMgr');\n  ngeoFeatureOverlayMgr.init(this.map);\n\n  /**\n   * The ngeo ToolActivate manager service.\n   * @type {ngeo.misc.ToolActivateMgr}\n   */\n  const ngeoToolActivateMgr = $injector.get('ngeoToolActivateMgr');\n\n  const queryToolActivate = new ngeoMiscToolActivate(this, 'queryActive');\n  ngeoToolActivateMgr.registerTool(mapTools, queryToolActivate, true);\n\n  const measurePointActivate = new ngeoMiscToolActivate(this, 'measurePointActive');\n  ngeoToolActivateMgr.registerTool(mapTools, measurePointActivate, false);\n\n  const measureLengthActivate = new ngeoMiscToolActivate(this, 'measureLengthActive');\n  ngeoToolActivateMgr.registerTool(mapTools, measureLengthActivate, false);\n\n  const drawFeatureActivate = new ngeoMiscToolActivate(this, 'drawFeatureActive');\n  ngeoToolActivateMgr.registerTool(mapTools, drawFeatureActivate, false);\n\n  const drawProfilePanelActivate = new ngeoMiscToolActivate(this, 'drawProfilePanelActive');\n  ngeoToolActivateMgr.registerTool(mapTools, drawProfilePanelActivate, false);\n\n  const printPanelActivate = new ngeoMiscToolActivate(this, 'printPanelActive');\n  ngeoToolActivateMgr.registerTool(mapTools, printPanelActivate, false);\n\n  $scope.$root.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n    this.gmfThemes_.getThemeObject(name).then((theme) => {\n      this.setDefaultBackground_(theme);\n    });\n  });\n\n  /**\n   * @param {boolean} skipPermalink If True, don't use permalink\n   * background layer.\n   * @private\n   */\n  this.updateCurrentBackgroundLayer_ = function(skipPermalink) {\n    this.gmfThemes_.getBgLayers().then((layers) => {\n      let background;\n      if (!skipPermalink) {\n        // get the background from the permalink\n        background = this.permalink_.getBackgroundLayer(layers);\n      }\n      if (!background) {\n        // get the background from the user settings\n        const functionalities = this.gmfUser.functionalities;\n        if (functionalities) {\n          const defaultBasemapArray = functionalities.default_basemap;\n          if (defaultBasemapArray.length > 0) {\n            const defaultBasemapLabel = defaultBasemapArray[0];\n            background = olArray.find(layers, layer => layer.get('label') === defaultBasemapLabel);\n          }\n        }\n      }\n      if (!background && layers[1]) {\n        // fallback to the layers list, use the second one because the first\n        // is the blank layer\n        background = layers[1];\n      }\n\n      if (background) {\n        this.backgroundLayerMgr_.set(this.map, background);\n      }\n    });\n  }.bind(this);\n\n  this.updateCurrentBackgroundLayer_(false);\n\n  // Static \"not used\" functions should be in the window because otherwise\n  // closure remove them. \"export\" tag doesn't work on static function below,\n  // we \"export\" them as externs in the gmfx options file.\n  const gmfx = window.gmfx || {};\n  /**\n   * @export\n   */\n  window.gmfx = gmfx;\n\n  /**\n   * Static function to create a popup with an iframe.\n   * @param {string} url an url.\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width.\n   * @param {number=} opt_height CSS height.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   * @export\n   */\n  gmfx.openIframePopup = (\n    url, title, opt_width, opt_height, opt_apply\n  ) => {\n    this.displaywindowUrl = url;\n    gmfx.openPopup_(title, opt_width, opt_height, opt_apply);\n  };\n\n  /**\n   * Static function to create a popup with html content.\n   * @param {string} content (text or html).\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width in pixel.\n   * @param {number=} opt_height CSS height in pixel.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   * @export\n   */\n  gmfx.openTextPopup = (\n    content, title, opt_width, opt_height, opt_apply\n  ) => {\n    this.displaywindowContent = content;\n    gmfx.openPopup_(title, opt_width, opt_height, opt_apply);\n  };\n\n  /**\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width in pixel.\n   * @param {number=} opt_height CSS height in pixel.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   */\n  gmfx.openPopup_ = (title, opt_width, opt_height, opt_apply) => {\n\n    this.displaywindowTitle = title;\n    this.displaywindowOpen = true;\n\n    if (opt_width) {\n      this.displaywindowWidth = `${opt_width}px`;\n    }\n    if (opt_height) {\n      this.displaywindowHeight = `${opt_height}px`;\n    }\n    if (opt_apply !== false) {\n      this.$scope.$apply();\n    }\n  };\n\n  /**\n   * Whether to update the size of the map on browser window resize.\n   * @type {boolean}\n   * @export\n   */\n  this.manageResize = false;\n\n  /**\n   * The duration (milliseconds) of the animation that may occur on the div\n   * containing the map. Used to smoothly resize the map while the animation\n   * is in progress.\n   * @type {number|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n  const cgxp = window.cgxp || {};\n  /**\n   * @export\n   */\n  window.cgxp = cgxp;\n  /**\n   * @export\n   */\n  cgxp.tools = window.cgxp.tools || {};\n  /**\n   * Static function to create a popup with an iframe.\n   * @param {string} url an url.\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width in pixel.\n   * @param {number=} opt_height CSS height in pixel.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   * @export\n   */\n  cgxp.tools.openInfoWindow = function(url, title, opt_width, opt_height, opt_apply) {\n    gmfx.openIframePopup(url, title, opt_width, opt_height, opt_apply);\n  };\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowContent = null;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.displaywindowDraggableContainment = '.gmf-map';\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowHeight = null;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.displaywindowOpen = false;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowTitle = null;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowUrl = null;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowWidth = null;\n};\n\n\n/**\n * @return {boolean} Return true if a user exists and its 'is_password_changed' value is explicitly set\n *     to false.\n * @export\n */\nexports.prototype.userMustChangeItsPassword = function() {\n  return this.gmfUser.is_password_changed === false;\n};\n\n\n/**\n * @param {Array.<ol.layer.Base>} layers Layers list.\n * @param {Array.<string>} labels default_basemap list.\n * @return {ol.layer.Base} layer or null\n */\nexports.getLayerByLabels = function(layers, labels) {\n  if (labels && labels.length > 0) {\n    return olArray.find(layers, layer => layer.get('label') === labels[0]);\n  }\n  return null;\n};\n\n\n/**\n * @param {string} lang Language code.\n * @export\n */\nexports.prototype.switchLanguage = function(lang) {\n  googAsserts.assert(lang in this.langUrls);\n  this.gettextCatalog.setCurrentLanguage(lang);\n  this.gettextCatalog.loadRemote(this.langUrls[lang]);\n  this.tmhDynamicLocale.set(lang);\n  this.lang = lang;\n};\n\n\n/**\n */\nexports.prototype.initLanguage = function() {\n  this.$scope.$watch(() => this.lang, (newValue) => {\n    this.stateManager.updateState({\n      'lang': newValue\n    });\n  });\n\n  const browserLanguage = /** @type {string|undefined} */\n      (this.getBrowserLanguage(Object.keys(this.langUrls)));\n  const urlLanguage = /** @type {string|undefined} */\n      (this.stateManager.getInitialValue('lang'));\n\n  if (urlLanguage !== undefined && urlLanguage in this.langUrls) {\n    this.switchLanguage(urlLanguage);\n    return;\n  } else if (browserLanguage !== undefined && browserLanguage in this.langUrls) {\n    this.switchLanguage(browserLanguage);\n    return;\n  } else {\n    // if there is no information about language preference,\n    // fallback to default language\n\n    this.switchLanguage(this.defaultLang);\n    return;\n  }\n};\n\n\n/**\n * @param {gmfThemes.GmfTheme} theme Theme.\n * @private\n */\nexports.prototype.setDefaultBackground_ = function(theme) {\n  this.gmfThemes_.getBgLayers().then((layers) => {\n    let layer;\n\n    // get the background from the permalink\n    layer = this.permalink_.getBackgroundLayer(layers);\n\n    if (!layer && this.gmfUser.functionalities) {\n      // get the background from the user settings\n      layer = exports.getLayerByLabels(layers, this.gmfUser.functionalities.default_basemap);\n    }\n\n    if (!layer && theme) {\n      // get the background from the theme\n      layer = exports.getLayerByLabels(layers, theme.functionalities.default_basemap);\n    }\n\n    if (!layer) {\n      // fallback to the layers list, use the second one because the first is the blank layer.\n      layer = layers[layers.length > 1 ? 1 : 0];\n    }\n\n    googAsserts.assert(layer);\n    this.backgroundLayerMgr_.set(this.map, layer);\n  });\n};\n\n/**\n * @param {string} fallbackThemeName fallback theme name.\n * @private\n */\nexports.prototype.updateCurrentTheme_ = function(fallbackThemeName) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const themeName = this.permalink_.defaultThemeNameFromFunctionalities();\n    if (themeName) {\n      const theme = gmfThemeThemes.findThemeByName(themes, /** @type {string} */ (themeName));\n      if (theme) {\n        this.gmfThemeManager.addTheme(theme, true);\n      }\n    } else {\n      this.gmfThemeManager.setThemeName(fallbackThemeName);\n    }\n  });\n};\n\n/**\n * @protected\n * @return {Element} Span element with font-awesome inside of it\n */\nexports.prototype.getLocationIcon = function() {\n  const arrow = document.createElement('span');\n  arrow.className = 'fa fa-location-arrow';\n  arrow.style.transform = 'rotate(-0.82rad)';\n  const arrowWrapper = document.createElement('span');\n  arrowWrapper.appendChild(arrow);\n  return arrowWrapper;\n};\n\n\nexports.module = angular.module('GmfAbstractAppControllerModule', [\n  'gettext',\n  'tmh.dynamicLocale',\n  gmfAuthenticationModule.name,\n  gmfBackgroundlayerselectorComponent.name,\n  gmfDatasourceModule.name,\n  gmfDisclaimerComponent.name,\n  gmfFiltersModule.name,\n  gmfLayertreeModule.name,\n  gmfMapModule.name,\n  gmfQueryExtraModule.name,\n  gmfSearchModule.name,\n  gmfThemeModule.name,\n  ngeoMessageDisplaywindowComponent.name,\n  ngeoMiscExtraModule.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoQueryMapQuerent.module.name,\n  ngeoQueryMapQueryComponent.name,\n  ngeoStatemanagerModule.name,\n  ngeoStatemanagerWfsPermalink.module.name,\n]);\n\n\nexports.module.controller('AbstractController', exports);\n\n\nexports.module.value('ngeoExportFeatureFormats', [\n  ngeoMiscFeatureHelper.FormatType.KML,\n  ngeoMiscFeatureHelper.FormatType.GPX\n]);\n\nexports.module.config(['tmhDynamicLocaleProvider', 'angularLocaleScript',\n  /**\n   * @param {tmhDynamicLocaleProvider} tmhDynamicLocaleProvider angular-dynamic-locale provider.\n   * @param {string} angularLocaleScript the script.\n   */\n  function(tmhDynamicLocaleProvider, angularLocaleScript) {\n    // configure the script URL\n    tmhDynamicLocaleProvider.localeLocationPattern(angularLocaleScript);\n  }\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.ModifyCircle\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserPointerEvent from 'ol/MapBrowserPointerEvent.js';\nimport * as olCoordinate from 'ol/coordinate.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olExtent from 'ol/extent.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport {fromCircle} from 'ol/geom/Polygon.js';\nimport olInteractionPointer, {handleEvent as pointerHandleEvent} from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStructsRBush from 'ol/structs/RBush.js';\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: exports.handleDownEvent_,\n    handleDragEvent: exports.handleDragEvent_,\n    handleEvent: exports.handleEvent,\n    handleUpEvent: exports.handleUpEvent_\n  });\n\n  /**\n   * Editing vertex.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.vertexFeature_ = null;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.lastPixel_ = [0, 0];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * Segment RTree for each layer\n   * @type {ol.structs.RBush.<ol.ModifySegmentDataType>}\n   * @private\n   */\n  this.rBush_ = new olStructsRBush();\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.snappedToVertex_ = false;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.dragSegments_ = null;\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: options.style || ngeoInteractionCommon.getDefaultModifyStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  this.features_.forEach(feature => this.addFeature_(feature));\n  olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this);\n  olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this);\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  if (feature.getGeometry().getType() === 'Polygon' &&\n      !!feature.get(ngeoFormatFeatureProperties.IS_CIRCLE)) {\n    const geometry = /** @type {ol.geom.Polygon}*/ (feature.getGeometry());\n    this.writeCircleGeometry_(feature, geometry);\n\n    const map = this.getMap();\n    if (map) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifystart', {features: this.features_});\n    this.dispatchEvent(event);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  this.removeFeatureSegmentData_(feature);\n  // Remove the vertex feature if the collection of canditate features\n  // is empty.\n  if (this.vertexFeature_ && this.features_.getLength() === 0) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeatureSegmentData_ = function(feature) {\n  const rBush = this.rBush_;\n  const /** @type {Array.<ol.ModifySegmentDataType>} */ nodesToRemove = [];\n  rBush.forEach(\n    /**\n       * @param {ol.ModifySegmentDataType} node RTree node.\n       */\n    (node) => {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n  for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n    rBush.remove(nodesToRemove[i]);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nexports.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  let coordinates, i, ii, j, jj, segment, segmentData;\n  for (j = 0, jj = rings.length; j < jj; ++j) {\n    coordinates = rings[j];\n    for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segment = coordinates.slice(i, i + 2);\n      segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(olExtent.boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Coordinate} coordinates Coordinates.\n * @return {ol.Feature} Vertex feature.\n * @private\n */\nexports.prototype.createOrUpdateVertexFeature_ = function(coordinates) {\n  let vertexFeature = this.vertexFeature_;\n  if (!vertexFeature) {\n    vertexFeature = new olFeature(new olGeomPoint(coordinates));\n    this.vertexFeature_ = vertexFeature;\n    this.overlay_.getSource().addFeature(vertexFeature);\n  } else {\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    geometry.setCoordinates(coordinates);\n  }\n  return vertexFeature;\n};\n\n\n/**\n * @param {ol.ModifySegmentDataType} a The first segment data.\n * @param {ol.ModifySegmentDataType} b The second segment data.\n * @return {number} The difference in indexes.\n * @private\n */\nexports.compareIndexes_ = function(a, b) {\n  return a.index - b.index;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleDownEvent_ = function(evt) {\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n  this.dragSegments_ = [];\n  this.modified_ = false;\n  const vertexFeature = this.vertexFeature_;\n  if (vertexFeature) {\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    const vertex = geometry.getCoordinates();\n    const vertexExtent = olExtent.boundingExtent([vertex]);\n    const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n    const componentSegments = {};\n    segmentDataMatches.sort(exports.compareIndexes_);\n    for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n      const segmentDataMatch = segmentDataMatches[i];\n      const segment = segmentDataMatch.segment;\n      let uid = olBase.getUid(segmentDataMatch.feature);\n      const depth = segmentDataMatch.depth;\n      if (depth) {\n        uid += `-${depth.join('-')}`; // separate feature components\n      }\n      if (!componentSegments[uid]) {\n        componentSegments[uid] = new Array(2);\n      }\n      if (olCoordinate.equals(segment[0], vertex) &&\n          !componentSegments[uid][0]) {\n        this.dragSegments_.push([segmentDataMatch, 0]);\n        componentSegments[uid][0] = segmentDataMatch;\n      } else if (olCoordinate.equals(segment[1], vertex) &&\n          !componentSegments[uid][1]) {\n        this.dragSegments_.push([segmentDataMatch, 1]);\n        componentSegments[uid][1] = segmentDataMatch;\n      }\n    }\n  }\n  return !!this.vertexFeature_;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleDragEvent_ = function(evt) {\n  this.willModifyFeatures_(evt);\n  const vertex = evt.coordinate;\n  const geometry = /** @type {ol.geom.Polygon}*/ (this.dragSegments_[0][0].geometry);\n  const center = olExtent.getCenter(geometry.getExtent());\n\n  const line = new olGeomLineString([center, vertex]);\n\n\n  /**\n   * @type {ol.geom.Circle}\n   */\n  const circle = new olGeomCircle(center, line.getLength());\n  const coordinates = fromCircle(circle, 64).getCoordinates();\n  this.setGeometryCoordinates_(geometry, coordinates);\n\n\n  const azimut = ngeoInteractionMeasureAzimut.getAzimut(line);\n  this.features_.getArray()[0].set(ngeoFormatFeatureProperties.AZIMUT, azimut);\n\n  this.createOrUpdateVertexFeature_(vertex);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleUpEvent_ = function(evt) {\n  this.rBush_.clear();\n  this.writeCircleGeometry_(this.dragSegments_[0][0].feature,\n    this.dragSegments_[0][0].geometry);\n\n  if (this.modified_) {\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifyend', {features: this.features_});\n    this.dispatchEvent(event);\n    this.modified_ = false;\n  }\n  return false;\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may modify the\n * geometry.\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ngeo.interaction.ModifyCircle}\n * @api\n */\nexports.handleEvent = function(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof olMapBrowserPointerEvent)) {\n    return true;\n  }\n\n  let handled;\n  if (!mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == 'pointermove' && !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n\n  return pointerHandleEvent.call(this, mapBrowserEvent) &&\n      !handled;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.prototype.handlePointerMove_ = function(evt) {\n  this.lastPixel_ = evt.pixel;\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n};\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.PluggableMap} map Map.\n * @private\n */\nexports.prototype.handlePointerAtPixel_ = function(pixel, map) {\n  const pixelCoordinate = map.getCoordinateFromPixel(pixel);\n  const sortByDistance = function(a, b) {\n    return olCoordinate.squaredDistanceToSegment(pixelCoordinate, a.segment) -\n        olCoordinate.squaredDistanceToSegment(pixelCoordinate, b.segment);\n  };\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = olExtent.boundingExtent([lowerLeft, upperRight]);\n\n  const rBush = this.rBush_;\n  const nodes = rBush.getInExtent(box);\n  if (nodes.length > 0) {\n    nodes.sort(sortByDistance);\n    const node = nodes[0];\n    const closestSegment = node.segment;\n    let vertex = (olCoordinate.closestOnSegment(pixelCoordinate,\n      closestSegment));\n    const vertexPixel = map.getPixelFromCoordinate(vertex);\n    if (Math.sqrt(olCoordinate.squaredDistance(pixel, vertexPixel)) <=\n        this.pixelTolerance_) {\n      const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      const squaredDist1 = olCoordinate.squaredDistance(vertexPixel, pixel1);\n      const squaredDist2 = olCoordinate.squaredDistance(vertexPixel, pixel2);\n      const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      this.snappedToVertex_ = dist <= this.pixelTolerance_;\n      if (this.snappedToVertex_) {\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n        this.createOrUpdateVertexFeature_(vertex);\n        const vertexSegments = {};\n        vertexSegments[olBase.getUid(closestSegment)] = true;\n        let segment;\n        for (let i = 1, ii = nodes.length; i < ii; ++i) {\n          segment = nodes[i].segment;\n          if ((olCoordinate.equals(closestSegment[0], segment[0]) &&\n              olCoordinate.equals(closestSegment[1], segment[1]) ||\n              (olCoordinate.equals(closestSegment[0], segment[1]) &&\n              olCoordinate.equals(closestSegment[1], segment[0])))) {\n            vertexSegments[olBase.getUid(segment)] = true;\n          } else {\n            break;\n          }\n        }\n        return;\n      }\n    }\n  }\n  if (this.vertexFeature_) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {Array} coordinates Coordinates.\n * @private\n */\nexports.prototype.setGeometryCoordinates_ = function(geometry, coordinates) {\n  this.changingFeature_ = true;\n  geometry.setCoordinates(coordinates);\n  this.changingFeature_ = false;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.ModifyRectangle\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: this.handleDown_,\n    handleDragEvent: this.handleDrag_,\n    handleUpEvent: this.handleUp_\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorPoints_ = new olLayerVector({\n    source: new olSourceVector({\n      wrapX: !!options.wrapX\n    }),\n    visible: this.getActive(),\n    style: options.style || ngeoInteractionCommon.getDefaultModifyStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * The feature currently modified.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.feature_ = null;\n\n  /**\n   * @type {Object.<number, ngeo.interaction.ModifyRectangle.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {?ngeo.interaction.ModifyRectangle.ModifyParams}\n   * @private\n   */\n  this.params_ = null;\n\n  olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this);\n  olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this);\n\n  this.features_.forEach((feature) => {\n    this.addFeature_(feature);\n  });\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n  olInteractionPointer.prototype.setActive.call(this, active);\n  if (this.vectorPoints_) {\n    this.vectorPoints_.setVisible(active);\n  }\n};\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const featureGeom = feature.getGeometry();\n  if (featureGeom instanceof olGeomPolygon) {\n\n    // If the feature's corners are already set, no need to set them again\n    const uid = olBase.getUid(feature);\n    let item = this.cache_[uid];\n    if (item) {\n      return;\n    }\n\n    const pointSource = this.vectorPoints_.getSource();\n\n    // from each corners, create a point feature and add it to the point layer.\n    // each point is then associated with 2 siblings in order to update the\n    // siblings geometry at the same time when a point gets dragged around.\n    // mark each one as 'corner'\n    const corners = featureGeom.getCoordinates()[0];\n    while (corners.length > 4) {\n      if (corners[0][0] < corners[1][0] && corners[0][1] <= corners[1][1]) {\n        corners.pop();\n      } else {\n        corners.shift();\n      }\n    }\n    const pointFeatures = [];\n    let cornerPoint;\n    let cornerFeature;\n    corners.forEach((corner) => {\n      cornerPoint = new olGeomPoint(corner);\n      cornerFeature = new olFeature({\n        'corner': true,\n        'geometry': cornerPoint,\n        'siblingX': null,\n        'siblingY': null,\n        'boxFeature': feature\n      });\n\n      pointFeatures.push(cornerFeature);\n    }, this);\n    item = /** @type {ngeo.interaction.ModifyRectangle.CacheItem} */ ({\n      corners: pointFeatures\n    });\n    this.cache_[uid] = item;\n\n    let previousFeature;\n    let nextFeature;\n    pointFeatures.forEach((cornerFeature, index) => {\n      previousFeature = pointFeatures[index - 1];\n      if (!previousFeature) {\n        previousFeature = pointFeatures[pointFeatures.length - 1];\n      }\n\n      nextFeature = pointFeatures[index + 1];\n      if (!nextFeature) {\n        nextFeature = pointFeatures[0];\n      }\n\n      if (index % 2 === 0) {\n        cornerFeature.set('siblingX', nextFeature);\n        cornerFeature.set('siblingY', previousFeature);\n      } else {\n        cornerFeature.set('siblingX', previousFeature);\n        cornerFeature.set('siblingY', nextFeature);\n      }\n\n    }, this);\n    pointSource.addFeatures(pointFeatures);\n  }\n\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifystart', {features: this.features_});\n    this.dispatchEvent(event);\n    this.params_ = this.initializeParams_();\n  }\n};\n\n\n/**\n * @return {ngeo.interaction.ModifyRectangle.ModifyParams} The initialised params\n * @private\n */\nexports.prototype.initializeParams_ = function() {\n  const feature = this.feature_;\n\n  // 1. Find the origin (opposite) point for the modify operation\n  // siblingY relative to the origin is siblingX relative to the opposite\n  const siblingY = feature.get('siblingX');\n  googAsserts.assertInstanceof(siblingY, olFeature);\n\n  const origin = siblingY.get('siblingY');\n  googAsserts.assertInstanceof(origin, olFeature);\n  const originPoint = origin.getGeometry();\n  googAsserts.assertInstanceof(originPoint, olGeomPoint);\n  const originCoordinate = originPoint.getCoordinates();\n  const originPixel = this.getMap().getPixelFromCoordinate(originCoordinate);\n\n  // 2. Find the origin's X sibling and the normal vector from the origin to it\n  const siblingX = origin.get('siblingX');\n  googAsserts.assertInstanceof(siblingX, olFeature);\n  const siblingXPoint = siblingX.getGeometry();\n  googAsserts.assertInstanceof(siblingXPoint, olGeomPoint);\n  const siblingXCoordinate = siblingXPoint.getCoordinates();\n  const siblingXPixel = this.getMap().getPixelFromCoordinate(siblingXCoordinate);\n  let vectorX = [\n    siblingXPixel[0] - originPixel[0],\n    siblingXPixel[1] - originPixel[1]\n  ];\n  const vectorXMagnitude = Math.sqrt(vectorX[0] * vectorX[0] + vectorX[1] * vectorX[1]);\n  vectorX[0] /= vectorXMagnitude;\n  vectorX[1] /= vectorXMagnitude;\n\n  // 3. Find the origin's Y sibling and the normal vector from the origin to it\n  const siblingYPoint = siblingY.getGeometry();\n  googAsserts.assertInstanceof(siblingYPoint, olGeomPoint);\n  const siblingYCoordinate = siblingYPoint.getCoordinates();\n  const siblingYPixel = this.getMap().getPixelFromCoordinate(siblingYCoordinate);\n  let vectorY = [\n    siblingYPixel[0] - originPixel[0],\n    siblingYPixel[1] - originPixel[1]\n  ];\n  const vectorYMagnitude = Math.sqrt(vectorY[0] * vectorY[0] + vectorY[1] * vectorY[1]);\n  vectorY[0] /= vectorYMagnitude;\n  vectorY[1] /= vectorYMagnitude;\n\n  // 4. Validate the vectors.\n  if (isNaN(vectorX[0]) && isNaN(vectorY[0])) {\n    // Both vector are invalid. Rotation information has already been lost\n    vectorX = [0, 1];\n    vectorY = [1, 0];\n  } else if (isNaN(vectorX[0])) {\n    vectorX = [vectorY[1], -vectorY[0]];\n  } else if (isNaN(vectorY[0])) {\n    vectorY = [vectorX[1], -vectorX[0]];\n  }\n\n  return {\n    originCoordinate,\n    originPixel,\n    siblingXPoint,\n    siblingYPoint,\n    vectorX,\n    vectorY\n  };\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  const item = this.cache_[uid];\n  const corners = item.corners;\n  for (let i = 0; i < corners.length; i++) {\n    this.vectorPoints_.getSource().removeFeature(corners[i]);\n  }\n  this.feature_ = null;\n  corners.length = 0;\n  delete this.cache_[uid];\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.vectorPoints_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleDown_ = function(evt) {\n  const map = evt.map;\n\n  const feature = map.forEachFeatureAtPixel(evt.pixel, feature =>\n    (feature.get('siblingX') && feature.get('siblingY') ? feature : undefined)\n  );\n\n  if (feature) {\n    this.feature_ = feature;\n\n    return true;\n  }\n\n  return false;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleDrag_ = function(evt) {\n  this.willModifyFeatures_(evt);\n  const feature = this.feature_;\n\n  const geometry = /** @type {ol.geom.SimpleGeometry} */\n      (feature.getGeometry());\n\n  if (geometry instanceof olGeomPoint) {\n    geometry.setCoordinates(evt.coordinate);\n\n    const destinationPixel = evt.pixel;\n\n    const originPixel = this.params_.originPixel;\n    const siblingXPoint = this.params_.siblingXPoint;\n    const siblingYPoint = this.params_.siblingYPoint;\n    const vectorX = this.params_.vectorX;\n    const vectorY = this.params_.vectorY;\n    const originCoordinate = this.params_.originCoordinate;\n\n    // Calculate new positions of siblings\n    const b2Pixel = this.calculateNewPixel_(\n      originPixel, destinationPixel, vectorX);\n    const b2Coordinate = this.getMap().getCoordinateFromPixel(b2Pixel);\n    siblingXPoint.setCoordinates(b2Coordinate);\n\n    const c2Pixel = this.calculateNewPixel_(\n      originPixel, destinationPixel, vectorY);\n    const c2Coordinate = this.getMap().getCoordinateFromPixel(c2Pixel);\n    siblingYPoint.setCoordinates(c2Coordinate);\n\n\n    // Resize the box\n    const boxFeature = feature.get('boxFeature');\n    const geom = boxFeature.getGeometry();\n    googAsserts.assertInstanceof(geom, olGeomPolygon);\n    geom.setCoordinates([[evt.coordinate, b2Coordinate, originCoordinate, c2Coordinate, evt.coordinate]]);\n  }\n};\n\n\n/**\n * Calculate the new position of a point as projected on a vector from origin to\n * destination.\n * @param {ol.Pixel} origin Pixel of origin (opposite of the drag handle)\n * @param {ol.Pixel} destination Pixel of destination (the handle we dragged)\n * @param {ol.Pixel} vector The normalized vector to the point\n * @return {ol.Pixel} The new pixel of the point\n * @private\n */\nexports.prototype.calculateNewPixel_ = function(\n  origin, destination, vector) {\n\n  const aVector = [destination[0] - origin[0], destination[1] - origin[1]];\n\n  const abScalarProduct = aVector[0] * vector[0] + aVector[1] * vector[1];\n\n  const deltaVector = [\n    (vector[0] * abScalarProduct),\n    (vector[1] * abScalarProduct)\n  ];\n\n  return [deltaVector[0] + origin[0], deltaVector[1] + origin[1]];\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleUp_ = function(evt) {\n  if (this.modified_) {\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifyend', {features: this.features_});\n    this.dispatchEvent(event);\n    this.params_ = null;\n    this.modified_ = false;\n  }\n  return false;\n};\n\n\n/**\n * @typedef {{\n *     corners: Array.<ol.Feature>\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     originCoordinate: ol.Coordinate,\n *     originPixel: ol.Pixel,\n *     siblingXPoint: ol.geom.Point,\n *     siblingYPoint: ol.geom.Point,\n *     vectorX: Array.<number>,\n *     vectorY: Array.<number>\n * }}\n */\nexports.ModifyParams;\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Modify\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoInteractionModifyCircle from 'ngeo/interaction/ModifyCircle.js';\nimport ngeoInteractionModifyRectangle from 'ngeo/interaction/ModifyRectangle.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olCollection from 'ol/Collection.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olFeature from 'ol/Feature.js';\n\n/**\n * This interaction combines multiple kind of feature modification interactions\n * in order to be able to modify vector features depending on their geometry\n * type. The different kind of interactions supported are:\n *\n * - `ol.interaction.Modify`\n * - `ngeo.interaction.ModifyCircle`\n * - `ngeo.interaction.ModifyRectangle`\n *\n * This interaction receives a collection of features. Its job is to listen\n * to added/removed features to and from it and add them in the proper\n * collection that is uniquely used for each inner interaction. Those inner\n * interactions follow the `active` property of this interaction, i.e. when\n * this interaction is activated, so do the inner interactions. Since they will\n * never share the same feature, they don't collide with one an other.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Interaction}\n * @param {olx.interaction.ModifyOptions} options Options.\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {Array.<ol.interaction.Interaction>}\n   * @private\n   */\n  this.interactions_ = [];\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.otherFeatures_ = new olCollection();\n\n  this.interactions_.push(new olInteractionModify({\n    deleteCondition: ngeoUtils.deleteCondition,\n    features: this.otherFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.circleFeatures_ = new olCollection();\n\n  this.interactions_.push(new ngeoInteractionModifyCircle({\n    features: this.circleFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.rectangleFeatures_ = new olCollection();\n\n  this.interactions_.push(new ngeoInteractionModifyRectangle({\n    features: this.rectangleFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n\n  olInteractionInteraction.call(this, {\n    handleEvent: olFunctions.TRUE\n  });\n\n};\n\nolBase.inherits(exports, olInteractionInteraction);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n  olInteractionInteraction.prototype.setActive.call(this, active);\n  this.setState_();\n};\n\n\n/**\n * Remove the interaction from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {ol.PluggableMap} map Map.\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const interactions = this.interactions_;\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    interactions.forEach((interaction) => {\n      currentMap.removeInteraction(interaction);\n    });\n  }\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    interactions.forEach((interaction) => {\n      map.addInteraction(interaction);\n    });\n  }\n\n  this.setState_();\n};\n\n\n/**\n * Toggle interactions.\n * @private\n */\nexports.prototype.setState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  const interactions = this.interactions_;\n  const keys = this.listenerKeys_;\n\n  interactions.forEach((interaction) => {\n    interaction.setActive(active && !!map);\n  });\n\n  if (active && map) {\n    this.features_.forEach(feature => this.addFeature_(feature));\n    keys.push(\n      olEvents.listen(this.features_, 'add', this.handleFeaturesAdd_, this),\n      olEvents.listen(this.features_, 'remove', this.handleFeaturesRemove_, this)\n    );\n  } else {\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    this.features_.forEach(feature => this.removeFeature_(feature));\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const collection = this.getFeatureCollection_(feature);\n  collection.push(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const collection = this.getFeatureCollection_(feature);\n  collection.remove(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @return {ol.Collection.<ol.Feature>} Collection of features for this feature.\n * @private\n */\nexports.prototype.getFeatureCollection_ = function(feature) {\n  let features;\n  const isCircle = feature.get(ngeoFormatFeatureProperties.IS_CIRCLE);\n  const isRectangle = feature.get(ngeoFormatFeatureProperties.IS_RECTANGLE);\n  if (isCircle === true || isCircle === 'true') {\n    features = this.circleFeatures_;\n  } else if (isRectangle === true || isRectangle === 'true') {\n    features = this.rectangleFeatures_;\n  } else {\n    features = this.otherFeatures_;\n  }\n  return features;\n};\n\n\nexport default exports;\n","/**\n * @module gmf.import.wmsCapabilityLayertreeComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessagePopup from 'ngeo/message/Popup.js';\n\nimport * as olBase from 'ol/index.js';\n\nimport 'bootstrap/js/collapse.js';\n\n\nconst exports = angular.module('gmfWmscapabilitylayertreenode', [\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  ngeoMessagePopup.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/import/wmsCapabilityLayertreeComponent', require('./wmsCapabilityLayertreeComponent.html'));\n});\n\n\nexports.value('gmfWmscapabilitylayertreenodeTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfWmscapabilitylayertreenodeTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/import/wmsCapabilityLayertreeComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfWmscapabilitylayertreenodeTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfWmscapabilitylayertreenodeTemplateUrl($attrs, gmfWmscapabilitylayertreenodeTemplateUrl) {\n  return gmfWmscapabilitylayertreenodeTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!gmf.datasource.ExternalDataSourcesManager}\n   *     gmfExternalDataSourcesManager GMF service responsible of managing\n   *     external data sources.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfWmscapabilitylayertreenodeController\n   */\n  constructor(gmfExternalDataSourcesManager) {\n\n    // Binding properties\n\n    /**\n     * WMS Capabilities definition\n     * @type {!Object}\n     * @export\n     */\n    this.capabilities;\n\n    /**\n     * WMS Capability Layer object.\n     * @type {!Object}\n     * @export\n     */\n    this.layer;\n\n    /**\n     * The original server url that was used to build the WMS GetCapabilities\n     * request.\n     * @type {string}\n     * @export\n     */\n    this.url;\n\n\n    // Injected properties\n\n    /**\n     * @type {!gmf.datasource.ExternalDataSourcesManager}\n     * @private\n     */\n    this.gmfExternalDataSourcesManager_ = gmfExternalDataSourcesManager;\n  }\n\n  /**\n   * @param {!Object} layer WMS Capability Layer object\n   * @export\n   */\n  createAndAddDataSource(layer) {\n    this.gmfExternalDataSourcesManager_.createAndAddDataSourceFromWMSCapability(\n      layer,\n      this.capabilities,\n      this.url\n    );\n  }\n\n  /**\n   * @param {!Object} layer WMS Capability Layer object\n   * @return {number} Unique id for the Capability Layer.\n   * @export\n   */\n  getUid(layer) {\n    return olBase.getUid(layer);\n  }\n};\n\n\nexports.component('gmfWmscapabilitylayertreenode', {\n  bindings: {\n    'capabilities': '<',\n    'layer': '<',\n    'url': '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfWmscapabilitylayertreenodeTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module gmf.import.wmtsCapabilityLayertreeComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessagePopup from 'ngeo/message/Popup.js';\n\nimport * as olBase from 'ol/index.js';\n\nconst exports = angular.module('gmfWmtscapabilitylayertree', [\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  ngeoMessagePopup.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/import/wmtsCapabilityLayertreeComponent', require('./wmtsCapabilityLayertreeComponent.html'));\n});\n\n\nexports.value('gmfWmtscapabilitylayertreTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfWmtscapabilitylayertreTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/import/wmtsCapabilityLayertreeComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfWmtscapabilitylayertreTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfWmtscapabilitylayertreTemplateUrl($attrs, gmfWmtscapabilitylayertreTemplateUrl) {\n  return gmfWmtscapabilitylayertreTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!gmf.datasource.ExternalDataSourcesManager}\n   *     gmfExternalDataSourcesManager GMF service responsible of managing\n   *     external data sources.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfWmtscapabilitylayertreeController\n   */\n  constructor(gmfExternalDataSourcesManager) {\n\n    // Binding properties\n\n    /**\n     * WMS Capabilities definition\n     * @type {!Object}\n     * @export\n     */\n    this.capabilities;\n\n    /**\n     * List of WMTS Capability Layer objects.\n     * @type {!Array.<!Object>}\n     * @export\n     */\n    this.layers;\n\n    /**\n     * The original WMTS GetCapabilities url that was used to fetch the\n     * capability layers.\n     * @type {string}\n     * @export\n     */\n    this.url;\n\n\n    // Injected properties\n\n    /**\n     * @type {!gmf.datasource.ExternalDataSourcesManager}\n     * @private\n     */\n    this.gmfExternalDataSourcesManager_ = gmfExternalDataSourcesManager;\n  }\n\n  /**\n   * @param {!Object} layer WMTS Capability Layer object\n   * @export\n   */\n  createAndAddDataSource(layer) {\n    const manager = this.gmfExternalDataSourcesManager_;\n    manager.createAndAddDataSourceFromWMTSCapability(\n      layer,\n      this.capabilities,\n      this.url\n    );\n  }\n\n  /**\n   * @param {!Object} layer WMTS Capability Layer object\n   * @return {number} Unique id for the Capability Layer.\n   * @export\n   */\n  getUid(layer) {\n    return olBase.getUid(layer);\n  }\n};\n\n\nexports.component('gmfWmtscapabilitylayertree', {\n  bindings: {\n    'capabilities': '<',\n    'layers': '<',\n    'url': '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfWmtscapabilitylayertreTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module gmf.import.importdatasourceComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\n\n/** @suppress {extraRequire} */\nimport gmfImportWmsCapabilityLayertreeComponent from 'gmf/import/wmsCapabilityLayertreeComponent.js';\n\n/** @suppress {extraRequire} */\nimport gmfImportWmtsCapabilityLayertreeComponent from 'gmf/import/wmtsCapabilityLayertreeComponent.js';\n\nimport googAsserts from 'goog/asserts.js';\nimport ngeoQueryQuerent from 'ngeo/query/Querent.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\nconst exports = angular.module('gmfImportdatasource', [\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  gmfImportWmsCapabilityLayertreeComponent.name,\n  gmfImportWmtsCapabilityLayertreeComponent.name,\n  ngeoQueryQuerent.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/import/importdatasourceComponent', require('./importdatasourceComponent.html'));\n});\n\n\nexports.value('gmfImportdatasourceTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfImportdatasourceTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/import/importdatasourceComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfImportdatasourceTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfImportdatasourceTemplateUrl($attrs, gmfImportdatasourceTemplateUrl) {\n  return gmfImportdatasourceTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!jQuery} $element Element.\n   * @param {!angular.$filter} $filter Angular filter.\n   * @param {!angular.$injector} $injector Main injector.\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!angular.$timeout} $timeout Angular timeout service.\n   * @param {!gmf.datasource.ExternalDataSourcesManager}\n   *     gmfExternalDataSourcesManager GMF service responsible of managing\n   *     external data sources.\n   * @param {!ngeo.query.Querent} ngeoQuerent Ngeo querent service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfImportdatasourceController\n   */\n  constructor($element, $filter, $injector, $scope, $timeout,\n    gmfExternalDataSourcesManager, ngeoQuerent) {\n\n    // Binding properties\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n\n    // Injected properties\n\n    /**\n     * @type {!jQuery}\n     * @private\n     */\n    this.element_ = $element;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {!gmf.datasource.ExternalDataSourcesManager}\n     * @private\n     */\n    this.gmfExternalDataSourcesManager_ = gmfExternalDataSourcesManager;\n\n    /**\n     * @type {!ngeo.query.Querent}\n     * @private\n     */\n    this.ngeoQuerent_ = ngeoQuerent;\n\n\n    // Model properties\n\n    /**\n     * @type {File|undefined}\n     * @export\n     */\n    this.file;\n\n    /**\n     * @type {string|undefined}\n     * @export\n     */\n    this.url;\n\n\n    // Inner properties\n\n    /**\n     * @type {!jQuery}\n     * @private\n     */\n    this.fileInput_ = $element.find('input[type=file]');\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.hasError = false;\n\n    /**\n     * @type {?angular.$q.Promise}\n     * @private\n     */\n    this.hasErrorPromise_ = null;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.mode = exports.Controller_.Mode.ONLINE;\n\n    /**\n     * @type {!Array.<string>}\n     * @export\n     */\n    this.modes = [\n      exports.Controller_.Mode.LOCAL,\n      exports.Controller_.Mode.ONLINE\n    ];\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.pending = false;\n\n    /**\n     * @type {!ngeox.unitPrefix}\n     * @private\n     */\n    this.unitPrefixFormat_ = /** @type {ngeox.unitPrefix} */ (\n      $filter('ngeoUnitPrefix'));\n\n    /**\n     * Current WMS Capabilities that were connected.\n     * @type {?Object}\n     * @export\n     */\n    this.wmsCapabilities = null;\n\n    /**\n     * Current WTMS Capabilities that were connected.\n     * @type {?Object}\n     * @export\n     */\n    this.wmtsCapabilities = null;\n\n    /**\n     * @type {Bloodhound|undefined}\n     * @private\n     */\n    this.serversEngine_;\n\n    const servers = $injector.has('gmfExternalOGCServers') ?\n      /** @type {Array.<!gmfx.ExternalOGCServer>|undefined} */ (\n        $injector.get('gmfExternalOGCServers')\n      ) : undefined;\n\n    if (servers) {\n      const serverUrls = servers.map(server => server['url']);\n      this.serversEngine_ = new Bloodhound({\n        /**\n         * Allows search queries to match from string from anywhere within\n         * the url, and not only from the beginning of the string (which is\n         * the default, non-configurable behaviour of bloodhound).\n         *\n         * Borrowed from:\n         * https://stackoverflow.com/questions/22059933/twitter-typeahead-js-how-to-return-all-matched-elements-within-a-string\n         *\n         * @param {BloodhoundDatum} datum Datum.\n         * @return {Array.<string>} List of datum tokenizers.\n         */\n        datumTokenizer: (datum) => {\n          googAsserts.assertString(datum);\n          const originalDatumTokenizers = Bloodhound.tokenizers.whitespace(\n            datum);\n          googAsserts.assert(originalDatumTokenizers);\n          const datumTokenizers = [];\n          for (const originalDatumTokenizer of originalDatumTokenizers) {\n            let i = 0;\n            while ((i + 1) < originalDatumTokenizer.length) {\n              datumTokenizers.push(\n                originalDatumTokenizer.substr(\n                  i,\n                  originalDatumTokenizer.length\n                )\n              );\n              i++;\n            }\n          }\n          return datumTokenizers;\n        },\n        queryTokenizer: Bloodhound.tokenizers.whitespace,\n        identify: false,\n        local: serverUrls\n      });\n    }\n\n    // Register input[type=file] onchange event, use HTML5 File api\n    this.fileInput_.on('change', () => {\n      this.file = this.fileInput_[0].files && this.fileInput_[0].files[0] ?\n        this.fileInput_[0].files[0] : undefined;\n      this.scope_.$apply();\n    });\n  }\n\n  /**\n   * Called on initialization of the component.\n   */\n  $onInit() {\n    this.gmfExternalDataSourcesManager_.map = this.map;\n\n\n    if (this.serversEngine_) {\n      // Timeout to let Angular render the placeholder of the input properly,\n      // otherwise typeahead would copy the string with {{}} in it...\n      this.timeout_(() => {\n        googAsserts.assert(this.serversEngine_);\n        const $urlInput = this.element_.find('input[name=url]');\n        const $connectBtn = this.element_.find('button.gmf-importdatasource-connect-btn');\n        $urlInput.typeahead({\n          hint: true,\n          highlight: true,\n          minLength: 1\n        }, {\n          name: 'url',\n          source: this.serversEngine_.ttAdapter()\n        }).bind('typeahead:select', (ev, suggestion) => {\n          this.timeout_(() => {\n            this.url = suggestion;\n            this.scope_.$apply();\n            $connectBtn.focus();\n          });\n        });\n      });\n    }\n  }\n\n  /**\n   * Triggers a 'click' on the \"Browse\" button.\n   * @export\n   */\n  browse() {\n    this.element_.find('input[type=file][name=file]').click();\n  }\n\n  /**\n   * Connect to given online resource URL.\n   * @export\n   */\n  connect() {\n    const url = googAsserts.assertString(this.url);\n    const serviceType = ngeoDatasourceOGC.guessServiceTypeByUrl(url);\n\n    this.startWorking_();\n    if (serviceType === ngeoDatasourceOGC.Type.WMS) {\n      this.ngeoQuerent_.wmsGetCapabilities(url).then(\n        (wmsCapabilities) => {\n          this.wmsCapabilities = wmsCapabilities;\n          this.stopWorking_();\n        },\n        () => {\n          // Something went wrong...\n          this.stopWorking_(true);\n        }\n      );\n    } else if (serviceType === ngeoDatasourceOGC.Type.WMTS) {\n      this.ngeoQuerent_.wmtsGetCapabilities(url).then(\n        (wmtsCapabilities) => {\n          this.wmtsCapabilities = wmtsCapabilities;\n          this.stopWorking_();\n        },\n        () => {\n          // Something went wrong...\n          this.stopWorking_(true);\n        }\n      );\n    } else {\n      // Could not determine the type of url\n      this.timeout_(() => {\n        this.stopWorking_(true);\n      });\n    }\n  }\n\n  /**\n   * Create data source from file.\n   * @export\n   */\n  load() {\n    const file = googAsserts.assert(this.file);\n    this.gmfExternalDataSourcesManager_.createAndAddDataSourceFromFile(file);\n  }\n\n  /**\n   * @return {string} The name of the file and human-readable size.\n   * @export\n   */\n  get fileNameAndSize() {\n    let nameAndSize = '';\n\n    const file = this.file;\n    if (file !== undefined) {\n      const fileSize = this.unitPrefixFormat_(file.size, 'o');\n      nameAndSize = `${file.name}, ${fileSize}`;\n    }\n\n    return nameAndSize;\n  }\n\n\n  // === Private methods ===\n\n  /**\n   * @private\n   */\n  startWorking_() {\n    this.pending = true;\n    this.hasError = false;\n\n    // Clear any previous objects\n    this.wmsCapabilities = null;\n    this.wmtsCapabilities = null;\n  }\n\n  /**\n   * @param {boolean=} opt_hasError Whether we stopped working because of after\n   *     an error.\n   * @private\n   */\n  stopWorking_(opt_hasError = false) {\n    this.pending = false;\n    if (opt_hasError) {\n      this.hasError = true;\n      if (this.hasErrorPromise_) {\n        this.timeout_.cancel(this.hasErrorPromise_);\n      }\n      this.hasErrorPromise_ = this.timeout_(() => {\n        this.hasError = false;\n        this.hasErrorPromise_ = null;\n      }, 3000);\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n */\nexports.Controller_.Mode = {\n  LOCAL: 'Local',\n  ONLINE: 'Online'\n};\n\n\nexports.component('gmfImportdatasource', {\n  bindings: {\n    'map': '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfImportdatasourceTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module gmf.import.module\n */\nimport gmfImportImportdatasourceComponent from 'gmf/import/importdatasourceComponent.js';\nimport gmfImportWmsCapabilityLayertreeComponent from 'gmf/import/wmsCapabilityLayertreeComponent.js';\nimport gmfImportWmtsCapabilityLayertreeComponent from 'gmf/import/wmtsCapabilityLayertreeComponent.js';\n\nimport './import.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfImportModule', [\n  gmfImportImportdatasourceComponent.name,\n  gmfImportWmsCapabilityLayertreeComponent.name,\n  gmfImportWmtsCapabilityLayertreeComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.Controller\n */\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport olFeature from 'ol/Feature.js';\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @param {ol.Collection.<ol.Feature>} ngeoFeatures Collection of features.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoDrawfeatureController\n */\nconst exports = function($scope, $sce, gettextCatalog,\n  ngeoFeatureHelper, ngeoFeatures) {\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  if (this.active === undefined) {\n    this.active = false;\n  }\n\n  /**\n   * Alternate collection of features in which to push the drawn features.\n   * If not defined, then `ngeoFeatures` is used instead.\n   * @type {!ol.Collection.<!ol.Feature>|undefined}\n   * @export\n   */\n  this.features;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.showMeasure;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n  // Fill the string collection\n  gettextCatalog.getString('Point');\n  gettextCatalog.getString('LineString');\n  gettextCatalog.getString('Polygon');\n  gettextCatalog.getString('Circle');\n  gettextCatalog.getString('Rectangle');\n  gettextCatalog.getString('Text');\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = ngeoFeatures;\n\n  /**\n   * @type {Array.<ol.interaction.Interaction>}\n   * @private\n   */\n  this.interactions_ = [];\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawPoint;\n\n  /**\n   * @type {ngeo.interaction.MeasureLength}\n   * @export\n   */\n  this.measureLength;\n\n  /**\n   * @type {ngeo.interaction.MeasureArea}\n   * @export\n   */\n  this.measureArea;\n\n  /**\n   * @type {ngeo.interaction.MeasureAzimut}\n   * @export\n   */\n  this.measureAzimut;\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawRectangle;\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawText;\n\n\n  // Watch the \"active\" property, and disable the draw interactions\n  // when \"active\" gets set to false.\n  $scope.$watch(\n    () => this.active,\n    (newVal) => {\n      if (newVal === false) {\n        this.interactions_.forEach((interaction) => {\n          interaction.setActive(false);\n        });\n      }\n    }\n  );\n\n};\n\n\n/**\n * Register a draw|measure interaction by setting it inactive, decorating it\n * and adding it to the map\n * @param {ol.interaction.Interaction} interaction Interaction to register.\n * @export\n */\nexports.prototype.registerInteraction = function(\n  interaction) {\n  this.interactions_.push(interaction);\n  interaction.setActive(false);\n  ngeoMiscDecorate.interaction(interaction);\n  this.map.addInteraction(interaction);\n};\n\n\n/**\n * Called when any of the draw or measure interaction active property changes.\n * Set the active property of this directive accordingly, i.e. if at least\n * one of the draw or measure is active then the active property is set to true.\n * @param {ol.Object.Event} event Event.\n * @export\n */\nexports.prototype.handleActiveChange = function(event) {\n  this.active = this.interactions_.some(interaction => interaction.getActive(), this);\n};\n\n\n/**\n * Called when a feature is finished being drawn. Set the default properties\n * for its style, then set its style and add it to the features collection.\n * @param {string} type Type of geometry being drawn.\n * @param {ol.interaction.Draw.Event|ngeox.MeasureEvent} event Event.\n * @export\n */\nexports.prototype.handleDrawEnd = function(type, event) {\n  let sketch;\n  if (event.feature) {\n    // ol.interaction.Draw.Event\n    sketch = event.feature;\n  } else {\n    // ngeox.MeasureEvent\n    sketch = event.detail.feature;\n  }\n  googAsserts.assert(sketch);\n\n  const azimut = sketch.get('azimut');\n\n  const features = this.features || this.ngeoFeatures_;\n\n  const feature = new olFeature(sketch.getGeometry());\n\n  const prop = ngeoFormatFeatureProperties;\n\n  switch (type) {\n    case ngeoGeometryType.CIRCLE:\n      feature.set(prop.IS_CIRCLE, true);\n      if (azimut !== undefined) {\n        feature.set(prop.AZIMUT, azimut);\n      }\n      break;\n    case ngeoGeometryType.TEXT:\n      feature.set(prop.IS_TEXT, true);\n      break;\n    case ngeoGeometryType.RECTANGLE:\n      feature.set(prop.IS_RECTANGLE, true);\n      break;\n    default:\n      break;\n  }\n\n  /**\n   * @type {string}\n   */\n  const name = this.gettextCatalog_.getString(type);\n  feature.set(prop.NAME, `${name} ${features.getLength() + 1}`);\n\n  /**\n   * @type {string}\n   */\n  const color = type !== ngeoGeometryType.TEXT ? '#DB4436' : '#000000';\n  feature.set(prop.COLOR, color);\n\n  feature.set(prop.ANGLE, 0);\n  feature.set(prop.OPACITY, 0.2);\n  feature.set(prop.SHOW_MEASURE, this.showMeasure ? true : false);\n  feature.set(prop.SHOW_LABEL, false);\n  feature.set(prop.SIZE, 10);\n  feature.set(prop.STROKE, 2);\n\n  // set style\n  this.featureHelper_.setStyle(feature);\n\n  // push in collection\n  features.push(feature);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDrawfeatureController', [\n  ngeoDrawFeatures.name,\n  ngeoMiscBtnComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n]);\nexports.module.controller('ngeoDrawfeatureController', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.point\n */\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawpoint', []);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawPoint = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('Point')\n      });\n\n      drawFeatureCtrl.registerInteraction(drawPoint);\n      drawFeatureCtrl.drawPoint = drawPoint;\n\n      olEvents.listen(\n        drawPoint,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.POINT),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawPoint,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawpoint', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.rectangle\n */\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawrectangle', []);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawrectangle\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawRectangle = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n        geometryFunction: (coordinates, geometry) => {\n          if (!geometry) {\n            geometry = new olGeomPolygon(null);\n          }\n          const start = coordinates[0];\n          const end = coordinates[1];\n          geometry.setCoordinates([\n            [start, [start[0], end[1]], end, [end[0], start[1]], start]\n          ]);\n          return geometry;\n        },\n        maxPoints: 2\n      });\n\n      drawFeatureCtrl.registerInteraction(drawRectangle);\n      drawFeatureCtrl.drawRectangle = drawRectangle;\n\n      olEvents.listen(\n        drawRectangle,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.RECTANGLE),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawRectangle,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawrectangle', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.text\n */\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawtext', []);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawtext\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawText = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('Point')\n      });\n\n      drawFeatureCtrl.registerInteraction(drawText);\n      drawFeatureCtrl.drawText = drawText;\n\n      olEvents.listen(\n        drawText,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.TEXT),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawText,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawtext', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.measure.area\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureArea from 'ngeo/interaction/MeasureArea.js';\nimport * as olEvents from 'ol/events.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasurearea', [\n  ngeoDrawController.module.name\n]);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing polygon');\n      const contMsg = gettextCatalog.getString('Click to continue drawing<br>' +\n          'Double-click or click starting point to finish');\n\n      const measureArea = new ngeoInteractionMeasureArea($filter('ngeoUnitPrefix'), gettextCatalog, {\n        style: new olStyleStyle(),\n        startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n        continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n        precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined\n      });\n\n      drawFeatureCtrl.registerInteraction(measureArea);\n      drawFeatureCtrl.measureArea = measureArea;\n\n      olEvents.listen(\n        measureArea,\n        'measureend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.POLYGON),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        measureArea,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasurearea', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.measure.azimut\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport {fromCircle} from 'ol/geom/Polygon.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasureazimut', [\n  ngeoDrawController.module.name,\n  ngeoMiscFilters.name,\n]);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing circle');\n      const contMsg = gettextCatalog.getString('Click to finish');\n\n      const measureAzimut = new ngeoInteractionMeasureAzimut(\n        $filter('ngeoUnitPrefix'), $filter('number'), {\n          style: new olStyleStyle(),\n          startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n          continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n          precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined,\n          decimals: $injector.has('ngeoMeasureDecimals') ? $injector.get('ngeoMeasureDecimals') : undefined\n        });\n\n      drawFeatureCtrl.registerInteraction(measureAzimut);\n      drawFeatureCtrl.measureAzimut = measureAzimut;\n\n      olEvents.listen(\n        measureAzimut,\n        'measureend',\n        /**\n         * @param {ngeox.MeasureEvent} event Event.\n         */\n        (event) => {\n          // In the case of azimut measure interaction, the feature's\n          // geometry is actually a collection (line + circle)\n          // For our purpose here, we only need the circle, which gets\n          // transformed into a polygon with 64 sides.\n          const geometry = /** @type {ol.geom.GeometryCollection} */\n                (event.detail.feature.getGeometry());\n          const circle = /** @type {ol.geom.Circle} */ (\n            geometry.getGeometries()[1]);\n          const polygon = fromCircle(circle, 64);\n          event.detail.feature = new olFeature(polygon);\n          const azimut = ngeoInteractionMeasureAzimut.getAzimut(\n            /** @type {ol.geom.LineString} */ (geometry.getGeometries()[0])\n          );\n          event.detail.feature.set('azimut', azimut);\n\n          drawFeatureCtrl.handleDrawEnd(ngeoGeometryType.CIRCLE, event);\n        },\n        drawFeatureCtrl\n      );\n\n      olEvents.listen(\n        measureAzimut,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasureazimut', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.measure.length\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureLength from 'ngeo/interaction/MeasureLength.js';\nimport * as olEvents from 'ol/events.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasurelength', [\n  ngeoDrawController.module.name,\n  ngeoMiscFilters.name,\n]);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.$filter} $filter Angular filter.\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing line');\n      const contMsg = gettextCatalog.getString('Click to continue drawing<br>' +\n          'Double-click or click last point to finish');\n\n      const measureLength = new ngeoInteractionMeasureLength($filter('ngeoUnitPrefix'), gettextCatalog, {\n        style: new olStyleStyle(),\n        startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n        continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n        precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined\n      });\n\n      drawFeatureCtrl.registerInteraction(measureLength);\n      drawFeatureCtrl.measureLength = measureLength;\n\n      olEvents.listen(\n        measureLength,\n        'measureend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.LINE_STRING),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        measureLength,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasurelength', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.component\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawPoint from 'ngeo/draw/point.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawRectangle from 'ngeo/draw/rectangle.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawText from 'ngeo/draw/text.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureArea from 'ngeo/measure/area.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureAzimut from 'ngeo/measure/azimut.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureLength from 'ngeo/measure/length.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawfeature', [\n  ngeoDrawController.module.name,\n  ngeoDrawPoint.name,\n  ngeoDrawRectangle.name,\n  ngeoDrawText.name,\n  ngeoMeasureArea.name,\n  ngeoMeasureAzimut.name,\n  ngeoMeasureLength.name,\n]);\n\n\n/**\n * Directive used to draw vector features on a map.\n * Example:\n *\n *     <ngeo-drawfeature\n *         ngeo-btn-group\n *         class=\"btn-group\"\n *         ngeo-drawfeature-active=\"ctrl.drawActive\"\n *         ngeo-drawfeature-map=\"::ctrl.map\">\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawpoint\n *         class=\"btn btn-default ngeo-drawfeature-point\"\n *         ng-class=\"{active: dfCtrl.drawPoint.active}\"\n *         ng-model=\"dfCtrl.drawPoint.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measurelength\n *         class=\"btn btn-default ngeo-drawfeature-linestring\"\n *         ng-class=\"{active: dfCtrl.measureLength.active}\"\n *         ng-model=\"dfCtrl.measureLength.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measurearea\n *         class=\"btn btn-default ngeo-drawfeature-polygon\"\n *         ng-class=\"{active: dfCtrl.measureArea.active}\"\n *         ng-model=\"dfCtrl.measureArea.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measureazimut\n *         class=\"btn btn-default ngeo-drawfeature-circle\"\n *         ng-class=\"{active: dfCtrl.measureAzimut.active}\"\n *         ng-model=\"dfCtrl.measureAzimut.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawrectangle\n *         class=\"btn btn-default ngeo-drawfeature-rectangle\"\n *         ng-class=\"{active: dfCtrl.drawRectangle.active}\"\n *         ng-model=\"dfCtrl.drawRectangle.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawtext\n *         class=\"btn btn-default ngeo-drawfeature-text\"\n *         ng-class=\"{active: dfCtrl.drawText.active}\"\n *         ng-model=\"dfCtrl.drawText.active\"></a>\n *     </ngeo-drawfeature>\n *\n * @htmlAttribute {boolean} ngeo-drawfeature-active Whether the directive is\n *     active or not.\n * @htmlAttribute {!ol.Collection=} ngeo-drawfeature-features The features\n *     collection in which to push the drawn features. If none is provided,\n *     then the `ngeoFeatures` collection is used.\n * @htmlAttribute {ol.Map} ngeo-drawfeature-map The map.\n * @htmlAttribute {boolean} ngeo-drawfeature-showmeasure. Checks the\n *      checkbox in order to display the feature measurements as a label.\n *      Default to false.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawfeature\n */\nexports.directive_ = function() {\n  return {\n    controller: 'ngeoDrawfeatureController as dfCtrl',\n    scope: true,\n    bindToController: {\n      'active': '=ngeoDrawfeatureActive',\n      'features': '=?ngeoDrawfeatureFeatures',\n      'map': '=ngeoDrawfeatureMap',\n      'showMeasure': '=?ngeoDrawfeatureShowmeasure'\n    }\n  };\n};\n\nexports.directive('ngeoDrawfeature', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.XSDAttributes\n */\nimport ngeoFormatXSDAttribute from 'ngeo/format/XSDAttribute.js';\n\n/**\n * An service used to fetch the XSD attribute definition of layers using their\n * id from a GeoMapFish server.\n *\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular http service.\n * @param {string} gmfLayersUrl Url to the GeoMapFish layers service.\n * @ngInject\n */\nconst exports = function($http, gmfLayersUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.baseUrl_ = gmfLayersUrl;\n\n  /**\n   * @type {Object.<number, !angular.$q.Promise>}\n   * @private\n   */\n  this.promises_ = {};\n\n};\n\n\n/**\n * @param {number} id Layer id.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getAttributes = function(id) {\n  if (!this.promises_[id]) {\n    const url = `${this.baseUrl_}/${id}/md.xsd`;\n    this.promises_[id] = this.http_.get(url).then(\n      this.handleGetAttributes_.bind(this));\n  }\n  return this.promises_[id];\n};\n\n/**\n * @param {angular.$http.Response} resp Ajax response.\n * @return {Array.<ngeox.Attribute>} List of attributes.\n * @export\n */\nexports.prototype.handleGetAttributes_ = function(resp) {\n  return new ngeoFormatXSDAttribute().read(resp.data);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfXSDAttributes', []);\nexports.module.service('gmfXSDAttributes', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.EditFeature\n */\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Service that provides methods to get, insert, update and delete vector\n * features with the use of a GeoMapFish Protocol as back-end.\n *\n * The GeoJSON format is used when obtaining or sending features.\n *\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular http service.\n * @param {string} gmfLayersUrl Url to the GeoMapFish layers service.\n * @ngInject\n */\nconst exports = function($http, gmfLayersUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * Url to the GeoMapFish layers service. Required in applications that use:\n   * - the editfeature tools\n   * - the objectediting tools\n   *\n   * @type {string}\n   * @private\n   */\n  this.baseUrl_ = gmfLayersUrl;\n\n};\n\n\n/**\n * Build a query to the MapFish protocol to fetch features from a list\n * of layer ids inside a specified extent.\n *\n * @param {Array.<number>} layerIds List of layer ids to get the features from.\n * @param {ol.Extent} extent The extent where to get the features from.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getFeaturesInExtent = function(layerIds, extent) {\n  const url = olUri.appendParams(\n    `${this.baseUrl_}/${layerIds.join(',')}`,\n    {\n      'bbox': extent.join(',')\n    }\n  );\n  return this.http_.get(url).then(this.handleGetFeatures_.bind(this));\n};\n\n\n/**\n * Build a query to the MapFish protocol to fetch features from a list\n * of layer ids and a list of comparison filters.\n *\n * This method is called in the ObjectEditing service, which is injected in\n * the permalink service, i.e. it's always called. Since we don't have to\n * define the url to the GMF Protocol (layers) a dummy promise returns an\n * empty array of features if the url is not defined.\n *\n * @param {!Array.<number>} layerIds List of layer ids to get the features from.\n * @param {!Array.<!gmfx.ComparisonFilter>} filters List of comparison filters\n * @return {angular.$q.Promise} Promise.\n */\nexports.prototype.getFeaturesWithComparisonFilters = function(\n  layerIds, filters\n) {\n  const properties = [];\n  const params = {};\n\n  for (const filter of filters) {\n    params[`${filter.property}__${filter.operator}`] = filter.value;\n    properties.push(filter.property);\n  }\n\n  params['queryable'] = properties.join(',');\n\n  const url = olUri.appendParams(`${this.baseUrl_}/${layerIds.join(',')}`, params);\n  return this.http_.get(url).then(this.handleGetFeatures_.bind(this));\n};\n\n\n/**\n * @param {angular.$http.Response} resp Ajax response.\n * @return {Array.<ol.Feature>} List of features.\n * @private\n */\nexports.prototype.handleGetFeatures_ = function(resp) {\n  return new olFormatGeoJSON().readFeatures(resp.data);\n};\n\n\n/**\n * @param {number} layerId The layer id that contains the feature.\n * @param {Array.<ol.Feature>} features List of features to insert.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.insertFeatures = function(layerId, features) {\n  const url = `${this.baseUrl_}/${layerId}`;\n  const geoJSON = new olFormatGeoJSON().writeFeatures(features);\n  return this.http_.post(url, geoJSON, {\n    headers: {'Content-Type': 'application/json'},\n    withCredentials: true\n  });\n};\n\n\n/**\n * @param {number} layerId The layer id that contains the feature.\n * @param {ol.Feature} feature The feature to update.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.updateFeature = function(layerId, feature) {\n  const url = `${this.baseUrl_}/${layerId.toString()}/${feature.getId()}`;\n  const geoJSON = new olFormatGeoJSON().writeFeature(feature);\n  return this.http_.put(url, geoJSON, {\n    headers: {'Content-Type': 'application/json'},\n    withCredentials: true\n  });\n};\n\n\n/**\n * @param {number} layerId The layer id that contains the feature.\n * @param {ol.Feature} feature The feature to delete.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.deleteFeature = function(layerId, feature) {\n  const url = `${this.baseUrl_}/${layerId.toString()}/${feature.getId()}`;\n  return this.http_.delete(url, {\n    headers: {'Content-Type': 'application/json'},\n    withCredentials: true\n  });\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfEditFeature', []);\nexports.module.service('gmfEditFeature', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.raster.RasterService\n */\n/**\n * The Raster service.\n * Uses the c2cgeoportal's raster to obtain different kinds of\n * information at a specific coordinate.\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular http service.\n * @param {string} gmfRasterUrl URL to a the c2cgeoportal raster service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfRaster\n */\nconst exports = function($http, gmfRasterUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = gmfRasterUrl;\n};\n\n\n/**\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {Object=} opt_params Optional parameters for the request.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getRaster = function(coordinate, opt_params) {\n\n  const params = opt_params || {};\n  params[exports.Param.X] = coordinate[0];\n  params[exports.Param.Y] = coordinate[1];\n\n  return this.$http_.get(this.url_, {\n    params\n  }).then(this.handleGetRaster_.bind(this));\n};\n\n\n/**\n * @param {angular.$http.Response} resp Ajax response.\n * @return {Object.<string, number>} The response object.\n * @private\n */\nexports.prototype.handleGetRaster_ = function(resp) {\n  return resp.data;\n};\n\n\n/**\n * @enum {string}\n */\nexports.Param = {\n  X: 'lon',\n  Y: 'lat'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfRaster', []);\nexports.module.service('gmfRaster', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.proj.somerc\n */\nimport proj4 from 'proj4';\nimport somerc from 'proj4/projections/somerc.js';\n\n\nproj4.Proj.projections.add(somerc);\nconst exports = 'somerc';\n\n\nexport default exports;\n","/**\n * @module ngeo.proj.EPSG21781\n */\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport * as olProjProj4 from 'ol/proj/proj4.js';\n\nimport somerc from 'ngeo/proj/somerc.js';\nimport proj4 from 'proj4';\n\nconst epsg21781def = [\n  `+proj=${somerc}`,\n  '+lat_0=46.95240555555556',\n  '+lon_0=7.439583333333333',\n  '+k_0=1',\n  '+x_0=600000',\n  '+y_0=200000',\n  '+ellps=bessel',\n  '+towgs84=674.374,15.056,405.346,0,0,0,0',\n  '+units=m',\n  '+no_defs'\n].join(' ');\nconst epsg21781extent = [420000, 30000, 900000, 350000];\n\nproj4.defs('EPSG:21781', epsg21781def);\nolProjProj4.register(proj4);\nolProj.get('EPSG:21781').setExtent(epsg21781extent);\n\nconst exports = 'EPSG:21781';\n\n\nexport default exports;\n","/**\n * @module ngeo.search.searchDirective\n */\n\n/**\n * Provides the \"ngeoSearch\" directive, which uses Twitter's\n * typeahead component to change an input text into a search field.\n *\n * Example:\n *\n *      <input type=\"text\"\n *        ngeo-search=\"ctrl.typeaheadOptions\"\n *        ngeo-search-datasets=\"ctrl.typeaheadDatasets\"\n *        ngeo-search-listeners=\"crtl.typeaheadListeners\">\n *\n * See our live example: [../examples/search.html](../examples/search.html)\n *\n * @htmlAttribute {TypeaheadOptions} ngeo-search The options.\n * @htmlAttribute {Array.<TypeaheadDataset>} ngeo-search-datasets The sources datasets.\n * @htmlAttribute {ngeox.SearchDirectiveListeners} ngeo-search-listeners The listeners.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoSearch\n */\nconst exports = function() {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n\n      const typeaheadOptionsExpr = attrs['ngeoSearch'];\n      const typeaheadOptions = /** @type {TypeaheadOptions} */\n              (scope.$eval(typeaheadOptionsExpr));\n\n      const typeaheadDatasetsExpr = attrs['ngeoSearchDatasets'];\n      const typeaheadDatasets = /** @type {Array.<TypeaheadDataset>} */\n              (scope.$eval(typeaheadDatasetsExpr));\n\n      const args = typeaheadDatasets.slice();\n      args.unshift(typeaheadOptions);\n\n      element.typeahead(...args);\n\n      const typeaheadListenersExpr = attrs['ngeoSearchListeners'];\n      const typeaheadListeners_ =\n              /** @type {ngeox.SearchDirectiveListeners} */\n              (scope.$eval(typeaheadListenersExpr));\n\n      /**\n       * @type {ngeox.SearchDirectiveListeners}\n       */\n      const typeaheadListeners = exports.adaptListeners_(\n        typeaheadListeners_);\n\n      element.on('typeahead:open', () => {\n        scope.$apply(() => {\n          typeaheadListeners.open();\n        });\n      });\n\n      element.on('typeahead:close', () => {\n        scope.$apply(() => {\n          typeaheadListeners.close();\n        });\n      });\n\n      element.on('typeahead:cursorchange',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {Object} suggestion Suggestion.\n         * @param {TypeaheadDataset} dataset Dataset.\n         */\n        (event, suggestion, dataset) => {\n          scope.$apply(() => {\n            typeaheadListeners.cursorchange(event, suggestion, dataset);\n          });\n        });\n\n      element.on('typeahead:select',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {Object} suggestion Suggestion.\n         * @param {TypeaheadDataset} dataset Dataset.\n         */\n        (event, suggestion, dataset) => {\n          scope.$apply(() => {\n            typeaheadListeners.select(event, suggestion, dataset);\n          });\n        });\n\n      element.on('typeahead:autocomplete',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {Object} suggestion Suggestion.\n         * @param {TypeaheadDataset} dataset Dataset.\n         */\n        (event, suggestion, dataset) => {\n          scope.$apply(() => {\n            typeaheadListeners.autocomplete(event, suggestion, dataset);\n          });\n        });\n\n      element.on('typeahead:asyncreceive',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {TypeaheadDataset} dataset Dataset.\n         * @param {string} query Query.\n         */\n        (event, dataset, query) => {\n          scope.$apply(() => {\n            const empty = element.data('tt-typeahead')['menu']['_allDatasetsEmpty']();\n            typeaheadListeners.datasetsempty(event, query, empty);\n          });\n        });\n\n    }\n  };\n};\n\n\n/**\n * Create a real ngeox.SearchDirectiveListeners object out of the object\n * returned by $eval.\n * @param {ngeox.SearchDirectiveListeners} object Object.\n * @return {ngeox.SearchDirectiveListeners} The listeners object.\n * @private\n */\nexports.adaptListeners_ = function(object) {\n  /** @type {ngeox.SearchDirectiveListeners} */\n  let typeaheadListeners;\n  if (object === undefined) {\n    typeaheadListeners = {\n      open() {},\n      close() {},\n      cursorchange() {},\n      datasetsempty() {},\n      select() {},\n      autocomplete() {}\n    };\n  } else {\n    typeaheadListeners = {\n      open: object.open !== undefined ?\n        object.open : () => {},\n      close: object.close !== undefined ?\n        object.close : () => {},\n      cursorchange: object.cursorchange !== undefined ?\n        object.cursorchange : () => {},\n      datasetsempty: object.datasetsempty !== undefined ?\n        object.datasetsempty : () => {},\n      select: object.select !== undefined ?\n        object.select : () => {},\n      autocomplete: object.autocomplete !== undefined ?\n        object.autocomplete : () => {}\n    };\n  }\n  return typeaheadListeners;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoSearchDirective', []);\n\n\n// Register the directive in the module\nexports.module.directive('ngeoSearch', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.colorpickerComponent\n */\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoColorpicker', []);\n\n\nexports.value('ngeoColorpickerTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoColorpickerTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/misc/colorpickerComponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/misc/colorpickerComponent', require('./colorpickerComponent.html'));\n});\n\n\n/**\n * Provides the \"ngeoColorpicker\" directive, a widget for\n * selecting a color among predefined ones.\n *\n * Example:\n *\n *     <div ngeo-colorpicker=\"ctrl.colors\">\n *     </div>\n *\n *\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoColorpickerTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoColorpicker\n */\nexports.component_ = function(ngeoColorpickerTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: {\n      colors: '<?ngeoColorpicker',\n      color: '=?ngeoColorpickerColor'\n    },\n    controller: 'NgeoColorpickerController as ctrl',\n    bindToController: true,\n    templateUrl: ngeoColorpickerTemplateUrl\n  };\n};\n\nexports.directive('ngeoColorpicker',\n  exports.component_);\n\n/**\n * Fefault colors for the colorpicker\n * @type {Array.<Array.<string>>}\n * @const\n * @export\n */\nexports.DEFAULT_COLORS = [\n  ['#F4EB37', '#CDDC39', '#62AF44', '#009D57', '#0BA9CC', '#4186F0', '#3F5BA9', '#7C3592', '#A61B4A', '#DB4436', '#F8971B', '#F4B400', '#795046'],\n  ['#F9F7A6', '#E6EEA3', '#B7DBAB', '#7CCFA9', '#93D7E8', '#9FC3FF', '#A7B5D7', '#C6A4CF', '#D698AD', '#EE9C96', '#FAD199', '#FFDD5E', '#B29189'],\n  ['#ffffff', '#CCCCCC', '#777', '#000000']\n];\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.Controller_ = function($scope, $element, $attrs) {\n\n  /**\n   * The set of color\n   * @type {Array.<Array.<string>>}\n   * @export\n   */\n  this.colors = this.colors || exports.DEFAULT_COLORS;\n\n  /**\n   * The selected color\n   * @type {undefined|string}\n   * @export\n   */\n  this.color;\n};\n\n/**\n * @param {string} color The color to select.\n * @export\n */\nexports.Controller_.prototype.setColor = function(color) {\n  this.color = color;\n};\n\nexports.controller('NgeoColorpickerController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.AutoProjection\n */\nimport * as olProj from 'ol/proj.js';\nimport * as olExtent from 'ol/extent.js';\n\n/**\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoAutoProjection\n */\nconst exports = function() {};\n\n\n/**\n * Parse a string and return a coordinate if the result is valid. Given string\n * must be a two numbers separated by a space.\n * @param {string} str the string to parse.\n * @return {?ol.Coordinate} A coordinate or null if the format is not valid.\n * @export\n */\nexports.prototype.stringToCoordinates = function(str) {\n  const coords = str.match(/([\\d\\.']+)[\\s,]+([\\d\\.']+)/);\n  if (coords) {\n    const x = parseFloat(coords[1].replace('\\'', ''));\n    const y = parseFloat(coords[2].replace('\\'', ''));\n    if (!isNaN(x) && !isNaN(y)) {\n      return [x, y];\n    }\n  }\n  return null;\n};\n\n\n/**\n * Get an array of projections corresponding to their EPSG codes. Log an error\n *     for each code that are not defined in ol projections.\n * @param {Array.<string>} projectionsCodes EPSG codes (e.g. 'EPSG:3857',\n *     'epsg:3857' or '3857').\n * @return {Array.<ol.proj.Projection>} An array of projections.\n * @export\n */\nexports.prototype.getProjectionList = function(projectionsCodes) {\n  let code, proj;\n  const projections = [];\n  projectionsCodes.forEach((projection) => {\n    code = projection.toUpperCase();\n    if (code.substr(0, 5) != 'EPSG:') {\n      code = `EPSG:${code}`;\n    }\n    proj = olProj.get(code);\n    if (proj !== null) {\n      projections.push(proj);\n    } else {\n      console.error(`The projection ${code} is not defined in ol.proj.`);\n    }\n  });\n  return projections;\n};\n\n\n/**\n * It projects the point using the projection array and finds the first one for\n * which it falls inside of the viewProjection extent.\n * @param {ol.Coordinate} coordinates The point to test.\n * @param {ol.Extent} extent Limits in which coordinates can be valid.\n * @param {ol.proj.Projection} viewProjection Target projection the point.\n * @param {Array.<ol.proj.Projection>=} opt_projections optional array of\n *     projections. The point is tested in each projection, in the order of\n *     the array.\n * @return {?ol.Coordinate} A coordinates in the view's projection if it matches\n *     in one of the given projections, or null else.\n * @export\n */\nexports.prototype.tryProjections = function(coordinates,\n  extent, viewProjection, opt_projections) {\n  let position;\n  if (opt_projections === undefined) {\n    opt_projections = [viewProjection];\n  }\n  opt_projections.some((projection) => {\n    try {\n      position = olProj.transform(coordinates, projection, viewProjection);\n      if (olExtent.containsCoordinate(extent, position)) {\n        return true;\n      }\n    } catch (e) {\n      // Wrong coordinate leads to a transform error and ol throw an exception that we won't log.\n    }\n    position = null;\n  });\n  return position;\n};\n\n\n/**\n * Same as AutoProjection.tryProjections but if tryProjections return null,\n * re-call it with coordinates in reverse order.\n * @param {ol.Coordinate} coordinates The point to test.\n * @param {ol.Extent} extent Limits in which coordinates can be valid.\n * @param {ol.proj.Projection} viewProjection Target projection the point.\n * @param {Array.<ol.proj.Projection>=} opt_projections optional array of\n *     projections. The point is tested in each projection, in the order of\n *     the array.\n * @return {?ol.Coordinate} A coordinates in the view's projection if it matches\n *     in one of the given projections, or null else.\n * @export\n */\nexports.prototype.tryProjectionsWithInversion = function(\n  coordinates, extent, viewProjection, opt_projections) {\n  let position = this.tryProjections(coordinates, extent, viewProjection,\n    opt_projections);\n  if (position === null) {\n    position = this.tryProjections(coordinates.reverse(), extent,\n      viewProjection, opt_projections);\n  }\n  return position;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoAutoProjection', []);\nexports.module.service('ngeoAutoProjection', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.search.FulltextSearch\n */\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides the c2c-geoportal full-text search.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$http} $http Angular http service.\n * @constructor\n * @struct\n * @ngInject\n * @export\n * @ngname gmfFulltextSearch\n */\nconst exports = function($injector, $http) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = /** @type {string} **/ ($injector.get('fulltextsearchUrl'));\n\n  const url = this.url_.split('?');\n  /**\n   * @type {string}\n   * @private\n   */\n  this.baseUrl_ = url[0];\n\n  const queryString = (url.length == 2) ? `?${url[1]}` : '';\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  this.defaultParams_ = ngeoUtils.decodeQueryString(queryString);\n};\n\n/**\n * Perform a search query on the c2c-geoportal full-text search.\n * @param {string} query Search query.\n * @param {Object.<string, string>} params Additional parameters.\n * @returns {Promise} Request promise with data array.\n */\nexports.prototype.search = function(query, params) {\n  const queryParams = Object.assign({}, this.defaultParams_, params);\n\n  queryParams['query'] = query;\n\n  const url = `${this.baseUrl_}?${ngeoUtils.encodeQueryString(queryParams)}`;\n\n  return new Promise((resolve, reject) => {\n    this.$http_.get(url)\n      .then(resp => resolve(resp['data']))\n      .catch(reject);\n  });\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSearchFulltextSearch', []);\nexports.module.service('gmfSearchFulltextSearch', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.download.Csv\n */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\n/**\n * Service to generate and download a CSV file from tabular data.\n * Column headers are translated using {@link angularGettext.Catalog}.\n *\n * @param {angular.$injector} $injector Main injector.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoCsvDownload\n * @ngInject\n */\nconst exports = function($injector, gettextCatalog) {\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * File extension of the CSV file.\n   * @type {string}\n   * @private\n   */\n  this.encoding_ = $injector.has('ngeoCsvEncoding') ?\n    $injector.get('ngeoCsvEncoding') : 'utf-8';\n\n  /**\n   * File extension of the CSV file.\n   * @type {string}\n   * @private\n   */\n  this.extension_ = $injector.has('ngeoCsvExtension') ?\n    $injector.get('ngeoCsvExtension') : '.csv';\n\n  /**\n   * Whether to include the header in the exported file or not.\n   * @type {boolean}\n   * @private\n   */\n  this.includeHeader_ = $injector.has('ngeoCsvIncludeHeader') ?\n    $injector.get('ngeoCsvIncludeHeader') : true;\n\n  /**\n   * Quote character.\n   * @type {string}\n   * @private\n   */\n  this.quote_ = $injector.has('ngeoCsvQuote') ?\n    $injector.get('ngeoCsvQuote') : '\"';\n\n  /**\n   * Separator character.\n   * @type {string}\n   * @private\n   */\n  this.separator_ = $injector.has('ngeoCsvSeparator') ?\n    $injector.get('ngeoCsvSeparator') : ',';\n\n  /**\n   * Download service.\n   * @type {ngeox.Download}\n   * @private\n   */\n  this.download_ = $injector.get('ngeoDownload');\n};\n\n\n/**\n * Generate a CSV.\n *\n * @param {Array.<Object>} data Entries/objects to include in the CSV.\n * @param {Array.<ngeox.GridColumnDef>} columnDefs Column definitions.\n * @return {string} The CSV file as string.\n * @export\n */\nexports.prototype.generateCsv = function(data, columnDefs) {\n  if (data.length == 0 || columnDefs.length == 0) {\n    return '';\n  }\n\n  const translatedColumnHeaders = columnDefs.map(columnHeader => this.gettextCatalog_.getString(columnHeader.name));\n\n  const header = this.getRow_(translatedColumnHeaders);\n  const dataRows = data.map((values) => {\n    const rowValues = columnDefs.map(columnHeader => values[columnHeader.name]);\n    return this.getRow_(rowValues);\n  });\n\n  return this.includeHeader_ ? header + dataRows.join('') : dataRows.join('');\n};\n\n\n/**\n * @param {Array.<?>} values Values.\n * @return {string} CSV row.\n * @private\n */\nexports.prototype.getRow_ = function(values) {\n  const matchAllQuotesRegex = new RegExp(this.quote_, 'g');\n  const doubleQuote = this.quote_ + this.quote_;\n\n  const rowValues = values.map((value) => {\n    if (value !== undefined && value !== null) {\n      value = `${value}`;\n      // wrap each value into quotes and escape quotes with double quotes\n      return this.quote_ + value.replace(matchAllQuotesRegex, doubleQuote) + this.quote_;\n    } else {\n      return '';\n    }\n  });\n\n  return `${rowValues.join(this.separator_)}\\n`;\n};\n\n\n/**\n * Generate a CSV and start a download with the generated file.\n *\n * @param {Array.<Object>} data Entries/objects to include in the CSV.\n * @param {Array.<ngeox.GridColumnDef>} columnDefs Column definitions.\n * @param {string} fileName The CSV file name, without the extension.\n * @export\n */\nexports.prototype.startDownload = function(data, columnDefs, fileName) {\n  const fileContent = this.generateCsv(data, columnDefs);\n  this.download_(\n    fileContent, fileName, `text/csv;charset=${this.encoding_}`);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoCsvDownload', [\n  ngeoDownloadService.name\n]);\nexports.module.service('ngeoCsvDownload', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.resizemap\n */\nimport googAsserts from 'goog/asserts.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoResizemap', []);\n\n/**\n * Provides a directive that resizes the map in an animation loop\n * during 1 second when the value of \"state\" changes. This is especially useful\n * when changing the size of other elements with a transition leads to a change\n * of the map size.\n *\n * Example:\n *\n *      <div ng-class=\"ctrl.open ? 'open' : 'close' ngeo-resizemap=\"ctrl.map\"\n *        ngeo-resizemap-state=\"open\">\n *      <div>\n *      <input type=\"checkbox\" ng-model=\"ctrl.open\" />\n *\n * See our live example: [../examples/animation.html](../examples/animation.html)\n *\n * @param {angular.$window} $window Angular window service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoResizemap\n */\nexports.directive_ = function($window) {\n  const /** @type {number} */ duration = 1000;\n\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      const attr = 'ngeoResizemap';\n      const prop = attrs[attr];\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      const stateExpr = attrs['ngeoResizemapState'];\n      googAsserts.assert(stateExpr !== undefined);\n\n      let start;\n      let animationDelayKey;\n\n      const animationDelay = () => {\n        map.updateSize();\n        map.renderSync();\n\n        if (Date.now() - start < duration) {\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      };\n\n      // Make sure the map is resized when the animation ends.\n      // It may help in case the animation didn't start correctly.\n      element.on('transitionend', () => {\n        map.updateSize();\n        map.renderSync();\n      });\n\n      scope.$watch(stateExpr, (newVal, oldVal) => {\n        if (newVal != oldVal) {\n          start = Date.now();\n          $window.cancelAnimationFrame(animationDelayKey);\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoResizemap', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module gmf.permalink.shareComponent\n */\nimport gmfPermalinkShareService from 'gmf/permalink/ShareService.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\nconst exports = angular.module('gmfPermalinkShareComponent', [\n  gmfPermalinkShareService.module.name,\n  ngeoStatemanagerLocation.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/permalink/shareComponent', require('./shareComponent.html'));\n});\n\n\nexports.value('gmfPermalinkShareTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfPermalinkShareTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/permalink/shareComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfPermalinkShareTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfPermalinkShareTemplateUrl($attrs, gmfPermalinkShareTemplateUrl) {\n  return gmfPermalinkShareTemplateUrl($attrs);\n}\n\n\n/**\n * Component to display a shortened permalink and share it by email\n * Example:\n *\n *      <gmf-share\n *        gmf-share-email=\"true\">\n *      </gmf-share>\n *\n * @htmlAttribute {boolean} gmf-share-email Enable emailing capability.\n * @type {!angular.Component}\n */\nexports.component_ = {\n  bindings: {\n    'enableEmail': '<gmfShareEmail'\n  },\n  controller: 'GmfShareController',\n  templateUrl: gmfPermalinkShareTemplateUrl\n};\nexports.component('gmfShare', exports.component_);\n\n\nclass ShareComponentController {\n  /**\n   * The controller for the share component\n   * @param {angular.Scope} $scope Scope.\n   * @param {ngeo.statemanager.Location} ngeoLocation ngeo Location service.\n   * @param {gmf.permalink.ShareService} gmfShareService service for sharing map.\n   * @param {angular.$q} $q Angular q service\n   * @param {angular.Attributes} $attrs Attributes.\n   * @constructor\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfShareController\n   */\n  constructor($scope, ngeoLocation, gmfShareService, $q, $attrs) {\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.$scope_ = $scope;\n\n    /**\n     * @type {gmf.permalink.ShareService}\n     * @private\n     */\n    this.gmfShareService_ = gmfShareService;\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.$q_ = $q;\n\n    /**\n     * @type {ngeo.statemanager.Location}\n     * @private\n     */\n    this.ngeoLocation_ = ngeoLocation;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.enableEmail;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.shortLink;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.email;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.message;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.permalink_ = this.ngeoLocation_.getUriString();\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.showLengthWarning = this.permalink_.length > gmfPermalinkShareService.URL_MAX_LEN ||\n    ngeoLocation.getPath() > gmfPermalinkShareService.URL_PATH_MAX_LEN;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.successfullySent = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.errorOnsend = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.errorOnGetShortUrl = false;\n\n    this.getShortUrl();\n  }\n\n  /**\n   * Get the short version of the permalink if the email is not provided\n   * @export\n   */\n  getShortUrl() {\n    this.$q_.when(this.gmfShareService_.getShortUrl(this.permalink_))\n      .then((resp) => {\n        this.shortLink = resp.data.short_url;\n        this.errorOnGetShortUrl = false;\n      }, (resp) => {\n        this.shortLink = this.permalink;\n        this.errorOnGetShortUrl = true;\n      });\n  }\n\n  /**\n   * Send the short version of the permalink if the email is provided\n   * @export\n   */\n  sendShortUrl() {\n    if (this.$scope_['gmfShareForm'].$valid) {\n      this.$q_.when(this.gmfShareService_.sendShortUrl(this.permalink_, this.email, this.message))\n        .then((resp) => {\n          this.successfullySent = true;\n        }, (resp) => {\n          this.errorOnsend = true;\n        });\n    }\n  }\n}\n\nexports.controller('GmfShareController', ShareComponentController);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.datasourceGroupTreeComponent\n */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeDatasourceGroupTreeComponent', [\n  ngeoDatasourceDataSources.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/layertree/datasourceGroupTreeComponent', require('./datasourceGroupTreeComponent.html'));\n});\n\n\nexports.value('gmfLayertreeDatasourceGroupTreeTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfLayertreeDatasourceGroupTreeTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/layertree/datasourceGroupTreeComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfLayertreeDatasourceGroupTreeTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfLayertreeDatasourceGroupTreeTemplateUrl($attrs, gmfLayertreeDatasourceGroupTreeTemplateUrl) {\n  return gmfLayertreeDatasourceGroupTreeTemplateUrl($attrs);\n}\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources\n   *     service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfDatasourcegrouptreeController\n   */\n  constructor($scope, ngeoDataSources) {\n\n    // Binding properties\n\n    /**\n     * @type {!ngeo.datasource.Group}\n     * @export\n     */\n    this.group;\n\n\n    // Injected properties\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n  }\n\n  /**\n   * @return {string} Group uid.\n   * @export\n   */\n  getGroupUid() {\n    return `datasourcegrouptree-${olBase.getUid(this.group)}`;\n  }\n\n  /**\n   * Toggle visibility of the group itself, i.e. its visibility state.\n   * @export\n   */\n  toggle() {\n    this.group.toggleVisibilityState();\n  }\n\n  /**\n   * Toggle visible property of a data source.\n   * @param {ngeo.datasource.DataSource} dataSource Data source to toggle the\n   * visibility\n   * @export\n   */\n  toggleDataSource(dataSource) {\n    dataSource.visible = !dataSource.visible;\n  }\n\n  /**\n   * Remove all data sources from the `ngeo.datasource.DataSources` collection, which\n   * will automatically remove them from the Group. The group itself\n   * is going to be removed as well, destroying this component in the process.\n   * @export\n   */\n  remove() {\n    for (let i = this.group.dataSources.length - 1, ii = 0; i >= ii; i--) {\n      this.dataSources_.remove(this.group.dataSources[i]);\n    }\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove from\n   *     the `ngeo.DataSources` collection.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSources_.remove(dataSource);\n  }\n};\n\n\nexports.component('gmfDatasourcegrouptree', {\n  bindings: {\n    'group': '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfLayertreeDatasourceGroupTreeTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.module\n */\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoStatemanagerModule', [\n  ngeoStatemanagerLocation.module.name,\n  ngeoStatemanagerService.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.permalink.Permalink\n */\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoPopover from 'ngeo/Popover.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport ngeoOlcsConstants from 'ngeo/olcs/constants.js';\nimport ngeoFormatFeatureHash from 'ngeo/format/FeatureHash.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olLayerGroup from 'ol/layer/Group.js';\n\n/**\n * The Permalink service for GMF, which uses the `ngeo.statemanager.Service` to\n * manage the GMF application state. Here's the list of states are are managed:\n *\n * - the map center and zoom level\n * - the current background layer selected\n * - whether to add a crosshair feature in the map or not\n * - the dimensions value\n *\n * To have the whole possibilities offer by the permalink, these services\n * should be instantiated: ngeoBackgroundLayerMgr, ngeoFeatureOverlayMgr,\n * ngeoFeatureHelper, gmfPermalinkOptions, gmfThemes, gmfObjectEditingManager,\n * gmfThemeManager, defaultTheme, gmfTreeManager, ngeoWfsPermalink,\n * ngeoAutoProjection and ngeoFeatures.\n *\n * @constructor\n * @struct\n * @param {!angular.$q} $q The Angular $q service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$injector} $injector Main injector.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfPermalink\n */\nconst exports = function($q, $timeout, $rootScope, $injector, ngeoDebounce, ngeoEventHelper,\n  ngeoStateManager, ngeoLocation) {\n\n  /**\n   * @type {!angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  // == listener keys ==\n\n  /**\n   * The key for map view 'propertychange' event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.mapViewPropertyChangeEventKey_ = null;\n\n  // == properties from params ==\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {?ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = $injector.has('ngeoFeatures') ?\n    $injector.get('ngeoFeatures') : null;\n\n  /**\n   * @type {?ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.ngeoBackgroundLayerMgr_ = $injector.has('ngeoBackgroundLayerMgr') ?\n    $injector.get('ngeoBackgroundLayerMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.has('ngeoFeatureOverlayMgr') ?\n    $injector.get('ngeoFeatureOverlayMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.featureOverlay_ = ngeoFeatureOverlayMgr ?\n    ngeoFeatureOverlayMgr.getFeatureOverlay() : null;\n\n  /**\n   * @type {?ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = $injector.has('ngeoFeatureHelper') ?\n    $injector.get('ngeoFeatureHelper') : null;\n\n  /**\n   * @type {?ngeo.query.Querent}\n   * @private\n   */\n  this.ngeoQuerent_ = $injector.has('ngeoQuerent') ?\n    $injector.get('ngeoQuerent') : null;\n\n  /**\n   * The options to configure the gmf permalink service with.\n   * @type {!gmfx.PermalinkOptions}\n   */\n  const gmfPermalinkOptions = $injector.has('gmfPermalinkOptions') ?\n    $injector.get('gmfPermalinkOptions') : {};\n  if (gmfPermalinkOptions.useLocalStorage === true) {\n    // localStorage is deactivated by default\n    this.ngeoStateManager_.setUseLocalStorage(true);\n  }\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.crosshairEnabledByDefault_ = !!gmfPermalinkOptions.crosshairEnabledByDefault;\n\n  /**\n   * @type {?gmf.datasource.ExternalDataSourcesManager}\n   * @private\n   */\n  this.gmfExternalDataSourcesManager_ =\n    $injector.has('gmfExternalDataSourcesManager') ?\n      $injector.get('gmfExternalDataSourcesManager') : null;\n\n  /**\n   * @type {?gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.has('gmfThemes') ? $injector.get('gmfThemes') : null;\n\n  /**\n   * @type {?gmf.objectediting.Manager}\n   * @private\n   */\n  this.gmfObjectEditingManager_ = $injector.has('gmfObjectEditingManager') ?\n    $injector.get('gmfObjectEditingManager') : null;\n\n  /**\n   * @type {?gmf.theme.Manager}\n   * @private\n   */\n  this.gmfThemeManager_ = $injector.has('gmfThemeManager') ?\n    $injector.get('gmfThemeManager') : null;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.defaultTheme_ = $injector.has('defaultTheme') ?\n    $injector.get('defaultTheme') : undefined;\n\n  /**\n   * @type {?gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.has('gmfTreeManager') ?\n    $injector.get('gmfTreeManager') : null;\n\n  // == other properties ==\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {?ngeo.statemanager.WfsPermalink}\n   * @private\n   */\n  this.ngeoWfsPermalink_ = $injector.has('ngeoWfsPermalink') ?\n    $injector.get('ngeoWfsPermalink') : null;\n\n  /**\n   * @type {?gmfx.User}\n   * @export\n   */\n  this.gmfUser_ = $injector.has('gmfUser') ?\n    $injector.get('gmfUser') : null;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?ngeo.misc.AutoProjection}\n   * @private\n   */\n  this.ngeoAutoProjection_ = $injector.has('ngeoAutoProjection') ?\n    $injector.get('ngeoAutoProjection') : null;\n\n  /**\n   * A list of projections that the coordinates in the permalink can be in.\n   * @type {?Array.<ol.proj.Projection>}\n   * @private\n   */\n  this.sourceProjections_ = null;\n  if (gmfPermalinkOptions.projectionCodes !== undefined && this.ngeoAutoProjection_) {\n    const projections = this.ngeoAutoProjection_.getProjectionList(gmfPermalinkOptions.projectionCodes);\n    if (projections.length > 0) {\n      this.sourceProjections_ = projections;\n    }\n  }\n\n  /**\n   * @type {?ol.Feature}\n   * @private\n   */\n  this.crosshairFeature_ = null;\n\n  /**\n   * @type {Array<(null|ol.style.Style)>|null|ol.FeatureStyleFunction|ol.style.Style}\n   * @private\n   */\n  this.crosshairStyle_;\n\n  if (gmfPermalinkOptions.crosshairStyle !== undefined) {\n    this.crosshairStyle_ = gmfPermalinkOptions.crosshairStyle;\n  } else {\n    this.crosshairStyle_ = [new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 255, 255, 0.8)',\n          width: 5\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    }), new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 0, 0, 1)',\n          width: 2\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    })];\n  }\n\n  /**\n   * @type {?ngeo.Popover}\n   * @private\n   */\n  this.mapTooltip_ = null;\n\n  /**\n   * @type {ngeo.format.FeatureHash}\n   * @private\n   */\n  this.featureHashFormat_ = new ngeoFormatFeatureHash({\n    setStyle: false,\n    encodeStyles: false,\n    propertiesType: {\n      'fillColor': ngeoFormatFeatureProperties.COLOR,\n      'fillOpacity': ngeoFormatFeatureProperties.OPACITY,\n      'fontColor': ngeoFormatFeatureProperties.COLOR,\n      'fontSize': ngeoFormatFeatureProperties.SIZE,\n      'isBox': ngeoFormatFeatureProperties.IS_RECTANGLE,\n      'isCircle': ngeoFormatFeatureProperties.IS_CIRCLE,\n      'isLabel': ngeoFormatFeatureProperties.IS_TEXT,\n      'name': ngeoFormatFeatureProperties.NAME,\n      'pointRadius': ngeoFormatFeatureProperties.SIZE,\n      'showLabel': ngeoFormatFeatureProperties.SHOW_LABEL,\n      'showMeasure': ngeoFormatFeatureProperties.SHOW_MEASURE,\n      'strokeColor': ngeoFormatFeatureProperties.COLOR,\n      'strokeWidth': ngeoFormatFeatureProperties.STROKE\n    }\n  });\n\n  // == event listeners ==\n\n  if (this.ngeoBackgroundLayerMgr_) {\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleBackgroundLayerManagerChange_,\n      this);\n  }\n\n  // visibility\n  this.rootScope_.$on('ngeo-layertree-state', (event, treeCtrl, firstParent) => {\n    const newState = {};\n    if (firstParent.node.mixed) {\n      const state = treeCtrl.getState();\n      googAsserts.assert(state === 'on' || state === 'off');\n      const visible = state === 'on';\n      treeCtrl.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined) {\n          const param = exports.ParamPrefix.TREE_ENABLE + ctrl.node.name;\n          newState[param] = visible;\n        }\n      });\n    } else {\n      const gmfLayerNames = [];\n      firstParent.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined && ctrl.getState() === 'on') {\n          gmfLayerNames.push(ctrl.node.name);\n        }\n      });\n      newState[exports.ParamPrefix.TREE_GROUP_LAYERS + firstParent.node.name] = gmfLayerNames.join(',');\n    }\n    this.ngeoStateManager_.updateState(newState);\n  });\n  this.rootScope_.$on('ngeo-layertree-opacity', (event, treeCtrl) => {\n    const newState = {};\n    const opacity = treeCtrl.layer.getOpacity();\n    const stateName = (treeCtrl.parent.node.mixed ?\n      exports.ParamPrefix.TREE_OPACITY : exports.ParamPrefix.TREE_GROUP_OPACITY\n    ) + treeCtrl.node.name;\n    newState[stateName] = opacity;\n    this.ngeoStateManager_.updateState(newState);\n  });\n\n  // ngeoFeatures\n  //   (1) read from features from the state manager first, add them\n  //   (2) listen for further features added/removed\n  const features = this.getFeatures();\n  if (this.ngeoFeatures_) {\n    features.forEach((feature) => {\n      if (this.featureHelper_) {\n        this.featureHelper_.setStyle(feature);\n      }\n      this.addNgeoFeature_(feature);\n    });\n\n    this.ngeoFeatures_.extend(features);\n    olEvents.listen(this.ngeoFeatures_, 'add', this.handleNgeoFeaturesAdd_, this);\n    olEvents.listen(this.ngeoFeatures_, 'remove', this.handleNgeoFeaturesRemove_, this);\n  }\n\n  if (this.featureHelper_) {\n    this.rootScope_.$on('$localeChangeSuccess', () => {\n      features.forEach((feature) => {\n        this.featureHelper_.setStyle(feature);\n      });\n    });\n  }\n\n  if (this.gmfThemeManager_) {\n    this.rootScope_.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n      this.setThemeInUrl_(name);\n    });\n  }\n\n  // External DataSources\n\n  /**\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.setExternalDataSourcesStatePromise_ = null;\n\n  if (this.ngeoQuerent_ && this.gmfExternalDataSourcesManager_) {\n    // First, load the external data sources that are defined in the url\n    this.initExternalDataSources_().then(() => {\n      // Then, listen to the changes made to the external data sources to\n      // update the url accordingly.\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n\n      // We also need to 'register' the existing groups as well, i.e. those\n      // that were created by the Permalink\n      for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n        this.registerExternalDSGroup_(wmsGroup);\n      }\n      for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n        this.registerExternalDSGroup_(wmtsGroup);\n      }\n    });\n  }\n\n  this.initLayers_();\n};\n\n// === Map X, Y, Z ===\n\n/**\n * Get the coordinate to use to initialize the map view from the state manager.\n * @return {?ol.Coordinate} The coordinate for the map view center.\n * @export\n */\nexports.prototype.getMapCenter = function() {\n  const x = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_X);\n  const y = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Y);\n\n  if (!isNaN(x) && !isNaN(y)) {\n    const center = [x, y];\n    if (this.sourceProjections_ !== null && this.ngeoAutoProjection_) {\n      const targetProjection = this.map_.getView().getProjection();\n      const reprojectedCenter = this.ngeoAutoProjection_.tryProjectionsWithInversion(\n        center, targetProjection.getExtent(), targetProjection,\n        this.sourceProjections_);\n      if (reprojectedCenter) {\n        return reprojectedCenter;\n      }\n    }\n    return center;\n  }\n  return null;\n};\n\n\n/**\n * Get the zoom level to use to initialize the map view from the state manager.\n * @return {number|undefined} The zoom for the map view.\n * @export\n */\nexports.prototype.getMapZoom = function() {\n  const zoom = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Z);\n  return isNaN(zoom) ? undefined : zoom;\n};\n\n\n// === Map crosshair ===\n\n\n/**\n * Get the map crosshair property from the state manager, if defined.\n * @return {boolean} Whether map crosshair property is set or not.\n * @export\n */\nexports.prototype.getMapCrosshair = function() {\n  const crosshair = this.ngeoStateManager_.getInitialBooleanValue(gmfBase.PermalinkParam.MAP_CROSSHAIR);\n  return crosshair === undefined ? this.crosshairEnabledByDefault_ : crosshair;\n};\n\n\n/**\n * Sets the map crosshair to the center (or the map center if nothing provided).\n * Overwrites an existing map crosshair.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapCrosshair = function(opt_center) {\n  let crosshairCoordinate;\n  if (opt_center) {\n    crosshairCoordinate = opt_center;\n  } else {\n    crosshairCoordinate = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(crosshairCoordinate);\n\n  // remove existing crosshair first\n  if (this.crosshairFeature_) {\n    this.featureOverlay_.removeFeature(this.crosshairFeature_);\n  }\n  // set new crosshair\n  this.crosshairFeature_ = new olFeature(\n    new olGeomPoint(crosshairCoordinate));\n  this.crosshairFeature_.setStyle(this.crosshairStyle_);\n\n  // add to overlay\n  this.featureOverlay_.addFeature(this.crosshairFeature_);\n};\n\n\n// === Map tooltip ===\n\n\n/**\n * Get the tooltip text from the state manager.\n * @return {string|undefined} Tooltip text.\n * @export\n */\nexports.prototype.getMapTooltip = function() {\n  return this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.MAP_TOOLTIP);\n};\n\n/**\n * Sets the map tooltip to the center (or the map center if nothing provided).\n * Overwrites an existing map tooltip.\n * @param {string} tooltipText Text to display in tooltip.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapTooltip = function(tooltipText, opt_center) {\n  let tooltipPosition;\n  if (opt_center) {\n    tooltipPosition = opt_center;\n  } else {\n    tooltipPosition = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(tooltipPosition);\n\n  const div = $('<div/>', {\n    'class': 'gmf-permalink-tooltip',\n    'text': tooltipText\n  })[0];\n\n  if (this.mapTooltip_ !== null) {\n    this.map_.removeOverlay(this.mapTooltip_);\n  }\n\n  this.mapTooltip_ = new ngeoPopover({\n    element: div,\n    position: tooltipPosition\n  });\n\n  this.map_.addOverlay(this.mapTooltip_);\n};\n\n\n// === NgeoFeatures (A.K.A. DrawFeature, RedLining) ===\n\n\n/**\n * Get the ngeo features from the state manager for initialization purpose\n * @return {!Array.<!ol.Feature>} The features read from the state manager.\n * @export\n */\nexports.prototype.getFeatures = function() {\n  const f = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.FEATURES);\n  if (f !== undefined && f !== '') {\n    return googAsserts.assert(this.featureHashFormat_.readFeatures(f));\n  }\n  return [];\n};\n\n\n/**\n * @param {!Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.setDimensions = function(dimensions) {\n  // apply initial state\n  const keys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.DIMENSIONS);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const value = this.ngeoLocation_.getParam(key);\n    googAsserts.assert(value);\n    dimensions[key.slice(exports.ParamPrefix.DIMENSIONS.length)] = value;\n  }\n\n  this.rootScope_.$watchCollection(() => dimensions, (dimensions) => {\n    const params = {};\n    for (const key in dimensions) {\n      params[exports.ParamPrefix.DIMENSIONS + key] = dimensions[key];\n    }\n    this.ngeoLocation_.updateParams(params);\n  });\n};\n\n\n/**\n * Bind an ol3 map object to this service. The service will, from there on,\n * listen to the properties changed within the map view and update the following\n * state properties: map_x, map_y and map_zoom.\n *\n * If the service is already bound to a map, those events are unlistened first.\n *\n * @param {?ol.Map} map The ol3 map object.\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  if (map === this.map_) {\n    return;\n  }\n\n  if (this.map_) {\n    this.unregisterMap_();\n    this.map_ = null;\n  }\n\n  if (map) {\n    this.map_ = map;\n    if (this.gmfObjectEditingManager_) {\n      this.gmfObjectEditingManager_.getFeature().then((feature) => {\n        this.registerMap_(map, feature);\n      });\n    } else {\n      this.registerMap_(map, null);\n    }\n  }\n\n};\n\n\n/**\n * Listen to the map view property change and update the state accordingly.\n * @param {ol.Map} map The ol3 map object.\n * @param {?ol.Feature} oeFeature ObjectEditing feature\n * @private\n */\nexports.prototype.registerMap_ = function(map, oeFeature) {\n\n  const view = map.getView();\n  let center;\n\n  // (1) Initialize the map view with either:\n  //     a) the given ObjectEditing feature\n  //     b) the X, Y and Z available within the permalink service, if available\n  if (oeFeature && oeFeature.getGeometry()) {\n    const size = map.getSize();\n    googAsserts.assert(size);\n    view.fit(oeFeature.getGeometry().getExtent(), size);\n  } else {\n    const enabled3d = this.ngeoStateManager_.getInitialBooleanValue(ngeoOlcsConstants.Permalink3dParam.ENABLED);\n    if (!enabled3d) {\n      center = this.getMapCenter();\n      if (center) {\n        view.setCenter(center);\n      }\n      const zoom = this.getMapZoom();\n      if (zoom !== undefined) {\n        view.setZoom(zoom);\n      }\n    }\n  }\n\n\n  // (2) Listen to any property changes within the view and apply them to\n  //     the permalink service\n  this.mapViewPropertyChangeEventKey_ = olEvents.listen(\n    view,\n    'propertychange',\n    this.ngeoDebounce_(() => {\n      const center = view.getCenter();\n      const zoom = view.getZoom();\n      const object = {};\n      object[gmfBase.PermalinkParam.MAP_X] = Math.round(center[0]);\n      object[gmfBase.PermalinkParam.MAP_Y] = Math.round(center[1]);\n      object[gmfBase.PermalinkParam.MAP_Z] = zoom;\n      this.ngeoStateManager_.updateState(object);\n    }, 300, /* invokeApply */ true),\n    this);\n\n  // (3) Add map crosshair, if set\n  if (this.getMapCrosshair() && this.featureOverlay_) {\n    this.setMapCrosshair(center);\n  }\n\n  // (4) Add map tooltip, if set\n  const tooltipText = this.getMapTooltip();\n  if (tooltipText) {\n    this.setMapTooltip(tooltipText, center);\n  }\n\n  // (6) check for a wfs permalink\n  const wfsPermalinkData = this.getWfsPermalinkData_();\n  if (wfsPermalinkData !== null && this.ngeoWfsPermalink_) {\n    this.ngeoWfsPermalink_.issue(wfsPermalinkData, map);\n  }\n};\n\n\n/**\n * Remove any event listeners from the current map.\n * @private\n */\nexports.prototype.unregisterMap_ = function() {\n  googAsserts.assert(\n    this.mapViewPropertyChangeEventKey_, 'Key should be thruthy');\n  olEvents.unlistenByKey(this.mapViewPropertyChangeEventKey_);\n  this.mapViewPropertyChangeEventKey_ = null;\n};\n\n\n// === Background layer ===\n\n\n/**\n * Get the background layer object to use to initialize the map from the\n * state manager.\n * @param {!Array.<!ol.layer.Base>} layers Array of background layer objects.\n * @return {?ol.layer.Base} Background layer.\n * @export\n */\nexports.prototype.getBackgroundLayer = function(layers) {\n  const layerName = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.BG_LAYER);\n  if (layerName !== undefined) {\n    for (const layer of layers) {\n      if (layer.get('label') === layerName) {\n        return layer;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Called when the background layer changes. Update the state using the\n * background layer label, i.e. its name.\n * @private\n */\nexports.prototype.handleBackgroundLayerManagerChange_ = function() {\n  if (!this.map_ || !this.ngeoBackgroundLayerMgr_) {\n    return;\n  }\n\n  // get layer label, i.e its name\n  const layer = this.ngeoBackgroundLayerMgr_.get(this.map_);\n  const layerName = layer.get('label');\n  googAsserts.assertString(layerName);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.BG_LAYER] = layerName;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n// === Layers (layer tree) ===\n\n\n/**\n * Get the current first level node names in the tree manager and update the\n * correspondent state of the permalink.\n * @export\n */\nexports.prototype.refreshFirstLevelGroups = function() {\n  if (!this.gmfTreeManager_) {\n    return;\n  }\n  // Get first-level-groups order\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const orderedNames = groupNodes.map(node => node.name);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.TREE_GROUPS] = orderedNames.join(',');\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Return true if there is a theme specified in the URL path.\n * @private\n * @param {Array.<string>} pathElements Array of path elements.\n * @return {boolean} theme in path.\n */\nexports.prototype.themeInUrl_ = function(pathElements) {\n  const indexOfTheme = pathElements.indexOf('theme');\n  return indexOfTheme != -1 && indexOfTheme == pathElements.length - 2;\n};\n\n\n/**\n * @param {string} themeName Theme name.\n * @private\n */\nexports.prototype.setThemeInUrl_ = function(themeName) {\n  if (themeName) {\n    const pathElements = this.ngeoLocation_.getPath().split('/');\n    googAsserts.assert(pathElements.length > 1);\n    if (pathElements[pathElements.length - 1] === '') {\n      // case where the path is just \"/\"\n      pathElements.splice(pathElements.length - 1);\n    }\n    if (this.themeInUrl_(pathElements)) {\n      pathElements[pathElements.length - 1] = themeName;\n    } else {\n      pathElements.push('theme', themeName);\n    }\n    this.ngeoLocation_.setPath(pathElements.join('/'));\n  }\n};\n\n\n/**\n * Get the default theme from url, local storage, user functionalities or\n * defaultTheme constant.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeName = function() {\n\n  // check if we have a theme in url\n  const pathElements = this.ngeoLocation_.getPath().split('/');\n  if (this.themeInUrl_(pathElements)) {\n    return pathElements[pathElements.length - 1];\n  }\n\n  // check if we have a theme in the local storage\n  const tn = this.ngeoStateManager_.getInitialStringValue('theme');\n  if (tn) {\n    return tn;\n  }\n\n  const defaultTheme = this.defaultThemeNameFromFunctionalities();\n  if (defaultTheme !== null) {\n    return defaultTheme;\n  }\n\n  // fallback to the defaultTheme constant\n  if (this.defaultTheme_) {\n    return this.defaultTheme_;\n  }\n\n  return null;\n};\n\n\n/**\n * Get the default theme from user functionalities.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeNameFromFunctionalities = function() {\n  //check if we have a theme in the user functionalities\n  if (!this.gmfUser_) {\n    return null;\n  }\n  const functionalities = this.gmfUser_.functionalities;\n  if (functionalities && 'default_theme' in functionalities) {\n    const defaultTheme = functionalities.default_theme;\n    if (defaultTheme.length > 0) {\n      return defaultTheme[0];\n    }\n  }\n  return null;\n};\n\n\n/**\n * @private\n */\nexports.prototype.initLayers_ = function() {\n  if (!this.gmfThemes_) {\n    return;\n  }\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const themeName = this.defaultThemeName();\n    googAsserts.assert(themeName !== null);\n\n    if (this.gmfThemeManager_) {\n      this.gmfThemeManager_.setThemeName(this.gmfThemeManager_.modeFlush ? themeName : '');\n    }\n\n    /**\n     * @type {Array<(gmfThemes.GmfGroup)>}\n     */\n    let firstLevelGroups = [];\n    let theme;\n    // Check if we have the groups in the permalink\n    const groupsNames = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.TREE_GROUPS);\n    if (groupsNames === undefined) {\n      googAsserts.assertString(themeName);\n      theme = gmfThemeThemes.findThemeByName(themes, themeName);\n      if (theme) {\n        firstLevelGroups = theme.children;\n      }\n    } else {\n      groupsNames.split(',').forEach((groupName) => {\n        const group = gmfThemeThemes.findGroupByName(themes, groupName);\n        if (group) {\n          firstLevelGroups.push(group);\n        }\n      });\n    }\n\n    if (this.gmfTreeManager_) {\n      this.gmfTreeManager_.setFirstLevelGroups(firstLevelGroups);\n    }\n\n    this.$timeout_(() => {\n      if (!this.gmfTreeManager_ || !this.gmfTreeManager_.rootCtrl) {\n        // we don't have any layertree\n        return;\n      }\n      // Enable the layers and set the opacity\n      this.gmfTreeManager_.rootCtrl.traverseDepthFirst((treeCtrl) => {\n        if (treeCtrl.isRoot) {\n          return;\n        }\n\n        const opacity = this.ngeoStateManager_.getInitialNumberValue((\n          treeCtrl.parent.node.mixed ?\n            exports.ParamPrefix.TREE_OPACITY :\n            exports.ParamPrefix.TREE_GROUP_OPACITY\n        ) + treeCtrl.node.name);\n        if (opacity !== undefined && treeCtrl.layer) {\n          treeCtrl.layer.setOpacity(opacity);\n        }\n        if (treeCtrl.parent.node && treeCtrl.parent.node.mixed && treeCtrl.node.children == undefined) {\n          // Layer of a mixed group\n          const enable = this.ngeoStateManager_.getInitialBooleanValue(\n            exports.ParamPrefix.TREE_ENABLE + treeCtrl.node.name\n          );\n          if (enable !== undefined) {\n            treeCtrl.setState(enable ? 'on' : 'off', false);\n          }\n        } else if (!treeCtrl.node.mixed && treeCtrl.depth == 1) {\n          // First level non mixed group\n          const groupLayers = this.ngeoStateManager_.getInitialStringValue(\n            exports.ParamPrefix.TREE_GROUP_LAYERS + treeCtrl.node.name\n          );\n          if (groupLayers !== undefined) {\n            const groupLayersArray = groupLayers.split(',');\n            treeCtrl.traverseDepthFirst((treeCtrl) => {\n              if (treeCtrl.node.children === undefined) {\n                const enable = olArray.includes(groupLayersArray, treeCtrl.node.name);\n                treeCtrl.setState(enable ? 'on' : 'off', false);\n              }\n            });\n          }\n        }\n      });\n      const firstParents = this.gmfTreeManager_.rootCtrl.children;\n      firstParents.forEach((firstParent) => {\n        firstParent.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.getState() !== 'indeterminate') {\n            this.rootScope_.$broadcast('ngeo-layertree-state', treeCtrl, firstParent);\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n      });\n    });\n  });\n};\n\n\n// === ngeoFeatures, A.K.A features from the DrawFeature, RedLining  ===\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesAdd_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.addNgeoFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesRemove_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.removeNgeoFeature_(feature);\n};\n\n\n/**\n * Listen to any changes that may occur within the feature in order to\n * update the state of the permalink accordingly.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(feature, 'change',\n      this.ngeoDebounce_(this.handleNgeoFeaturesChange_, 250, true), this)\n  );\n};\n\n\n/**\n * Unregister any event listener from the feature.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n  this.handleNgeoFeaturesChange_();\n};\n\n\n/**\n * Called once upon initialization of the permalink service if there's at\n * least one feature in the ngeoFeatures collection, then called every time\n * the collection changes or any of the features within the collection changes.\n * @private\n */\nexports.prototype.handleNgeoFeaturesChange_ = function() {\n  if (!this.ngeoFeatures_) {\n    return;\n  }\n  const features = this.ngeoFeatures_.getArray();\n  const data = this.featureHashFormat_.writeFeatures(features);\n\n  const object = {};\n  object[gmfBase.PermalinkParam.FEATURES] = data;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Get the query data for a WFS permalink.\n * @return {?ngeox.WfsPermalinkData} The query data.\n * @private\n */\nexports.prototype.getWfsPermalinkData_ = function() {\n  const wfsLayer = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_LAYER);\n  if (!wfsLayer) {\n    return null;\n  }\n\n  const numGroups = this.ngeoLocation_.getParamAsInt(gmfBase.PermalinkParam.WFS_NGROUPS);\n  const paramKeys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.WFS);\n\n  const filterGroups = [];\n  let filterGroup;\n  if (numGroups === undefined) {\n    // no groups are used, e.g. '?wfs_layer=fuel&wfs_osm_id=123\n    filterGroup = this.createFilterGroup_(exports.ParamPrefix.WFS, paramKeys);\n    if (filterGroup !== null) {\n      filterGroups.push(filterGroup);\n    }\n  } else {\n    // filter groups are used, e.g. '?wfs_layer=osm_scale&wfs_ngroups=2&wfs_0_ele=380&\n    // wfs_0_highway=bus_stop&&wfs_1_name=Grand-Pont'\n    for (let i = 0; i < numGroups; i++) {\n      filterGroup = this.createFilterGroup_(`${exports.ParamPrefix.WFS + i}_`, paramKeys);\n      if (filterGroup !== null) {\n        filterGroups.push(filterGroup);\n      }\n    }\n  }\n\n  if (filterGroups.length == 0) {\n    return null;\n  }\n\n  const showFeaturesParam = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_SHOW_FEATURES);\n  const showFeatures = !(showFeaturesParam === '0' || showFeaturesParam === 'false');\n\n  return {\n    wfsType: wfsLayer,\n    showFeatures: showFeatures,\n    filterGroups: filterGroups\n  };\n};\n\n\n/**\n * Create a filter group for a given prefix from the query params.\n * @param {string} prefix E.g. `wfs_` or `wfs_0_`.\n * @param {Array.<string>} paramKeys All param keys starting with `wfs_`.\n * @return {ngeox.WfsPermalinkFilterGroup|null} A filter group.\n * @private\n */\nexports.prototype.createFilterGroup_ = function(prefix, paramKeys) {\n  /**\n   * @type {Array.<ngeox.WfsPermalinkFilter>}\n   */\n  const filters = [];\n\n  paramKeys.forEach((paramKey) => {\n    if (paramKey == gmfBase.PermalinkParam.WFS_LAYER || paramKey == gmfBase.PermalinkParam.WFS_SHOW_FEATURES ||\n        paramKey == gmfBase.PermalinkParam.WFS_NGROUPS || paramKey.indexOf(prefix) != 0) {\n      return;\n    }\n    const value = this.ngeoLocation_.getParam(paramKey);\n    if (!value) {\n      return;\n    }\n\n    let condition = value;\n    if (value.indexOf(',') > -1) {\n      condition = value.split(',');\n    }\n\n    const filter = {\n      property: paramKey.replace(prefix, ''),\n      condition: condition\n    };\n    filters.push(filter);\n  });\n\n  return (filters.length > 0) ? {filters} : null;\n};\n\n\n// === External Data Sources management ===\n\n\n/**\n * @return {!angular.$q.Promise} Promise\n * @private\n */\n\nexports.prototype.initExternalDataSources_ = function() {\n\n  const ngeoQuerent = googAsserts.assert(this.ngeoQuerent_);\n  const gmfExtDSManager = googAsserts.assert(\n    this.gmfExternalDataSourcesManager_);\n\n  const promises = [];\n\n  const layerNamesString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES);\n  const urlsString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS);\n\n  if (layerNamesString && urlsString) {\n\n    const layerNames = layerNamesString.split(exports.ExtDSSeparator.LIST);\n    const urls = urlsString.split(exports.ExtDSSeparator.LIST);\n\n    for (let i = 0, ii = urls.length; i < ii; i++) {\n      // Stop iterating if we do not have the same number of urls and layer\n      // names\n      const groupLayerNamesString = layerNames[i];\n\n      if (!groupLayerNamesString) {\n        break;\n      }\n\n      const groupLayerNames = groupLayerNamesString.split(\n        exports.ExtDSSeparator.NAMES);\n      const url = urls[i];\n\n      const serviceType = ngeoDatasourceOGC.guessServiceTypeByUrl(url);\n\n      const getCapabilitiesDefer = this.q_.defer();\n      promises.push(getCapabilitiesDefer.promise);\n\n      if (serviceType === ngeoDatasourceOGC.Type.WMS) {\n        ngeoQuerent.wmsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else if (serviceType === ngeoDatasourceOGC.Type.WMTS) {\n        ngeoQuerent.wmtsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMTS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else {\n        // Wrong service type\n        getCapabilitiesDefer.reject({\n          groupLayerNames,\n          serviceType,\n          url\n        });\n      }\n    }\n  }\n\n  return this.q_.all(promises).then(\n    (responses) => {\n      for (const response of responses) {\n\n        // WMS - For each layer name, find its layer capability object, then\n        //       create the data source\n        if (response.serviceType === ngeoDatasourceOGC.Type.WMS) {\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmsFindLayerCapability(\n              response.capabilities['Capability']['Layer']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n\n        } else if (response.serviceType === ngeoDatasourceOGC.Type.WMTS) {\n\n          // WMTS - For each layer name, find its layer capability object, then\n          //        create the data source\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmtsFindLayerCapability(\n              response.capabilities['Contents']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMTSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n        }\n      }\n    },\n    (rejections) => {\n      // TODO - handle rejections\n    }\n  );\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionAdd_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.registerExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.registerExternalDSGroup_ = function(group) {\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Contains the layer name\n * @param {!ol.layer.Base} layer The layer to inspect\n * @param {string} name The layer name to find\n * @return {boolean} The containing status\n */\nexports.prototype.containsLayerName = function(layer, name) {\n  if (layer instanceof olLayerGroup) {\n    for (const l of layer.getLayers().getArray()) {\n      googAsserts.assert(l);\n      if (this.containsLayerName(l, name)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return layer.get('layerNodeName') == name;\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionRemove_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.unregisterExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.unregisterExternalDSGroup_ = function(group) {\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Set the External Data Sources parameters in the url.\n * @private\n */\nexports.prototype.setExternalDataSourcesState_ = function() {\n\n  if (this.setExternalDataSourcesStatePromise_) {\n    this.$timeout_.cancel(this.setExternalDataSourcesStatePromise_);\n  }\n\n  this.setExternalDataSourcesStatePromise_ = this.$timeout_(() => {\n    const names = [];\n    const urls = [];\n\n    // (1) Collect WMS Groups and their layer names\n    for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n\n      // (1a) url\n      urls.push(wmsGroup.url);\n\n      // (1b) layer names\n      const wmsGroupLayerNames = [];\n      for (const wmsDataSource of wmsGroup.dataSources) {\n        googAsserts.assertInstanceof(wmsDataSource, ngeoDatasourceOGC);\n\n        // External WMS data sources always have only one OGC layer name,\n        // as they are created using a single Capability Layer object that\n        // has only 1 layer name\n        const layerName = wmsDataSource.getOGCLayerNames()[0];\n        wmsGroupLayerNames.push(layerName);\n      }\n      names.push(wmsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (2) Collect WMTS Groups and their layer names\n    for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n\n      // (2a) url\n      urls.push(wmtsGroup.url);\n\n      // (2b) layer names\n      const wmtsGroupLayerNames = [];\n      for (const wmtsDataSource of wmtsGroup.dataSources) {\n        googAsserts.assert(wmtsDataSource.wmtsLayer);\n        wmtsGroupLayerNames.push(wmtsDataSource.wmtsLayer);\n      }\n      names.push(wmtsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (3) Update state\n    this.ngeoStateManager_.updateState({\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES]: names.join(\n        exports.ExtDSSeparator.LIST\n      ),\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS]: urls.join(\n        exports.ExtDSSeparator.LIST\n      )\n    });\n\n    // (4) Reset promise\n    this.setExternalDataSourcesStatePromise_ = null;\n  });\n};\n\n\n/**\n * Clean the permalink parameters\n * @param {!Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n */\nexports.prototype.cleanParams = function(groups) {\n  const keys = googAsserts.assert(this.ngeoLocation_.getParamKeys());\n  for (const key of keys) {\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_LAYERS)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_LAYERS.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_OPACITY)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_OPACITY.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n  }\n  this.$timeout_(() => {\n    if (!this.map_) {\n      return;\n    }\n    const layer = this.map_.getLayerGroup();\n    googAsserts.assert(layer);\n    for (const key of keys) {\n      if (key.startsWith(exports.ParamPrefix.TREE_ENABLE)) {\n        const value = key.substring(exports.ParamPrefix.TREE_ENABLE.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n      if (key.startsWith(exports.ParamPrefix.TREE_OPACITY)) {\n        const value = key.substring(exports.ParamPrefix.TREE_OPACITY.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n    }\n  });\n};\n\n\nexports.module = angular.module('gmfPermalink', [\n  gmfThemeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoDrawFeatures.name,\n  ngeoLayertreeController.module.name,\n  ngeoMiscDebounce.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoStatemanagerModule.name,\n]);\n\nexports.module.service('gmfPermalink', exports);\n\n\n/**\n * @enum {string}\n */\nexports.OpenLayersLayerProperties = {\n  OPACITY: 'opacity'\n};\n\n/**\n * @enum {string}\n */\nexports.ParamPrefix = {\n  DIMENSIONS: 'dim_',\n  TREE_ENABLE: 'tree_enable_',\n  TREE_GROUP_LAYERS: 'tree_group_layers_',\n  TREE_GROUP_OPACITY: 'tree_group_opacity_',\n  TREE_OPACITY: 'tree_opacity_',\n  WFS: 'wfs_'\n};\n\n\n/**\n * External data source separators\n * @enum {string}\n */\nexports.ExtDSSeparator = {\n  LIST: ',',\n  NAMES: ';'\n};\n\n\nexports.module.value('gmfPermalinkOptions',\n  /** @type {gmfx.PermalinkOptions} */ ({}));\n\n\n/** Configure the ngeo state manager */\n(function() {\n  const regexp = [];\n  for (const key1 in exports.ParamPrefix) {\n    regexp.push(new RegExp(`${exports.ParamPrefix[key1]}.*`));\n  }\n  for (const key2 in gmfBase.PermalinkParam) {\n    regexp.push(new RegExp(exports.ParamPrefix[key2]));\n  }\n  ngeoStatemanagerService.module.value('ngeoUsedKeyRegexp', regexp);\n})();\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.datepickerComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscTime from 'ngeo/misc/Time.js';\n\nimport 'angular-ui-date';\nimport 'jquery-ui/themes/base/all.css';\n\n// FIXME: import the locales in the applications\nimport 'jquery-ui/ui/i18n/datepicker-fr.js';\nimport 'jquery-ui/ui/i18n/datepicker-en-GB.js';\nimport 'jquery-ui/ui/i18n/datepicker-de.js';\nimport 'jquery-ui/ui/i18n/datepicker-it.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDatePicker', [\n  ngeoMiscTime.module.name,\n  'ui.date',\n]);\n\n\nexports.value('ngeoDatePickerTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoDatePickerTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/misc/datepickerComponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/misc/datepickerComponent', require('./datepickerComponent.html'));\n});\n\n\n/**\n * Provide a directive to select a single date or a range of dates. Requires\n * jQuery UI for the 'datepicker' widget.\n *\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n * ngeoDatePickerTemplateUrl Template for the directive.\n * @param  {angular.$timeout} $timeout angular timeout service\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDatePicker\n */\nexports.component_ = function(ngeoDatePickerTemplateUrl,  $timeout) {\n  return {\n    scope: {\n      onDateSelected: '&',\n      time: '='\n    },\n    bindToController: true,\n    controller: 'ngeoDatePickerController as datepickerCtrl',\n    restrict: 'AE',\n    templateUrl: ngeoDatePickerTemplateUrl,\n    link: (scope, element, attrs, ctrl) => {\n      ctrl.init();\n\n      const lang =  ctrl.gettextCatalog_.getCurrentLanguage();\n      $['datepicker']['setDefaults']($['datepicker']['regional'][lang]);\n\n      ctrl.sdateOptions = angular.extend({}, ctrl.sdateOptions, {\n        'minDate': ctrl.initialMinDate,\n        'maxDate': ctrl.initialMaxDate,\n        'onClose': (selectedDate) => {\n          if (selectedDate) {\n            $(element[0]).find('input[name=\"edate\"]').datepicker('option', 'minDate', selectedDate);\n          }\n        }\n      });\n\n      ctrl.edateOptions = angular.extend({}, ctrl.edateOptions, {\n        'minDate': ctrl.initialMinDate,\n        'maxDate': ctrl.initialMaxDate,\n        'onClose': (selectedDate) => {\n          if (selectedDate) {\n            $(element[0]).find('input[name=\"sdate\"]').datepicker('option', 'maxDate', selectedDate);\n          }\n        }\n      });\n\n      angular.element('body').on('hidden.bs.popover', () => {\n        const dp = angular.element('#ui-datepicker-div');\n        if (dp && dp.css('display') === 'block') {\n          $(element[0]).find('input[name$=\"date\"]').datepicker('hide');\n        }\n      });\n\n      $timeout(() => {\n        angular.element('#ui-datepicker-div').on('mousedown', (e) => {\n          e.stopPropagation();\n        });\n      });\n    }\n  };\n};\n\nexports.directive('ngeoDatePicker', exports.component_);\n\n\n/**\n * DatePickerController - directive conttroller\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$injector} $injector injector.\n * @param {!ngeo.misc.Time} ngeoTime time service.\n * @param {!angularGettext.Catalog} gettextCatalog service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoDatePickerController\n */\nexports.Controller_ = function($scope, $injector,\n  ngeoTime, gettextCatalog) {\n\n  /**\n   * @type {!ngeo.misc.Time}\n   * @private\n   */\n  this.ngeoTime_ = ngeoTime;\n\n  /**\n   * @type {!ngeox.TimeProperty}\n   * @export\n   */\n  this.time;\n\n  /**\n   * The gettext catalog\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n\n  /**\n   * If the component is used to select a date range\n   * @type {boolean}\n   * @export\n   */\n  this.isModeRange;\n\n\n  /**\n   * Function called after date(s) changed/selected\n   * @type {function({time: {start: number, end: number}})}\n   * @export\n   */\n  this.onDateSelected;\n\n\n  /**\n   * Initial min date for the datepicker\n   * @type {!Date}\n   */\n  this.initialMinDate;\n\n  /**\n   * Initial max date for the datepickeronDateSelected\n   * @type {!Date}\n   */\n  this.initialMaxDate;\n\n  /**\n   * Datepicker options for the second datepicker (only for range mode)\n   * @type {Object}\n   * @export\n   */\n  this.edateOptions = {\n    'changeMonth': true,\n    'changeYear': true\n  };\n\n  /**\n   * Datepicker options for the first datepicker\n   * @type {Object}\n   * @export\n   */\n  this.sdateOptions = {\n    'changeMonth': true,\n    'changeYear': true\n  };\n\n  /**\n   * Start date model for the first date picker\n   * @type {Date}\n   * @export\n   */\n  this.sdate;\n\n  /**\n   * End date model for the second datepicker (only for range mode)\n   * @type {Date}\n   * @export\n   */\n  this.edate;\n\n  $scope.$watchGroup(['datepickerCtrl.sdate', 'datepickerCtrl.edate'], (newDates, oldDates) => {\n    const sDate = newDates[0];\n    const eDate = newDates[1];\n\n    if (angular.isDate(sDate) && (!this.isModeRange || angular.isDate(eDate))) {\n      this.onDateSelected({\n        time: {\n          start: sDate.getTime(),\n          end: eDate ? eDate.getTime() : null\n        }\n      });\n    }\n  });\n};\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.init = function() {\n  //fetch the initial options for the component\n  const initialOptions_ = this.ngeoTime_.getOptions(this.time);\n  this.initialMinDate = new Date(initialOptions_.minDate);\n  this.initialMaxDate = new Date(initialOptions_.maxDate);\n  this.isModeRange = this.time.mode === 'range';\n\n  if (this.isModeRange) {\n    googAsserts.assertArray(initialOptions_.values);\n    this.sdate = new Date(initialOptions_.values[0]);\n    this.edate = new Date(initialOptions_.values[1]);\n  } else {\n    googAsserts.assertNumber(initialOptions_.values);\n    this.sdate = new Date(initialOptions_.values);\n  }\n};\n\nexports.controller('ngeoDatePickerController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.format.Attribute\n */\nconst exports = {};\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\n\n\n/**\n * Set the `type` and `geomType` properties of an attribute if the given\n * type is a geometry one.\n *\n * @param {ngeox.AttributeBase} attribute Attribute.\n * @param {string} type Type.\n * @return {boolean} Whether both attribute type and geomType were set.\n */\nexports.setGeometryType = function(attribute, type) {\n  const geomRegex =\n    /gml:((Multi)?(Point|Line|Polygon|Curve|Surface|Geometry)).*/;\n  if (geomRegex.exec(type)) {\n    attribute.type = ngeoFormatAttributeType.GEOMETRY;\n    if (/^gml:Point/.exec(type)) {\n      attribute.geomType = 'Point';\n    } else if (/^gml:LineString|^gml:Curve/.exec(type)) {\n      attribute.geomType = 'LineString';\n    } else if (/^gml:Polygon|^gml:Surface/.exec(type)) {\n      attribute.geomType = 'Polygon';\n    } else if (/^gml:MultiPoint/.exec(type)) {\n      attribute.geomType = 'MultiPoint';\n    } else if (/^gml:MultiLineString|^gml:MultiCurve/.exec(type)) {\n      attribute.geomType = 'MultiLineString';\n    } else if (/^gml:MultiPolygon|^gml:MultiSurface/.exec(type)) {\n      attribute.geomType = 'MultiPolygon';\n    }\n  }\n  return !!attribute.type && !!attribute.geomType;\n};\n\n\nexport default exports;\n","/**\n * @module gmf.editing.EnumerateAttribute\n */\nconst exports = class {\n\n  /**\n   * The EnumerateAttribute is responsible of fetching all possible of a given\n   * attribute of a given data source (gmf layer).\n   *\n   * @struct\n   * @param {angular.$http} $http Angular $http service.\n   * @param {string} gmfLayersUrl Url to the GeoMapFish layers service.\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfEnumerateAttribute\n   */\n  constructor($http, gmfLayersUrl) {\n\n    // === Injected services ===\n\n    /**\n     * @type {angular.$http}\n     * @private\n     */\n    this.http_ = $http;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.baseUrl_ = gmfLayersUrl;\n\n    /**\n     * @type {Object.<string, !angular.$q.Promise>}\n     * @private\n     */\n    this.promises_ = {};\n  }\n\n  /**\n   * @param {gmf.datasource.OGC} dataSource Data source.\n   * @param {string} attribute Attribute name.\n   * @return {angular.$q.Promise} Promise.\n   */\n  getAttributeValues(dataSource, attribute) {\n    const promiseId = `${dataSource.id}_${attribute}`;\n    const name = dataSource.name;\n    if (!this.promises_[promiseId]) {\n      const url = `${this.baseUrl_}/${name}/values/${attribute}`;\n      this.promises_[promiseId] = this.http_.get(url).then(\n        this.handleGetAttributeValues_.bind(this));\n    }\n    return this.promises_[promiseId];\n  }\n\n  /**\n   * @param {angular.$http.Response} resp Ajax response.\n   * @return {Array.<gmfThemes.GmfLayerAttributeValue>} List of the attribute\n   *     values.\n   * @export\n   */\n  handleGetAttributeValues_(resp) {\n    const data = /** @type {gmfThemes.GmfLayerAttributeValuesResponse} */ (\n      resp.data);\n    return data.items;\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfEnumerateAttribute', []);\nexports.module.service('gmfEnumerateAttribute', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.File\n */\n/**\n * @constructor\n * @param {angular.$q} $q .\n * @param {angular.$http} $http .\n * @param {gettext} gettext .\n * @ngInject\n */\nconst exports = function($q, $http, gettext) {\n  let fileReader, canceler;\n\n  // Test the validity of the file size\n  this.isValidFileSize = function(fileSize) {\n    return !(fileSize > 20000000); // 20 Mo\n  };\n\n  this.isWmsGetCap = function(fileContent) {\n    return /<(WMT_MS_Capabilities|WMS_Capabilities)/.test(fileContent);\n  };\n\n  this.isWmtsGetCap = function(fileContent) {\n    return /<Capabilities/.test(fileContent);\n  };\n\n  this.isKml = function(fileContent) {\n    return /<kml/.test(fileContent) && /<\\/kml>/.test(fileContent);\n  };\n\n  this.isGpx = function(fileContent) {\n    return /<gpx/.test(fileContent) && /<\\/gpx>/.test(fileContent);\n  };\n\n  /**\n   * @param {!Blob} file .\n   * @return {angular.$q.Promise<string>} .\n   */\n  this.read = function(file) {\n    const defer = $q.defer();\n    if (fileReader && fileReader.readyState === FileReader.LOADING) {\n      fileReader.abort();\n    }\n    fileReader = new FileReader();\n    fileReader.onload = function(evt) {\n      defer.resolve(evt.target.result);\n    };\n    fileReader.onerror = function(evt) {\n      const err = evt.target.error;\n      console.error('Reading file failed: ', err);\n      defer.reject({\n        'message': err.code == 20 ? gettext('Operation canceled') : gettext('Read failed'),\n        'reason': err.message\n      });\n    };\n    fileReader.onprogress = function(evt) {\n      defer.notify(evt);\n    };\n    // Read the file\n    fileReader.readAsText(file);\n    return defer.promise;\n  };\n\n  /**\n   * @param {string} url .\n   * @param {angular.$q.Deferred=} opt_cancelP .\n   * @return {angular.$q.Promise<Blob>} .\n   */\n  this.load = function(url, opt_cancelP) {\n\n    if (canceler) {\n      canceler.resolve();\n    }\n    canceler = opt_cancelP || $q.defer();\n\n    // Angularjs doesn't handle onprogress event\n    const defer = $q.defer();\n    $http.get(url, {\n      timeout: canceler.promise\n    }).then((response) => {\n      defer.resolve(response.data);\n    }, (reason) => {\n      console.error('Uploading file failed: ', reason);\n      defer.reject({\n        'message': gettext('Upload failed'),\n        'reason': reason\n      });\n    });\n    return defer.promise;\n  };\n};\n\nexports.module = angular.module('ngeoFile', []);\n\nexports.module.service('ngeoFile', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.controllers.AbstractDesktopController\n */\nimport gmfControllersAbstractAppController from 'gmf/controllers/AbstractAppController.js';\nimport gmfContextualdataModule from 'gmf/contextualdata/module.js';\nimport gmfDrawingModule from 'gmf/drawing/module.js';\nimport gmfEditingModule from 'gmf/editing/module.js';\nimport gmfPermalinkShareComponent from 'gmf/permalink/shareComponent.js';\nimport gmfPrintComponent from 'gmf/print/component.js';\nimport gmfProfileModule from 'gmf/profile/module.js';\nimport gmfRasterComponent from 'gmf/raster/component.js';\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\nimport ngeoMapResizemap from 'ngeo/map/resizemap.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoQueryBboxQueryComponent from 'ngeo/query/bboxQueryComponent.js';\nimport gmfImportModule from 'gmf/import/module.js';\nimport * as olBase from 'ol/index.js';\nimport * as olProj from 'ol/proj.js';\nimport * as olObj from 'ol/obj.js';\nimport olCollection from 'ol/Collection.js';\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olControlScaleLine from 'ol/control/ScaleLine.js';\nimport olControlZoom from 'ol/control/Zoom.js';\nimport olControlRotate from 'ol/control/Rotate.js';\nimport * as olInteraction from 'ol/interaction.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * Desktop application abstract controller.\n *\n * This file includes `goog.require`'s for desktop components/directives used\n * by the HTML page and the controller to provide the configuration.\n *\n * @param {gmfx.Config} config A part of the application config.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.$injector} $injector Main injector.\n * @constructor\n * @extends {gmf.controllers.AbstractAppController}\n * @ngdoc controller\n * @ngInject\n * @export\n */\nconst exports = function(config, $scope, $injector) {\n\n  const viewConfig = {\n    projection: olProj.get(`EPSG:${config.srid || 21781}`)\n  };\n  olObj.assign(viewConfig, config.mapViewConfig || {});\n\n  const arrow = gmfControllersAbstractAppController.prototype.getLocationIcon();\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    pixelRatio: config.mapPixelRatio,\n    layers: [],\n    view: new olView(viewConfig),\n    controls: config.mapControls || [\n      new olControlScaleLine({\n        target: document.getElementById('scaleline')\n      }),\n      new olControlZoom({\n        zoomInTipLabel: '',\n        zoomOutTipLabel: ''\n      }),\n      new olControlRotate({\n        label: arrow,\n        tipLabel: ''\n      })\n    ],\n    interactions: config.mapInteractions || olInteraction.defaults({\n      pinchRotate: true,\n      altShiftDragRotate: true\n    }),\n    loadTilesWhileAnimating: true,\n    loadTilesWhileInteracting: true\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.loginActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.toolsActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modalShareShown = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.editFeatureActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.routingfeatureActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.googleStreetViewActive = false;\n\n  /**\n   * @type {!ol.style.Style}\n   * @export\n   */\n  this.googleStreetViewStyle = new olStyleStyle({\n    text: new olStyleText({\n      fill: new olStyleFill({color: '#279B61'}),\n      font: 'normal 30px FontAwesome',\n      offsetY: -15,\n      stroke: new olStyleStroke({color: '#ffffff', width: 3}),\n      text: '\\uf041'\n    })\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.importDataSourceActive = false;\n\n  const body = $('body');\n\n  // initialize tooltips\n  body.tooltip({\n    container: 'body',\n    trigger: 'hover',\n    selector: '[data-toggle=\"tooltip\"]'\n  });\n\n  // deactivate tooltips on touch device\n  body.on('touchstart.detectTouch', () => {\n    body.tooltip('destroy');\n    body.off('touchstart.detectTouch');\n  });\n\n  /**\n   * Collection of features for the draw interaction\n   * @type {ol.Collection.<ol.Feature>}\n   */\n  const ngeoFeatures = $injector.get('ngeoFeatures');\n\n  /**\n   * @type {ngeo.map.FeatureOverlay}\n   * @export\n   */\n  this.drawFeatureLayer = $injector.get('ngeoFeatureOverlayMgr')\n    .getFeatureOverlay();\n  this.drawFeatureLayer.setFeatures(ngeoFeatures);\n\n  const ngeoFeatureHelper = $injector.get('ngeoFeatureHelper');\n\n  /**\n   * @type {ol.layer.Vector}\n   * @export\n   */\n  this.editFeatureVectorLayer = new olLayerVector({\n    source: new olSourceVector({\n      wrapX: false,\n      features: new olCollection()\n    }),\n    style: (feature, resolution) => ngeoFeatureHelper.createEditingStyles(feature)\n    // style: ngeoFeatureHelper.createEditingStyles.bind(ngeoFeatureHelper)\n  });\n  this.editFeatureVectorLayer.setMap(this.map);\n\n  /**\n   * The ngeo ToolActivate manager service.\n   * @type {ngeo.misc.ToolActivateMgr}\n   */\n  const ngeoToolActivateMgr = $injector.get('ngeoToolActivateMgr');\n\n  const editFeatureActivate = new ngeoMiscToolActivate(this, 'editFeatureActive');\n  ngeoToolActivateMgr.registerTool('mapTools', editFeatureActivate, false);\n\n  const googleStreetViewActivate = new ngeoMiscToolActivate(\n    this,\n    'googleStreetViewActive'\n  );\n  ngeoToolActivateMgr.registerTool('mapTools', googleStreetViewActivate, false);\n\n  /**\n   * @type {ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.scaleSelectorOptions = {\n    dropup: true\n  };\n\n  /**\n   * @type {ol.geom.LineString}\n   * @export\n   */\n  this.profileLine = null;\n\n  gmfControllersAbstractAppController.call(this, config, $scope, $injector);\n\n  // Close the login panel on successful login.\n  $scope.$watch(() => this.gmfUser.username, (newVal) => {\n    if (newVal !== null && this.loginActive) {\n      this.loginActive = false;\n    }\n  });\n};\n\nolBase.inherits(exports, gmfControllersAbstractAppController);\n\nexports.module = angular.module('GmfAbstractDesktopControllerModule', [\n  gmfControllersAbstractAppController.module.name,\n  gmfContextualdataModule.name,\n  gmfDrawingModule.name,\n  gmfEditingModule.name,\n  gmfPermalinkShareComponent.name,\n  gmfPrintComponent.name,\n  gmfProfileModule.name,\n  gmfRasterComponent.name,\n  ngeoDrawFeatures.name,\n  ngeoMapResizemap.name,\n  ngeoQueryBboxQueryComponent.name,\n  gmfImportModule.name,\n]);\n\nexports.module.controller(\n  'AbstractDesktopController',\n  exports);\n\nexports.module.value('isDesktop', true);\n\nexports.module.value('ngeoQueryOptions', {\n  'limit': 20\n});\n\nexports.module.value('ngeoMeasurePrecision', 3);\nexports.module.value('ngeoMeasureDecimals', 0);\n\n\nexport default exports;\n","/**\n * @module ngeo.format.FeatureHashStyleType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.FeatureHash\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoFormatFeatureHashStyleType from 'ngeo/format/FeatureHashStyleType.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport * as olArray from 'ol/array.js';\nimport * as olFormatFeature from 'ol/format/Feature.js';\nimport olFormatTextFeature from 'ol/format/TextFeature.js';\nimport olGeomGeometryLayout from 'ol/geom/GeometryLayout.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @classdesc\n * Provide an OpenLayers format for encoding and decoding features for use\n * in permalinks.\n *\n * The code is based on Stéphane Brunner's URLCompressed format.\n *\n * TODOs:\n *\n * - The OpenLayers-URLCompressed format has options where the user\n *   can define attribute and style transformers. This is currently\n *   not supported by this format.\n * - The OpenLayers-URLCompressed format has a \"simplify\" option.\n *   This format does not have it.\n * - ol.style.Icon styles are not supported.\n * - Transformation of coordinates during encoding and decoding is\n *   not supported.\n *\n * @see https://github.com/sbrunner/OpenLayers-URLCompressed\n * @constructor\n * @struct\n * @extends {ol.format.TextFeature}\n * @param {ngeox.format.FeatureHashOptions=} opt_options Options.\n */\nconst exports = function(opt_options) {\n\n  olFormatTextFeature.call(this);\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.accuracy_ = options.accuracy !== undefined ?\n    options.accuracy : exports.ACCURACY_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.encodeStyles_ = options.encodeStyles !== undefined ?\n    options.encodeStyles : true;\n\n  /**\n   * @type {function(ol.Feature):Object.<string, (string|number)>}\n   * @private\n   */\n  this.propertiesFunction_ = options.properties !== undefined ?\n    options.properties : exports.defaultPropertiesFunction_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.setStyle_ = options.setStyle !== undefined ? options.setStyle : true;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevX_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevY_ = 0;\n\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  exports.LegacyProperties_ = (options.propertiesType !== undefined) &&  options.propertiesType;\n\n};\n\nolBase.inherits(exports, olFormatTextFeature);\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.format.FeatureHashStyleType>}\n * @private\n */\nexports.StyleTypes_ = {\n  'LineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'Point': ngeoFormatFeatureHashStyleType.POINT,\n  'Polygon': ngeoFormatFeatureHashStyleType.POLYGON,\n  'MultiLineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'MultiPoint': ngeoFormatFeatureHashStyleType.POINT,\n  'MultiPolygon': ngeoFormatFeatureHashStyleType.POLYGON\n};\n\n/**\n * @type {Object.<string, string>}\n * @private\n */\nexports.LegacyProperties_ = {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeGeometry;\n\n\n/**\n * Characters used to encode the coordinates. The characters \"~\", \"'\", \"(\"\n * and \")\" are not part of this character set, and used as separators (for\n * example to separate the coordinates from the feature properties).\n * @const\n * @private\n */\nexports.CHAR64_ =\n    '.-_!*ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghjkmnpqrstuvwxyz';\n\n\n/**\n * @const\n * @private\n */\nexports.ACCURACY_ = 0.1;\n\n\n/**\n * Get features's properties.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, (string|number)>} The feature properties to\n * serialize.\n * @private\n */\nexports.defaultPropertiesFunction_ = function(feature) {\n  return feature.getProperties();\n};\n\n\n/**\n * Sign then encode a number.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeSignedNumber_ = function(num) {\n  let signedNum = num << 1;\n  if (num < 0) {\n    signedNum = ~(signedNum);\n  }\n  return exports.encodeNumber_(signedNum);\n};\n\n\n/**\n * Transform a number into a logical sequence of characters.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeNumber_ = function(num) {\n  let encodedNumber = '';\n  while (num >= 0x20) {\n    encodedNumber += exports.CHAR64_.charAt(\n      0x20 | (num & 0x1f));\n    num >>= 5;\n  }\n  encodedNumber += exports.CHAR64_.charAt(num);\n  return encodedNumber;\n};\n\n\n/**\n * For a type of geometry, transforms an array of {@link ol.style.Style} into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {Array.<ol.style.Style>} styles Styles.\n * @param {ol.geom.GeometryType} geometryType Geometry type.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyles_ = function(styles, geometryType, encodedStyles) {\n  const styleType = exports.StyleTypes_[geometryType];\n  googAsserts.assert(styleType !== undefined);\n  for (let i = 0; i < styles.length; ++i) {\n    const style = styles[i];\n    const fillStyle = style.getFill();\n    const imageStyle = style.getImage();\n    const strokeStyle = style.getStroke();\n    const textStyle = style.getText();\n    if (styleType == ngeoFormatFeatureHashStyleType.POLYGON) {\n      if (fillStyle !== null) {\n        exports.encodeStylePolygon_(\n          fillStyle, strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.LINE_STRING) {\n      if (strokeStyle !== null) {\n        exports.encodeStyleLine_(strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.POINT) {\n      if (imageStyle !== null) {\n        exports.encodeStylePoint_(imageStyle, encodedStyles);\n      }\n    }\n    if (textStyle !== null) {\n      exports.encodeStyleText_(textStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleLine_ = function(strokeStyle, encodedStyles) {\n  exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n};\n\n\n/**\n * Transform an {@link ol.style.Circle} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Image} imageStyle Image style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePoint_ = function(imageStyle, encodedStyles) {\n  if (imageStyle instanceof olStyleCircle) {\n    const radius = imageStyle.getRadius();\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`pointRadius*${radius}`));\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      exports.encodeStyleFill_(fillStyle, encodedStyles);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and an {@link ol.style.Stroke} into\n * a logical sequence of characters and put the result into the given\n * encoded styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePolygon_ = function(fillStyle, strokeStyle, encodedStyles) {\n  exports.encodeStyleFill_(fillStyle, encodedStyles);\n  if (strokeStyle !== null) {\n    exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and optionally its properties into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @param {string=} opt_propertyName Property name.\n * @private\n */\nexports.encodeStyleFill_ = function(fillStyle, encodedStyles, opt_propertyName) {\n  const propertyName = opt_propertyName !== undefined ?\n    opt_propertyName : 'fillColor';\n  const fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    const fillColorRgba = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColorRgba), 'fill color must be an array');\n    const fillColorHex = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(\n      encodeURIComponent(`${propertyName}*${fillColorHex}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleStroke_ = function(strokeStyle, encodedStyles) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    const strokeColorHex = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeColor*${strokeColorHex}`));\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeWidth*${strokeWidth}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Text} into a logical sequence of characters and\n * put the result into the given encoded styles's array.\n * @param {ol.style.Text} textStyle Text style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleText_ = function(textStyle, encodedStyles) {\n  const fontStyle = textStyle.getFont();\n  if (fontStyle !== undefined) {\n    const font = fontStyle.split(' ');\n    if (font.length >= 3) {\n      if (encodedStyles.length > 0) {\n        encodedStyles.push('\\'');\n      }\n      encodedStyles.push(encodeURIComponent(`fontSize*${font[1]}`));\n    }\n  }\n  const fillStyle = textStyle.getFill();\n  if (fillStyle !== null) {\n    exports.encodeStyleFill_(\n      fillStyle, encodedStyles, 'fontColor');\n  }\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.LineString}.\n * @param {string} text Text.\n * @return {ol.geom.LineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'l(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const lineString = new olGeomLineString(null);\n  lineString.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiLineString}.\n * @param {string} text Text.\n * @return {ol.geom.MultiLineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'L(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const lineStrings = text.split('\\'');\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(lineStrings[i], flatCoordinates);\n    ends[i] = flatCoordinates.length;\n  }\n  const multiLineString = new olGeomMultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return multiLineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Point}.\n * @param {string} text Text.\n * @return {ol.geom.Point} Point.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'p(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  googAsserts.assert(flatCoordinates.length === 2);\n  const point = new olGeomPoint(null);\n  point.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return point;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPoint}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPoint} MultiPoint.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'P(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const multiPoint = new olGeomMultiPoint(null);\n  multiPoint.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return multiPoint;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Polygon}.\n * @param {string} text Text.\n * @return {ol.geom.Polygon} Polygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'a(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const rings = text.split('\\'');\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(rings[i], flatCoordinates);\n    let end = flatCoordinates.length;\n    if (i === 0) {\n      flatCoordinates[end++] = flatCoordinates[0];\n      flatCoordinates[end++] = flatCoordinates[1];\n    } else {\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1]];\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1] + 1];\n    }\n    ends[i] = end;\n  }\n  const polygon = new olGeomPolygon(null);\n  polygon.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return polygon;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPolygon}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'A(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const endss = [];\n  const polygons = text.split(')(');\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const rings = polygons[i].split('\\'');\n    const ends = endss[i] = [];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      flatCoordinates = this.decodeCoordinates_(rings[j], flatCoordinates);\n      let end = flatCoordinates.length;\n      if (j === 0) {\n        flatCoordinates[end++] = flatCoordinates[0];\n        flatCoordinates[end++] = flatCoordinates[1];\n      } else {\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1]];\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1] + 1];\n      }\n      ends[j] = end;\n    }\n  }\n  const multipolygon = new olGeomMultiPolygon(null);\n  multipolygon.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, endss);\n  return multipolygon;\n};\n\n\n/**\n * DEPRECATED - Use the `ngeo.misc.FeatureHelper` instead in combination with the\n * `setStyle: false` option.\n *\n * Read a logical sequence of characters and apply the decoded style on the\n * given feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleInFeature_ = function(text, feature) {\n  if (text == '') {\n    return;\n  }\n  const properties = exports.getStyleProperties_(text, feature);\n  const fillColor = properties['fillColor'];\n  const fontSize = properties['fontSize'];\n  const fontColor = properties['fontColor'];\n  const pointRadius = properties['pointRadius'];\n  const strokeColor = properties['strokeColor'];\n  const strokeWidth = properties['strokeWidth'];\n\n  let fillStyle = null;\n  if (fillColor !== undefined) {\n    fillStyle = new olStyleFill({\n      color: /** @type {Array<number>|string} */ (fillColor)\n    });\n  }\n  let strokeStyle = null;\n  if (strokeColor !== undefined && strokeWidth !== undefined) {\n    strokeStyle = new olStyleStroke({\n      color: /** @type {Array<number>|string} */ (strokeColor),\n      width: /** @type {number} */ (strokeWidth)\n    });\n  }\n  let imageStyle = null;\n  if (pointRadius !== undefined) {\n    imageStyle = new olStyleCircle({\n      radius: /** @type {number} */ (pointRadius),\n      fill: fillStyle,\n      stroke: strokeStyle\n    });\n    fillStyle = strokeStyle = null;\n  }\n  let textStyle = null;\n  if (fontSize !== undefined && fontColor !== undefined) {\n    textStyle = new olStyleText({\n      font: `${fontSize} sans-serif`,\n      fill: new olStyleFill({\n        color: /** @type {Array<number>|string} */ (fontColor)\n      })\n    });\n  }\n  const style = new olStyleStyle({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle\n  });\n  feature.setStyle(style);\n};\n\n\n/**\n * Read a logical sequence of characters and apply the decoded result as\n * style properties for the feature. Legacy keys are converted to the new ones\n * for compatibility.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleProperties_ = function(text, feature) {\n\n  const properties = exports.getStyleProperties_(text, feature);\n  const geometry = feature.getGeometry();\n\n  // Deal with legacy properties\n  if (geometry instanceof olGeomPoint) {\n    if (properties['isLabel'] ||\n        properties[ngeoFormatFeatureProperties.IS_TEXT]) {\n      delete properties['strokeColor'];\n      delete properties['fillColor'];\n    } else {\n      delete properties['fontColor'];\n      delete properties['fontSize'];\n    }\n  } else {\n    delete properties['fontColor'];\n\n    if (geometry instanceof olGeomLineString) {\n      delete properties['fillColor'];\n      delete properties['fillOpacity'];\n    }\n  }\n\n  // Convert font size from px to pt\n  if (properties['fontSize']) {\n    let fontSize = parseFloat(properties['fontSize']);\n    if (properties['fontSize'].indexOf('px') !== -1) {\n      fontSize = Math.round(fontSize / 1.333333);\n    }\n    properties['fontSize'] = fontSize;\n  }\n\n  // Convert legacy properties\n  const clone = {};\n  for (const key in properties) {\n    const value = properties[key];\n    if (exports.LegacyProperties_[key]) {\n      clone[exports.LegacyProperties_[key]] = value;\n    } else {\n      clone[key] = value;\n    }\n  }\n\n  feature.setProperties(clone);\n};\n\n\n/**\n * Cast values in the correct type depending on the property.\n * @param {string} key Key.\n * @param {string} value Value.\n * @return {number|boolean|string} The casted value corresponding to the key.\n * @private\n */\nexports.castValue_ = function(key, value) {\n  const numProperties = [\n    ngeoFormatFeatureProperties.ANGLE,\n    ngeoFormatFeatureProperties.OPACITY,\n    ngeoFormatFeatureProperties.SIZE,\n    ngeoFormatFeatureProperties.STROKE,\n    'pointRadius',\n    'strokeWidth'\n  ];\n  const boolProperties = [\n    ngeoFormatFeatureProperties.IS_CIRCLE,\n    ngeoFormatFeatureProperties.IS_RECTANGLE,\n    ngeoFormatFeatureProperties.IS_TEXT,\n    ngeoFormatFeatureProperties.SHOW_MEASURE,\n    ngeoFormatFeatureProperties.SHOW_LABEL,\n    'isCircle',\n    'isRectangle',\n    'isLabel',\n    'showMeasure',\n    'showLabel'\n  ];\n\n  if (olArray.includes(numProperties, key)) {\n    return +value;\n  } else if (olArray.includes(boolProperties, key)) {\n    return (value === 'true') ? true : false;\n  } else {\n    return value;\n  }\n};\n\n\n/**\n * From a logical sequence of characters, create and return an object of\n * style properties for a feature. The values are cast in the correct type\n * depending on the property. Some properties are also deleted when they don't\n * match the geometry of the feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, boolean|number|string>} The style properties for\n *     the feature.\n * @private\n */\nexports.getStyleProperties_ = function(text, feature) {\n  const parts = text.split('\\'');\n  const properties = {};\n\n  for (let i = 0; i < parts.length; ++i) {\n    const part = decodeURIComponent(parts[i]);\n    const keyVal = part.split('*');\n    googAsserts.assert(keyVal.length === 2);\n    const key = keyVal[0];\n    const val = keyVal[1];\n\n    properties[key] = exports.castValue_(key, val);\n  }\n\n  return properties;\n};\n\n\n/**\n * Encode a {@link ol.geom.LineString} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomLineString);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `l(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode a {@link ol.geom.MultiLineString} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiLineString);\n  const ends = geometry.getEnds();\n  const lineStringCount = ends.length;\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  let offset = 0;\n  const textArray = ['L('];\n  for (let i = 0; i < lineStringCount; ++i) {\n    const end = ends[i];\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = end;\n  }\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode a {@link ol.geom.Point} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `p(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoint} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `P(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Helper to encode an {@link ol.geom.Polygon} geometry.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {Array.<string>} textArray Text array.\n * @return {number} The new offset.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.encodeRings_ = function(flatCoordinates, stride, offset, ends, textArray) {\n  const linearRingCount = ends.length;\n  for (let i = 0; i < linearRingCount; ++i) {\n    // skip the \"closing\" point\n    const end = ends[i] - stride;\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = ends[i];\n  }\n  return offset;\n};\n\n\n/**\n * Encode an {@link ol.geom.Polygon} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const ends = geometry.getEnds();\n  const offset = 0;\n  const textArray = ['a('];\n  exports.encodeRings_.call(this,\n    flatCoordinates, stride, offset, ends, textArray);\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoligon} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const endss = geometry.getEndss();\n  const polygonCount = endss.length;\n  let offset = 0;\n  const textArray = ['A'];\n  for (let i = 0; i < polygonCount; ++i) {\n    const ends = endss[i];\n    textArray.push('(');\n    offset = exports.encodeRings_.call(this,\n      flatCoordinates, stride, offset, ends, textArray);\n    textArray.push(')');\n  }\n  return textArray.join('');\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(string):ol.geom.Geometry>}\n */\nexports.GEOMETRY_READERS_ = {\n  'P': exports.readMultiPointGeometry_,\n  'L': exports.readMultiLineStringGeometry_,\n  'A': exports.readMultiPolygonGeometry_,\n  'l': exports.readLineStringGeometry_,\n  'p': exports.readPointGeometry_,\n  'a': exports.readPolygonGeometry_\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(ol.geom.Geometry):string>}\n */\nexports.GEOMETRY_WRITERS_ = {\n  'MultiLineString': exports.writeMultiLineStringGeometry_,\n  'MultiPoint': exports.writeMultiPointGeometry_,\n  'MultiPolygon': exports.writeMultiPolygonGeometry_,\n  'LineString': exports.writeLineStringGeometry_,\n  'Point': exports.writePointGeometry_,\n  'Polygon': exports.writePolygonGeometry_\n};\n\n\n/**\n * Read a logical sequence of characters and return (or complete then return)\n * an array of numbers. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * corresponding to a geometry's coordinates.\n * @param {string} text Text.\n * @param {Array.<number>=} opt_flatCoordinates Flat coordinates array.\n * @return {Array.<number>} Flat coordinates.\n * @private\n */\nexports.prototype.decodeCoordinates_ = function(text, opt_flatCoordinates) {\n  const len = text.length;\n  let index = 0;\n  const flatCoordinates = opt_flatCoordinates !== undefined ?\n    opt_flatCoordinates : [];\n  let i = flatCoordinates.length;\n  while (index < len) {\n    let b;\n    let shift = 0;\n    let result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dx = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevX_ += dx;\n    shift = 0;\n    result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dy = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevY_ += dy;\n    flatCoordinates[i++] = this.prevX_ * this.accuracy_;\n    flatCoordinates[i++] = this.prevY_ * this.accuracy_;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * Encode an array of number (corresponding to some coordinates) into a\n * logical sequence of characters. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @return {string} String.\n * @private\n */\nexports.prototype.encodeCoordinates_ = function(flatCoordinates, stride, offset, end) {\n  let encodedCoordinates = '';\n  for (let i = offset; i < end; i += stride) {\n    let x = flatCoordinates[i];\n    let y = flatCoordinates[i + 1];\n    x = Math.floor(x / this.accuracy_);\n    y = Math.floor(y / this.accuracy_);\n    const dx = x - this.prevX_;\n    const dy = y - this.prevY_;\n    this.prevX_ = x;\n    this.prevY_ = y;\n    encodedCoordinates += exports.encodeSignedNumber_(dx) +\n        exports.encodeSignedNumber_(dy);\n  }\n  return encodedCoordinates;\n};\n\n\n/**\n * Read a feature from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @protected\n * @override\n */\nexports.prototype.readFeatureFromText = function(text, opt_options) {\n  googAsserts.assert(text.length > 2);\n  googAsserts.assert(text[1] === '(');\n  googAsserts.assert(text[text.length - 1] === ')');\n  let splitIndex = text.indexOf('~');\n  const geometryText = splitIndex >= 0 ?\n    `${text.substring(0, splitIndex)})` : text;\n  const geometry = this.readGeometryFromText(geometryText, opt_options);\n  const feature = new olFeature(geometry);\n  if (splitIndex >= 0) {\n    const attributesAndStylesText = text.substring(\n      splitIndex + 1, text.length - 1);\n    splitIndex = attributesAndStylesText.indexOf('~');\n    const attributesText = splitIndex >= 0 ?\n      attributesAndStylesText.substring(0, splitIndex) :\n      attributesAndStylesText;\n    if (attributesText != '') {\n      const parts = attributesText.split('\\'');\n      for (let i = 0; i < parts.length; ++i) {\n        const part = decodeURIComponent(parts[i]);\n        const keyVal = part.split('*');\n        googAsserts.assert(keyVal.length === 2);\n        let key = keyVal[0];\n        const value = keyVal[1];\n        if (!this.setStyle_ && exports.LegacyProperties_[key]) {\n          key = exports.LegacyProperties_[key];\n        }\n        feature.set(key, exports.castValue_(key, value));\n      }\n    }\n    if (splitIndex >= 0) {\n      const stylesText = attributesAndStylesText.substring(splitIndex + 1);\n      if (this.setStyle_) {\n        exports.setStyleInFeature_(stylesText, feature);\n      } else {\n        exports.setStyleProperties_(stylesText, feature);\n      }\n    }\n  }\n  return feature;\n};\n\n\n/**\n * Read multiple features from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @protected\n * @override\n */\nexports.prototype.readFeaturesFromText = function(text, opt_options) {\n  googAsserts.assert(text[0] === 'F');\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  text = text.substring(1);\n  while (text.length > 0) {\n    const index = text.indexOf(')');\n    googAsserts.assert(index >= 0);\n    const feature = this.readFeatureFromText(\n      text.substring(0, index + 1), opt_options);\n    features.push(feature);\n    text = text.substring(index + 1);\n  }\n  return features;\n};\n\n\n/**\n * Read a geometry from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @protected\n * @override\n */\nexports.prototype.readGeometryFromText = function(text, opt_options) {\n  const geometryReader = exports.GEOMETRY_READERS_[text[0]];\n  googAsserts.assert(geometryReader !== undefined);\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryReader.call(this, text);\n};\n\n\n/**\n * Encode a feature into a logical sequence of characters.\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded feature.\n * @protected\n * @override\n */\nexports.prototype.writeFeatureText = function(feature, opt_options) {\n  const /** @type {Array.<string>} */ encodedParts = [];\n\n  // encode geometry\n\n  let encodedGeometry = '';\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    encodedGeometry = this.writeGeometryText(geometry, opt_options);\n  }\n\n  if (encodedGeometry.length > 0) {\n    // remove the final bracket\n    googAsserts.assert(encodedGeometry[encodedGeometry.length - 1] === ')');\n    encodedGeometry = encodedGeometry.substring(0, encodedGeometry.length - 1);\n    encodedParts.push(encodedGeometry);\n  }\n\n  // encode properties\n\n  const /** @type {Array.<string>} */ encodedProperties = [];\n  const propFunction = this.propertiesFunction_(feature);\n  for (const key in propFunction) {\n    const value = propFunction[key];\n    if (value !== undefined && value !== null && key !== feature.getGeometryName()) {\n      if (encodedProperties.length !== 0) {\n        encodedProperties.push('\\'');\n      }\n      const encoded = encodeURIComponent(\n        `${key.replace(/[()'*]/g, '_')}*${\n          value.toString().replace(/[()'*]/g, '_')}`);\n      encodedProperties.push(encoded);\n    }\n  }\n\n  if (encodedProperties.length > 0) {\n    encodedParts.push('~');\n    Array.prototype.push.apply(encodedParts, encodedProperties);\n  }\n\n  // encode styles\n\n  if (this.encodeStyles_) {\n    const styleFunction = feature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      let styles = styleFunction.call(feature, 0);\n      if (styles !== null) {\n        const encodedStyles = [];\n        styles = Array.isArray(styles) ? styles : [styles];\n        exports.encodeStyles_(\n          styles, geometry.getType(), encodedStyles);\n        if (encodedStyles.length > 0) {\n          encodedParts.push('~');\n          Array.prototype.push.apply(encodedParts, encodedStyles);\n        }\n      }\n    }\n  }\n\n  // append the closing bracket and return the encoded feature\n\n  encodedParts.push(')');\n  return encodedParts.join('');\n};\n\n\n/**\n * Encode an array of features into a logical sequence of characters.\n * @param {Array.<ol.Feature>} features Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded features.\n * @protected\n * @override\n */\nexports.prototype.writeFeaturesText = function(features, opt_options) {\n  const textArray = [];\n  if (features.length > 0) {\n    textArray.push('F');\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      textArray.push(this.writeFeatureText(features[i], opt_options));\n    }\n  }\n  return textArray.join('');\n};\n\n\n/**\n * Encode a geometry into a logical sequence of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded geometry.\n * @protected\n * @override\n */\nexports.prototype.writeGeometryText = function(geometry, opt_options) {\n  const geometryWriter = exports.GEOMETRY_WRITERS_[\n    geometry.getType()];\n  googAsserts.assert(geometryWriter !== undefined);\n  const transformedGeometry = /** @type {ol.geom.Geometry} */\n      (olFormatFeature.transformWithOptions(geometry, true, opt_options));\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryWriter.call(this, transformedGeometry);\n};\n\n\nexport default exports;\n","/**\n * @module gmf.contextualdata.component\n */\nimport gmfRasterRasterService from 'gmf/raster/RasterService.js';\nimport googAsserts from 'goog/asserts.js';\nimport olOverlay from 'ol/Overlay.js';\nimport * as olProj from 'ol/proj.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('gmfContextualdata', [\n  gmfRasterRasterService.module.name,\n]);\n\n\n/**\n * Provide a directive responsible of displaying contextual data after a right\n * click on the map.\n *\n * This directive doesn't require being rendered in a visible DOM element.\n * It's usually added to the element where the map directive is also added.\n *\n * Example:\n *\n *     <gmf-map gmf-map-map=\"mainCtrl.map\"\n *         gmf-contextualdata\n *         gmf-contextualdata-map=\"::mainCtrl.map\"\n *         gmf-contextualdata-projections=\"::[21781,4326]\">\n *\n * The content of the popover is managed in a partial that must be defined\n * using the `gmfContextualdatacontentTemplateUrl` value. See\n * {@link gmf.contextualdatacontentDirective} for more details.\n *\n * One can also provide a `gmf-contextualdata-callback` attribute in order to\n * do some additional computing on the coordinate or the values received for\n * the raster service. The callback function is called with the coordinate of\n * the clicked point and the response data from the server. It is intended to\n * return an object of additional properties to add to the scope.\n *\n * See the [../examples/contribs/gmf/contextualdata.html](../examples/contribs/gmf/contextualdata.html) example for a usage sample.\n *\n * @htmlAttribute {ol.Map} map The map.\n * @htmlAttribute {Array<number>} projections The list of projections.\n * @htmlAttribute {Function} callback A function called after server\n *    (raster) data is received in case some additional computing is required.\n *    Optional.\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname gmfContextualdata\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    scope: false,\n    controller: 'GmfContextualdataController as cdCtrl',\n    bindToController: {\n      'map': '<gmfContextualdataMap',\n      'projections': '<gmfContextualdataProjections',\n      'callback': '<gmfContextualdataCallback'\n    },\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {gmf.contextualdata.component.Controller_} controller Controller.\n     */\n    link: (scope, element, attrs, controller) => {\n      controller.init();\n    }\n  };\n};\n\nexports.directive('gmfContextualdata',\n  exports.directive_);\n\n\n/**\n *\n * @param {angular.$compile} $compile Angular compile service.\n * @param {!angular.Scope} $scope Scope.\n * @param {gmf.raster.RasterService} gmfRaster Gmf Raster service\n *\n * @constructor\n * @private\n * @ngdoc controller\n * @ngInject\n */\nexports.Controller_ = function($compile, $scope, gmfRaster) {\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {Array<number>}\n   * @export\n   */\n  this.projections;\n\n  /**\n   * @type {function(ol.Coordinate, Object):Object}\n   * @export\n   */\n  this.callback;\n\n  /**\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.overlay_;\n\n  /**\n   * @type {angular.$compile}\n   * @private\n   */\n  this.$compile_ = $compile;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {gmf.raster.RasterService}\n   * @private\n   */\n  this.gmfRaster_ = gmfRaster;\n\n  angular.element('body').on('mousedown', this.hidePopover.bind(this));\n};\n\n/**\n *\n */\nexports.Controller_.prototype.init = function() {\n  this.preparePopover_();\n\n  const mapDiv = this.map.getTargetElement();\n  googAsserts.assertElement(mapDiv);\n\n  olEvents.listen(mapDiv, 'contextmenu',\n    this.handleMapContextMenu_, this);\n};\n\n/**\n * @param {!Event} event Event.\n * @private\n */\nexports.Controller_.prototype.handleMapContextMenu_ = function(event) {\n  this.$scope_.$apply(() => {\n    const pixel = this.map.getEventPixel(event);\n    const coordinate = this.map.getCoordinateFromPixel(pixel);\n    this.setContent_(coordinate);\n    event.preventDefault();\n    this.hidePopover();\n    this.showPopover();\n    this.overlay_.setPosition(coordinate);\n  });\n};\n\nexports.Controller_.prototype.setContent_ = function(coordinate) {\n  const scope = this.$scope_.$new(true);\n  this.$compile_(this.content_)(scope);\n\n  const mapProjection = this.map.getView().getProjection().getCode();\n  this.projections.forEach((proj) => {\n    const coord = olProj.transform(coordinate, mapProjection, `EPSG:${proj}`);\n    scope[`coord_${proj}`] = coord;\n    scope[`coord_${proj}_eastern`] = coord[0];\n    scope[`coord_${proj}_northern`] = coord[1];\n  });\n\n  const getRasterSuccess = function(resp) {\n    olObj.assign(scope, resp);\n    if (this.callback) {\n      olObj.assign(scope, this.callback.call(this, coordinate, resp));\n    }\n  }.bind(this);\n  const getRasterError = function(resp) {\n    console.error('Error on getting the raster.');\n  };\n  this.gmfRaster_.getRaster(coordinate).then(\n    getRasterSuccess,\n    getRasterError\n  );\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.preparePopover_ = function() {\n\n  const container = document.createElement('DIV');\n  container.classList.add('popover');\n  container.classList.add('bottom');\n  container.classList.add('gmf-contextualdata');\n  angular.element(container).css('position', 'relative');\n  const arrow = document.createElement('DIV');\n  arrow.classList.add('arrow');\n  container.appendChild(arrow);\n  this.content_ = document.createElement('DIV');\n  this.content_.setAttribute('gmf-contextualdatacontent', '');\n  this.content_.classList.add('popover-content');\n  container.appendChild(this.content_);\n\n  this.overlay_ = new olOverlay({\n    element: container,\n    stopEvent: true,\n    autoPan: true,\n    autoPanAnimation: /** @type {olx.animation.PanOptions} */ ({\n      duration: 250\n    }),\n    positioning: 'top-center'\n  });\n  this.map.addOverlay(this.overlay_);\n};\n\nexports.Controller_.prototype.showPopover = function() {\n  const element = /** @type {Object} */ (this.overlay_.getElement());\n  angular.element(element).css('display', 'block');\n};\n\nexports.Controller_.prototype.hidePopover = function() {\n  const element = /** @type {Object} */ (this.overlay_.getElement());\n  angular.element(element).css('display', 'none');\n};\n\nexports.controller('GmfContextualdataController', exports.Controller_);\n\n\n/**\n * Provide a directive responsible of formatting the content of the popover for\n * the contextual data directive.\n *\n * Its main purpose is to configure the template to be used.\n * Integrators should ensure that the template values match the configuration\n * of the contextual data directive.\n *\n * For each projection the following expressions can be used (replace xxxx by\n * the relevant projection code:\n *  - {{coord_xxxx}},\n *  - {{coord_xxxx_eastern}},\n *  - {{coord_xxxx_northern}}\n *\n * Tip: one should use the `ngeoNumberCoordinates` and `ngeoDMSCoordinates`.\n *\n * The raster service is requested to query additional information. The\n * integrators can also use `{{xxxx}}` where `xxxx` will be replaced by\n * the name of the raster layers (for example 'srtm').\n *\n * See the [../examples/contribs/gmf/contextualdata.html](../examples/contribs/gmf/contextualdata.html) example for a usage sample.\n *\n * @param {string} gmfContextualdatacontentTemplateUrl Url to template.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfContextualdatacontent\n */\nexports.contentDirective_ = function(\n  gmfContextualdatacontentTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    templateUrl: gmfContextualdatacontentTemplateUrl\n  };\n};\n\nexports.directive('gmfContextualdatacontent', exports.contentDirective_);\n\n\nexport default exports;\n","/**\n * @module gmf.contextualdata.module\n */\nimport gmfContextualdataComponent from 'gmf/contextualdata/component.js';\n\nimport './contextualdata.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfContextualdataModule', [\n  gmfContextualdataComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.print.VectorEncoder\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport * as olMath from 'ol/math.js';\nimport olStyleIcon from 'ol/style/Icon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport * as olColor from 'ol/color.js';\n\n/**\n * @constructor\n */\nconst exports = function() {\n  /**\n   * @type {ol.format.GeoJSON}\n   */\n  this.geojsonFormat = new olFormatGeoJSON();\n};\n\n\n/**\n * @enum {string}\n */\nexports.PrintStyleType = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.print.VectorEncoder.PrintStyleType>}\n * @private\n */\nexports.PrintStyleTypes_ = {\n  'LineString': exports.PrintStyleType.LINE_STRING,\n  'Point': exports.PrintStyleType.POINT,\n  'Polygon': exports.PrintStyleType.POLYGON,\n  'MultiLineString': exports.PrintStyleType.LINE_STRING,\n  'MultiPoint': exports.PrintStyleType.POINT,\n  'MultiPolygon': exports.PrintStyleType.POLYGON\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Vector} layer Layer.\n * @param {number} resolution Resolution.\n */\nexports.prototype.encodeVectorLayer = function(arr, layer, resolution) {\n  const source = layer.getSource();\n  googAsserts.assertInstanceof(source, olSourceVector);\n\n  const features = source.getFeatures();\n\n  const /** @type {Array.<GeoJSONFeature>} */ geojsonFeatures = [];\n  const mapfishStyleObject = /** @type {MapFishPrintVectorStyle} */ ({\n    version: 2\n  });\n\n  for (let i = 0, ii = features.length; i < ii; ++i) {\n    const originalFeature = features[i];\n\n    let styleData = null;\n    let styleFunction = originalFeature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      styleData = styleFunction.call(originalFeature, resolution);\n    } else {\n      styleFunction = layer.getStyleFunction();\n      if (styleFunction !== undefined) {\n        styleData = styleFunction.call(layer, originalFeature, resolution);\n      }\n    }\n    const origGeojsonFeature = this.geojsonFormat.writeFeatureObject(originalFeature);\n    /**\n     * @type {Array<ol.style.Style>}\n     */\n    const styles = (styleData !== null && !Array.isArray(styleData)) ? [styleData] : styleData;\n    googAsserts.assert(Array.isArray(styles));\n\n    if (styles !== null && styles.length > 0) {\n      let isOriginalFeatureAdded = false;\n      for (let j = 0, jj = styles.length; j < jj; ++j) {\n        const style = styles[j];\n        const styleId = olBase.getUid(style).toString();\n        let geometry = style.getGeometry();\n        let geojsonFeature;\n        if (!geometry) {\n          geojsonFeature = origGeojsonFeature;\n          geometry = originalFeature.getGeometry();\n          // no need to encode features with no geometry\n          if (!geometry) {\n            continue;\n          }\n          if (!isOriginalFeatureAdded) {\n            geojsonFeatures.push(geojsonFeature);\n            isOriginalFeatureAdded = true;\n          }\n        } else {\n          let styledFeature = originalFeature.clone();\n          styledFeature.setGeometry(geometry);\n          geojsonFeature = this.geojsonFormat.writeFeatureObject(styledFeature);\n          geometry = styledFeature.getGeometry();\n          styledFeature = null;\n          geojsonFeatures.push(geojsonFeature);\n        }\n\n        const geometryType = geometry.getType();\n        if (geojsonFeature.properties === null) {\n          geojsonFeature.properties = {};\n        }\n\n        const featureStyleProp = `_ngeo_style_${j}`;\n        this.encodeVectorStyle(mapfishStyleObject, geometryType, style, styleId, featureStyleProp);\n        geojsonFeature.properties[featureStyleProp] = styleId;\n      }\n    }\n  }\n\n  // MapFish Print fails if there are no style rules, even if there are no\n  // features either. To work around this we just ignore the layer if the\n  // array of GeoJSON features is empty.\n  // See https://github.com/mapfish/mapfish-print/issues/279\n\n  if (geojsonFeatures.length > 0) {\n    const geojsonFeatureCollection = /** @type {GeoJSONFeatureCollection} */ ({\n      type: 'FeatureCollection',\n      features: geojsonFeatures\n    });\n    const object = /** @type {MapFishPrintVectorLayer} */ ({\n      geoJson: geojsonFeatureCollection,\n      opacity: layer.getOpacity(),\n      style: mapfishStyleObject,\n      type: 'geojson'\n    });\n    arr.push(object);\n  }\n};\n\n\n/**\n * @param {MapFishPrintVectorStyle} object MapFish style object.\n * @param {ol.geom.GeometryType} geometryType Type of the GeoJSON geometry\n * @param {ol.style.Style} style Style.\n * @param {string} styleId Style id.\n * @param {string} featureStyleProp Feature style property name.\n */\nexports.prototype.encodeVectorStyle = function(object, geometryType, style, styleId, featureStyleProp) {\n  if (!(geometryType in exports.PrintStyleTypes_)) {\n    // unsupported geometry type\n    return;\n  }\n  const styleType = exports.PrintStyleTypes_[geometryType];\n  const key = `[${featureStyleProp} = '${styleId}']`;\n  if (key in object) {\n    // do nothing if we already have a style object for this CQL rule\n    return;\n  }\n  const styleObject = /** @type {MapFishPrintSymbolizers} */ ({\n    symbolizers: []\n  });\n  object[key] = styleObject;\n  const fillStyle = style.getFill();\n  const imageStyle = style.getImage();\n  const strokeStyle = style.getStroke();\n  const textStyle = style.getText();\n  if (styleType === exports.PrintStyleType.POLYGON) {\n    if (fillStyle !== null) {\n      this.encodeVectorStylePolygon(\n        styleObject.symbolizers, fillStyle, strokeStyle);\n    }\n  } else if (styleType === exports.PrintStyleType.LINE_STRING) {\n    if (strokeStyle !== null) {\n      this.encodeVectorStyleLine(styleObject.symbolizers, strokeStyle);\n    }\n  } else if (styleType === exports.PrintStyleType.POINT) {\n    if (imageStyle !== null) {\n      this.encodeVectorStylePoint(styleObject.symbolizers, imageStyle);\n    }\n  }\n  if (textStyle !== null) {\n    this.encodeTextStyle(styleObject.symbolizers, textStyle);\n  }\n};\n\n\n/**\n * @param {MapFishPrintSymbolizerPoint|MapFishPrintSymbolizerPolygon} symbolizer MapFish Print symbolizer.\n * @param {!ol.style.Fill} fillStyle Fill style.\n * @protected\n */\nexports.prototype.encodeVectorStyleFill = function(symbolizer, fillStyle) {\n  let fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(typeof fillColor === 'string' || Array.isArray(fillColor));\n    fillColor = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    symbolizer.fillColor = ngeoUtils.rgbArrayToHex(fillColor);\n    symbolizer.fillOpacity = fillColor[3];\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintSymbolizer>} symbolizers Array of MapFish Print\n *     symbolizers.\n * @param {!ol.style.Stroke} strokeStyle Stroke style.\n * @protected\n */\nexports.prototype.encodeVectorStyleLine = function(symbolizers, strokeStyle) {\n  const symbolizer = /** @type {MapFishPrintSymbolizerLine} */ ({\n    type: 'line'\n  });\n  this.encodeVectorStyleStroke(symbolizer, strokeStyle);\n  symbolizers.push(symbolizer);\n};\n\n\n/**\n * @param {Array.<MapFishPrintSymbolizer>} symbolizers Array of MapFish Print\n *     symbolizers.\n * @param {!ol.style.Image} imageStyle Image style.\n * @protected\n */\nexports.prototype.encodeVectorStylePoint = function(symbolizers, imageStyle) {\n  let symbolizer;\n  if (imageStyle instanceof olStyleCircle) {\n    symbolizer = /** @type {MapFishPrintSymbolizerPoint} */ ({\n      type: 'point'\n    });\n    symbolizer.pointRadius = imageStyle.getRadius();\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      this.encodeVectorStyleFill(symbolizer, fillStyle);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      this.encodeVectorStyleStroke(symbolizer, strokeStyle);\n    }\n  } else if (imageStyle instanceof olStyleIcon) {\n    const src = imageStyle.getSrc();\n    if (src !== undefined) {\n      symbolizer = /** @type {MapFishPrintSymbolizerPoint} */ ({\n        type: 'point',\n        externalGraphic: src\n      });\n      const opacity = imageStyle.getOpacity();\n      if (opacity !== null) {\n        symbolizer.graphicOpacity = opacity;\n      }\n      const size = imageStyle.getSize();\n      if (size !== null) {\n        let scale = imageStyle.getScale();\n        if (isNaN(scale)) {\n          scale = 1;\n        }\n        symbolizer.graphicWidth = size[0] * scale;\n        symbolizer.graphicHeight = size[1] * scale;\n      }\n      let rotation = imageStyle.getRotation();\n      if (isNaN(rotation)) {\n        rotation = 0;\n      }\n      symbolizer.rotation = olMath.toDegrees(rotation);\n    }\n  } else if (imageStyle instanceof olStyleRegularShape) {\n    /**\n     * Mapfish Print does not support image defined with ol.style.RegularShape.\n     * As a workaround, I try to map the image on a well-known image name.\n     */\n    const points = /** @type {ol.style.RegularShape} */ (imageStyle).getPoints();\n    if (points !== null) {\n      symbolizer = /** @type {MapFishPrintSymbolizerPoint} */ ({\n        type: 'point'\n      });\n      if (points === 4) {\n        symbolizer.graphicName = 'square';\n      } else if (points === 3) {\n        symbolizer.graphicName = 'triangle';\n      } else if (points === 5) {\n        symbolizer.graphicName = 'star';\n      } else if (points === 8) {\n        symbolizer.graphicName = 'cross';\n      }\n      const sizeShape = imageStyle.getSize();\n      if (sizeShape !== null) {\n        symbolizer.graphicWidth = sizeShape[0];\n        symbolizer.graphicHeight = sizeShape[1];\n      }\n      const rotationShape = imageStyle.getRotation();\n      if (!isNaN(rotationShape) && rotationShape !== 0) {\n        symbolizer.rotation = olMath.toDegrees(rotationShape);\n      }\n      const opacityShape = imageStyle.getOpacity();\n      if (opacityShape !== null) {\n        symbolizer.graphicOpacity = opacityShape;\n      }\n      const strokeShape = imageStyle.getStroke();\n      if (strokeShape !== null) {\n        this.encodeVectorStyleStroke(symbolizer, strokeShape);\n      }\n      const fillShape = imageStyle.getFill();\n      if (fillShape !== null) {\n        this.encodeVectorStyleFill(symbolizer, fillShape);\n      }\n    }\n  }\n  if (symbolizer !== undefined) {\n    symbolizers.push(symbolizer);\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintSymbolizer>} symbolizers Array of MapFish Print\n *     symbolizers.\n * @param {!ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @protected\n */\nexports.prototype.encodeVectorStylePolygon = function(symbolizers, fillStyle, strokeStyle) {\n  const symbolizer = /** @type {MapFishPrintSymbolizerPolygon} */ ({\n    type: 'polygon'\n  });\n  this.encodeVectorStyleFill(symbolizer, fillStyle);\n  if (strokeStyle !== null) {\n    this.encodeVectorStyleStroke(symbolizer, strokeStyle);\n  }\n  symbolizers.push(symbolizer);\n};\n\n\n/**\n * @param {MapFishPrintSymbolizerPoint|MapFishPrintSymbolizerLine|MapFishPrintSymbolizerPolygon}\n *      symbolizer MapFish Print symbolizer.\n * @param {!ol.style.Stroke} strokeStyle Stroke style.\n * @protected\n */\nexports.prototype.encodeVectorStyleStroke = function(symbolizer, strokeStyle) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(typeof strokeColor === 'string' || Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    symbolizer.strokeColor = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    symbolizer.strokeOpacity = strokeColorRgba[3];\n  }\n  const strokeDashstyle = strokeStyle.getLineDash();\n  if (strokeDashstyle !== null) {\n    symbolizer.strokeDashstyle = strokeDashstyle.join(' ');\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    symbolizer.strokeWidth = strokeWidth;\n  }\n  const strokeLineCap = strokeStyle.getLineCap();\n  if (strokeLineCap) {\n    symbolizer.strokeLinecap = strokeStyle.getLineCap();\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintSymbolizerText>} symbolizers Array of MapFish Print\n *     symbolizers.\n * @param {!ol.style.Text} textStyle Text style.\n * @protected\n */\nexports.prototype.encodeTextStyle = function(symbolizers, textStyle) {\n  const symbolizer = /** @type {MapFishPrintSymbolizerText} */ ({\n    type: 'Text'\n  });\n  const label = textStyle.getText();\n  if (label !== undefined) {\n    symbolizer.label = label;\n    let xAlign = 'c';\n    let yAlign = 'm';\n\n    const olTextAlign = textStyle.getTextAlign();\n    // 'left', 'right', 'center', 'end' or 'start'.\n    if (olTextAlign === 'left' || olTextAlign === 'start') {\n      xAlign = 'l';\n    } else if (olTextAlign === 'right' || olTextAlign === 'end') {\n      xAlign = 'r';\n    }\n\n    const olTextBaseline = textStyle.getTextBaseline();\n    // 'bottom', 'top', 'middle', 'alphabetic', 'hanging' or 'ideographic'\n    if (olTextBaseline === 'bottom') {\n      yAlign = 'l';\n    } else if (olTextBaseline === 'top') {\n      yAlign = 't';\n    }\n    symbolizer.labelAlign = `${xAlign}${yAlign}`;\n\n    const labelRotation = textStyle.getRotation();\n    if (labelRotation !== undefined) {\n      // Mapfish Print expects a string, not a number to rotate text\n      symbolizer.labelRotation = (labelRotation * 180 / Math.PI).toString();\n      // rotate around the vertical/horizontal center\n      symbolizer.labelAlign = 'cm';\n    }\n\n    const fontStyle = textStyle.getFont();\n    if (fontStyle !== undefined) {\n      const font = fontStyle.split(' ');\n      if (font.length >= 3) {\n        symbolizer.fontWeight = font[0];\n        symbolizer.fontSize = font[1];\n        symbolizer.fontFamily = font.splice(2).join(' ');\n      }\n    }\n\n    const strokeStyle = textStyle.getStroke();\n    if (strokeStyle !== null) {\n      const strokeColor = strokeStyle.getColor();\n      googAsserts.assert(typeof strokeColor === 'string' || Array.isArray(strokeColor));\n      const strokeColorRgba = olColor.asArray(strokeColor);\n      googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n      symbolizer.haloColor = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n      symbolizer.haloOpacity = strokeColorRgba[3];\n      const width = strokeStyle.getWidth();\n      if (width !== undefined) {\n        // Width is a stroke, radius a radius, so divide by 2\n        symbolizer.haloRadius = width / 2;\n      }\n    }\n\n    const fillStyle = textStyle.getFill();\n    if (fillStyle !== null) {\n      const fillColor = fillStyle.getColor();\n      googAsserts.assert(typeof fillColor === 'string' || Array.isArray(fillColor));\n      const fillColorRgba = olColor.asArray(fillColor);\n      googAsserts.assert(Array.isArray(fillColorRgba), 'only supporting fill colors');\n      symbolizer.fontColor = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    }\n\n    // Mapfish Print allows offset only if labelAlign is defined.\n    if (symbolizer.labelAlign !== undefined) {\n      symbolizer.labelXOffset = textStyle.getOffsetX();\n      // Mapfish uses the opposite direction of OpenLayers for y axis, so the\n      // minus sign is required for the y offset to be identical.\n      symbolizer.labelYOffset = -textStyle.getOffsetY();\n    }\n\n    symbolizers.push(symbolizer);\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.print.Service\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoPrintVectorEncoder from 'ngeo/print/VectorEncoder.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olArray from 'ol/array.js';\nimport * as olObj from 'ol/obj.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olMath from 'ol/math.js';\nimport * as olSize from 'ol/size.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport olTilegridWMTS from 'ol/tilegrid/WMTS.js';\n\n/**\n * Provides a function to create ngeo.print.Service objects used to\n * interact with MapFish Print v3 services.\n *\n * ngeo.print.Service objects expose the following methods:\n *\n * - createSpec: create a report specification object\n * - createReport: send a create report request\n * - getStatus: get the status of a report\n * - getReportUrl: get the URL of a report\n * - getCapabilities: get the capabilities of the server\n *\n *\n *     let printBaseUrl = 'http://example.com/print';\n *     let print = new ngeo.print.Service(printBaseUrl);\n *\n *     let scale = 5000;\n *     let dpi = 72;\n *     let layout = 'A4 portrait';\n *     let format = 'pdf';\n *     let reportSpec = print.createSpec(map, scale, dpi, layout, format, {\n *       'title': 'A title for my report',\n *       'rotation': 45 // degree\n *     });\n *\n * See our live example: [../examples/mapfishprint.html](../examples/mapfishprint.html)\n *\n * TODO and limitations:\n *\n * - createSpec should also accept a bbox instead of a center and a scale.\n * - Add support for ol.style.RegularShape. MapFish Print supports symbols\n *   like crosses, stars and squares, so printing regular shapes should be\n *   possible.\n * - ol.style.Icon may use a sprite image, and offsets to define to rectangle\n *   to use within the sprite. This type of icons won't be printed correctly\n *   as MapFish Print does not support sprite icons.\n *\n * @constructor\n * @struct\n * @param {string} url URL to MapFish print web service.\n * @param {angular.$http} $http Angular $http service.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper service.\n */\nconst exports = function(url, $http, ngeoLayerHelper) {\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = url;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.print.VectorEncoder}\n   * @private\n   */\n  this.vectorEncoder_ = new ngeoPrintVectorEncoder();\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.printNativeAngle_ = true;\n};\n\n\n/**\n * Cancel a report.\n * @param {string} ref Print report reference.\n * @param {angular.$http.Config=} opt_httpConfig $http config object.\n * @return {angular.$http.HttpPromise} HTTP promise.\n * @export\n */\nexports.prototype.cancel = function(ref, opt_httpConfig) {\n  const httpConfig = opt_httpConfig !== undefined ? opt_httpConfig :\n    /** @type {angular.$http.Config} */ ({});\n  const url = `${this.url_}/cancel/${ref}`;\n  // \"delete\" is a reserved word, so use ['delete']\n  return this.$http_['delete'](url, httpConfig);\n};\n\n\n/**\n * Create a report specification.\n * @param {ol.Map} map Map.\n * @param {number} scale Scale.\n * @param {number} dpi DPI.\n * @param {string} layout Layout.\n * @param {string} format Formats.\n * @param {Object.<string, *>} customAttributes Custom attributes.\n * @return {MapFishPrintSpec} The print spec.\n * @export\n */\nexports.prototype.createSpec = function(\n  map, scale, dpi, layout, format, customAttributes) {\n\n  const specMap = /** @type {MapFishPrintMap} */ ({\n    dpi: dpi,\n    rotation: /** number */ (customAttributes['rotation'])\n  });\n\n  this.encodeMap_(map, scale, specMap);\n\n  const attributes = /** @type {!MapFishPrintAttributes} */ ({\n    map: specMap\n  });\n  olObj.assign(attributes, customAttributes);\n\n  const spec = /** @type {MapFishPrintSpec} */ ({\n    attributes,\n    format,\n    layout\n  });\n\n  return spec;\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @param {number} scale Scale.\n * @param {MapFishPrintMap} object Object.\n * @private\n */\nexports.prototype.encodeMap_ = function(map, scale, object) {\n  const view = map.getView();\n  const viewCenter = view.getCenter();\n  const viewProjection = view.getProjection();\n  const viewResolution = view.getResolution();\n  const viewRotation = object.rotation || olMath.toDegrees(view.getRotation());\n\n  googAsserts.assert(viewCenter !== undefined);\n  googAsserts.assert(viewProjection !== undefined);\n\n  object.center = viewCenter;\n  object.projection = viewProjection.getCode();\n  object.rotation = viewRotation;\n  object.scale = scale;\n  object.layers = [];\n\n  const mapLayerGroup = map.getLayerGroup();\n  googAsserts.assert(mapLayerGroup);\n  this.printNativeAngle_ = !(mapLayerGroup.get('printNativeAngle') === false);\n  let layers = this.ngeoLayerHelper_.getFlatLayers(mapLayerGroup);\n\n  // Sort the layer by ZIndex\n  olArray.stableSort(layers, (layer_a, layer_b) => layer_a.getZIndex() - layer_b.getZIndex());\n  layers = layers.slice().reverse();\n\n  layers.forEach((layer) => {\n    if (layer.getVisible()) {\n      googAsserts.assert(viewResolution !== undefined);\n      this.encodeLayer(object.layers, layer, viewResolution);\n    }\n  });\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Base} layer Layer.\n * @param {number} resolution Resolution.\n */\nexports.prototype.encodeLayer = function(arr, layer, resolution) {\n  if (layer instanceof olLayerImage) {\n    this.encodeImageLayer_(arr, layer);\n  } else if (layer instanceof olLayerTile) {\n    this.encodeTileLayer_(arr, layer);\n  } else if (layer instanceof olLayerVector) {\n    this.vectorEncoder_.encodeVectorLayer(arr, layer, resolution);\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Image} layer Layer.\n * @private\n */\nexports.prototype.encodeImageLayer_ = function(arr, layer) {\n  googAsserts.assertInstanceof(layer, olLayerImage);\n  const source = layer.getSource();\n  if (source instanceof olSourceImageWMS) {\n    this.encodeImageWmsLayer_(arr, layer);\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Image} layer Layer.\n * @private\n */\nexports.prototype.encodeImageWmsLayer_ = function(arr, layer) {\n  const source = layer.getSource();\n\n  googAsserts.assertInstanceof(layer, olLayerImage);\n  googAsserts.assertInstanceof(source, olSourceImageWMS);\n\n  const url = source.getUrl();\n  if (url !== undefined) {\n    this.encodeWmsLayer_(\n      arr, layer.getOpacity(), url, source.getParams());\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {number} opacity Opacity of the layer.\n * @param {string} url Url of the WMS server.\n * @param {Object} params Url parameters\n * @private\n */\nexports.prototype.encodeWmsLayer_ = function(arr, opacity, url, params) {\n  if (url.startsWith('//')) {\n    url = window.location.protocol  + url;\n  }\n  const url_url = new URL(url);\n  const customParams = {'TRANSPARENT': true};\n  if (url_url.searchParams) {\n    for (const element of url_url.searchParams) {\n      customParams[element[0]] = element[1];\n    }\n  }\n  for (const key in params) {\n    const value = params[key];\n    // remove empty params\n    if (value !== null && value !== undefined) {\n      customParams[key] = value;\n    }\n  }\n  delete customParams['LAYERS'];\n  delete customParams['FORMAT'];\n  delete customParams['SERVERTYPE'];\n  delete customParams['VERSION'];\n\n  const object = /** @type {MapFishPrintWmsLayer} */ ({\n    baseURL: exports.getAbsoluteUrl_(url_url.origin + url_url.pathname),\n    imageFormat: 'FORMAT' in params ? params['FORMAT'] : 'image/png',\n    layers: params['LAYERS'].split(','),\n    customParams: customParams,\n    serverType: params['SERVERTYPE'],\n    type: 'wms',\n    opacity: opacity,\n    version: params['VERSION'],\n    useNativeAngle: this.printNativeAngle_,\n  });\n  arr.push(object);\n};\n\n\n/**\n * @param {string} url URL.\n * @return {string} Absolute URL.\n * @private\n */\nexports.getAbsoluteUrl_ = function(url) {\n  const a = document.createElement('a');\n  a.href = encodeURI(url);\n  return decodeURI(a.href);\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Tile} layer Layer.\n * @private\n */\nexports.prototype.encodeTileLayer_ = function(arr, layer) {\n  googAsserts.assertInstanceof(layer, olLayerTile);\n  const source = layer.getSource();\n  if (source instanceof olSourceWMTS) {\n    this.encodeTileWmtsLayer_(arr, layer);\n  } else if (source instanceof olSourceTileWMS) {\n    this.encodeTileWmsLayer_(arr, layer);\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Tile} layer Layer.\n * @private\n */\nexports.prototype.encodeTileWmtsLayer_ = function(arr, layer) {\n  googAsserts.assertInstanceof(layer, olLayerTile);\n  const source = layer.getSource();\n  googAsserts.assertInstanceof(source, olSourceWMTS);\n\n  const projection = source.getProjection();\n  const tileGrid = source.getTileGrid();\n  googAsserts.assertInstanceof(tileGrid, olTilegridWMTS);\n  const matrixIds = tileGrid.getMatrixIds();\n\n  /** @type {Array.<MapFishPrintWmtsMatrix>} */\n  const matrices = [];\n\n  for (let i = 0, ii = matrixIds.length; i < ii; ++i) {\n    const tileRange = tileGrid.getFullTileRange(i);\n    matrices.push(/** @type {MapFishPrintWmtsMatrix} */ ({\n      identifier: matrixIds[i],\n      scaleDenominator: tileGrid.getResolution(i) *\n          projection.getMetersPerUnit() / 0.28E-3,\n      tileSize: olSize.toSize(tileGrid.getTileSize(i)),\n      topLeftCorner: tileGrid.getOrigin(i),\n      matrixSize: [\n        tileRange.maxX - tileRange.minX,\n        tileRange.maxY - tileRange.minY\n      ]\n    }));\n  }\n\n  const dimensions = source.getDimensions();\n  const dimensionKeys = Object.keys(dimensions);\n\n  const object = /** @type {MapFishPrintWmtsLayer} */ ({\n    baseURL: this.getWmtsUrl_(source),\n    dimensions: dimensionKeys,\n    dimensionParams: dimensions,\n    imageFormat: source.getFormat(),\n    layer: source.getLayer(),\n    matrices: matrices,\n    matrixSet: source.getMatrixSet(),\n    opacity: layer.getOpacity(),\n    requestEncoding: source.getRequestEncoding(),\n    style: source.getStyle(),\n    type: 'WMTS',\n    version: source.getVersion()\n  });\n\n  arr.push(object);\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Tile} layer Layer.\n * @private\n */\nexports.prototype.encodeTileWmsLayer_ = function(arr, layer) {\n  const source = layer.getSource();\n\n  googAsserts.assertInstanceof(layer, olLayerTile);\n  googAsserts.assertInstanceof(source, olSourceTileWMS);\n\n  this.encodeWmsLayer_(\n    arr, layer.getOpacity(), source.getUrls()[0], source.getParams());\n};\n\n\n/**\n * Return the WMTS URL to use in the print spec.\n * @param {ol.source.WMTS} source The WMTS source.\n * @return {string} URL.\n * @private\n */\nexports.prototype.getWmtsUrl_ = function(source) {\n  const urls = source.getUrls();\n  googAsserts.assert(urls.length > 0);\n  return exports.getAbsoluteUrl_(urls[0]);\n};\n\n\n/**\n * Send a create report request to the MapFish Print service.\n * @param {MapFishPrintSpec} printSpec Print specification.\n * @param {angular.$http.Config=} opt_httpConfig $http config object.\n * @return {angular.$http.HttpPromise} HTTP promise.\n * @export\n */\nexports.prototype.createReport = function(printSpec, opt_httpConfig) {\n  const format = printSpec.format || 'pdf';\n  const url = `${this.url_}/report.${format}`;\n  const httpConfig = /** @type {!angular.$http.Config} */ ({\n    headers: {\n      'Content-Type': 'application/json; charset=UTF-8'\n    }\n  });\n  olObj.assign(httpConfig,\n    opt_httpConfig !== undefined ? opt_httpConfig : {});\n  return this.$http_.post(url, printSpec, httpConfig);\n};\n\n\n/**\n * Get the status of a report.\n * @param {string} ref Print report reference.\n * @param {angular.$http.Config=} opt_httpConfig $http config object.\n * @return {angular.$http.HttpPromise} HTTP promise.\n * @export\n */\nexports.prototype.getStatus = function(ref, opt_httpConfig) {\n  const httpConfig = opt_httpConfig !== undefined ? opt_httpConfig :\n    /** @type {angular.$http.Config} */ ({});\n  const url = `${this.url_}/status/${ref}.json`;\n  return this.$http_.get(url, httpConfig);\n};\n\n\n/**\n * Get the URL of a report.\n * @param {string} ref Print report reference.\n * @return {string} The report URL for this ref.\n * @export\n */\nexports.prototype.getReportUrl = function(ref) {\n  return `${this.url_}/report/${ref}`;\n};\n\n\n/**\n * Get the print capabilities from MapFish Print.\n * @param {angular.$http.Config=} opt_httpConfig $http config object.\n * @return {angular.$http.HttpPromise} HTTP promise.\n */\nexports.prototype.getCapabilities = function(opt_httpConfig) {\n  const httpConfig =\n    opt_httpConfig !== undefined ? opt_httpConfig : /** @type {angular.$http.Config} */ ({\n      withCredentials: true\n    });\n  const url = `${this.url_}/capabilities.json`;\n  return this.$http_.get(url, httpConfig);\n};\n\n\n/**\n * @param {angular.$http} $http Angular $http service.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @return {ngeox.CreatePrint} The function to create a print service.\n * @ngInject\n * @ngdoc service\n * @ngname ngeoCreatePrint\n */\nexports.createPrintServiceFactory = function($http, ngeoLayerHelper) {\n  return (\n    /**\n     * @param {string} url URL to MapFish print service.\n     */\n    function(url) {\n      return new exports(url, $http, ngeoLayerHelper);\n    }\n  );\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoPrint', [\n  ngeoMapLayerHelper.module.name\n]);\nexports.module.service('ngeoPrintService', exports);\nexports.module.factory('ngeoCreatePrint', exports.createPrintServiceFactory);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.editFeatureSelectorComponent\n */\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport gmfEditingEditFeatureComponent from 'gmf/editing/editFeatureComponent.js';\n\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('GmfEditingFeatureSelectorComponent', [\n  gmfEditingEditFeatureComponent.name,\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/editing/editFeatureSelectorComponent', require('./editFeatureSelectorComponent.html'));\n});\n\n\n/**\n * Directive that uses the GMF Theme service to collect the editable layers\n * and create a drop-down list out of them. When the user selects one of the\n * layer from the list, a `gmf-editfeature` directive is created and shown,\n * which allows the user to edit that layer.\n *\n * Example:\n *\n *     <gmf-editfeatureselector\n *         gmf-editfeatureselector-active=\"ctrl.editFeatureSelectorActive\"\n *         gmf-editfeatureselector-map=\"::ctrl.map\"\n *         gmf-editfeatureselector-tolerance=\"::ctrl.tolerance\"\n *         gmf-editfeatureselector-vector=\"::ctrl.vectorLayer\">\n *     </gmf-editfeatureselector>\n *\n * @htmlAttribute {boolean} gmf-editfeatureselector-active Whether the\n *     directive is active or not.\n * @htmlAttribute {ol.Map} gmf-editfeatureselector-map The map.\n * @htmlAttribute {number|undefined} gmf-editfeatureselector-tolerance The\n *     buffer in pixels to use when making queries to get the features.\n * @htmlAttribute {ol.layer.Vector} gmf-editfeatureselector-vector The vector\n *     layer where the selected or created features are drawn.\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname gmfEditfeatureselector\n */\nexports.component_ = function() {\n  return {\n    controller: 'GmfEditfeatureselectorController as efsCtrl',\n    scope: {\n      'active': '=gmfEditfeatureselectorActive',\n      'map': '<gmfEditfeatureselectorMap',\n      'tolerance': '<?gmfEditfeatureselectorTolerance',\n      'vectorLayer': '<gmfEditfeatureselectorVector'\n    },\n    bindToController: true,\n    templateUrl: 'gmf/editing/editFeatureSelectorComponent'\n  };\n};\n\n\nexports.directive('gmfEditfeatureselector',\n  exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfEditfeatureselectorController\n */\nexports.Controller_ = function($scope, $timeout, gmfThemes,\n  gmfTreeManager) {\n\n  // === Directive options ===\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active = this.active === true;\n\n  $scope.$watch(\n    () => this.active,\n    this.handleActiveChange_.bind(this)\n  );\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.tolerance;\n\n  /**\n   * @type {ol.layer.Vector}\n   * @export\n   */\n  this.vectorLayer;\n\n\n  // === Injected services ===\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @param {Array.<ngeo.layertree.Controller>} value First level controllers.\n   */\n  const updateEditableTreeCtrls = function(value) {\n    // Timeout required, because the collection event is fired before the\n    // leaf nodes are created and they are the ones we're looking for here.\n    this.$timeout_(() => {\n      if (value) {\n        const editables = this.editableTreeCtrls;\n\n        editables.length = 0;\n        this.gmfTreeManager_.rootCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.editable) {\n            googAsserts.assert(treeCtrl.children.length === 0);\n            editables.push(treeCtrl);\n          }\n        });\n      }\n    }, 0);\n  };\n\n  /**\n   * @type {function()}\n   * @private\n   */\n  this.treeCtrlsWatcherUnregister_ = $scope.$watchCollection(() => {\n    if (gmfTreeManager.rootCtrl) {\n      return gmfTreeManager.rootCtrl.children;\n    }\n  }, updateEditableTreeCtrls.bind(this));\n\n\n  // === Other inner properties ===\n\n  /**\n   * Flag shared with the `gmf-editfeature` directive used to determine if it\n   * has unsaved changes or not.\n   * @type {boolean}\n   * @export\n   */\n  this.dirty = false;\n\n  /**\n   * List of editable Layertree controllers.\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.editableTreeCtrls = [];\n\n  /**\n   * The currently selected Layertree controller.\n   * @type {?ngeo.layertree.Controller}\n   * @export\n   */\n  this.selectedEditableTreeCtrl = null;\n\n  $scope.$watch(\n    () => this.selectedEditableTreeCtrl,\n    (newValue, oldValue) => {\n      this.dirty = false;\n      this.state = gmfEditingEditFeatureComponent.State.IDLE;\n    }\n  );\n\n  /**\n   * The state of this directive shared with the `gmf-editfeature` directive.\n   * This property allows the proper management of the \"stop editing\" button.\n   * When clicked, the according state is set and the `gmf-editfeature`\n   * directive checks if it has unsaved changes and allow this directive to\n   * continue the action that was made or not.\n   * @type {string}\n   * @export\n   */\n  this.state = gmfEditingEditFeatureComponent.State.IDLE;\n\n  $scope.$watch(\n    () => this.state,\n    (newValue, oldValue) => {\n      if (newValue === gmfEditingEditFeatureComponent.State.STOP_EDITING_EXECUTE ||\n          newValue === gmfEditingEditFeatureComponent.State.DEACTIVATE_EXECUTE) {\n        this.selectedEditableTreeCtrl = null;\n      }\n      if (newValue === gmfEditingEditFeatureComponent.State.DEACTIVATE_EXECUTE) {\n        this.active = false;\n      }\n    }\n  );\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n\n};\n\n\n/**\n * Called when the 'stop editing' button is clicked. Set the 'state'\n * variable to 'pending' allow the editfeature directive to check if it can\n * stop or if it requires confirmation due to unsaved modifications.\n * @export\n */\nexports.Controller_.prototype.stopEditing = function() {\n  this.state = gmfEditingEditFeatureComponent.State.STOP_EDITING_PENDING;\n};\n\n\n/**\n * Called when the active property of the this directive changes. Manage\n * the activation/deactivation accordingly.\n * @param {boolean} active Whether the directive is active or not.\n * @private\n */\nexports.Controller_.prototype.handleActiveChange_ = function(active) {\n  if (!active) {\n    if (!this.dirty) {\n      this.selectedEditableNode = null;\n    } else {\n      // There are unsaved modifications. Prevent the deactivation and\n      // set the state accordingly for the `gmf-editfeature` directive\n      // to manage the unsaved modifications.\n      // The changes are made inside a $timeout to be taken into account\n      // in the next digest cycle.\n      this.$timeout_(() => {\n        this.active = true;\n        this.stopEditing();\n      });\n    }\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  this.treeCtrlsWatcherUnregister_();\n};\n\n\nexports.controller('GmfEditfeatureselectorController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.module\n */\nimport gmfEditingEditFeature from 'gmf/editing/EditFeature.js';\nimport gmfEditingEditFeatureComponent from 'gmf/editing/editFeatureComponent.js';\nimport gmfEditingEditFeatureSelectorComponent from 'gmf/editing/editFeatureSelectorComponent.js';\nimport gmfEditingEnumerateAttribute from 'gmf/editing/EnumerateAttribute.js';\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\nimport gmfEditingXSDAttributes from 'gmf/editing/XSDAttributes.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfEditingModule', [\n  gmfEditingEditFeature.module.name,\n  gmfEditingEditFeatureComponent.name,\n  gmfEditingEditFeatureSelectorComponent.name,\n  gmfEditingEnumerateAttribute.module.name,\n  gmfEditingSnapping.module.name,\n  gmfEditingXSDAttributes.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.search.createGeoJSONBloodhound\n */\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport * as olObj from 'ol/obj.js';\n\nimport 'corejs-typeahead';\n\n\n/**\n * @param {string} url an URL to a search service.\n * @param {(function(GeoJSONFeature): boolean)=} opt_filter function to filter\n *     results.\n * @param {ol.proj.Projection=} opt_featureProjection Feature projection.\n * @param {ol.proj.Projection=} opt_dataProjection Data projection.\n * @param {BloodhoundOptions=} opt_options optional Bloodhound options. If\n *     undefined, the default Bloodhound config will be used.\n * @param {BloodhoundRemoteOptions=} opt_remoteOptions optional Bloodhound\n * remote options. Effective only if `remote` is not defined in `opt_options`.\n * @return {Bloodhound} The Bloodhound object.\n */\nconst exports = function(url, opt_filter, opt_featureProjection,\n  opt_dataProjection, opt_options, opt_remoteOptions) {\n  const geojsonFormat = new olFormatGeoJSON();\n  const bloodhoundOptions = /** @type {BloodhoundOptions} */ ({\n    remote: {\n      url,\n      prepare(query, settings) {\n        settings.url = settings.url.replace('%QUERY', query);\n        return settings;\n      },\n      transform(parsedResponse) {\n        /** @type {GeoJSONFeatureCollection} */\n        let featureCollection = /** @type {GeoJSONFeatureCollection} */\n            (parsedResponse);\n        if (opt_filter !== undefined) {\n          featureCollection = /** @type {GeoJSONFeatureCollection} */ ({\n            type: 'FeatureCollection',\n            features: featureCollection.features.filter(opt_filter)\n          });\n        }\n\n        return geojsonFormat.readFeatures(featureCollection, {\n          featureProjection: opt_featureProjection,\n          dataProjection: opt_dataProjection\n        });\n      }\n    },\n    // datumTokenizer is required by the Bloodhound constructor but it\n    // is not used when only a remote is passsed to Bloodhound.\n    datumTokenizer: () => {},\n    queryTokenizer: Bloodhound.tokenizers.whitespace\n  });\n\n  // the options objects are cloned to avoid updating the passed object\n  const options = olObj.assign({}, opt_options || {});\n  const remoteOptions = olObj.assign({}, opt_remoteOptions || {});\n\n  if (options.remote) {\n    // move the remote options to opt_remoteOptions\n    olObj.assign(remoteOptions, options.remote);\n    delete options.remote;\n  }\n\n  olObj.assign(bloodhoundOptions, options);\n  olObj.assign(bloodhoundOptions.remote, remoteOptions);\n\n  return new Bloodhound(bloodhoundOptions);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoSearchCreategeojsonbloodhound', []);\n\nexports.module.value(\n  'ngeoSearchCreateGeoJSONBloodhound',\n  exports);\n\n\n/**\n * Provides a function that creates a Bloodhound engine\n * expecting GeoJSON responses from the search web service, which creates\n * `ol.Feature` objects as suggestions.\n *\n * Example:\n *\n *     let bloodhound = createGeoJSONBloodhound(\n *       'http://example.com/fulltextsearch?query=%QUERY',\n *       aFilterFunction,\n *       ol.proj.get('EPSG:3857'));\n *     bloodhound.initialize();\n *\n *     let bloodhound = createGeoJSONBloodhound(\n *       '',\n *       undefined,\n *       ol.proj.get('EPSG:3857'),\n *       ol.proj.get('EPSG:21781'),\n *       {\n *         remote: {\n *           url: mySearchEngineUrl,\n *           replace: function(url, query) {\n *             return url +\n *                 '?qtext=' + encodeURIComponent(query) +\n *                 '&lang=' + gettextCatalog.currentLanguage;\n *           }\n *         }\n *       }\n *     );\n *     bloodhound.initialize();\n *\n * @typedef {function(string, (function(GeoJSONFeature): boolean)=,\n * ol.proj.Projection=, ol.proj.Projection=, BloodhoundOptions=,\n * BloodhoundRemoteOptions=):Bloodhound}\n * @ngdoc service\n * @ngname search.createGeoJSONBloodhound\n */\nexports.Function;\n\n\nexport default exports;\n","/**\n * @module ngeo.search.createLocationSearchBloodhound\n */\nimport * as olObj from 'ol/obj.js';\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\n\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olFeature from 'ol/Feature.js';\n\nimport 'corejs-typeahead';\n\n\n/**\n * @param {ngeox.search.LocationSearchOptions=} opt_options Options.\n * @return {Bloodhound} The Bloodhound object.\n */\nconst exports = function(opt_options) {\n  const options = opt_options || {};\n\n  const sourceProjection = olProj.get(ngeoProjEPSG21781);\n  const targetProjection = options.targetProjection;\n\n  /**\n   * @param {string} bbox Bbox string.\n   * @return {?ol.Extent} Parsed extent.\n   */\n  const parseBbox = (bbox) => {\n    const regex = /BOX\\((.*?) (.*?),(.*?) (.*?)\\)/g;\n    const match = regex.exec(bbox);\n    if (match !== null) {\n      return [\n        parseFloat(match[1]),\n        parseFloat(match[2]),\n        parseFloat(match[3]),\n        parseFloat(match[4])\n      ];\n    } else {\n      return null;\n    }\n  };\n\n  const removeHtmlTags = label => label.replace(/<\\/?[ib]>/g, '');\n\n  const extractName = (label) => {\n    const regex = /<b>(.*?)<\\/b>/g;\n    const match = regex.exec(label);\n    if (match !== null) {\n      return match[1];\n    } else {\n      return label;\n    }\n  };\n\n  const bloodhoundOptions = /** @type {BloodhoundOptions} */ ({\n    remote: {\n      url: 'https://api3.geo.admin.ch/rest/services/api/SearchServer?type=locations&searchText=%QUERY',\n      prepare: (query, settings) => {\n        settings.url = settings.url.replace('%QUERY', query);\n        if (options.limit !== undefined) {\n          settings.url += `&limit=${options.limit}`;\n        }\n        if (options.origins !== undefined) {\n          settings.url += `&origins=${options.origins}`;\n        }\n\n        return (options.prepare !== undefined) ?\n          options.prepare(query, settings) : settings;\n      },\n      transform: (/** @type {geoAdminx.SearchLocationResponse} */ parsedResponse) => {\n        const features = parsedResponse.results.map((/** @type {geoAdminx.SearchLocationResult} */ result) => {\n          const attrs = result.attrs;\n\n          // note that x and y are switched!\n          const point = new olGeomPoint([attrs.y, attrs.x]);\n          let bbox = parseBbox(attrs.geom_st_box2d);\n          if (targetProjection !== undefined) {\n            point.transform(sourceProjection, targetProjection);\n            if (bbox !== null) {\n              bbox = olProj.transformExtent(bbox, sourceProjection, targetProjection);\n            }\n          }\n\n          attrs['geometry'] = point;\n          attrs['bbox'] = bbox;\n\n          // create a label without HTML tags\n          const label = attrs.label;\n          attrs['label_no_html'] = removeHtmlTags(label);\n          attrs['label_simple'] = extractName(label);\n\n          const feature = new olFeature(attrs);\n          feature.setId(attrs.featureId);\n\n          return feature;\n        });\n\n        return features;\n      }\n    },\n    // datumTokenizer is required by the Bloodhound constructor but it\n    // is not used when only a remote is passsed to Bloodhound.\n    datumTokenizer: () => {},\n    queryTokenizer: Bloodhound.tokenizers.whitespace\n  });\n\n  // the options objects are cloned to avoid updating the passed object\n  const bhOptions = olObj.assign({}, options.options || {});\n  const remoteOptions = olObj.assign({}, options.remoteOptions || {});\n\n  if (bhOptions.remote) {\n    // move the remote options to opt_remoteOptions\n    olObj.assign(remoteOptions, bhOptions.remote);\n    delete bhOptions.remote;\n  }\n\n  olObj.assign(bloodhoundOptions, bhOptions);\n  olObj.assign(bloodhoundOptions.remote, remoteOptions);\n\n  return new Bloodhound(bloodhoundOptions);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoCreateLocationSearchBloodhound', []);\n\nexports.module.value(\n  'ngeoCreateLocationSearchBloodhound',\n  exports);\n\n\n/**\n * Provides a function that creates a Bloodhound engine\n * for the GeoAdmin Location Search API, which creates `ol.Feature` objects\n * as suggestions.\n *\n * See: http://api3.geo.admin.ch/services/sdiservices.html#search\n *\n * Example:\n *\n *     let bloodhound = ngeoCreateLocationSearchBloodhound({\n *       targetProjection: ol.proj.get('EPSG:3857'),\n *       limit: 10\n *     });\n *     bloodhound.initialize();\n *\n * @typedef {function(ngeox.search.LocationSearchOptions=):Bloodhound}\n * @ngdoc service\n * @ngname search.createLocationSearchBloodhound\n */\nexports.Function;\n\n\nexport default exports;\n","/**\n * @module ngeo.search.module\n */\nimport ngeoSearchSearchDirective from 'ngeo/search/searchDirective.js';\nimport ngeoSearchCreateGeoJSONBloodhound from 'ngeo/search/createGeoJSONBloodhound.js';\nimport ngeoSearchCreateLocationSearchBloodhound from 'ngeo/search/createLocationSearchBloodhound.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoSearchModule', [\n  ngeoSearchSearchDirective.module.name,\n  ngeoSearchCreateGeoJSONBloodhound.module.name,\n  ngeoSearchCreateLocationSearchBloodhound.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.drawing.featureStyleComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscColorpickerComponent from 'ngeo/misc/colorpickerComponent.js';\n\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDrawingFeatureStyle', [\n  ngeoMiscColorpickerComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/drawing/featureStyleComponent', require('./featureStyleComponent.html'));\n});\n\n\n/**\n * Directive used to set the style of a vector feature. The options depend\n * on the type of geometry.\n * Example:\n *\n *     <gmf-featurestyle\n *         gmf-featurestyle-feature=\"ctrl.selectedFeature\">\n *     </gmf-featurestyle>\n *\n * @htmlAttribute {ol.Feature} gmf-featurestyle-feature The feature.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfFeaturestyle\n */\nexports.directive_ = function() {\n  return {\n    controller: 'GmfFeaturestyleController as fsCtrl',\n    scope: {\n      'feature': '=gmfFeaturestyleFeature'\n    },\n    bindToController: true,\n    templateUrl: 'gmf/drawing/featureStyleComponent'\n  };\n};\n\n\nexports.directive('gmfFeaturestyle',\n  exports.directive_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Gmf feature helper service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfFeaturestyleController\n */\nexports.Controller_ = function($scope, ngeoFeatureHelper) {\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.feature;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.color = undefined;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.label = undefined;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.measure = undefined;\n\n  $scope.$watch(\n    () => this.color,\n    this.handleColorSet_.bind(this)\n  );\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.featureListenerKeys_ = [];\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.type;\n\n  $scope.$watch(\n    () => this.feature,\n    this.handleFeatureSet_.bind(this)\n  );\n\n};\n\n\n/**\n * Called when a new feature is set, which can also be null.\n * @param {?ol.Feature} newFeature New feature or null value.\n * @param {?ol.Feature} previousFeature Previous feature or null value.\n * @private\n */\nexports.Controller_.prototype.handleFeatureSet_ = function(\n  newFeature, previousFeature) {\n\n  const keys = this.featureListenerKeys_;\n\n  if (previousFeature) {\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    this.type = undefined;\n    this.color = undefined;\n    this.measure = undefined;\n    this.label = undefined;\n  }\n\n  if (newFeature) {\n    [\n      ngeoFormatFeatureProperties.ANGLE,\n      ngeoFormatFeatureProperties.COLOR,\n      ngeoFormatFeatureProperties.NAME,\n      ngeoFormatFeatureProperties.SHOW_LABEL,\n      ngeoFormatFeatureProperties.OPACITY,\n      ngeoFormatFeatureProperties.SHOW_MEASURE,\n      ngeoFormatFeatureProperties.SIZE,\n      ngeoFormatFeatureProperties.STROKE\n    ].forEach(function(propName) {\n      keys.push(\n        olEvents.listen(\n          newFeature,\n          `change:${propName}`,\n          this.handleFeatureChange_,\n          this\n        )\n      );\n    }, this);\n\n    const geometry = newFeature.getGeometry();\n    googAsserts.assert(geometry, 'Geometry should be thruthy');\n\n    keys.push(\n      olEvents.listen(\n        geometry,\n        'change',\n        this.handleGeometryChange_,\n        this\n      )\n    );\n\n    this.type = this.featureHelper_.getType(newFeature);\n    this.color = this.featureHelper_.getColorProperty(newFeature);\n    this.measure = this.featureHelper_.getMeasure(newFeature);\n  }\n};\n\n\n/**\n * @param {string|undefined} newColor Color.\n * @private\n */\nexports.Controller_.prototype.handleColorSet_ = function(\n  newColor) {\n  if (this.feature && newColor) {\n    const currentColor = this.feature.get(ngeoFormatFeatureProperties.COLOR);\n    if (currentColor !== newColor) {\n      this.feature.set(ngeoFormatFeatureProperties.COLOR, newColor);\n    }\n  }\n};\n\n\n/**\n * @param {number|undefined} value A name value to set or undefined to get.\n * @return {number} The angle of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetAngle = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.ANGLE, value));\n};\n\n\n/**\n * @param {string|undefined} value A name value to set or undefined to get.\n * @return {string} The name of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetName = function(value) {\n  return googAsserts.assertString(this.getSetProperty_(ngeoFormatFeatureProperties.NAME, value));\n};\n\n/**\n * @param {boolean|undefined} value A value to set or undefined for the\n *     purpose of showing the attribute labels or not.\n * @return {boolean} Whether to show the labels or not.\n * @export\n */\nexports.Controller_.prototype.getSetShowLabel = function(value) {\n  return googAsserts.assertBoolean(this.getSetProperty_(ngeoFormatFeatureProperties.SHOW_LABEL, value));\n};\n\n/**\n * @param {number|undefined} value A stroke value to set or undefined to get.\n * @return {number} The stroke of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetOpacity = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.OPACITY, value));\n};\n\n\n/**\n * @param {boolean|undefined} value A value to set or undefined to get for the\n *     purpose of showing the geometry measurements or not.\n * @return {boolean} Whether to show the measurements or not.\n * @export\n */\nexports.Controller_.prototype.getSetShowMeasure = function(value) {\n  return googAsserts.assertBoolean(this.getSetProperty_(ngeoFormatFeatureProperties.SHOW_MEASURE, value));\n};\n\n\n/**\n * @param {number|undefined} value A size value to set or undefined to get.\n * @return {number} The size of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetSize = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.SIZE, value));\n};\n\n\n/**\n * @param {number|undefined} value A stroke value to set or undefined to get.\n * @return {number} The stroke of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetStroke = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.STROKE, value));\n};\n\n\n/**\n * @param {string} key The property name.\n * @param {boolean|number|string|undefined} value A value to set or undefined\n *     to get.\n * @return {boolean|number|string} The property value of the feature.\n * @private\n */\nexports.Controller_.prototype.getSetProperty_ = function(key, value) {\n  if (value !== undefined) {\n    this.feature.set(key, value);\n  }\n  return /** @type {boolean|number|string} */ (this.feature.get(key));\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleFeatureChange_ = function() {\n  const feature = this.feature;\n\n  if (!feature) {\n    return;\n  }\n\n  this.featureHelper_.setStyle(feature, true);\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleGeometryChange_ = function() {\n  googAsserts.assert(this.feature);\n  this.measure = this.featureHelper_.getMeasure(this.feature);\n\n  const showMeasure = this.featureHelper_.getShowMeasureProperty(this.feature);\n  if (showMeasure) {\n    this.handleFeatureChange_();\n  }\n\n  this.scope_.$apply();\n};\n\n\nexports.controller('GmfFeaturestyleController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.drawing.drawFeatureComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfDrawingFeatureStyleComponent from 'gmf/drawing/featureStyleComponent.js';\n\nimport googAsserts from 'goog/asserts.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoMenu from 'ngeo/Menu.js';\n\n/** @suppress {extraRequire} */\nimport ngeoEditingExportfeaturesComponent from 'ngeo/editing/exportfeaturesComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawComponent from 'ngeo/draw/component.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoInteractionModify from 'ngeo/interaction/Modify.js';\nimport ngeoInteractionRotate from 'ngeo/interaction/Rotate.js';\nimport ngeoInteractionTranslate from 'ngeo/interaction/Translate.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('GmfDrawFeatureComponent', [\n  gmfDrawingFeatureStyleComponent.name,\n  ngeoEditingExportfeaturesComponent.name,\n  ngeoMiscBtnComponent.name,\n  ngeoDrawComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/drawing/drawFeatureComponent', require('./drawFeatureComponent.html'));\n});\n\n\n/**\n * Directive used to create, modify and delete vector features on a map with\n * the addition of changing their style.\n * Example:\n *\n *     <gmf-drawfeature\n *         gmf-drawfeature-active=\"ctrl.drawFeatureActive\"\n *         gmf-drawfeature-map=\"::ctrl.map\">\n *     </gmf-drawfeature>\n *\n * @htmlAttribute {boolean} gmf-drawfeature-active Whether the directive is\n *     active or not.\n * @htmlAttribute {ol.Map} gmf-drawfeature-map The map.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfDrawfeature\n */\nexports.component_ = function() {\n  return {\n    controller: 'GmfDrawfeatureController as efCtrl',\n    scope: {\n      'active': '=gmfDrawfeatureActive',\n      'map': '<gmfDrawfeatureMap',\n      'showMeasure': '=?gmfDrawfeatureShowmeasure'\n    },\n    bindToController: true,\n    templateUrl: 'gmf/drawing/drawFeatureComponent'\n  };\n};\n\n\nexports.directive('gmfDrawfeature',\n  exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @param {!ol.Collection.<!ol.Feature>} ngeoFeatures Collection of features.\n * @param {!ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate manager\n *     service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDrawfeatureController\n */\nexports.Controller_ = function($scope, $timeout, gettextCatalog,\n  ngeoFeatureHelper, ngeoFeatures, ngeoToolActivateMgr) {\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  if (this.active === undefined) {\n    this.active = false;\n  }\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawActive = false;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.drawToolActivate = new ngeoMiscToolActivate(this, 'drawActive');\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.mapSelectActive = true;\n\n  /**\n   * @type {number?}\n   * @private\n   */\n  this.longPressTimeout_ = null;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.mapSelectToolActivate = new ngeoMiscToolActivate(this, 'mapSelectActive');\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {!ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {!ol.Collection.<!ol.Feature>}\n   * @export\n   */\n  this.features = ngeoFeatures;\n\n  /**\n   * @type {!ngeo.misc.ToolActivateMgr}\n   * @private\n   */\n  this.ngeoToolActivateMgr_ = ngeoToolActivateMgr;\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.selectedFeature = null;\n\n  /**\n   * @type {!ol.Collection.<!ol.Feature>}\n   * @export\n   */\n  this.selectedFeatures = new olCollection();\n\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.interactions_ = new olCollection();\n\n  /**\n   * @type {!ngeo.interaction.Modify}\n   * @private\n   */\n  this.modify_ = new ngeoInteractionModify({\n    features: this.selectedFeatures,\n    style: ngeoFeatureHelper.getVertexStyle(false)\n  });\n  this.interactions_.push(this.modify_);\n\n  /**\n   * @type {?ngeo.Menu}\n   * @private\n   */\n  this.menu_ = null;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.modifyToolActivate = new ngeoMiscToolActivate(this.modify_, 'active');\n\n  /**\n   * @type {!ngeo.interaction.Translate}\n   * @private\n   */\n  this.translate_ = new ngeoInteractionTranslate({\n    features: this.selectedFeatures,\n    style: new olStyleStyle({\n      text: new olStyleText({\n        text: '\\uf047',\n        font: 'normal 18px FontAwesome',\n        fill: new olStyleFill({\n          color: '#7a7a7a'\n        })\n      })\n    })\n  });\n  this.interactions_.push(this.translate_);\n\n  /**\n   * @type {!ngeo.interaction.Rotate}\n   * @private\n   */\n  this.rotate_ = new ngeoInteractionRotate({\n    features: this.selectedFeatures,\n    style: new olStyleStyle({\n      text: new olStyleText({\n        text: '\\uf01e',\n        font: 'normal 18px FontAwesome',\n        fill: new olStyleFill({\n          color: '#7a7a7a'\n        })\n      })\n    })\n  });\n  this.interactions_.push(this.rotate_);\n\n  this.initializeInteractions_();\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.rotateToolActivate = new ngeoMiscToolActivate(this.rotate_, 'active');\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.translateToolActivate = new ngeoMiscToolActivate(this.translate_, 'active');\n\n  /**\n   * @type {!Array.<!ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * Flag used to determine whether the selection of a feature was made\n   * from the selection of an item from the list or not (the map, contextual\n   * menu, etc.)\n   * @type {boolean}\n   * @private\n   */\n  this.listSelectionInProgress_ = false;\n\n  $scope.$watch(\n    () => this.active,\n    this.handleActiveChange_.bind(this)\n  );\n\n  $scope.$watch(\n    () => this.drawActive,\n    (active) => {\n      if (active) {\n        this.selectedFeature = null;\n      }\n    }\n  );\n\n  $scope.$watch(\n    () => this.selectedFeature,\n    (newFeature, previousFeature) => {\n      this.selectedFeatures.clear();\n      if (previousFeature) {\n        this.featureHelper_.setStyle(previousFeature);\n        this.unregisterInteractions_();\n      }\n      if (newFeature) {\n        this.featureHelper_.setStyle(newFeature, true);\n        this.selectedFeatures.push(newFeature);\n        this.registerInteractions_();\n        if (this.listSelectionInProgress_) {\n          this.featureHelper_.panMapToFeature(newFeature, this.map);\n          this.listSelectionInProgress_ = false;\n        }\n      } else if (this.menu_) {\n        this.map.removeOverlay(this.menu_);\n        this.menu_ = null;\n      }\n    }\n  );\n\n  $scope.$watch(\n    () => this.mapSelectActive,\n    this.handleMapSelectActiveChange_.bind(this)\n  );\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nameProperty = ngeoFormatFeatureProperties.NAME;\n\n  /**\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n};\n\n\n/**\n * Initialize interactions by setting them inactive and decorating them\n * @private\n */\nexports.Controller_.prototype.initializeInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    interaction.setActive(false);\n    ngeoMiscDecorate.interaction(interaction);\n  });\n};\n\n\n/**\n * Register interactions by adding them to the map\n * @private\n */\nexports.Controller_.prototype.registerInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    this.map.addInteraction(interaction);\n  });\n};\n\n\n/**\n * Register interactions by removing them to the map\n * @private\n */\nexports.Controller_.prototype.unregisterInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    this.map.removeInteraction(interaction);\n  });\n};\n\n\n/**\n * Called when the active property of the this directive changes. Manage\n * the activation/deactivation accordingly (event management, etc.)\n * @param {boolean} active Whether the directive is active or not.\n * @private\n */\nexports.Controller_.prototype.handleActiveChange_ = function(active) {\n\n  const keys = this.listenerKeys_;\n  const drawUid = ['draw-', olBase.getUid(this)].join('-');\n  const otherUid = ['other-', olBase.getUid(this)].join('-');\n  const toolMgr = this.ngeoToolActivateMgr_;\n\n  if (active) {\n    // when activated\n\n    keys.push(\n      olEvents.listen(this.features, 'add', this.handleFeaturesAdd_, this),\n      olEvents.listen(this.features, 'remove', this.handleFeaturesRemove_, this)\n    );\n\n    keys.push(olEvents.listen(this.translate_,\n      'translateend',\n      this.handleTranslateEnd_, this));\n\n    keys.push(olEvents.listen(this.rotate_, 'rotateend', this.handleRotateEnd_, this));\n\n    toolMgr.registerTool(drawUid, this.drawToolActivate, false);\n    toolMgr.registerTool(drawUid, this.mapSelectToolActivate, true);\n\n    toolMgr.registerTool(otherUid, this.drawToolActivate, false);\n    toolMgr.registerTool(otherUid, this.modifyToolActivate, true);\n    toolMgr.registerTool(otherUid, this.translateToolActivate, false);\n    toolMgr.registerTool(otherUid, this.rotateToolActivate, false);\n\n    this.mapSelectActive = true;\n    this.modify_.setActive(true);\n  } else {\n    // when deactivated\n\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n\n    toolMgr.unregisterTool(drawUid, this.drawToolActivate);\n    toolMgr.unregisterTool(drawUid, this.mapSelectToolActivate);\n\n    toolMgr.unregisterTool(otherUid, this.drawToolActivate);\n    toolMgr.unregisterTool(otherUid, this.modifyToolActivate);\n    toolMgr.unregisterTool(otherUid, this.translateToolActivate);\n    toolMgr.unregisterTool(otherUid, this.rotateToolActivate);\n\n    this.drawActive = false;\n    this.modify_.setActive(false);\n    this.mapSelectActive = false;\n    this.selectedFeature = null;\n\n    if (this.menu_) {\n      this.map.removeOverlay(this.menu_);\n      this.menu_ = null;\n    }\n  }\n\n};\n\n\n/**\n * Method called when a selection occurs from the list, i.e. when an item in\n * the list of features is clicked. Called from the template, so no need to\n * update Angular's scope.\n * @param {!ol.Feature} feature Feature to select.\n * @export\n */\nexports.Controller_.prototype.selectFeatureFromList = function(feature) {\n  this.listSelectionInProgress_ = true;\n  this.selectedFeature = feature;\n  this.drawActive = false;\n};\n\n\n/**\n * @return {!Array.<!ol.Feature>} Array.\n * @export\n */\nexports.Controller_.prototype.getFeaturesArray = function() {\n  return this.features.getArray();\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.clearFeatures = function() {\n  const gettextCatalog = this.gettextCatalog_;\n  const msg = gettextCatalog.getString(\n    'Do you really want to delete all the features?');\n  if (confirm(msg)) {\n    this.features.clear();\n  }\n};\n\n\n/**\n * @param {!ol.Feature} feature The feature to remove from the selection.\n * @export\n */\nexports.Controller_.prototype.removeFeature = function(feature) {\n  const gettextCatalog = this.gettextCatalog_;\n  const msg = gettextCatalog.getString(\n    'Do you really want to delete the selected feature?');\n  if (confirm(msg)) {\n    this.features.remove(feature);\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleFeaturesAdd_ = function(evt) {\n  // timeout to prevent double-click to zoom the map\n  this.timeout_(() => {\n    this.selectedFeature = /** @type {ol.Feature} */ (evt.element);\n    this.drawActive = false;\n    this.scope_.$apply();\n  });\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleFeaturesRemove_ = function(evt) {\n  this.selectedFeature = null;\n};\n\n\n/**\n * Called when the mapSelectActive property changes.\n * @param {boolean} active Whether the map select is active or not.\n * @private\n */\nexports.Controller_.prototype.handleMapSelectActiveChange_ = function(\n  active) {\n\n  const mapDiv = this.map.getViewport();\n  googAsserts.assertElement(mapDiv);\n\n  if (active) {\n    olEvents.listen(this.map, 'click',\n      this.handleMapClick_, this);\n\n    olEvents.listen(mapDiv, 'contextmenu',\n      this.handleMapContextMenu_, this);\n\n    olEvents.listen(mapDiv, 'touchstart',\n      this.handleMapTouchStart_, this);\n\n    olEvents.listen(mapDiv, 'touchmove',\n      this.handleMapTouchEnd_, this);\n\n    olEvents.listen(mapDiv, 'touchend',\n      this.handleMapTouchEnd_, this);\n\n  } else {\n    olEvents.unlisten(this.map, 'click',\n      this.handleMapClick_, this);\n\n    olEvents.unlisten(mapDiv, 'contextmenu',\n      this.handleMapContextMenu_, this);\n\n    olEvents.unlisten(mapDiv, 'touchstart',\n      this.handleMapTouchStart_, this);\n\n    olEvents.unlisten(mapDiv, 'touchmove',\n      this.handleMapTouchEnd_, this);\n\n    olEvents.unlisten(mapDiv, 'touchend',\n      this.handleMapTouchEnd_, this);\n  }\n};\n\n\n/**\n * @param {!ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapClick_ = function(evt) {\n\n  const pixel = evt.pixel;\n\n  let feature = this.map.forEachFeatureAtPixel(\n    pixel,\n    (feature) => {\n      let ret = false;\n      if (olArray.includes(this.features.getArray(), feature)) {\n        ret = feature;\n      }\n      return ret;\n    },\n    {\n      hitTolerance: 5\n    }\n  );\n\n  feature = feature ? feature : null;\n\n  // do not do any further action if feature is null or already selected\n  if (feature === this.selectedFeature) {\n    return;\n  }\n\n  this.selectedFeature = feature;\n\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {!Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapTouchStart_ = function(evt) {\n  this.longPressTimeout_ = setTimeout(() => {\n    this.handleMapContextMenu_(evt);\n  }, 500);\n};\n\n\n/**\n * @param {!Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapTouchEnd_ = function(evt) {\n  clearTimeout(this.longPressTimeout_);\n};\n\n\n/**\n * @param {!Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapContextMenu_ = function(evt) {\n  const gettextCatalog = this.gettextCatalog_;\n  const pixel = this.map.getEventPixel(evt);\n  const coordinate = this.map.getCoordinateFromPixel(pixel);\n\n  let feature = this.map.forEachFeatureAtPixel(\n    pixel,\n    (feature) => {\n      let ret = false;\n      if (olArray.includes(this.features.getArray(), feature)) {\n        ret = feature;\n      }\n      return ret;\n    },\n    {\n      hitTolerance: 7\n    }\n  );\n\n  feature = feature ? feature : null;\n\n  // show contextual menu when clicking on certain types of features\n  if (feature) {\n    let actions = [];\n\n    const type = this.featureHelper_.getType(feature);\n    if (type == ngeoGeometryType.CIRCLE ||\n        type == ngeoGeometryType.LINE_STRING ||\n        type == ngeoGeometryType.POLYGON ||\n        type == ngeoGeometryType.RECTANGLE) {\n      actions = actions.concat([{\n        cls: 'fa fa-arrows',\n        label: gettextCatalog.getString('Move'),\n        name: 'move'\n      }, {\n        cls: 'fa fa-rotate-right',\n        label: gettextCatalog.getString('Rotate'),\n        name: 'rotate'\n      }]);\n    }\n\n    actions = actions.concat([{\n      cls: 'fa fa-trash-o',\n      label: gettextCatalog.getString('Delete'),\n      name: 'delete'\n    }]);\n\n    this.menu_ = new ngeoMenu({\n      actions\n    });\n\n    olEvents.listen(this.menu_, 'actionclick',\n      this.handleMenuActionClick_, this);\n    this.map.addOverlay(this.menu_);\n\n    this.menu_.open(coordinate);\n\n    evt.preventDefault();\n    evt.stopPropagation();\n  }\n\n  // do not do any further action if feature is null or already selected\n  if (feature === this.selectedFeature) {\n    return;\n  }\n\n  this.modify_.setActive(true);\n\n  this.selectedFeature = feature;\n\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {!ngeox.MenuEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMenuActionClick_ = function(evt) {\n  const action = evt.detail.action;\n\n  switch (action) {\n    case 'delete':\n      googAsserts.assert(\n        this.selectedFeature, 'Selected feature should be truthy');\n      this.removeFeature(this.selectedFeature);\n      this.scope_.$apply();\n      break;\n    case 'move':\n      this.translate_.setActive(true);\n      this.scope_.$apply();\n      break;\n    case 'rotate':\n      this.rotate_.setActive(true);\n      this.scope_.$apply();\n      break;\n    default:\n      // FIXME\n      console.log(`FIXME - support: ${action}`);\n      break;\n  }\n};\n\n\n/**\n * @param {!ol.interaction.Translate.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleTranslateEnd_ = function(evt) {\n  this.translate_.setActive(false);\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {!ngeox.RotateEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleRotateEnd_ = function(evt) {\n  this.rotate_.setActive(false);\n  this.scope_.$apply();\n};\n\n\nexports.controller('GmfDrawfeatureController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.drawing.module\n */\nimport gmfDrawingDrawFeatureComponent from 'gmf/drawing/drawFeatureComponent.js';\nimport gmfDrawingFeatureStyleComponent from 'gmf/drawing/featureStyleComponent.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDrawingModule', [\n  gmfDrawingDrawFeatureComponent.name,\n  gmfDrawingFeatureStyleComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.profile.d3Elevation\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olObj from 'ol/obj.js';\n\nimport 'd3-transition';\nimport {bisector, extent} from 'd3-array';\nimport {axisBottom, axisLeft} from 'd3-axis';\nimport {scaleLinear} from 'd3-scale';\nimport {mouse, select, selectAll} from 'd3-selection';\nimport {area, line} from 'd3-shape';\nconst d3 = {\n  bisector,\n  extent,\n  axisBottom,\n  axisLeft,\n  scaleLinear,\n  mouse,\n  select,\n  selectAll,\n  area,\n  line,\n};\n\n\n/**\n * Provides a D3js component to be used to draw an elevation\n * profile chart.\n *\n *     let selection = d3.select('#element_id');\n *     let profile = ngeo.profile.d3Elevation({\n *       distanceExtractor: function (item) {return item['dist'];},\n *       linesConfiguration: {\n *         'lineZ1': {\n *           zExtractor: function (item) {return item['values']['z1'];}\n *         },\n *         'lineZ2': {\n *           color: '#00F',\n *           zExtractor: function (item) {return item['values']['z2'];}\n *         }\n *       },\n *       hoverCallback: function(point, dist, xUnits, elevations, yUnits) {\n *         console.log(point.x, point.y);\n *       },\n *       outCallback: function() {\n *         console.log(\"out\");\n *       }\n *     });\n *     selection.datum(data).call(profile);\n *\n * The selection data must be an array.\n * The layout for the items of this array is unconstrained: the distance values\n * is extracted using the distanceExtractor config option and multiples z values\n * can be displayed by providing multiple linesConfiguration with its specific\n * zExtractor.\n * Optionally you can provide a color in your linesConfiguration. A line without\n * color will be red. Each linesConfiguration name is used as class for its\n * respective line. So you can pass a styleDefs config option (inline css) to\n * customize the line or all the chart.\n * Optionally, POIs can be displayed and depend on a poiExtractor\n * config option.\n *\n * The data below will work for the above example:\n *\n *     [\n *         {\n *             \"y\": 199340,\n *             \"values\": {\"z1\": 788.7, \"z2\": 774.2},\n *             \"dist\": 0.0,\n *             \"x\": 541620\n *         }, ...\n *     ]\n *\n * @return {Object} D3js component.\n * @param {ngeox.profile.ProfileOptions} options Profile options.\n * @export\n */\nconst exports = function(options) {\n  /**\n   * Whether the simplified profile should be shown.\n   * @type {boolean}\n   */\n  const light = options.light !== undefined ? options.light : false;\n\n\n  /**\n   * The values for margins around the chart defined in pixels.\n   */\n  const margin = light ? {top: 0, right: 0, bottom: 0, left: 0} :\n    {top: 10, right: 20, bottom: 30, left: 40};\n\n  /**\n   * Hover callback function.\n   * @type {function(Object, number, string, Object.<string, number>, string)}\n   */\n  const hoverCallback = options.hoverCallback !== undefined ?\n    options.hoverCallback : () => {};\n\n  /**\n   * Out callback function.\n   * @type {function()}\n   */\n  const outCallback = options.outCallback !== undefined ?\n    options.outCallback : () => {};\n\n  /**\n   * Distance data extractor used to get the dist values.\n   */\n  const distanceExtractor = options.distanceExtractor;\n\n  /**\n   * Line configuration object.\n   */\n  const linesConfiguration = options.linesConfiguration;\n\n  /**\n   * Number of different configurations for the line.\n   */\n  const numberOfLines = Object.keys(linesConfiguration).length;\n\n  /**\n   * Method to get the coordinate in pixels from a distance.\n   */\n  const bisectDistance = d3.bisector(d => distanceExtractor(d)).left;\n\n  /**\n   * POI data extractor.\n   */\n  const poiExtractor = options.poiExtractor;\n\n  /**\n   * Optional SVG inline style.\n   */\n  const styleDefs = options.styleDefs;\n\n  /**\n   * @type {number}\n   */\n  const poiLabelAngle = options.poiLabelAngle !== undefined ?\n    options.poiLabelAngle : -60;\n\n  /**\n   * @type {Object.<string, string>}\n   */\n  const i18n = options.i18n || {};\n\n  /**\n   * @type {string}\n   */\n  const xAxisLabel = (i18n.xAxis || 'Distance');\n\n  /**\n   * @type {string}\n   */\n  const yAxisLabel = (i18n.yAxis || 'Elevation');\n\n  /**\n   * @type {ngeox.profile.ProfileFormatter}\n   */\n  const formatter = {\n    /**\n     * @param {number} dist Distance.\n     * @param {string} units Units.\n     * @return {string} Distance.\n     */\n    xhover(dist, units) {\n      return `${parseFloat(dist.toPrecision(3))} ${units}`;\n    },\n    /**\n     * @param {number} ele Elevation.\n     * @param {string} units Units.\n     * @return {string} Elevation.\n     */\n    yhover(ele, units) {\n      return `${Math.round(ele)} m`;\n    },\n    /**\n     * @param {number} dist Distance.\n     * @param {string} units Units.\n     * @return {string|number} Distance.\n     */\n    xtick(dist, units) {\n      return dist;\n    },\n    /**\n     * @param {number} ele Elevation.\n     * @param {string} units Units.\n     * @return {string|number} Elevation.\n     */\n    ytick(ele, units) {\n      return ele;\n    }\n  };\n\n  if (options.formatter !== undefined) {\n    olObj.assign(formatter, options.formatter);\n  }\n\n  /**\n   * @type {boolean}\n   */\n  const lightXAxis = options.lightXAxis !== undefined ? options.lightXAxis : false;\n\n  // Objects shared with the showPois function\n  /**\n   * @type {Object}\n   */\n  let svg;\n\n  /**\n   * D3 x scale.\n   */\n  let x;\n\n  /**\n   * D3 y scale.\n   */\n  let y;\n\n  /**\n   * Scale modifier to allow customizing the x and y scales.\n   */\n  const scaleModifier = options.scaleModifier;\n\n  let g;\n\n  /**\n   * Height of the chart in pixels\n   */\n  let height;\n\n  /**\n   * Width of the chart in pixels\n   */\n  let width;\n\n  /**\n  * Factor to determine whether to use 'm' or 'km'.\n  */\n  let xFactor;\n\n  /**\n  * Distance units. Either 'm' or 'km'.\n  */\n  let xUnits;\n\n  /**\n   * D3 extent of the distance.\n   */\n  let xDomain;\n\n\n  const profile = function(selection) {\n    selection.each(function(data) {\n      d3.select(this).selectAll('svg').remove();\n      if (data === undefined) {\n        return;\n      }\n\n      width = Math.max(this.clientWidth - margin.right - margin.left, 0);\n      x = d3.scaleLinear().range([0, width]);\n\n      height = Math.max(this.clientHeight - margin.top - margin.bottom, 0);\n      y = d3.scaleLinear().range([height, 0]);\n\n      const xAxis = d3.axisBottom(x);\n      const yAxis = d3.axisLeft(y);\n\n      let area;\n      if (numberOfLines === 1) {\n        area = d3.area()\n          .x(d => x(distanceExtractor(d)))\n          .y0(height)\n          .y1((d) => {\n            const firstLineName =  Object.keys(linesConfiguration)[0];\n            return y(linesConfiguration[firstLineName].zExtractor(d));\n          });\n      }\n\n      // Select the svg element, if it exists.\n      svg = d3.select(this).selectAll('svg').data([data]);\n      // Otherwise, create the skeletal chart.\n      const svgEnter = svg.enter().append('svg');\n      // Then select it again to get the complete object.\n      svg = d3.select(this).selectAll('svg').data([data]);\n\n      if (styleDefs !== undefined) {\n        svgEnter.append('defs').append('style')\n          .attr('type', 'text/css')\n          .text(styleDefs);\n      }\n      const gEnter = svgEnter.append('g');\n\n      clearPois();\n\n      gEnter.style('font', '11px Arial');\n\n      if (numberOfLines === 1) {\n        gEnter.append('path').attr('class', 'area')\n          .style('fill', 'rgba(222, 222, 222, 0.5)');\n      }\n\n      gEnter.insert('g', ':first-child')\n        .attr('class', 'grid-y');\n\n      if (!light) {\n        gEnter.append('g')\n          .attr('class', 'x axis')\n          .attr('transform', `translate(0,${height})`);\n\n        gEnter.append('text')\n          .attr('class', 'x label')\n          .attr('text-anchor', 'end')\n          .attr('x', width - 4)\n          .attr('y', height - 4);\n\n        gEnter.append('g')\n          .attr('class', 'y axis');\n\n        gEnter.append('text')\n          .attr('class', 'y label')\n          .attr('text-anchor', 'end')\n          .attr('y', 6)\n          .attr('dy', '.75em')\n          .attr('transform', 'rotate(-90)')\n          .style('fill', 'grey')\n          .text(`${yAxisLabel} [m]`);\n\n        gEnter.append('g')\n          .attr('class', 'metas')\n          .attr('transform', `translate(${width + 3}, 0)`);\n      }\n\n      gEnter.append('g').attr('class', 'pois');\n\n      const xHover = gEnter.append('g').attr('class', 'x grid-hover');\n      xHover.append('svg:line').attr('stroke-dasharray', '5,5');\n      xHover.append('text');\n\n      gEnter.append('rect')\n        .attr('class', 'overlay')\n        .attr('width', width)\n        .attr('height', height)\n        .style('fill', 'none')\n        .style('pointer-events', 'all');\n\n      // Update the outer dimensions.\n      svg.attr('width', width + margin.left + margin.right)\n        .attr('height', height + margin.top + margin.bottom);\n\n      // Update the inner dimensions.\n      g = svg.select('g')\n        .attr('transform', `translate(${margin.left},${\n          margin.top})`);\n\n      xDomain = d3.extent(data, d => distanceExtractor(d));\n      x.domain(xDomain);\n\n      // Return an array with the min and max value of the min/max values of\n      // each lines.\n      const yDomain = function() {\n        let elevationsValues = [];\n        let extent, name;\n        // Get min/max values (extent) of each lines.\n        for (name in linesConfiguration) {\n          extent = d3.extent(data, d => linesConfiguration[name].zExtractor(d));\n          elevationsValues = elevationsValues.concat(extent);\n        }\n        return [\n          Math.min.apply(null, elevationsValues),\n          Math.max.apply(null, elevationsValues)\n        ];\n      }();\n\n      y.domain(yDomain);\n\n      // set the ratio according to the horizontal distance\n      if (scaleModifier !== undefined) {\n        scaleModifier(x, y, width, height);\n      } else {\n        // By default, add a small padding so that it looks nicer\n        const padding = (yDomain[1] - yDomain[0]) * 0.1;\n        y.domain([yDomain[0] - padding, yDomain[1] + padding]);\n      }\n\n      // Update the area path.\n      if (numberOfLines === 1) {\n        g.select('.area')\n          .transition()\n          .attr('d', area);\n      }\n\n      // Set style and update the lines paths and y hover guides for each lines.\n      let line, name, yHover;\n      for (name in linesConfiguration) {\n        // Set style of each line and add a class with its respective name.\n        gEnter.append('path').attr('class', `line ${name}`)\n          .style('stroke', linesConfiguration[name].color || '#F00')\n          .style('fill', 'none');\n\n        // Set y hover guides\n        yHover = gEnter.append('g').attr('class', `y grid-hover ${name}`);\n        yHover.append('svg:line').attr('stroke-dasharray', '5,5');\n        yHover.append('text');\n\n        // Configure the d3 line.\n        line = d3.line()\n          .x(d => x(distanceExtractor(d)))\n          .y(d => y(linesConfiguration[name].zExtractor(d)));\n\n        // Update path for the line.\n        g.select(`.line.${name}`)\n          .transition()\n          .attr('d', line);\n      }\n\n      if (xDomain[1] > 2000) {\n        xFactor = 1000;\n        xUnits = 'km';\n      } else {\n        xFactor = 1;\n        xUnits = 'm';\n      }\n\n      if (!light) {\n        xAxis.tickFormat(d => formatter.xtick(d / xFactor, xUnits));\n        if (lightXAxis) {\n          xAxis.tickValues([0, x.domain()[1]]);\n        }\n\n        yAxis.tickFormat(d => formatter.ytick(d, 'm'));\n\n        g.select('.x.axis')\n          .transition()\n          .call(xAxis);\n\n        g.select('.x.label')\n          .text(`${xAxisLabel} [${xUnits}]`)\n          .style('fill', 'grey')\n          .style('shape-rendering', 'crispEdges');\n\n        // Avoid too much lines with overlapping labels in small profiles\n        if (height / 15 < 10) {\n          yAxis.ticks(height / 15);\n        }\n\n        g.select('.y.axis')\n          .transition()\n          .call(yAxis);\n      }\n\n      g.select('.grid-y')\n        .transition()\n        .call(yAxis.tickSize(-width, 0).tickFormat(''))\n        .selectAll('.tick line')\n        .style('stroke', '#ccc')\n        .style('opacity', 0.7);\n\n      g.selectAll('.axis').selectAll('path, line')\n        .style('fill', 'none')\n        .style('stroke', '#000')\n        .style('shape-rendering', 'crispEdges');\n\n      g.select('.grid-y').select('path')\n        .style('stroke', 'none');\n\n      g.selectAll('.grid-hover line')\n        .style('stroke', '#222')\n        .style('opacity', 0.8);\n\n      g.select('.overlay')\n        .on('mouseout', mouseout)\n        .on('mousemove', mousemove);\n\n      function mousemove() {\n        const mouseX = d3.mouse(this)[0];\n        const x0 = x.invert(mouseX);\n\n        profile.highlight(x0);\n      }\n\n      function mouseout() {\n        profile.clearHighlight();\n      }\n    });\n  };\n\n  /**\n   * Remove any highlight.\n   * Fire the outCallback callback.\n   */\n  profile.clearHighlight = function() {\n    g.selectAll('.grid-hover')\n      .style('display', 'none');\n    outCallback.call(null);\n  };\n\n  /**\n   * Highlight the given distance and corresponding elevation on chart.\n   * Fire the hoverCallback callback with corresponding point.\n   * @param {number} distance Distance.\n   */\n  profile.highlight = function(distance) {\n    const data = svg.datum();\n    const i = bisectDistance(data, distance);\n    if (i >= data.length) {\n      return;\n    }\n\n    const point = data[i];\n    const dist = distanceExtractor(point);\n    let elevation;\n    const elevations = [];\n    const elevationsRef = {};\n    let lineName;\n\n    for (lineName in linesConfiguration) {\n      elevation = linesConfiguration[lineName].zExtractor(point);\n      elevations.push(elevation);\n      elevationsRef[lineName] = elevation;\n      g.select(`.y.grid-hover.${lineName}`)\n        .style('display', 'inline')\n        .select('line')\n        .attr('x1', x(0))\n        .attr('y1', y(elevation))\n        .attr('x2', width)\n        .attr('y2', y(elevation));\n    }\n\n    g.select('.x.grid-hover')\n      .style('display', 'inline')\n      .select('line')\n      .attr('x1', x(dist))\n      .attr('y1', height)\n      .attr('x2', x(dist))\n      .attr('y2', y(Math.max.apply(null, elevations)));\n\n    const right = dist > xDomain[1] / 2;\n    let xtranslate = x(dist);\n    xtranslate += right ? -10 : 10;\n\n    g.select('.x.grid-hover text')\n      .text(formatter.xhover(dist / xFactor, xUnits))\n      .style('text-anchor', right ? 'end' : 'start')\n      .attr('transform', `translate(${xtranslate},${\n        height - 10})`);\n\n    const yUnits = 'm';\n    // Display altitude on guides only if there is one line.\n    if (numberOfLines === 1) {\n      g.select('.y.grid-hover text')\n        .text(formatter.yhover(elevations[0], 'm'))\n        .style('text-anchor', right ? 'end' : 'start')\n        .attr('transform', `translate(${xtranslate},${\n          y(elevations[0]) - 10})`);\n    }\n    hoverCallback.call(null, point, dist / xFactor, xUnits, elevationsRef,\n      yUnits);\n  };\n\n\n  profile.showPois = function(pois) {\n    pois = pois !== undefined ? pois : [];\n    googAsserts.assert(pois.length === 0 || poiExtractor !== undefined);\n\n    const pe = poiExtractor;\n    const g = svg.select('g');\n    const profileData = svg.datum();\n    const ps = g.select('.pois');\n\n    const p = ps.selectAll('.poi').data(pois, (d) => {\n      const i = bisectDistance(profileData, Math.round(pe.dist(d) * 10) / 10, 1);\n      const point = profileData[i];\n      if (point) {\n        let lineName;\n        const elevations = [];\n        for (lineName in linesConfiguration) {\n          elevations.push(linesConfiguration[lineName].zExtractor(point));\n        }\n        const z = Math.max.apply(null, elevations);\n        pe.z(d, z);\n      }\n      return pe.id(d);\n    });\n\n    const poiEnterG = p.enter()\n      .append('g')\n      .attr('class', 'poi');\n\n    poiEnterG.append('text')\n      .attr('x', light ? 0 : 9)\n      .attr('dy', '.35em')\n      .attr('text-anchor', light ? 'middle' : 'start');\n\n    poiEnterG.append('line')\n      .style('shape-rendering', 'crispEdges');\n\n    poiEnterG.style('opacity', 0)\n      .transition()\n      .duration(1000)\n      .delay(100)\n      .style('opacity', 1);\n\n    poiEnterG.selectAll('text')\n      .attr('transform', (d) => {\n        if (light) {\n          return ['translate(',\n            x(pe.dist(d)), ',',\n            y(pe.z(d)) - 10, ')'\n          ].join('');\n        } else {\n          return ['translate(',\n            x(pe.dist(d)), ',',\n            y(pe.z(d)) - 20, ') rotate(', poiLabelAngle, ')'\n          ].join('');\n        }\n      })\n      .text(d => pe.sort(d) + (light ? '' : (` - ${pe.title(d)}`)));\n\n    poiEnterG.selectAll('line')\n      .style('stroke', 'grey')\n      .attr('x1', d => x(pe.dist(d)))\n      .attr('y1', d => y(y.domain()[0]))\n      .attr('x2', d => x(pe.dist(d)))\n      .attr('y2', d => y(pe.z(d)));\n\n    // remove unused pois\n    poiEnterG.exit().remove();\n  };\n\n  function clearPois() {\n    profile.showPois([]);\n  }\n\n\n  return profile;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.profile.elevationComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\nimport ngeoProfileD3Elevation from 'ngeo/profile/d3Elevation.js';\n\nimport {select} from 'd3-selection';\nconst d3 = {\n  select,\n};\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoProfile', [\n  ngeoMiscDebounce.name\n]);\n\n\n/**\n * Provides a directive used to insert an elevation profile chart\n * in the DOM.\n *\n * Example:\n *\n *      <div ngeo-profile=\"ctrl.profileData\"\n *        ngeo-profile-options=\"ctrl.profileOptions\"\n *        ngeo-profile-pois=\"ctrl.profilePois\">\n *      </div>\n *\n * Where \"ctrl.profileOptions\" is of type {@link ngeox.profile.ProfileOptions};\n * \"ctrl.profileData\" and \"ctrl.profilePois\" are arrays which will be\n * processed by {@link ngeox.profile.ElevationExtractor} and\n * {@link ngeox.profile.PoiExtractor}.\n *\n * See our live example: [../examples/profile.html](../examples/profile.html)\n *\n * @htmlAttribute {?Object} ngeo-profile The profile data.\n * @htmlAttribute {ngeox.profile.ProfileOptions} ngeo-profile-options The options.\n * @htmlAttribute {?Array} ngeo-profile-pois The data for POIs.\n * @htmlAttribute {*} ngeo-profile-highlight Any property on the scope which\n * evaluated value may correspond to distance from origin.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoProfile\n */\nexports.directive_ = function(ngeoDebounce) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n\n      const optionsAttr = attrs['ngeoProfileOptions'];\n      googAsserts.assert(optionsAttr !== undefined);\n\n      const selection = d3.select(element[0]);\n      let profile, elevationData, poiData;\n\n      scope.$watchCollection(optionsAttr, (newVal) => {\n\n        const options = /** @type {ngeox.profile.ProfileOptions} */\n                (olObj.assign({}, newVal));\n\n        if (options !== undefined) {\n\n          // proxy the hoverCallback and outCallbackin order to be able to\n          // call $applyAsync\n          //\n          // We're using $applyAsync here because the callback may be\n          // called inside the Angular context. For example, it's the case\n          // when the user hover's the line geometry on the map and the\n          // profileHighlight property is changed.\n          //\n          // For that reason we use $applyAsync instead of $apply here.\n          if (options.hoverCallback !== undefined) {\n            const origHoverCallback = options.hoverCallback;\n            options.hoverCallback = function(...args) {\n              origHoverCallback(...args);\n              scope.$applyAsync();\n            };\n          }\n\n          if (options.outCallback !== undefined) {\n            const origOutCallback = options.outCallback;\n            options.outCallback = function() {\n              origOutCallback();\n              scope.$applyAsync();\n            };\n          }\n\n          profile = ngeoProfileD3Elevation(options);\n          refreshData();\n        }\n      });\n\n      scope.$watch(attrs['ngeoProfile'], (newVal, oldVal) => {\n        elevationData = newVal;\n        refreshData();\n      });\n\n      scope.$watch(attrs['ngeoProfilePois'], (newVal, oldVal) => {\n        poiData = newVal;\n        refreshData();\n      });\n\n      scope.$watch(attrs['ngeoProfileHighlight'],\n        (newVal, oldVal) => {\n          if (newVal === undefined) {\n            return;\n          }\n          if (newVal > 0) {\n            profile.highlight(newVal);\n          } else {\n            profile.clearHighlight();\n          }\n        });\n\n      olEvents.listen(window, 'resize', ngeoDebounce(refreshData, 50, true));\n\n      function refreshData() {\n        if (profile !== undefined) {\n          selection.datum(elevationData).call(profile);\n          if (elevationData !== undefined) {\n            profile.showPois(poiData);\n          }\n        }\n      }\n    }\n  };\n};\n\nexports.directive('ngeoProfile', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module gmf.profile.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olOverlay from 'ol/Overlay.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olObj from 'ol/obj.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadCsv from 'ngeo/download/Csv.js';\n\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProfileElevationComponent from 'ngeo/profile/elevationComponent.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfProfile', [\n  ngeoDownloadCsv.module.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoProfileElevationComponent.name,\n]);\n\n\nexports.value('gmfProfileTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfProfileTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/profile';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/profile', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfProfileTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfProfileTemplateUrl($element, $attrs, gmfProfileTemplateUrl) {\n  return gmfProfileTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provide a component that display a profile panel. This profile use the given\n * LineString geometry to request the c2cgeoportal profile.json service. The\n * raster used in the request are the keys of the 'linesconfiguration' object.\n * The 'map' attribute is optional and are only used to display on the map the\n * information that concern the hovered point (in the profile and on the map)\n * of the line.\n * This profile relies on the ngeo.profile (d3) and ngeo.ProfileComponent.\n *\n * Example:\n *\n *      <gmf-profile\n *        gmf-profile-active=\"ctrl.profileActive\"\n *        gmf-profile-line=\"ctrl.profileLine\"\n *        gmf-profile-map=\"::ctrl.map\"\n *        gmf-profile-linesconfiguration=\"::ctrl.profileLinesconfiguration\">\n *      </gmf-profile>\n *\n *\n * @htmlAttribute {boolean} gmf-profile-active Active the component.\n * @htmlAttribute {ol.geom.LineString} gmf-profile-line The linestring geometry\n *     to use to draw the profile.\n * @htmlAttribute {ol.Map?} gmf-profile-map An optional map.\n * @htmlAttribute {Object.<string, gmfx.ProfileLineConfiguration>}\n *     gmf-profile-linesconfiguration The configuration of the lines. Each keys\n *     will be used to request elevation layers.\n * @htmlAttribute {ol.style.Style?} gmf-profile-hoverpointstyle Optional style\n *     for the 'on Hover' point on the line.\n * @htmlAttribute {number?} gmf-profile-numberofpoints Optional maximum limit of\n *     points to request. Default to 100.\n * @htmlAttribute {Object.<string, *>?} gmf-profile-options Optional options\n *     object like {@link ngeox.profile.ProfileOptions} but without any\n *     mandatory value. Will be passed to the ngeo profile component. Providing\n *     'linesConfiguration', 'distanceExtractor', hoverCallback, outCallback\n *     or i18n will override native gmf profile values.\n *\n * @ngdoc component\n * @ngname gmfProfile\n */\nexports.component_ = {\n  controller: 'GmfProfileController as ctrl',\n  bindings: {\n    'active': '=gmfProfileActive',\n    'line': '=gmfProfileLine',\n    'getMapFn': '&?gmfProfileMap',\n    'getLinesConfigurationFn': '&gmfProfileLinesconfiguration',\n    'getHoverPointStyleFn': '&?gmfProfileHoverpointstyle',\n    'getNbPointsFn': '&?gmfProfileNumberofpoints',\n    'getOptionsFn': '&?gmfProfileOptions'\n  },\n  templateUrl: gmfProfileTemplateUrl\n};\n\nexports.component('gmfProfile', exports.component_);\n\n\n/**\n * @param {angular.Scope} $scope Angular scope.\n * @param {angular.$http} $http Angular http service.\n * @param {angular.JQLite} $element Element.\n * @param {angular.$filter} $filter Angular filter\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Feature overlay\n *     manager.\n * @param {string} gmfProfileJsonUrl URL of GMF service JSON profile.\n * @param {ngeo.download.Csv} ngeoCsvDownload CSV Download service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfProfileController\n */\nexports.Controller_ = function($scope, $http, $element, $filter,\n  gettextCatalog, ngeoFeatureOverlayMgr, gmfProfileJsonUrl,\n  ngeoCsvDownload) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.$element_ = $element;\n\n  /**\n   * @type {angular.$filter}\n   * @export\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.pointHoverOverlay_ = ngeoFeatureOverlayMgr.getFeatureOverlay();\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.gmfProfileJsonUrl_ = gmfProfileJsonUrl;\n\n  /**\n   * @type {ngeo.download.Csv}\n   * @private\n   */\n  this.ngeoCsvDownload_ = ngeoCsvDownload;\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?Object<string, !gmfx.ProfileLineConfiguration>}\n   * @private\n   */\n  this.linesConfiguration_ = null;\n\n  /**\n   * @type {!Array.<string>}\n   * @private\n   */\n  this.layersNames_ = [];\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.nbPoints_ = 100;\n\n  /**\n   * @type {ol.geom.LineString}\n   * @export\n   */\n  this.line;\n\n  /**\n   * @type {Array.<Object>}\n   * @export\n   */\n  this.profileData = [];\n\n  /**\n   * @type {gmfx.ProfileHoverPointInformations}\n   * @export\n   */\n  this.currentPoint = {\n    coordinate: undefined,\n    distance: undefined,\n    elevations: {},\n    xUnits: undefined,\n    yUnits: undefined\n  };\n\n  /**\n   * Distance to highlight on the profile. (Property used in ngeo.Profile.)\n   * @type {number}\n   * @export\n   */\n  this.profileHighlight = -1;\n\n  /**\n   * Overlay to show the measurement.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.measureTooltip_ = null;\n\n  /**\n   * The measure tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.measureTooltipElement_ = null;\n\n  /**\n   * @type {ol.Feature}\n   * @private\n   */\n  this.snappedPoint_ = new olFeature();\n  this.pointHoverOverlay_.addFeature(this.snappedPoint_);\n\n  /**\n   * @type {ngeox.profile.I18n}\n   * @private\n   */\n  this.profileLabels_ = {\n    xAxis: gettextCatalog.getString('Distance'),\n    yAxis: gettextCatalog.getString('Elevation')\n  };\n\n\n  /**\n   * @type {?ngeox.profile.ProfileOptions}\n   * @export\n   */\n  this.profileOptions = null;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active = false;\n\n  /**\n   * @type {ol.EventsKey}\n   * @private\n   */\n  this.pointerMoveKey_;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isErrored = false;\n\n\n  // Watch the active value to activate/deactive events listening.\n  $scope.$watch(\n    () => this.active,\n    (newValue, oldValue) => {\n      if (oldValue !== newValue) {\n        this.updateEventsListening_();\n      }\n    });\n\n  // Watch the line to update the profileData (data for the chart).\n  $scope.$watch(\n    () => this.line,\n    (newLine, oldLine) => {\n      if (oldLine !== newLine) {\n        this.update_();\n      }\n    });\n\n  this.updateEventsListening_();\n};\n\n\n/**\n * Init the controller\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.map_ = this['getMapFn'] ? this['getMapFn']() : null;\n  this.nbPoints_ = this['getNbPointsFn'] ? this['getNbPointsFn']() : 100;\n\n  let hoverPointStyle;\n  const hoverPointStyleFn = this['getHoverPointStyleFn'];\n  if (hoverPointStyleFn) {\n    hoverPointStyle = hoverPointStyleFn();\n    googAsserts.assertInstanceof(hoverPointStyle, olStyleStyle);\n  } else {\n    hoverPointStyle = new olStyleStyle({\n      image: new olStyleCircle({\n        fill: new olStyleFill({color: '#ffffff'}),\n        radius: 3\n      })\n    });\n  }\n  this.pointHoverOverlay_.setStyle(hoverPointStyle);\n\n  const linesConfiguration = this['getLinesConfigurationFn']();\n  googAsserts.assertInstanceof(linesConfiguration, Object);\n\n  this.linesConfiguration_ = linesConfiguration;\n\n  for (const name in this.linesConfiguration_) {\n    // Keep an array of all layer names.\n    this.layersNames_.push(name);\n    // Add generic zExtractor to lineConfiguration object that doesn't have one.\n    const lineConfig = this.linesConfiguration_[name];\n    if (!lineConfig.zExtractor) {\n      this.linesConfiguration_[name].zExtractor = this.getZFactory_(name);\n    }\n  }\n\n  this.profileOptions = /** @type {ngeox.profile.ProfileOptions} */ ({\n    linesConfiguration: this.linesConfiguration_,\n    distanceExtractor: this.getDist_,\n    hoverCallback: this.hoverCallback_.bind(this),\n    outCallback: this.outCallback_.bind(this),\n    i18n: this.profileLabels_\n  });\n\n  const optionsFn = this['getOptionsFn'];\n  if (optionsFn) {\n    const options = optionsFn();\n    googAsserts.assertObject(options);\n    olObj.assign(this.profileOptions, options);\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.update_ = function() {\n  this.isErrored = false;\n  if (this.line) {\n    this.getJsonProfile_();\n  } else {\n    this.profileData = [];\n  }\n  this.active = !!this.line;\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.updateEventsListening_ = function() {\n  if (this.active && this.map_ !== null) {\n    this.pointerMoveKey_ = olEvents.listen(this.map_, 'pointermove',\n      this.onPointerMove_.bind(this));\n  } else {\n    olEvents.unlistenByKey(this.pointerMoveKey_);\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} e An ol map browser pointer event.\n * @private\n */\nexports.Controller_.prototype.onPointerMove_ = function(e) {\n  if (e.dragging || !this.line) {\n    return;\n  }\n  const coordinate = this.map_.getEventCoordinate(e.originalEvent);\n  const closestPoint = this.line.getClosestPoint(coordinate);\n  // compute distance to line in pixels\n  const eventToLine = new olGeomLineString([closestPoint, coordinate]);\n  const pixelDist = eventToLine.getLength() / this.map_.getView().getResolution();\n\n  if (pixelDist < 16) {\n    this.profileHighlight = this.getDistanceOnALine_(closestPoint, this.line);\n  } else {\n    this.profileHighlight = -1;\n  }\n  this.$scope_.$apply();\n};\n\n\n/**\n * Return the distance between the beginning of the line and the given point.\n * The point must be on the line. If not, this function will return the total\n * length of the line.\n * @param {ol.Coordinate} pointOnLine A point on the given line.\n * @param {ol.geom.LineString} line A line.\n * @return {number} A distance.\n * @private\n */\nexports.Controller_.prototype.getDistanceOnALine_ = function(pointOnLine,\n  line) {\n  let segment;\n  let distOnLine = 0;\n  const fakeExtent = [\n    pointOnLine[0] - 0.5,\n    pointOnLine[1] - 0.5,\n    pointOnLine[0] + 0.5,\n    pointOnLine[1] + 0.5\n  ];\n  this.line.forEachSegment((firstPoint, lastPoint) => {\n    segment = new olGeomLineString([firstPoint, lastPoint]);\n    // Is the pointOnLine on this swegement ?\n    if (segment.intersectsExtent(fakeExtent)) {\n      // If the closestPoint is on the line, add the distance between the first\n      // point of this segment and the pointOnLine.\n      segment.setCoordinates([firstPoint, pointOnLine]);\n      return distOnLine += segment.getLength(); // Assign value and break;\n    } else {\n      // Do the sum of the length of each eventual previous segment.\n      distOnLine += segment.getLength();\n    }\n  });\n  return distOnLine;\n};\n\n\n/**\n * @param {Object} point Point.\n * @param {number} dist distance on the line.\n * @param {string} xUnits X units label.\n * @param {Object.<string, number>} elevationsRef Elevations references.\n *  @param {string} yUnits Y units label.\n * @private\n */\nexports.Controller_.prototype.hoverCallback_ = function(point, dist, xUnits,\n  elevationsRef, yUnits) {\n  // Update information point.\n  let ref;\n  const coordinate = [point.x, point.y];\n  for (ref in elevationsRef) {\n    this.currentPoint.elevations[ref] = elevationsRef[ref];\n  }\n  this.currentPoint.distance = dist;\n  this.currentPoint.xUnits = xUnits;\n  this.currentPoint.yUnits = yUnits;\n  this.currentPoint.coordinate = coordinate;\n\n  // Update hover.\n  const geom = new olGeomPoint(coordinate);\n  this.createMeasureTooltip_();\n  this.measureTooltipElement_.innerHTML = this.getTooltipHTML_();\n  this.measureTooltip_.setPosition(coordinate);\n  this.snappedPoint_.setGeometry(geom);\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.outCallback_ = function() {\n  // Reset information point.\n  this.currentPoint.coordinate = undefined;\n  this.currentPoint.distance = undefined;\n  this.currentPoint.elevations = {};\n  this.currentPoint.xUnits = undefined;\n  this.currentPoint.yUnits = undefined;\n\n  // Reset hover.\n  this.removeMeasureTooltip_();\n  this.snappedPoint_.setGeometry(null);\n};\n\n\n/**\n * @return {string} A texte formatted to a tooltip.\n * @private\n */\nexports.Controller_.prototype.getTooltipHTML_ = function() {\n  const separator = ' : ';\n  let elevationName, translatedElevationName;\n  const innerHTML = [];\n  const number = this.$filter_('number');\n  const DistDecimal = this.currentPoint.xUnits === 'm' ? 0 : 2;\n  innerHTML.push(\n    `${this.profileLabels_.xAxis +\n      separator +\n      number(this.currentPoint.distance, DistDecimal)\n    } ${\n      this.currentPoint.xUnits}`\n  );\n  for (elevationName in this.currentPoint.elevations) {\n    translatedElevationName = this.gettextCatalog_.getString(elevationName);\n    innerHTML.push(\n      `${translatedElevationName +\n        separator +\n        number(this.currentPoint.elevations[elevationName], 0)\n      } ${this.currentPoint.yUnits}`\n    );\n  }\n  return innerHTML.join('</br>');\n};\n\n\n/**\n * Creates a new 'hover' tooltip\n * @private\n */\nexports.Controller_.prototype.createMeasureTooltip_ = function() {\n  this.removeMeasureTooltip_();\n  this.measureTooltipElement_ = document.createElement('div');\n  this.measureTooltipElement_.className += 'tooltip ngeo-tooltip-measure';\n  this.measureTooltip_ = new olOverlay({\n    element: this.measureTooltipElement_,\n    offset: [0, -15],\n    positioning: 'bottom-center'\n  });\n  this.map_.addOverlay(this.measureTooltip_);\n};\n\n\n/**\n * Destroy the 'hover' tooltip\n * @private\n */\nexports.Controller_.prototype.removeMeasureTooltip_ = function() {\n  if (this.measureTooltipElement_ !== null) {\n    this.measureTooltipElement_.parentNode.removeChild(\n      this.measureTooltipElement_);\n    this.measureTooltipElement_ = null;\n    this.map_.removeOverlay(this.measureTooltip_);\n  }\n};\n\n\n/**\n * Return the color value of a gmfx.ProfileLineConfiguration.\n * @param {string} layerName name of the elevation layer.\n * @return {string|undefined} A HEX color or undefined is nothing is found.\n * @export\n */\nexports.Controller_.prototype.getColor = function(layerName) {\n  const lineConfiguration = this.linesConfiguration_[layerName];\n  if (!lineConfiguration) {\n    return undefined;\n  }\n  return lineConfiguration.color;\n};\n\n\n/**\n * Return a copy of the existing layer names.\n * @return {Array.<string>} The names of layers.\n * @export\n */\nexports.Controller_.prototype.getLayersNames = function() {\n  return this.layersNames_.slice(0);\n};\n\n\n/**\n * @param {string} layerName name of the elevation layer.\n * @return {function(Object):number} Z extractor function.\n * @private\n */\nexports.Controller_.prototype.getZFactory_ = function(layerName) {\n  /**\n   * Generic GMF extractor for the 'given' value in 'values' in profileData.\n   * @param {Object} item The item.\n   * @return {number} The elevation.\n   * @private\n   */\n  const getZFn = function(item) {\n    if ('values' in item && layerName in item['values']) {\n      return parseFloat(item['values'][layerName]);\n    }\n    return 0;\n  };\n  return getZFn;\n};\n\n\n/**\n * Extractor for the 'dist' value in profileData.\n * @param {Object} item The item.\n * @return {number} The distance.\n * @private\n */\nexports.Controller_.prototype.getDist_ = function(item) {\n  if ('dist' in item) {\n    return item['dist'];\n  }\n  return 0;\n};\n\n\n/**\n * Request the profile.\n * @private\n */\nexports.Controller_.prototype.getJsonProfile_ = function() {\n  const geom = {\n    'type': 'LineString',\n    'coordinates': this.line.getCoordinates()\n  };\n\n  const params = {\n    'layers': this.layersNames_.join(','),\n    'geom': JSON.stringify(geom),\n    'nbPoints': this.nbPoints_\n  };\n\n  /** @type {Function} */ (this.$http_)({\n    url: this.gmfProfileJsonUrl_,\n    method: 'POST',\n    params: params,\n    paramSerializer: '$httpParamSerializerJQLike',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    }\n  }).then(\n    this.getProfileDataSuccess_.bind(this),\n    this.getProfileDataError_.bind(this)\n  );\n};\n\n\n/**\n * @param {!angular.$http.Response} resp Response.\n * @private\n */\nexports.Controller_.prototype.getProfileDataSuccess_ = function(resp) {\n  const profileData = resp.data['profile'];\n  if (profileData instanceof Array) {\n    this.profileData = profileData;\n  }\n};\n\n\n/**\n * @param {!angular.$http.Response} resp Response.\n * @private\n */\nexports.Controller_.prototype.getProfileDataError_ = function(resp) {\n  this.isErrored = true;\n  console.error('Can not get JSON profile.');\n};\n\n\n/**\n * Request the csv profile with the current profile data.\n * @export\n */\nexports.Controller_.prototype.downloadCsv = function() {\n  if (this.profileData.length === 0) {\n    return;\n  }\n\n  /** @type {Array.<ngeox.GridColumnDef>} */\n  const headers = [];\n  let hasDistance = false;\n  const firstPoint = this.profileData[0];\n  if ('dist' in firstPoint) {\n    headers.push({name: 'distance'});\n    hasDistance = true;\n  }\n  const layers = [];\n  for (const layer in firstPoint['values']) {\n    headers.push({'name': layer});\n    layers.push(layer);\n  }\n  headers.push({name: 'x'});\n  headers.push({name: 'y'});\n\n  const rows = this.profileData.map((point) => {\n    const row = {};\n    if (hasDistance) {\n      row['distance'] = point['dist'];\n    }\n\n    layers.forEach((layer) => {\n      row[layer] = point['values'][layer];\n    });\n\n    row['x'] = point['x'];\n    row['y'] = point['y'];\n\n    return row;\n  });\n\n  this.ngeoCsvDownload_.startDownload(rows, headers, 'profile.csv');\n};\n\n\nexports.controller('GmfProfileController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.profile.drawLineComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport olCollection from 'ol/Collection.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olMap from 'ol/Map.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDrawProfileLine', [\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\n\n/**\n * Simple directive that can be put on any element. The directive listen on\n * clicks events to allow/disallow to draw one line (and only one) on the\n * map. Typically used to draw the line that will serve the gmf.Profile.\n *\n * Example:\n *\n *      <gmf-drawprofileline\n *        gmf-drawprofileline-active=\"mainCtrl.drawProfileActive\"\n *        gmf-drawprofileline-map=\"mainCtrl.map\"\n *        gmf-drawprofileline-line=\"mainCtrl.line\"\n *      </gmf-drawprofileline>\n *\n *\n * @htmlAttribute {ol.Map} gmf-drawprofileline-map The map.\n * @htmlAttribute {ol.geom.LineString} gmf-drawprofileline-line The variable to\n *     connect with the drawed line.\n * @htmlAttribute {boolean=} gmf-drawprofileline-active Active the component.\n * @htmlAttribute {ol.style.Style=} gmf-drawprofileline-style Optional style\n *     for the drawed line.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname gmfDrawprofileline\n */\nexports.directive_ = function() {\n  return {\n    scope: true,\n    controller: 'GmfDrawprofilelineController as ctrl',\n    restrict: 'A',\n    bindToController: {\n      'getMapFn': '&gmfDrawprofilelineMap',\n      'line': '=gmfDrawprofilelineLine',\n      'active': '=gmfDrawprofilelineActive',\n      'getStyleFn': '&?gmfDrawprofilelineStyle'\n    }\n  };\n};\n\n\nexports.directive('gmfDrawprofileline',\n  exports.directive_);\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Feature overlay\n *     manager.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfDrawprofilelineController\n */\nexports.Controller_ = function($scope, $element, $timeout,\n  ngeoFeatureOverlayMgr) {\n\n  /**\n   * @type {?ol.geom.LineString}\n   * @export\n   */\n  this.line;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.features_ = new olCollection();\n\n  const overlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n  overlay.setFeatures(this.features_);\n\n  let style;\n  const styleFn = this['getStyleFn'];\n  if (styleFn) {\n    style = styleFn();\n    googAsserts.assertInstanceof(style, olStyleStyle);\n  } else {\n    style = new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: '#ffcc33',\n        width: 2\n      })\n    });\n  }\n  overlay.setStyle(style);\n\n  /**\n   * @type {!ol.interaction.Draw}\n   * @export\n   */\n  this.interaction = new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n    features: this.features_\n  });\n\n  ngeoMiscDecorate.interaction(this.interaction);\n\n  // Clear the line as soon as the interaction is activated.\n  this.interaction.on('change:active', () => {\n    if (this.interaction.getActive()) {\n      this.clear_();\n    }\n  });\n\n  // Update the profile with the new geometry.\n  this.interaction.on('drawend', (event) => {\n    this.line = event.feature.getGeometry();\n    // using timeout to prevent double click to zoom the map\n    $timeout(() => {\n      this.interaction.setActive(false);\n    }, 0);\n  });\n\n  // Line may be removed from an other component\n  // for example closing the chart panel\n  $scope.$watch(\n    () => this.line,\n    (newLine, oldLine) => {\n      if (newLine === null) {\n        this.clear_();\n      }\n    });\n\n  $scope.$watch(\n    () => this.active,\n    (newValue) => {\n      if (newValue === false) {\n        this.clear_();\n      }\n      // Will activate the interaction automatically the first time\n      this.interaction.setActive(this.active);\n    }\n  );\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  const map = this['getMapFn']();\n  googAsserts.assertInstanceof(map, olMap);\n  this.map_ = map;\n  this.map_.addInteraction(this.interaction);\n};\n\n\n/**\n * Clear the overlay and profile line.\n * @private\n */\nexports.Controller_.prototype.clear_ = function() {\n  this.features_.clear();\n  this.line = null;\n};\n\n\nexports.controller('GmfDrawprofilelineController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.profile.module\n */\nimport gmfProfileComponent from 'gmf/profile/component.js';\nimport gmfProfileDrawLineComponent from 'gmf/profile/drawLineComponent.js';\n\nimport './profile.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfProfileModule', [\n  gmfProfileComponent.name,\n  gmfProfileDrawLineComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.query.bboxQueryComponent\n */\n/** @suppress {extraRequire} */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport olInteractionDragBox from 'ol/interaction/DragBox.js';\nimport * as olEventsCondition from 'ol/events/condition.js';\n\nconst exports = angular.module('ngeoBboxQuery', [\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\n/**\n * Provides a \"bbox query\" directive.\n *\n * This directive is responsible of binding a map and the ngeo query service\n * together. While active, drawing a bbox while CTRL or the 'meta' key is pressed\n * issues a request to the query service.\n *\n * This directive doesn't require to be rendered in a visible DOM element, but\n * it could be used with a ngeo-btn to manage the activation of the directive.\n * See below an example without any use of UI:\n *\n * Example:\n *\n *      <span\n *        ngeo-bbox-query=\"\"\n *        ngeo-bbox-query-map=\"::ctrl.map\"\n *        ngeo-bbox-query-limit=\"50\"\n *        ngeo-bbox-query-active=\"ctrl.queryActive\">\n *        ngeo-bbox-query-autoclear=\"ctrl.queryAutoClear\">\n *      </span>\n *\n * See the live example: [../examples/bboxquery.html](../examples/bboxquery.html)\n *\n * @param {ngeo.query.MapQuerent} ngeoMapQuerent The ngeo map querent service.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoBboxQuery\n */\nexports.directive_ = function(ngeoMapQuerent) {\n  return {\n    restrict: 'A',\n    scope: false,\n    link: (scope, elem, attrs) => {\n      /**\n       * @type {ol.Map}\n       */\n      const map = scope.$eval(attrs['ngeoBboxQueryMap']);\n\n      const interaction = new olInteractionDragBox({\n        condition: olEventsCondition.platformModifierKeyOnly\n      });\n\n      /**\n       * Called when a bbox is drawn while this controller is active. Issue\n       * a request to the query service using the extent that was drawn.\n       * @param {ol.interaction.DragBox.Event} evt Event.\n       */\n      const handleBoxEnd = function(evt) {\n        const extent = interaction.getGeometry().getExtent();\n        ngeoMapQuerent.issue({\n          limit: scope.$eval(attrs['ngeoBboxQueryLimit']),\n          extent: extent,\n          map: map\n        });\n      };\n      interaction.on('boxend', handleBoxEnd);\n\n      // watch 'active' property -> activate/deactivate accordingly\n      scope.$watch(attrs['ngeoBboxQueryActive'],\n        (newVal, oldVal) => {\n          if (newVal) {\n            // activate\n            map.addInteraction(interaction);\n          } else {\n            // deactivate\n            map.removeInteraction(interaction);\n            if (scope.$eval(attrs['ngeoBboxQueryAutoclear']) !== false) {\n              ngeoMapQuerent.clear();\n            }\n          }\n        }\n      );\n    }\n  };\n};\n\nexports.directive('ngeoBboxQuery', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module gmf.raster.component\n */\nimport gmfRasterRasterService from 'gmf/raster/RasterService.js';\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport * as olEvents from 'ol/events.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfRasterComponent', [\n  gmfRasterRasterService.module.name,\n  ngeoMiscDebounce.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/raster/widgetComponent', require('./widgetComponent.html'));\n});\n\n\nexports.value('gmfElevationwidgetTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfElevationwidgetTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/raster/widgetComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfElevationwidgetTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfElevationwidgetTemplateUrl($attrs, gmfElevationwidgetTemplateUrl) {\n  return gmfElevationwidgetTemplateUrl($attrs);\n}\n\n\n/**\n * Provide a directive that set a value each 500ms with the elevation under the\n * mouse cursor position on the map. The value must come from the elevation\n * service of a c2cgeoportal server. The server's URL must be defined as\n * config value of the application.\n *\n * Example:\n *\n *      <span gmf-elevation\n *            gmf-elevation-active=\"elevationActive\"\n *            gmf-elevation-elevation=\"elevationValue\"\n *            gmf-elevation-layer=\"mainCtrl.elevationLayer\"\n *            gmf-elevation-map=\"::mainCtrl.map\">\n *            {{elevationValue | number:2}}m\n *      </span>\n *\n *\n * @htmlAttribute {boolean} gmf-elevation-active A boolean to set active or\n *     deactive the component.\n * @htmlAttribute {number} gmf-elevation-elevation The value to set with the\n *     elevation value.\n * @htmlAttribute {string} gmf-elevation-layer Elevation layer to use.\n * @htmlAttribute {ol.Map} gmf-elevation-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname gmfElevation\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    controller: 'GmfElevationController as ctrl',\n    bindToController: true,\n    scope: {\n      'active': '<gmfElevationActive',\n      'elevation': '=gmfElevationElevation',\n      'loading': '=?gmfElevationLoading',\n      'layer': '<gmfElevationLayer',\n      'map': '=gmfElevationMap'\n    },\n    link: (scope, element, attr) => {\n      const ctrl = scope['ctrl'];\n\n      // Watch active or not.\n      scope.$watch(() => ctrl.active, function(active) {\n        this.toggleActive_(active);\n      }.bind(ctrl));\n\n      // Watch current layer.\n      scope.$watch(() => ctrl.layer, function(layer) {\n        this.layer = layer;\n        this.elevation = null;\n      }.bind(ctrl));\n    }\n  };\n};\n\n\nexports.directive('gmfElevation', exports.component_);\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @param {ngeox.miscDebounce} ngeoDebounce Ngeo debounce factory\n * @param {gmf.raster.RasterService} gmfRaster Gmf Raster service\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfElevationController\n */\nexports.Controller_ = function($scope, ngeoDebounce, gmfRaster) {\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {gmf.raster.RasterService}\n   * @private\n   */\n  this.gmfRaster_ = gmfRaster;\n\n  /**\n   * @type {boolean}\n   */\n  this.active;\n\n  /**\n   * @type {!number|undefined}\n   * @export\n   */\n  this.elevation;\n\n  /**\n   * @type {string}\n   */\n  this.layer;\n\n  /**\n   * @type {ol.Map}\n   */\n  this.map;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.inViewport_ = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.loading = false;\n};\n\n/**\n * Active or deactive the request of the raster each 500 ms on pointermove.\n * @param {boolean} active true to make requests.\n * @private\n */\nexports.Controller_.prototype.toggleActive_ = function(active) {\n  this.elevation = undefined;\n  if (active) {\n    googAsserts.assert(this.listenerKeys_.length === 0);\n\n    // Moving the mouse clears previously displayed elevation\n    this.listenerKeys_.push(olEvents.listen(this.map, 'pointermove',\n      function(e) {\n        this.scope_.$apply(() => {\n          this.inViewport_ = true;\n          this.elevation = undefined;\n          this.loading = false;\n        });\n      }, this));\n\n    // Launch the elevation service request when the user stops moving the\n    // mouse for less short delay\n    this.listenerKeys_.push(olEvents.listen(this.map, 'pointermove',\n      this.ngeoDebounce_(this.pointerStop_.bind(this), 500, true)\n    ));\n\n    this.listenerKeys_.push(olEvents.listen(this.map.getViewport(), 'mouseout', () => {\n      this.scope_.$apply(() => {\n        this.elevation = undefined;\n        this.inViewport_ = false;\n        this.loading = false;\n      });\n    }));\n  } else {\n    this.elevation = undefined;\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_.length = 0;\n  }\n};\n\n\n/**\n * Request data from a raster from a MapBrowserPointerEvent's coordinates.\n * Called when the user stopped moving the mouse for 500ms.\n * @param {ol.MapBrowserPointerEvent} e An ol map browser pointer event.\n * @private\n */\nexports.Controller_.prototype.pointerStop_ = function(e) {\n  if (this.inViewport_) {\n    this.loading = true;\n    const params = {\n      'layers': this.layer\n    };\n    this.gmfRaster_.getRaster(e.coordinate, params).then(\n      this.getRasterSuccess_.bind(this),\n      this.getRasterError_.bind(this)\n    );\n  }\n};\n\n\n/**\n * @param {Object.<string, number>} resp Response of the get Raster service.\n * @private\n */\nexports.Controller_.prototype.getRasterSuccess_ = function(resp) {\n  googAsserts.assert(this.layer, 'A layer should be selected');\n  this.elevation = resp[this.layer];\n  this.loading = false;\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.getRasterError_ = function() {\n  console.error('Error on getting the raster.');\n  this.elevation = undefined;\n  this.loading = false;\n};\n\n\nexports.controller('GmfElevationController', exports.Controller_);\n\n\n/**\n * Provides a component which encapsulates the elevation component (see above)\n * in a button with dropdown menu to be included in a application directly.\n *\n * Example:\n *  <gmf-elevationwidget\n *      gmf-elevationwidget-map=\"::mainCtrl.map\"\n *      gmf-elevationwidget-layers=\"::mainCtrl.elevationLayers\"\n *      gmf-elevationwidget-active=\"mainCtrl.showInfobar\">\n *  </gmf-elevationwidget>\n *\n * @htmlAttribute {ol.Map} gmf-elevationwidget-map The map.\n * @htmlAttribute {Array.<string>} gmf-elevationwidget-layers The list of\n *     layers.\n * @htmlAttribute {boolean} gmf-elevationwidget-active Whether to activate the\n *     elevation component.\n *\n * @ngdoc component\n * @ngname gmfElevationwidget\n */\nexports.widgetComponent_ = {\n  controller: 'gmfElevationwidgetController as ctrl',\n  bindings: {\n    'map': '<gmfElevationwidgetMap',\n    'layers': '<gmfElevationwidgetLayers',\n    'active': '<gmfElevationwidgetActive'\n  },\n  templateUrl: gmfElevationwidgetTemplateUrl\n};\nexports.component('gmfElevationwidget', exports.widgetComponent_);\n\n\n/**\n * @constructor\n * @private\n * @ngdoc controller\n */\nexports.WidgetController_ = function() {\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {!Array.<string>}\n   * @export\n   */\n  this.layers;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.selectedElevationLayer;\n};\n\n\nexports.WidgetController_.prototype.$onInit = function() {\n  this.selectedElevationLayer = this.layers[0];\n};\n\n\nexports.controller('gmfElevationwidgetController',\n  exports.WidgetController_);\n\n\nexport default exports;\n","/**\n * @module ngeo.print.Utils\n */\nimport * as olHas from 'ol/has.js';\nimport * as olMath from 'ol/math.js';\n\n/**\n * Provides a service with print utility functions.\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoPrintUtils\n */\nconst exports = function() {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.extentHalfHorizontalDistance_;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.extentHalfVerticalDistance_;\n\n};\n\n\n/**\n * @const\n * @private\n */\nexports.INCHES_PER_METER_ = 39.37;\n\n\n/**\n * @const\n * @private\n */\nexports.DOTS_PER_INCH_ = 72;\n\n\n/**\n * Return a function to use as map postcompose listener for drawing a print\n * mask on the map.\n * @param {function():ol.Size} getSize User-defined function returning the\n *     size in dots of the map to print.\n * @param {function(olx.FrameState):number} getScale User-defined function\n *     returning the scale of the map to print.\n * @param {function():number=} opt_rotation User defined function returning the\n *     inclination of the canvas in degree (-180 to 180).\n * returning the scale of the map to print.\n * @return {function(ol.render.Event)} Function to use as a map postcompose\n * listener.\n * @export\n */\nexports.prototype.createPrintMaskPostcompose = function(getSize, getScale, opt_rotation) {\n  const self = this;\n\n  return (\n  /**\n        * @param {ol.render.Event} evt Postcompose event.\n        */\n    function(evt) {\n      const context = evt.context;\n      const frameState = evt.frameState;\n\n      const resolution = frameState.viewState.resolution;\n\n      const viewportWidth = frameState.size[0] * frameState.pixelRatio;\n      const viewportHeight = frameState.size[1] * frameState.pixelRatio;\n\n      const center = [viewportWidth / 2, viewportHeight / 2];\n\n      const size = getSize();\n      const height = size[1] * olHas.DEVICE_PIXEL_RATIO;\n      const width = size[0] * olHas.DEVICE_PIXEL_RATIO;\n      const scale = getScale(frameState);\n\n      const ppi = exports.DOTS_PER_INCH_;\n      const ipm = exports.INCHES_PER_METER_;\n\n      const extentHalfWidth =\n           (((width / ppi) / ipm) * scale / resolution) / 2;\n      self.extentHalfHorizontalDistance_ =\n           (((size[0] / ppi) / ipm) * scale) / 2;\n\n      const extentHalfHeight =\n           (((height / ppi) / ipm) * scale / resolution) / 2;\n      self.extentHalfVerticalDistance_ =\n           (((size[1] / ppi) / ipm) * scale) / 2;\n\n      // Draw a mask on the whole map.\n      context.beginPath();\n      context.moveTo(0, 0);\n      context.lineTo(viewportWidth, 0);\n      context.lineTo(viewportWidth, viewportHeight);\n      context.lineTo(0, viewportHeight);\n      context.lineTo(0, 0);\n      context.closePath();\n\n      // Draw the print zone\n      if (!opt_rotation) {\n        self.drawPrintZone_(context, center, extentHalfWidth,\n          extentHalfHeight);\n      } else {\n        const rotation = olMath.toRadians(opt_rotation());\n        self.drawPrintZoneWithRotation_(context, center, extentHalfWidth,\n          extentHalfHeight, rotation);\n      }\n\n      // Fill the mask\n      context.fillStyle = 'rgba(0, 5, 25, 0.5)';\n      context.fill();\n    }\n  );\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context of the Postcompose event.\n * @param {Array.<number>} center Center of the viewport (x; y).\n * @param {number} extentHalfWidth Extent half width.\n * @param {number} extentHalfHeight Extent half height.\n * @private\n */\nexports.prototype.drawPrintZone_ = function(context, center,\n  extentHalfWidth, extentHalfHeight) {\n  const minx = center[0] - extentHalfWidth;\n  const miny = center[1] - extentHalfHeight;\n  const maxx = center[0] + extentHalfWidth;\n  const maxy = center[1] + extentHalfHeight;\n\n  context.moveTo(minx, miny);\n  context.lineTo(minx, maxy);\n  context.lineTo(maxx, maxy);\n  context.lineTo(maxx, miny);\n  context.lineTo(minx, miny);\n  context.closePath();\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context of the Postcompose event.\n * @param {Array.<number>} center Center of the viewport (x; y).\n * @param {number} extentHalfWidth Extent half width.\n * @param {number} extentHalfHeight Extent half height.\n * @param {number} rotation Rotation value in radians.\n * @private\n */\nexports.prototype.drawPrintZoneWithRotation_ = function(context, center,\n  extentHalfWidth, extentHalfHeight, rotation) {\n  // diagonal = distance p1 to center.\n  const diagonal = Math.sqrt(Math.pow(extentHalfWidth, 2) +\n      Math.pow(extentHalfHeight, 2));\n  // gamma = angle between horizontal and diagonal (with rotation).\n  const gamma = Math.atan(extentHalfHeight / extentHalfWidth) - rotation;\n  // omega = angle between diagonal and vertical (with rotation).\n  const omega = Math.atan(extentHalfWidth / extentHalfHeight) - rotation;\n  // Calculation of each corner.\n  const x1 = center[0] - Math.cos(gamma) * diagonal;\n  const y1 = center[1] + Math.sin(gamma) * diagonal;\n  const x2 = center[0] + Math.sin(omega) * diagonal;\n  const y2 = center[1] + Math.cos(omega) * diagonal;\n  const x3 = center[0] + Math.cos(gamma) * diagonal;\n  const y3 = center[1] - Math.sin(gamma) * diagonal;\n  const x4 = center[0] - Math.sin(omega) * diagonal;\n  const y4 = center[1] - Math.cos(omega) * diagonal;\n\n  context.moveTo(x1, y1);\n  context.lineTo(x2, y2);\n  context.lineTo(x3, y3);\n  context.lineTo(x4, y4);\n  context.lineTo(x1, y1);\n  context.closePath();\n};\n\n\n/**\n * Get the optimal print scale for a map, the map being defined by its\n * size (in pixels) and resolution (in map units per pixel).\n * @param {ol.Size} mapSize Size of the map on the screen (px).\n * @param {number} mapResolution Resolution of the map on the screen.\n * @param {ol.Size} printMapSize Size of the map on the paper (dots).\n * @param {Array.<number>} printMapScales Supported map scales on the paper.\n * The scales are provided as scale denominators, sorted in ascending order.\n * E.g. `[500, 1000, 2000, 4000]`.\n * @return {number} The best scale. `-1` is returned if there is no optimal\n * scale, that is the optimal scale is lower than or equal to the first value\n * in `printMapScales`.\n * @export\n */\nexports.prototype.getOptimalScale = function(\n  mapSize, mapResolution, printMapSize, printMapScales) {\n\n  const mapWidth = mapSize[0] * mapResolution;\n  const mapHeight = mapSize[1] * mapResolution;\n\n  const scaleWidth = mapWidth * exports.INCHES_PER_METER_ *\n      exports.DOTS_PER_INCH_ / printMapSize[0];\n  const scaleHeight = mapHeight * exports.INCHES_PER_METER_ *\n      exports.DOTS_PER_INCH_ / printMapSize[1];\n\n  const scale = Math.min(scaleWidth, scaleHeight);\n\n  let optimal = -1;\n  for (let i = 0, ii = printMapScales.length; i < ii; ++i) {\n    if (scale > printMapScales[i]) {\n      optimal = printMapScales[i];\n    }\n  }\n\n  return optimal;\n};\n\n\n/**\n * Get the optimal map resolution for a print scale and a map size.\n * @param {ol.Size} mapSize Size of the map on the screen (px).\n * @param {ol.Size} printMapSize Size of the map on the paper (dots).\n * @param {number} printMapScale Map scale on the paper.\n * @return {number} The optimal map resolution.\n * @export\n */\nexports.prototype.getOptimalResolution = function(\n  mapSize, printMapSize, printMapScale) {\n\n  const dotsPerMeter =\n      exports.DOTS_PER_INCH_ * exports.INCHES_PER_METER_;\n\n  const resolutionX = (printMapSize[0] * printMapScale) /\n      (dotsPerMeter * mapSize[0]);\n  const resolutionY = (printMapSize[1] * printMapScale) /\n      (dotsPerMeter * mapSize[1]);\n\n  const optimalResolution = Math.max(resolutionX, resolutionY);\n\n  return optimalResolution;\n};\n\n\n/**\n * Get the coordinates of the bottom left corner of the printed map.\n * @param {ol.Coordinate} mapCenter Center of the map to print.\n * @return {ol.Coordinate} The coordinates of the bottom left corner.\n */\nexports.prototype.getBottomLeftCorner = function(mapCenter) {\n  return [mapCenter[0] - this.extentHalfHorizontalDistance_,\n    mapCenter[1] - this.extentHalfVerticalDistance_];\n};\n\n\n/**\n * Get the coordinates of the bottom right corner of the printed map.\n * @param {ol.Coordinate} mapCenter Center of the map to print.ç\n * @return {ol.Coordinate} The coordinates of the bottom right corner.\n */\nexports.prototype.getBottomRightCorner = function(mapCenter) {\n  return [mapCenter[0] + this.extentHalfHorizontalDistance_,\n    mapCenter[1] - this.extentHalfVerticalDistance_];\n};\n\n\n/**\n * Get the coordinates of the up left corner of the printed map.\n * @param {ol.Coordinate} mapCenter Center of the map to print.\n * @return {ol.Coordinate} The coordinates of the up left corner.\n */\nexports.prototype.getUpLeftCorner = function(mapCenter) {\n  return [mapCenter[0] - this.extentHalfHorizontalDistance_,\n    mapCenter[1] + this.extentHalfVerticalDistance_];\n};\n\n\n/**\n * Get the coordinates of the up right corner of the printed map.\n * @param {ol.Coordinate} mapCenter Center of the map to print.\n * @return {ol.Coordinate} The coordinates of the up right corner.\n */\nexports.prototype.getUpRightCorner = function(mapCenter) {\n  return [mapCenter[0] + this.extentHalfHorizontalDistance_,\n    mapCenter[1] + this.extentHalfVerticalDistance_];\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoPrintUtils', []);\nexports.module.service('ngeoPrintUtils', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.print.component\n */\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoPrintService from 'ngeo/print/Service.js';\nimport ngeoPrintUtils from 'ngeo/print/Utils.js';\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olMap from 'ol/Map.js';\nimport * as olMath from 'ol/math.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfPrintComponent', [\n  gmfAuthenticationService.module.name,\n  gmfThemeThemes.module.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoPrintService.module.name,\n  ngeoPrintUtils.module.name,\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\nexports.value('gmfPrintTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['gmfPrintTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/print';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/print', require('./component.html'));\n});\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.PrintStateEnum = {\n\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT_IN_USE: 'notInUse',\n\n  /**\n   * @type {string}\n   * @export\n   */\n  PRINTING: 'printing',\n\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR_ON_REPORT: 'errorOnReport',\n\n  /**\n   * @type {string}\n   * @export\n   */\n  CAPABILITIES_NOT_LOADED: 'capabilitiesNotLoaded',\n\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR_ON_GETCAPABILITIES: 'errorOnGetCapabilities'\n};\n\n\nexports.value('gmfPrintState', {\n  'state': exports.PrintStateEnum.CAPABILITIES_NOT_LOADED\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfPrintTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfPrintTemplateUrl($element, $attrs, gmfPrintTemplateUrl) {\n  return gmfPrintTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provide a component that display a print panel. This panel is populated with\n * a form corresponding to the capabilities delivered by a GMF print v3 server.\n * If you want to use another template for your print panel, you can see the\n * available layout information in the 'gmfx.PrintLayoutInfo' classes.\n *\n * Simple example:\n *\n *      <gmf-print\n *        gmf-print-map=\"::mainCtrl.map\"\n *        gmf-print-active=\"printActive\"\n *        gmf-print-rotatemask=\"::true\">\n *      </gmf-print>\n *\n * Example with user defined attribute:\n *\n *      <gmf-print\n *        gmf-print-map=\"::mainCtrl.map\"\n *        gmf-print-active=\"printActive\"\n *        gmf-print-rotatemask=\"::true\"\n *        gmf-print-hiddenattributes=\"::['name']\"\n *        gmf-print-attributes-out=\"::attributes\">\n *        <div ng-repeat=\"attribute in ::attributes\">\n *          <div ng-if=\"attribute.name == 'name'\">\n *            <input ng-model=\"attribute.value\" placeholder=\"name\" />\n *          </div>\n *        </div>\n *      </gmf-print>\n *\n * Note: The 'print' and 'cancel' functions can also be called via globals\n * events 'gmfStartPrint' and 'gmfCancelPrint'.\n *\n * @htmlAttribute {ol.Map} gmf-print-map The map.\n * @htmlAttribute {boolean} gmf-print-active A boolean that informs if the\n *     panel is open or not.\n * @htmlAttribute {boolean} gmf-print-rotatemask Optional. True to apply\n *     rotation on the mask instead of the map. By default, the map rotates.\n * @htmlAttribute {Object.<string, string|number|boolean>}\n *     gmf-print-fieldvalues optional. Key, value object to define default\n *     value in each of your print panel field. The key refers to the\n *     property's name of the field.\n *     Example: {'comments': 'demo', 'legend': false}. Doesn't work for the dpi\n *     and the scale. Server's values are used in priority.\n * @htmlAttribute {Array.<string>} gmf-print-hiddenattributes The list of attributes that should be hidden.\n * @ngdoc component\n * @ngname gmfPrint\n */\nexports.component_ = {\n  bindings: {\n    'map': '<gmfPrintMap',\n    'active': '=gmfPrintActive',\n    'rotateMask': '<?gmfPrintRotatemask',\n    'fieldValues': '<?gmfPrintFieldvalues',\n    'hiddenAttributeNames': '<?gmfPrintHiddenattributes',\n    'attributesOut': '=?gmfPrintAttributesOut'\n  },\n  controller: 'GmfPrintController',\n  templateUrl: gmfPrintTemplateUrl,\n  transclude: true\n};\n\n\nexports.component('gmfPrint', exports.component_);\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {angular.JQLite} $element Element.\n   * @param {angular.Scope} $rootScope Angular root scope.\n   * @param {angular.Scope} $scope Angular scope.\n   * @param {angular.$timeout} $timeout Angular timeout service.\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {angular.$injector} $injector Main injector.\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {ngeo.map.LayerHelper} ngeoLayerHelper The ngeo Layer Helper service.\n   * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Ngeo Feature Overlay\n   *     Manager service.\n   * @param {ngeo.print.Utils} ngeoPrintUtils The ngeo PrintUtils service.\n   * @param {ngeox.CreatePrint} ngeoCreatePrint The ngeo Create Print function.\n   * @param {string} gmfPrintUrl A MapFishPrint url.\n   * @param {gmf.authentication.Service} gmfAuthenticationService The authentication service.\n   * @param {ngeox.QueryResult} ngeoQueryResult ngeo query result.\n   * @param {angular.$filter} $filter Angular $filter service.\n   * @param {gmf.print.component.PrintStateEnum} gmfPrintState GMF print state.\n   * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n   * @private\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfPrintController\n   */\n  constructor($element, $rootScope, $scope, $timeout, $q, $injector,\n    gettextCatalog, ngeoLayerHelper, ngeoFeatureOverlayMgr,  ngeoPrintUtils,\n    ngeoCreatePrint, gmfPrintUrl, gmfAuthenticationService, ngeoQueryResult,\n    $filter, gmfPrintState, gmfThemes) {\n\n    /**\n     * @type {gmf.print.component.PrintStateEnum}\n     * @private\n     */\n    this.gmfPrintState_ = gmfPrintState;\n\n    /**\n     * @type {function(string): string}\n     * @private\n     */\n    this.translate_ = $filter('translate');\n\n    /**\n     * @type {ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.active;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.rotateMask = false;\n\n    /**\n     * @type {Object.<string, string|number|boolean>!}\n     * @export\n     */\n    this.fieldValues = {};\n\n    /**\n     * @type {Array.<string>}\n     * @export\n     */\n    this.attributesOut;\n\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.$rootScope_ = $rootScope;\n\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.$scope_ = $scope;\n\n    /**\n     * @type {angular.$timeout}\n     * @private\n     */\n    this.$timeout_ = $timeout;\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.$q_ = $q;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n    /**\n     * @type {ol.layer.Vector}\n     * @private\n     */\n    this.featureOverlayLayer_ = ngeoFeatureOverlayMgr.getLayer();\n\n    /**\n     * @type {ngeo.print.Utils}\n     * @private\n     */\n    this.ngeoPrintUtils_ = ngeoPrintUtils;\n\n    /**\n     * @type {ngeo.print.Service}\n     * @private\n     */\n    this.ngeoPrint_ = ngeoCreatePrint(gmfPrintUrl);\n\n    /**\n     * @type {ngeox.QueryResult}\n     * @private\n     */\n    this.ngeoQueryResult_ = ngeoQueryResult;\n\n    /**\n     * @type {gmf.authentication.Service}\n     * @private\n     */\n    this.gmfAuthenticationService_ = gmfAuthenticationService;\n\n    /**\n     * @type {gmf.theme.Themes}\n     * @private\n     */\n    this.gmfThemes_ = gmfThemes;\n\n    this.cacheVersion_ = '0';\n    if ($injector.has('cacheVersion')) {\n      this.cacheVersion_ = $injector.get('cacheVersion');\n    }\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.scaleInput = false;\n\n    if ($injector.has('gmfPrintOptions')) {\n      this.scaleInput = $injector.get('gmfPrintOptions')['scaleInput'];\n    }\n\n    /**\n     * @type {?angular.$q.Deferred}\n     * @private\n     */\n    this.requestCanceler_ = null;\n\n    /**\n     * @type {?angular.$q.Promise}\n     * @private\n     */\n    this.statusTimeoutPromise_ = null;\n\n    /**\n     * @type {Array.<number>|null}\n     * @private\n     */\n    this.onDragPreviousMousePosition_ = null;\n\n    /**\n     * @type {?angular.$q.Promise|null}\n     * @private\n     */\n    this.rotationTimeoutPromise_ = null;\n\n    /**\n     * @type {ol.EventsKey}\n     * @private\n     */\n    this.postComposeListenerKey_;\n\n    /**\n     * @type {ol.EventsKey}\n     * @private\n     */\n    this.pointerDragListenerKey_;\n\n    /**\n     * @type {ol.EventsKey}\n     * @private\n     */\n    this.mapViewResolutionChangeKey_;\n\n    /**\n     * Current report reference id.\n     * @type {string}\n     * @private\n     */\n    this.curRef_ = '';\n\n    /**\n     * Formats availables in capabilities.\n     * @type {Array.<string>}\n     * @private\n     */\n    this.formats_ = [];\n\n    /**\n     * An array of attributes objects from capabilities.\n     * @type {Array.<Object>}\n     * @private\n     */\n    this.layouts_ = [];\n\n    /**\n     * An attributes object from capabilities.\n     * @type {Object}\n     * @private\n     */\n    this.layout_ = {};\n\n    /**\n     * @type {Array.<number>}\n     * @private\n     */\n    this.paperSize_ = [];\n\n    /**\n     * @type {gmfx.PrintLayoutInfo}\n     * @export\n     */\n    this.layoutInfo = {};\n\n    /**\n     * @type {number}\n     * @export\n     */\n    this.rotation = 0;\n\n    /**\n     * @type {Array.<string>}\n     * @export\n     */\n    this.hiddenAttributeNames;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.scaleManuallySelected_ = false;\n\n    /**\n     * @type {angular.JQLite}\n     * @export\n     */\n    this.rotationInput_ = $element.find('.gmf-print-rotation-input');\n\n    this.rotationInput_.on('input', (event) => {\n      const rotation = $(event.target).val();\n      if (rotation !== '') {\n        this.setRotation(/** @type {number} */ (rotation));\n      }\n    });\n\n    /**\n     * @type {function(ol.render.Event)}\n     */\n    this.postcomposeListener_;\n\n    /**\n     * @type {angular.$http.HttpPromise}\n     * @private\n     */\n    this.capabilities_;\n\n    /**\n     * @type {gmfThemes.GmfOgcServers}\n     * @private\n     */\n    this.ogcServers_;\n\n    /**\n     * @type {Array.<gmfThemes.GmfTheme>}\n     * @private\n     */\n    this.currentThemes_;\n  }\n\n\n  /**\n   * Init the controller\n   */\n  $onInit() {\n    // Clear the capabilities if the roleId changes\n    this.$scope_.$watch(() => this.gmfAuthenticationService_.getRoleId(), () => {\n      this.gmfPrintState_.state = exports.PrintStateEnum.CAPABILITIES_NOT_LOADED;\n      this.capabilities_ = null;\n    });\n\n    this.$scope_.$watch(() => this.active, (active) => {\n      this.togglePrintPanel_(active);\n    });\n\n    // Print on event.\n    this.$rootScope_.$on('gmfStartPrint', (event, format) => {\n      this.print(`${format}`);\n    });\n\n    // Cancel print task on event.\n    this.$rootScope_.$on('gmfCancelPrint', () => {\n      this.cancel();\n    });\n\n    this.gmfThemes_.getOgcServersObject().then((ogcServersObject) => {\n      this.ogcServers_ = ogcServersObject;\n    });\n\n    this.gmfThemes_.getThemesObject().then((currentThemes) => {\n      this.currentThemes_ = currentThemes;\n    });\n\n    /**\n     * @return {ol.Size} Size in dots of the map to print.\n     */\n    const getSizeFn = () => this.paperSize_;\n\n    let getRotationFn;\n    if (this.rotateMask) {\n      /**\n       * @return {number} rotation to apply.\n       */\n      getRotationFn = () => this.rotation;\n    }\n\n    this.postcomposeListener_ = this.ngeoPrintUtils_.createPrintMaskPostcompose(\n      getSizeFn, this.getScaleFn.bind(this), getRotationFn);\n  }\n\n\n  /**\n   * @param {olx.FrameState} frameState Frame state.\n   * @return {number} Scale of the map to print.\n   */\n  getScaleFn(frameState) {\n    // Don't compute an optimal scale if the user manually choose a value not in\n    // the pre-defined scales. (`scaleInput` in `gmfPrintOptions`).\n    googAsserts.assert(this.layoutInfo.scales);\n    googAsserts.assert(this.layoutInfo.scale !== undefined);\n    if (!this.scaleManuallySelected_ &&\n        (this.layoutInfo.scale === -1 || olArray.includes(this.layoutInfo.scales, this.layoutInfo.scale))) {\n      const mapSize = frameState.size;\n      const viewResolution = frameState.viewState.resolution;\n      this.layoutInfo.scale = this.getOptimalScale_(mapSize, viewResolution);\n    }\n    return this.layoutInfo.scale;\n  }\n\n\n  /**\n   * @param {boolean} active True to listen events related to the print and get\n   *     capabilities. False to stop listen them and set rotation to 0.\n   * @private\n   */\n  togglePrintPanel_(active) {\n    if (active) {\n      if (!this.capabilities_) {\n        this.getCapabilities_();\n      }\n      this.capabilities_.then((resp) => {\n        // make sure the panel is still open\n        if (!this.active) {\n          return;\n        }\n        this.gmfPrintState_.state = exports.PrintStateEnum.NOT_IN_USE;\n        // Get capabilities - On success\n        this.parseCapabilities_(resp);\n        this.postComposeListenerKey_ = olEvents.listen(this.map, 'postcompose', this.postcomposeListener_);\n        this.pointerDragListenerKey_ = olEvents.listen(this.map, 'pointerdrag', this.onPointerDrag_, this);\n        this.mapViewResolutionChangeKey_ = olEvents.listen(this.map.getView(), 'change:resolution', () => {\n          this.scaleManuallySelected_ = false;\n        });\n        this.map.render();\n      }, (resp) => {\n        // Get capabilities - On error\n        this.gmfPrintState_.state = exports.PrintStateEnum.ERROR_ON_GETCAPABILITIES;\n        this.capabilities_ = null;\n      });\n    } else {\n      olEvents.unlistenByKey(this.postComposeListenerKey_);\n      olEvents.unlistenByKey(this.pointerDragListenerKey_);\n      olEvents.unlistenByKey(this.mapViewResolutionChangeKey_);\n      this.setRotation(0);\n      this.map.render(); // Redraw (remove) post compose mask;\n    }\n  }\n\n\n  /**\n   * Gets the print capabilities.\n   * @param {number|null=} opt_roleId The role id.\n   * @private\n   */\n  getCapabilities_(opt_roleId) {\n    this.capabilities_ = this.ngeoPrint_.getCapabilities(\n      /** @type {angular.$http.Config} */ ({\n        withCredentials: true,\n        params: opt_roleId ? {\n          'role': opt_roleId,\n          'cache_version': this.cacheVersion_\n        } : {\n          'cache_version': this.cacheVersion_\n        }\n      }));\n  }\n\n\n  /**\n   * Create the list of layouts, get the formats, get the first layout in\n   * gmf print v3 capabilities and then update the print panel layout information.\n   * @param {!angular.$http.Response} resp Response.\n   * @private\n   */\n  parseCapabilities_(resp) {\n    const data = resp['data'];\n    this.formats_ = data['formats'] || [];\n    this.layouts_ = data['layouts'];\n    this.layout_ = data['layouts'][0];\n\n    this.layoutInfo.layouts = [];\n    this.layouts_.forEach((layout) => {\n      this.layoutInfo.layouts.push(layout.name);\n    });\n\n    this.updateFields_();\n  }\n\n\n  /**\n   * Update layout information with the user values if there are always available in the\n   * current layout otherwise use the defaults values of the layout.\n   * If a field doesn't exist in the current layout, set it to undefined so the\n   * view can hide it. Update also the paper size.\n   * custom print templates).\n   * @private\n   */\n  updateFields_() {\n    this.layoutInfo.layout = this.layout_.name;\n\n    const mapInfo = this.isAttributeInCurrentLayout_('map');\n    googAsserts.assertObject(mapInfo);\n    const clientInfo = mapInfo['clientInfo'];\n    googAsserts.assertObject(clientInfo);\n    this.paperSize_ = [clientInfo['width'], clientInfo['height']];\n\n    this.updateCustomFields_();\n\n    const legend = this.isAttributeInCurrentLayout_('legend');\n    if (this.layoutInfo.legend === undefined) {\n      this.layoutInfo.legend = !!(legend !== undefined ?\n        legend : this.fieldValues['legend']);\n    }\n\n    this.layoutInfo.scales = clientInfo['scales'] || [];\n    this.layoutInfo.dpis = clientInfo['dpiSuggestions'] || [];\n\n    const mapSize = this.map.getSize();\n    const viewResolution = this.map.getView().getResolution();\n    this.layoutInfo.scale = this.getOptimalScale_(mapSize, viewResolution);\n\n    this.layoutInfo.dpi =\n        (this.layoutInfo.dpi && this.layoutInfo.dpis.indexOf(this.layoutInfo.dpi) > 0) ?\n          this.layoutInfo.dpi : this.layoutInfo.dpis[0];\n\n    this.layoutInfo.formats = {};\n    this.formats_.forEach((format) => {\n      this.layoutInfo.formats[format] = true;\n    });\n\n    this.attributesOut = this.layoutInfo['simpleAttributes'];\n\n    // Force the update of the mask\n    this.map.render();\n  }\n\n\n  /**\n   * Update simple attributes information with gmfx.Customfield to be able to generate a form\n   * from a custom GMF print v3 configuration.\n   * @private\n   */\n  updateCustomFields_() {\n    let name, rawType, value, type;\n    if (!this.layoutInfo.simpleAttributes) {\n      this.layoutInfo.simpleAttributes = [];\n    }\n    const simpleAttributes = this.layoutInfo.simpleAttributes;\n    const previousAttributes = simpleAttributes.splice(0, simpleAttributes.length);\n\n    // The attributes without 'clientParams' are the custom layout information (defined by end user).\n    this.layout_.attributes.forEach((attribute) => {\n      if (!attribute['clientParams']) {\n        name = `${attribute.name}`;\n        const defaultValue = attribute.default;\n        value = (defaultValue !== undefined && defaultValue !== '') ?\n          defaultValue : this.fieldValues[name];\n\n        // Try to use existing form field type\n        rawType = `${attribute.type}`;\n        switch (rawType) {\n          case 'String':\n            type = (name === 'comments') ? 'textarea' : 'text';\n            break;\n          case 'Boolean':\n            type = 'checkbox';\n            break;\n          case 'Number':\n            type = 'number';\n            value = parseFloat(value);\n            value = isNaN(value) ? 0 : value;\n            break;\n          default:\n            type = rawType;\n        }\n\n        // If it exists use the value of previous same field.\n        previousAttributes.forEach((c) => {\n          if (c.name === name && c.type === type) {\n            return value = c.value;\n          }\n        });\n\n        this.layoutInfo.simpleAttributes.push(/** gmfx.PrintSimpleAttributes */ ({\n          name,\n          type,\n          value\n        }));\n      }\n    });\n  }\n\n\n  /**\n   * Return a capabilities 'attribute' object corresponding to the given name.\n   * @param {string} name Name of the attribute to get.\n   * @return {Object|null} corresponding attribute or null.\n   * @private\n   */\n  isAttributeInCurrentLayout_(name) {\n    let attr = null;\n    this.layout_.attributes.forEach((attribute) => {\n      if (attribute.name === name) {\n        return attr = attribute;\n      }\n    });\n    return attr;\n  }\n\n\n  /**\n   * Set the current rotation value.\n   * Updating the rotation will redraw the mask or rotate the map (depending on the configuration).\n   * @param {number} rotation The optional new rotation value in degrees.\n   */\n  setRotation(rotation) {\n    this.rotation = olMath.clamp(rotation, -180, 180);\n\n    // sync all the inputs\n    this.rotationInput_.val(this.rotation.toString());\n\n    // Render the map to update the postcompose mask or rotate the map.\n    if (this.rotateMask) {\n      this.map.render();\n    } else {\n      this.map.getView().setRotation(olMath.toRadians(this.rotation));\n    }\n  }\n\n\n  /**\n   * Calculate the angle and the sense of rotation between two lines. One from the\n   * center of the map and the point of the last call to this function and one\n   * from the same center and the point of the current call.\n   * @param {ol.MapBrowserPointerEvent} e An ol map browser pointer event.\n   * @private\n   */\n  onPointerDrag_(e) {\n    const originalEvent = e.originalEvent;\n    const mapCenter = this.map.getView().getCenter();\n    if (this.active && originalEvent.altKey && originalEvent.shiftKey && mapCenter) {\n      const center = this.map.getPixelFromCoordinate(mapCenter);\n      const pixel = e.pixel;\n      // Reset previous position between two different sessions of drags events.\n      if (this.rotationTimeoutPromise_ === null) {\n        this.onDragPreviousMousePosition_ = null;\n      } else {\n        // Cancel the timeout to keep this session of drags event\n        this.$timeout_.cancel(this.rotationTimeoutPromise_);\n        // Calculate angle and sense of rotation.\n        const p0x = this.onDragPreviousMousePosition_[0] - center[0];\n        const p0y = this.onDragPreviousMousePosition_[1] - center[1];\n        const p1x = pixel[0] - center[0];\n        const p1y = pixel[1] - center[1];\n        const centerToP0 = Math.sqrt(Math.pow(p0x, 2) + Math.pow(p0y, 2));\n        const centerToP1 = Math.sqrt(Math.pow(p1x, 2) + Math.pow(p1y, 2));\n        const sense = (p0x * p1y - p0y * p1x) > 0 ? 1 : -1;\n        let angle = (p0x * p1x + p0y * p1y) / (centerToP0 * centerToP1);\n        angle = angle <= 1 ? sense * Math.acos(angle) : 0;\n        const boost = centerToP1 / 200;\n        const increment = Math.round(olMath.toDegrees(angle) * boost);\n\n        // Set rotation then update the view.\n        this.setRotation(this.rotation + increment);\n        this.$scope_.$digest();\n      }\n      // Prepare the removal of this session of drags events\n      this.rotationTimeoutPromise_ = this.$timeout_(() => {\n        this.rotationTimeoutPromise_ = null;\n      }, 500);\n      // Keep the current position for the next calculation.\n      this.onDragPreviousMousePosition_ = pixel;\n    }\n  }\n\n\n  /**\n   * Create a print report based on the values of the 'layoutInfo' values.\n   * @param {string} format An output format corresponding to one format in the\n   *     capabilities document ('pdf', 'png', etc).\n   * @export\n   */\n  print(format) {\n    // Do not print if a print task is already processing.\n    if (this.gmfPrintState_.state === exports.PrintStateEnum.PRINTING) {\n      return;\n    }\n    this.requestCanceler_ = this.$q_.defer();\n    this.gmfPrintState_.state = exports.PrintStateEnum.PRINTING;\n\n    const mapSize = this.map.getSize();\n    const viewResolution = this.map.getView().getResolution() || 0;\n    const scale = this.layoutInfo.scale || this.getOptimalScale_(mapSize, viewResolution);\n    const rotation = this.rotateMask ? -this.rotation : this.rotation;\n    const datasource = this.getDataSource_();\n\n    const customAttributes = {\n      'datasource': datasource,\n      'lang': this.gettextCatalog_.currentLanguage,\n      'rotation': rotation,\n      'scale': scale\n    };\n\n    if (this.layoutInfo.simpleAttributes) {\n      this.layoutInfo.simpleAttributes.forEach((field) => {\n        customAttributes[field.name] = field.value;\n      });\n    }\n\n    if (this.layoutInfo.legend) {\n      const legend = this.getLegend_(scale);\n      if (legend !== null) {\n        customAttributes['legend'] = this.getLegend_(scale);\n      }\n    }\n\n    googAsserts.assertNumber(this.layoutInfo.dpi);\n    googAsserts.assertString(this.layoutInfo.layout);\n\n    // convert the WMTS layers to WMS\n    const map = new olMap({});\n    map.setView(this.map.getView());\n    const ol_layers = this.ngeoLayerHelper_.getFlatLayers(this.map.getLayerGroup());\n    const new_ol_layers = [];\n    let print_native_angle = true;\n    for (let i = 0, ii = ol_layers.length; i < ii; i++) {\n      let layer = ol_layers[i];\n      const metadata = layer.get('metadata');\n      if (metadata) {\n        const server_name = metadata.ogcServer;\n        const layer_names = metadata.printLayers || metadata.layers;\n        if (server_name && layer_names) {\n          const server = this.ogcServers_[server_name];\n          if (server) {\n            layer = this.ngeoLayerHelper_.createBasicWMSLayer(\n              server.url,\n              layer_names,\n              server.imageType,\n              server.type\n            );\n          } else {\n            console.error('Missing ogcServer:', server_name);\n          }\n        }\n      }\n\n      // Get the print native angle parameter for WMS layers when set to not use default value\n      // Is applied only once when the value is overridden with a metadata from administration\n      if (layer instanceof olLayerImage && layer.get('printNativeAngle') === false) {\n        print_native_angle = false;\n      }\n\n      new_ol_layers.push(layer);\n    }\n    map.setLayerGroup(new olLayerGroup({\n      layers: new_ol_layers,\n      'printNativeAngle': print_native_angle\n    }));\n\n    const spec = this.ngeoPrint_.createSpec(map, scale, this.layoutInfo.dpi,\n      this.layoutInfo.layout, format, customAttributes);\n\n    // Add feature overlay layer to print spec.\n    const layers = [];\n    this.ngeoPrint_.encodeLayer(layers, this.featureOverlayLayer_,\n      viewResolution);\n    if (layers.length > 0) {\n      spec.attributes.map.layers.unshift(layers[0]);\n    }\n\n    this.ngeoPrint_.createReport(spec, /** @type {angular.$http.Config} */ ({\n      timeout: this.requestCanceler_.promise\n    })).then(\n      this.handleCreateReportSuccess_.bind(this),\n      this.handleCreateReportError_.bind(this)\n    );\n\n    // remove temporary map\n    map.setTarget(null);\n  }\n\n\n  /**\n   * Cancel the current print and reset its state.\n   * @export\n   */\n  cancel() {\n    // Cancel the latest request, if it's not finished yet.\n    if (this.requestCanceler_ !== null) {\n      this.requestCanceler_.resolve();\n    }\n\n    // Cancel the status timeout if there's one set, to make sure no other\n    // status request is sent.\n    if (this.statusTimeoutPromise_ !== null) {\n      this.$timeout_.cancel(this.statusTimeoutPromise_);\n    }\n\n    if (this.curRef_.length > 0) {\n      this.ngeoPrint_.cancel(this.curRef_);\n    }\n\n    this.resetPrintStates_();\n  }\n\n\n  /**\n   * @param {gmf.print.component.PrintStateEnum=} opt_printState the print state.\n   * @private\n   */\n  resetPrintStates_(opt_printState) {\n    this.gmfPrintState_.state = opt_printState || exports.PrintStateEnum.NOT_IN_USE;\n    this.curRef_ = '';\n  }\n\n\n  /**\n   * Get datasource object for print report\n   * @private\n   * @return {Array.<gmfx.datasource.DataSourcePrintReportObject>} the data\n   *     source objet for the print report\n   */\n  getDataSource_() {\n    let datasourceObj, data, columns;\n    const datasourceArr = [];\n    const sources = this.ngeoQueryResult_.sources;\n    sources.forEach(function(source) {\n      data = [];\n      columns = [];\n      source.features.forEach(function(feature, i) {\n        googAsserts.assert(feature);\n        const properties = ngeoMiscFeatureHelper.getFilteredFeatureValues(feature);\n        if (i === 0) {\n          columns = Object.keys(properties).map(function tanslateColumns(prop) {\n            return this.translate_(prop);\n          }, this);\n        }\n        data.push(Object.keys(properties).map(key => properties[key]));\n      }, this);\n      if (columns.length) {\n        datasourceObj =\n          /** @type {gmfx.datasource.DataSourcePrintReportObject} */({\n            title: this.translate_(source.label),\n            table: {\n              columns,\n              data\n            }\n          });\n        datasourceArr.push(datasourceObj);\n      }\n    }, this);\n    return datasourceArr;\n  }\n\n\n  /**\n   * Get the optimal scale to display the print mask. Return the first scale if\n   * no scale matches.\n   * @param {ol.Size|undefined} mapSize Size of the map on the screen (px).\n   * @param {number|undefined} viewResolution Resolution of the map on the screen.\n   * @return {number} The best scale. -1 is returned if there is no optimal\n   *     scale, that is the optimal scale is lower than or equal to the first\n   *     value in printMapScales.\n   * @private\n   */\n  getOptimalScale_(mapSize, viewResolution) {\n    const scales = this.layoutInfo.scales.slice();\n    if (mapSize !== undefined && viewResolution !== undefined) {\n      return this.ngeoPrintUtils_.getOptimalScale(mapSize, viewResolution,\n        this.paperSize_, scales.reverse());\n    }\n    return this.layoutInfo.scales[0];\n  }\n\n\n  /**\n   * @param {!angular.$http.Response} resp Response.\n   * @private\n   */\n  handleCreateReportSuccess_(resp) {\n    const mfResp = /** @type {MapFishPrintReportResponse} */ (resp.data);\n    const ref = mfResp.ref;\n    googAsserts.assert(ref.length > 0);\n    this.curRef_ = ref;\n    this.getStatus_(ref);\n  }\n\n\n  /**\n   * @param {string} ref Ref.\n   * @private\n   */\n  getStatus_(ref) {\n    this.requestCanceler_ = this.$q_.defer();\n    this.ngeoPrint_.getStatus(ref, /** @type {angular.$http.Config} */ ({\n      timeout: this.requestCanceler_.promise\n    })).then(\n      this.handleGetStatusSuccess_.bind(this, ref),\n      this.handleCreateReportError_.bind(this)\n    );\n  }\n\n\n  /**\n   * @param {string} ref Ref.\n   * @param {!angular.$http.Response} resp Response.\n   * @private\n   */\n  handleGetStatusSuccess_(ref, resp) {\n    const mfResp = /** @type {MapFishPrintStatusResponse} */ (resp.data);\n    const done = mfResp.done;\n    if (done) {\n      if (mfResp.status != 'error') {\n        // The report is ready. Open it by changing the window location.\n        window.location.href = this.ngeoPrint_.getReportUrl(ref);\n        this.resetPrintStates_();\n      } else {\n        console.error(mfResp.error);\n        this.handleCreateReportError_();\n      }\n    } else {\n      // The report is not ready yet. Check again in 1s.\n      this.statusTimeoutPromise_ = this.$timeout_(() => {\n        this.getStatus_(ref);\n      }, 1000, false);\n    }\n  }\n\n\n  /**\n   * @private\n   */\n  handleCreateReportError_() {\n    this.resetPrintStates_(exports.PrintStateEnum.ERROR_ON_REPORT);\n  }\n\n\n  /**\n   * @param {number} scale The scale to get the legend (for wms layers only).\n   * @return {Object?} Legend object for print report or null.\n   * @private\n   */\n  getLegend_(scale) {\n    const legend = {'classes': []};\n    let classes, layerNames, layerName, icons;\n    const gettextCatalog = this.gettextCatalog_;\n\n    // Get layers from layertree only.\n    const dataLayerGroup = this.ngeoLayerHelper_.getGroupFromMap(this.map,\n      gmfBase.DATALAYERGROUP_NAME);\n    const layers = this.ngeoLayerHelper_.getFlatLayers(dataLayerGroup);\n\n    // For each visible layer in reverse order, get the legend url.\n    layers.reverse().forEach((layer) => {\n      classes = [];\n      if (layer.getVisible() && layer.getSource()) {\n        // For WMTS layers.\n        if (layer instanceof olLayerTile) {\n          layerName = `${layer.get('layerNodeName')}`;\n          icons = this.getMetadataLegendImage_(layerName);\n          if (!icons) {\n            icons = this.ngeoLayerHelper_.getWMTSLegendURL(layer);\n          }\n          // Don't add classes without legend url.\n          if (icons) {\n            classes.push({\n              'name': gettextCatalog.getString(layerName),\n              'icons': [icons]\n            });\n          }\n        } else {\n          const source = /** @type ol.source.ImageWMS */ (layer.getSource());\n          // For each name in a WMS layer.\n          layerNames = source.getParams()['LAYERS'].split(',');\n          layerNames.forEach((name) => {\n            icons = this.getMetadataLegendImage_(name);\n            if (!icons) {\n              icons = this.ngeoLayerHelper_.getWMSLegendURL(source.getUrl(), name,\n                scale);\n            }\n            // Don't add classes without legend url or from layers without any\n            // active name.\n            if (icons && name.length !== 0) {\n              classes.push({\n                'name': gettextCatalog.getString(name),\n                'icons': [icons]\n              });\n            }\n          });\n        }\n      }\n\n      // Add classes object only if it contains something.\n      if (classes.length > 0) {\n        legend['classes'].push({'classes': classes});\n      }\n\n    });\n\n    return legend['classes'].length > 0 ?  legend : null;\n  }\n\n\n  /**\n   * Return the metadata legendImage of a layer from the found corresponding node\n   * or undefined.\n   * @param {string} layerName a layer name.\n   * @return {string|undefined} The legendImage or undefined.\n   * @private\n   */\n  getMetadataLegendImage_(layerName) {\n    const groupNode = gmfThemeThemes.findGroupByLayerNodeName(this.currentThemes_, layerName);\n    let node;\n    if (groupNode && groupNode.children) {\n      node = gmfThemeThemes.findObjectByName(groupNode.children, layerName);\n    }\n    let legendImage;\n    if (node && node.metadata) {\n      legendImage = node.metadata.legendImage;\n    }\n    return legendImage;\n  }\n\n\n  /**\n   * Set the current layout and update all layout information with this new layout parameters.\n   * @param {string!} layoutName A layout name as existing in the list of\n   *     existing layouts.\n   * @export\n   */\n  setLayout(layoutName) {\n    let layout;\n    this.layouts_.forEach((l) => {\n      if (l.name === layoutName) {\n        layout = l;\n        return true; // break;\n      }\n    });\n    this.layout_ = layout;\n    this.updateFields_();\n  }\n\n\n  /**\n   * Get or set the print scale value and adapt the zoom to match with this new scale.\n   * @param {number=} opt_scale A scale value as existing in the scales list field.\n   * @return {number|undefined} New scale.\n   * @export\n   */\n  getSetScale(opt_scale) {\n    if (opt_scale !== undefined) {\n      const mapSize = this.map.getSize() || [0, 0];\n      this.layoutInfo.scale = opt_scale;\n      const res = this.ngeoPrintUtils_.getOptimalResolution(mapSize, this.paperSize_, opt_scale);\n      const contrainRes = this.map.getView().constrainResolution(res, 0, 1);\n      this.map.getView().setResolution(contrainRes);\n      // Render the map to update the postcompose mask manually\n      this.map.render();\n      this.scaleManuallySelected_ = true;\n    }\n    return this.layoutInfo.scale;\n  }\n\n\n  /**\n   * Set the print dpi value.\n   * @param {number} dpi A dpi value as existing in the dpis list field.\n   * @export\n   */\n  setDpi(dpi) {\n    this.layoutInfo.dpi = dpi;\n  }\n\n\n  /**\n   * Check the current state of the print.\n   * @param {string} stateEnumKey An enum key from gmf.print.component.PrintStateEnum.\n   * @return {boolean} True if the given state matches with the current print\n   *     state. False otherwise.\n   * @export\n   */\n  isState(stateEnumKey) {\n    return this.gmfPrintState_.state === exports.PrintStateEnum[stateEnumKey];\n  }\n};\n\nexports.controller('GmfPrintController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.editing.createfeatureComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureArea from 'ngeo/interaction/MeasureArea.js';\nimport ngeoInteractionMeasureLength from 'ngeo/interaction/MeasureLength.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olCollection from 'ol/Collection.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nconst exports = angular.module('ngeoCreatefeature', [\n  ngeoMiscEventHelper.module.name,\n  ngeoMiscFilters.name,\n]);\n\n\n/**\n * A directive used to draw vector features of a single geometry type using\n * either a 'draw' or 'measure' interaction. Once a feature is finished being\n * drawn, it is added to a collection of features.\n *\n * The geometry types supported are:\n *  - Point\n *  - LineString\n *  - Polygon\n *\n * Example:\n *\n *     <a\n *       href\n *       translate\n *       ngeo-btn\n *       ngeo-createfeature\n *       ngeo-createfeature-active=\"ctrl.createPointActive\"\n *       ngeo-createfeature-features=\"ctrl.features\"\n *       ngeo-createfeature-geom-type=\"ctrl.pointGeomType\"\n *       ngeo-createfeature-map=\"::ctrl.map\"\n *       class=\"btn btn-default ngeo-createfeature-point\"\n *       ng-class=\"{active: ctrl.createPointActive}\"\n *       ng-model=\"ctrl.createPointActive\">\n *     </a>\n *\n * @htmlAttribute {boolean} ngeo-createfeature-active Whether the directive is\n *     active or not.\n * @htmlAttribute {ol.Collection} ngeo-createfeature-features The collection of\n *     features where to add those created by this directive.\n * @htmlAttribute {string} ngeo-createfeature-geom-type Determines the type\n *     of geometry this directive should draw.\n * @htmlAttribute {ol.Map} ngeo-createfeature-map The map.\n *\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname ngeoCreatefeature\n */\nexports.directive_ = function() {\n  return {\n    controller: 'ngeoCreatefeatureController',\n    bindToController: true,\n    scope: {\n      'active': '=ngeoCreatefeatureActive',\n      'features': '=ngeoCreatefeatureFeatures',\n      'geomType': '=ngeoCreatefeatureGeomType',\n      'map': '=ngeoCreatefeatureMap'\n    }\n  };\n};\n\nexports.directive('ngeoCreatefeature', exports.directive_);\n\n\n/**\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angular.Scope} $scope Scope.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoCreatefeatureController\n */\nexports.Controller_ = function(gettextCatalog, $compile, $filter, $scope,\n  $timeout, ngeoEventHelper) {\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  /**\n   * @type {ol.Collection.<!ol.Feature>|!ol.source.Vector}\n   * @export\n   */\n  this.features;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.geomType;\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {!angular.$compile}\n   * @private\n   */\n  this.compile_ = $compile;\n\n  /**\n   * @type {!angular.$filter}\n   * @private\n   */\n  this.filter_ = $filter;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {!ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * The draw or measure interaction responsible of drawing the vector feature.\n   * The actual type depends on the geometry type.\n   * @type {ol.interaction.Interaction}\n   * @private\n   */\n  this.interaction_;\n\n\n  // == Event listeners ==\n  $scope.$watch(\n    () => this.active,\n    (newVal) => {\n      this.interaction_.setActive(newVal);\n    }\n  );\n};\n\n\n/**\n * Initialize the directive.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.active = this.active === true;\n  const gettextCatalog = this.gettextCatalog_;\n\n  // Create the draw or measure interaction depending on the geometry type\n  let interaction;\n  if (this.geomType === ngeoGeometryType.POINT ||\n      this.geomType === ngeoGeometryType.MULTI_POINT\n  ) {\n    interaction = new olInteractionDraw({\n      type: /** @type {ol.geom.GeometryType} */ ('Point')\n    });\n  } else if (this.geomType === ngeoGeometryType.LINE_STRING ||\n      this.geomType === ngeoGeometryType.MULTI_LINE_STRING\n  ) {\n    const helpMsg = gettextCatalog.getString('Click to start drawing length');\n    const contMsg = gettextCatalog.getString(\n      'Click to continue drawing<br/>' +\n      'Double-click or click last point to finish'\n    );\n\n    interaction = new ngeoInteractionMeasureLength(\n      this.filter_('ngeoUnitPrefix'),\n      gettextCatalog,\n      {\n        style: new olStyleStyle(),\n        startMsg: this.compile_(`<div translate>${helpMsg}</div>`)(this.scope_)[0],\n        continueMsg: this.compile_(`<div translate>${contMsg}</div>`)(this.scope_)[0]\n      }\n    );\n  } else if (this.geomType === ngeoGeometryType.POLYGON ||\n      this.geomType === ngeoGeometryType.MULTI_POLYGON\n  ) {\n    const helpMsg = gettextCatalog.getString('Click to start drawing area');\n    const contMsg = gettextCatalog.getString(\n      'Click to continue drawing<br/>' +\n      'Double-click or click starting point to finish'\n    );\n\n    interaction = new ngeoInteractionMeasureArea(\n      this.filter_('ngeoUnitPrefix'),\n      gettextCatalog,\n      {\n        style: new olStyleStyle(),\n        startMsg: this.compile_(`<div translate>${helpMsg}</div>`)(this.scope_)[0],\n        continueMsg: this.compile_(`<div translate>${contMsg}</div>`)(this.scope_)[0]\n      }\n    );\n  }\n\n  googAsserts.assert(interaction);\n\n  interaction.setActive(this.active);\n  this.interaction_ = interaction;\n  this.map.addInteraction(interaction);\n\n  const uid = olBase.getUid(this);\n  if (interaction instanceof olInteractionDraw) {\n    this.ngeoEventHelper_.addListenerKey(\n      uid,\n      olEvents.listen(\n        interaction,\n        'drawend',\n        this.handleDrawEnd_,\n        this\n      )\n    );\n  } else if (interaction instanceof ngeoInteractionMeasureLength ||\n     interaction instanceof ngeoInteractionMeasureArea) {\n    this.ngeoEventHelper_.addListenerKey(\n      uid,\n      olEvents.listen(\n        interaction,\n        'measureend',\n        this.handleDrawEnd_,\n        this\n      )\n    );\n  }\n};\n\n\n/**\n * Called when a feature is finished being drawn. Add the feature to the\n * collection.\n * @param {ol.interaction.Draw.Event|ngeox.MeasureEvent} event Event.\n * @export\n */\nexports.Controller_.prototype.handleDrawEnd_ = function(event) {\n  let sketch;\n  if (event.feature) {\n    // ol.interaction.Draw.Event\n    sketch = event.feature;\n  } else {\n    // ngeox.MeasureEvent\n    sketch = event.detail.feature;\n  }\n  googAsserts.assert(sketch);\n\n  // convert to multi if geomType is multi and feature is not\n  let geometry = sketch.getGeometry();\n  const type = geometry.getType();\n  if (this.geomType.indexOf('Multi') != type.indexOf('Multi')) {\n    geometry = ngeoUtils.toMulti(geometry);\n  }\n  const feature = new olFeature(geometry);\n  if (this.features instanceof olCollection) {\n    this.features.push(feature);\n  } else {\n    this.features.addFeature(feature);\n  }\n};\n\n\n/**\n * Cleanup event listeners and remove the interaction from the map.\n */\nexports.Controller_.prototype.$onDestroy = function() {\n  this.timeout_(() => {\n    const uid = olBase.getUid(this);\n    this.ngeoEventHelper_.clearListenerKey(uid);\n    this.interaction_.setActive(false);\n    this.map.removeInteraction(this.interaction_);\n  }, 0);\n};\n\nexports.controller('ngeoCreatefeatureController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.datetimepickerComponent\n */\nimport DateFormatter from 'ngeo/misc/php-date-formatter.js';\nimport 'jquery-datetimepicker/jquery.datetimepicker.js';\nimport 'jquery-datetimepicker/jquery.datetimepicker.css';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDateTimePicker', ['gettext']);\n\n/**\n * A directive used to display a date or time picker\n *\n * Example:\n *\n *      <input ngeo-datetimepicker\n *          ngeo-datetimepicker-options=\"{timepicker: false}\"\n *\n * @htmlAttribute {Object} ngeo-datetimepicker-options The options.\n *\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname ngeoDatetimepicker\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    controller: exports.Controller_,\n    bindToController: true,\n    scope: {\n      'options': '<ngeoDatetimepickerOptions'\n    }\n  };\n};\n\nexports.directive('ngeoDatetimepicker', exports.component_);\n\n\n/**\n * @param {!jQuery} $element Element.\n * @param {!angularGettext.Catalog} gettextCatalog service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoDatetimepickerController\n */\nexports.Controller_ = function($element, gettextCatalog) {\n  /**\n   * @const {!jQuery}\n   * @private\n   */\n  this.element_ = $element;\n\n  /**\n   * The gettext catalog\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * The options\n   * @type {Object|String}\n   * @private\n   */\n  this.options;\n};\n\n\n/**\n * Initialize the directive.\n */\nexports.Controller_.prototype.$onInit = function() {\n  const lang = this.gettextCatalog_.getCurrentLanguage();\n  $.datetimepicker.setLocale(lang);\n  $.datetimepicker.setDateFormatter(new DateFormatter());\n  if (typeof this.options === 'string') {\n    this.options = angular.fromJson(this.options);\n  }\n  this.element_.datetimepicker(this.options);\n};\n\nexports.controller('ngeoDateTimePickerController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.editing.attributesComponent\n */\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoMiscDatetimepickerComponent from 'ngeo/misc/datetimepickerComponent.js';\n\nconst exports = angular.module('ngeoAttributes', [\n  ngeoMiscDatetimepickerComponent.name,\n  ngeoMiscEventHelper.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/editing/attributescomponent', require('./attributescomponent.html'));\n});\n\n\nexports.value('ngeoAttributesTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoAttributesTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/editing/attributescomponent';\n  });\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoAttributesTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoAttributesTemplateUrl($attrs, ngeoAttributesTemplateUrl) {\n  return ngeoAttributesTemplateUrl($attrs);\n}\n\n\n/**\n * Component used to render the attributes of a feature into a form.\n * Example:\n *\n *     <ngeo-attributes\n *       ngeo-attributes-attributes=\"::ctrl.attributes\"\n *       ngeo-attributes-disabled=\"ctrl.attributesDisabled\"\n *       ngeo-attributes-feature=\"::ctrl.feature\">\n *     </ngeo-attributes>\n *\n * @htmlAttribute {Array.<ngeox.Attribute>} ngeo-attributes-attributes The\n *     list of attributes to use.\n * @htmlAttribute {boolean} ngeo-attributes-disabled Whether the fieldset should\n *     be disabled or not.\n * @htmlAttribute {ol.Feature} ngeo-attributes-feature The feature.\n *\n * @ngdoc component\n * @ngname ngeoAttributes\n */\nexports.component_ = {\n  controller: 'ngeoAttributesController as attrCtrl',\n  bindings: {\n    'attributes': '=ngeoAttributesAttributes',\n    'disabled': '<ngeoAttributesDisabled',\n    'feature': '=ngeoAttributesFeature'\n  },\n  require: {\n    'form': '^'\n  },\n  templateUrl: ngeoAttributesTemplateUrl\n};\n\nexports.component('ngeoAttributes', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoAttributesController\n */\nexports.Controller_ = function($scope, ngeoEventHelper) {\n\n  /**\n   * The list of attributes to create the form with.\n   * @type {Array.<ngeox.Attribute>}\n   * @export\n   */\n  this.attributes;\n\n  /**\n   * Whether the fieldset should be disabled or not.\n   * @type {boolean}\n   * @export\n   */\n  this.disabled = false;\n\n  /**\n   * The feature containing the values.\n   * @type {ol.Feature}\n   * @export\n   */\n  this.feature;\n\n  /**\n   * The properties bound to the form, initialized with the inner properties\n   * of the feature.\n   * @type {?Object.<string, *>}\n   * @export\n   */\n  this.properties;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * While changes happen from the form (from the template), they are applied\n   * to the feature inner properties. The 'propertychange' event registered\n   * above does the opposite, i.e. it listens to the feature inner properties\n   * changes and apply them to the form. To prevent circular issues, while\n   * applying changes coming from the form, this flag is set. While set, changes\n   * from the feature inner properties are ignored.\n   * @type {boolean}\n   * @private\n   */\n  this.updating_ = false;\n};\n\n\n/**\n * Initialise the component.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.properties = this.feature.getProperties();\n\n  // Listen to the feature inner properties change and apply them to the form\n  const uid = olBase.getUid(this);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(this.feature, 'propertychange', this.handleFeaturePropertyChange_, this)\n  );\n};\n\n\n/**\n * Called when an input node value changes\n * @param {string} name Attribute name\n * @export\n */\nexports.Controller_.prototype.handleInputChange = function(name) {\n  this.updating_ = true;\n  const value = this.properties[name];\n  this.feature.set(name, value);\n  this.updating_ = false;\n};\n\n\n/**\n * Cleanup event listeners.\n */\nexports.Controller_.prototype.$onDestroy = function() {\n  const uid = olBase.getUid(this);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n};\n\n\n/**\n * @param {ol.Object.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleFeaturePropertyChange_ = function(evt) {\n  if (this.updating_) {\n    return;\n  }\n  this.properties[evt.key] = evt.target.get(evt.key);\n  this.scope_.$apply();\n};\n\n\nexports.controller('ngeoAttributesController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.editing.exportfeaturesComponent\n */\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\n\nconst exports = angular.module('ngeoExportfeatures', [\n  ngeoMiscFeatureHelper.module.name\n]);\n\n/**\n * Directive used to export vector features in different types of format.\n * To configure which formats to use, define the `ngeoExportFeatureFormats`\n * value, as such:\n *\n *     app.module.value('ngeoExportFeatureFormats', [\n *         ngeo.misc.FeatureHelper.FormatType.KML,\n *         ngeo.misc.FeatureHelper.FormatType.GPX\n *     ]);\n *\n * Example:\n *\n *     <button\n *       ngeo-exportfeatures\n *       ngeo-exportfeatures-features=\"ctrl.features\"\n *       class=\"btn btn-link\">Export</button>\n *\n * @htmlAttribute {ol.Collection.<ol.Feature>} ngeo-exportfeatures-features The\n *     features to export\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoExportfeatures\n */\nexports.directive_ = function() {\n  return {\n    controller: 'ngeoExportfeaturesController as efCtrl',\n    scope: true,\n    bindToController: {\n      'features': '=ngeoExportfeaturesFeatures'\n    }\n  };\n};\n\n\nexports.directive('ngeoExportfeatures', exports.directive_);\n\n\n/**\n * @param {angular.JQLite} $element Element.\n * @param {angular.$injector} $injector Main injector.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoExportfeaturesController\n */\nexports.Controller_ = function($element, $injector, $scope,\n  ngeoFeatureHelper) {\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features;\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.element_ = $element;\n\n  const uid = olBase.getUid(this);\n  const id = ['ngeo-exportfeature', uid].join('-');\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.id_ = id;\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  let formats;\n  if ($injector.has('ngeoExportFeatureFormats')) {\n    formats = $injector.get('ngeoExportFeatureFormats');\n  } else {\n    formats = [ngeoMiscFeatureHelper.FormatType.KML];\n  }\n\n  /**\n   * @type {?jQuery}\n   * @private\n   */\n  this.menu_ = null;\n\n  /**\n   * @type {Array.<jQuery>}\n   * @private\n   */\n  this.items_ = [];\n\n  // build the drop-down menu and items if there's more than one format\n  if (formats.length > 1) {\n    $element.attr('id', id);\n    const $menu = $('<ul />', {\n      'class': 'dropdown-menu',\n      'aria-labelledby': id\n    }).appendTo($element.parent()[0]);\n\n    this.menu_ = $menu;\n    let $item;\n\n    formats.forEach((format) => {\n      $item = $('<li />')\n        .appendTo($menu)\n        .append($('<a />', {\n          'href': '#',\n          'text': format\n        })\n          .on(\n            ['click', id].join('.'),\n            this.handleMenuItemClick_.bind(this, format)\n          )\n        );\n      this.items_.push($item);\n    });\n  }\n\n  /**\n   * @type {Array.<string>}\n   * @private\n   */\n  this.formats_ = formats;\n\n  $element.on(['click', id].join('.'), this.handleElementClick_.bind(this));\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n};\n\n\n/**\n * Called when the element bound to this directive is clicked. Use the feature\n * helper to export the feature(s) depending on the format(s) available(s).\n * If there's only one, the call to the export method is direct, otherwise\n * a drop-down menu is show to let the user choose the format of the export.\n * Finally, if there's only one feature in the collection to export and there's\n * more than one format set, some formats may not support the type of geometry.\n * If that's the case, then disable each format item in the drop-down menu\n * that doesn't support the type of geometry.\n * @private\n */\nexports.Controller_.prototype.handleElementClick_ = function() {\n\n  const features = this.features.getArray();\n\n  if (this.formats_.length === 1) {\n    this.featureHelper_.export(features, this.formats_[0]);\n  } else if (features.length === 1) {\n    const feature = features[0];\n    const geom = feature.getGeometry();\n    let $item;\n    this.formats_.forEach((format, i) => {\n      $item = this.items_[i];\n      if (format === ngeoMiscFeatureHelper.FormatType.GPX) {\n        if (geom instanceof olGeomPoint ||\n            geom instanceof olGeomLineString) {\n          $item.removeClass('disabled');\n        } else {\n          $item.addClass('disabled');\n        }\n      }\n    });\n  }\n};\n\n\n/**\n * Called when a menu item is clicked. Export the features to the selected\n * format.\n * @param {string} format Format.\n * @param {jQuery.Event} event Event.\n * @private\n */\nexports.Controller_.prototype.handleMenuItemClick_ = function(format, event) {\n  if (!$(event.target.parentElement).hasClass('disabled')) {\n    const features = this.features.getArray();\n    this.featureHelper_.export(features, format);\n  }\n};\n\n\n/**\n * Cleanup event listeners and remove the menu from DOM, if any.\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  const id = this.id_;\n\n  this.element_.off(['click', id].join('.'));\n\n  if (this.menu_) {\n    this.menu_.remove();\n    this.items_.forEach(($item) => {\n      $item.off(['click', id].join('.'));\n    });\n    this.items_.length = 0;\n    this.menu_ = null;\n  }\n};\n\n\nexports.controller(\n  'ngeoExportfeaturesController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.sortableComponent\n */\nimport 'jquery-ui/ui/widgets/sortable.js';\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoSortable', []);\n\n\n/**\n * Provides a directive that allows drag-and-dropping DOM items between them.\n * It also changes the order of elements in the given array.\n *\n * It is typically used together with `ng-repeat`, for example for re-ordering\n * layers in a map.\n *\n * Example:\n *\n *     <ul ngeo-sortable=\"ctrl.layers\"\n *         ngeo-sortable-options=\"{handleClassName: 'ngeo-sortable-handle'}\">\n *       <li ng-repeat=\"layer in ctrl.layers\">\n *         <span class=\"ngeo-sortable-handle\">handle</span>{{layer.get('name')}}\n *       </li>\n *     </ul>\n *\n * The value of the \"ngeo-sortable\" attribute is an expression which evaluates\n * to an array (an array of layers in the above example). This is the array\n * that is re-ordered after a drag-and-drop.\n *\n * The element with the class \"ngeo-sortable-handle\" is the \"drag handle\".\n * It is required.\n *\n * This directives uses `$watchCollection` to watch the \"sortable\" array. So\n * if some outside code adds/removes elements to/from the \"sortable\" array,\n * the \"ngeoSortable\" directive will pick it up.\n *\n * See our live example: [../examples/layerorder.html](../examples/layerorder.html)\n *\n * @htmlAttribute {Array.<ol.layer.Base>} ngeo-sortable The layers to sort.\n * @htmlAttribute {!ngeox.miscSortableOptions} ngeo-sortable-options The options.\n * @htmlAttribute {Function(angular.JQLite, Array)?} ngeo-sortable-callback\n *     Callback function called after the move end. The Function will be called\n *     with the element and the sort array as arguments.\n * @htmlAttribute {Object?} ngeo-sortable-callback-ctx Context to apply at\n *     the call of the callback function.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoSortable\n */\nexports.component_ = function($timeout) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n\n      const sortable = /** @type {Array} */\n              (scope.$eval(attrs['ngeoSortable'])) || [];\n      googAsserts.assert(Array.isArray(sortable));\n\n      scope.$watchCollection(() => sortable, () => {\n        sortable.length && $timeout(resetUpDragDrop, 0);\n      });\n\n      const optionsObject = scope.$eval(attrs['ngeoSortableOptions']);\n      const options = getOptions(optionsObject);\n\n      const callbackFn = scope.$eval(attrs['ngeoSortableCallback']);\n      const callbackCtx = scope.$eval(attrs['ngeoSortableCallbackCtx']);\n\n      /**\n       * This function resets drag&drop for the list. It is called each\n       * time the sortable array changes (see $watchCollection above).\n       */\n      function resetUpDragDrop() {\n        // Add an index to the sortable to allow sorting of the\n        // underlying data.\n        const children = element.children();\n        for (let i = 0; i < children.length; ++i) {\n          angular.element(children[i]).data('idx', i);\n        }\n\n        const sortableElement = $(element);\n\n        // the element is already sortable; reset it.\n        if (sortableElement.data('ui-sortable')) {\n          sortableElement.off('sortupdate');\n          sortableElement.sortable('destroy');\n        }\n\n        const sortableOptions = {\n          'axis': 'y',\n          'classes': {\n            'ui-sortable-helper': options['draggerClassName']\n          }\n        };\n\n        // CSS class of the handle\n        if (options['handleClassName']) {\n          sortableOptions['handle'] = `.${options['handleClassName']}`;\n        }\n\n        // Placeholder for the item being dragged in the sortable list\n        if (options['placeholderClassName']) {\n          sortableOptions['placeholder'] = options['placeholderClassName'];\n          sortableOptions['forcePlaceholderSize'] = true;\n        }\n\n        sortableElement.sortable(sortableOptions);\n\n        // This event is triggered when the user stopped sorting and\n        // the DOM position (i.e. order in the sortable list) has changed.\n        sortableElement.on('sortupdate', (event, ui) => {\n          const oldIndex = $(ui.item[0]).data('idx');\n          const newIndex = ui.item.index();\n\n          // Update (data)-index on dom element to its new position\n          $(ui.item[0]).data('idx', newIndex);\n\n          // Move dragged item to new position\n          scope.$apply(() => {\n            sortable.splice(newIndex, 0, sortable.splice(oldIndex, 1)[0]);\n          });\n\n          // Call the callback function if it exists.\n          if (callbackFn instanceof Function) {\n            callbackFn.apply(callbackCtx, [element, sortable]);\n          }\n        });\n      }\n\n      /**\n       * @param {?} options Options after expression evaluation.\n       * @return {!ngeox.miscSortableOptions} Options object.\n       * @private\n       */\n      function getOptions(options) {\n        let ret;\n        const defaultHandleClassName = 'ngeo-sortable-handle';\n        if (options === undefined) {\n          ret = {'handleClassName': defaultHandleClassName};\n        } else {\n          if (options['handleClassName'] === undefined) {\n            options['handleClassName'] = defaultHandleClassName;\n          }\n          ret = /** @type {ngeox.miscSortableOptions} */ (options);\n        }\n        return ret;\n      }\n\n    }\n  };\n};\n\nexports.directive('ngeoSortable', exports.component_);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.popoverComponent\n */\nimport 'bootstrap/js/tooltip.js';\nimport 'bootstrap/js/popover.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('ngeoPopover', []);\n\n\n/**\n * Provides a directive used to display a Bootstrap popover.\n *\n *<div ngeo-popover>\n *  <a ngeo-popover-anchor class=\"btn btn-info\">anchor 1</a>\n *  <div ngeo-popover-content>\n *    <ul>\n *      <li>action 1:\n *        <input type=\"range\"/>\n *      </li>\n *    </ul>\n *  </div>\n *</div>\n * @ngdoc directive\n * @ngInject\n * @ngname ngeoPopover\n * @return {angular.Directive} The Directive Definition Object.\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoPopoverController as popoverCtrl',\n    link: (scope, elem, attrs, ngeoPopoverCtrl) => {\n      ngeoPopoverCtrl.anchorElm.on('hidden.bs.popover', () => {\n        /**\n         * @type {{inState : Object}}\n         */\n        const popover = ngeoPopoverCtrl.anchorElm.data('bs.popover');\n        popover['inState'].click = false;\n      });\n\n      ngeoPopoverCtrl.anchorElm.on('inserted.bs.popover', () => {\n        ngeoPopoverCtrl.bodyElm.show();\n        ngeoPopoverCtrl.shown = true;\n      });\n\n      ngeoPopoverCtrl.anchorElm.popover({\n        container: 'body',\n        html: true,\n        content: ngeoPopoverCtrl.bodyElm,\n        placement: attrs['ngeoPopoverPlacement'] || 'right'\n      });\n\n      if (attrs['ngeoPopoverDismiss']) {\n        $(attrs['ngeoPopoverDismiss']).on('scroll', () => {\n          ngeoPopoverCtrl.dismissPopover();\n        });\n      }\n\n      scope.$on('$destroy', () => {\n        ngeoPopoverCtrl.anchorElm.popover('destroy');\n        ngeoPopoverCtrl.anchorElm.unbind('inserted.bs.popover');\n        ngeoPopoverCtrl.anchorElm.unbind('hidden.bs.popover');\n      });\n    }\n  };\n};\n\n/**\n * @ngdoc directive\n * @ngInject\n * @ngname ngeoPopoverAnchor\n * @return {angular.Directive} The Directive Definition Object\n */\nexports.anchorComponent = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoPopover',\n    link: (scope, elem, attrs, ngeoPopoverCtrl) => {\n      ngeoPopoverCtrl.anchorElm = elem;\n    }\n  };\n};\n\n/**\n * @ngdoc directive\n * @ngInject\n * @ngname ngeoPopoverContent\n * @return {angular.Directive} The Directive Definition Object\n */\nexports.contentComponent = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoPopover',\n    link: (scope, elem, attrs, ngeoPopoverCtrl) => {\n      ngeoPopoverCtrl.bodyElm = elem;\n      elem.hide();\n    }\n  };\n};\n\n/**\n * The controller for the 'popover' directive.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoPopoverController\n * @param {angular.Scope} $scope Scope.\n */\nexports.PopoverController_ = function($scope) {\n  /**\n   * The state of the popover (displayed or not)\n   * @type {boolean}\n   * @export\n   */\n  this.shown = false;\n\n  /**\n   * @type {angular.JQLite|undefined}\n   * @export\n   */\n  this.anchorElm = undefined;\n\n  /**\n   * @type {angular.JQLite|undefined}\n   * @export\n   */\n  this.bodyElm = undefined;\n\n  function onMouseDown(clickEvent) {\n    if (this.anchorElm[0] !== clickEvent.target &&\n      this.bodyElm.parent()[0] !== clickEvent.target &\n      this.bodyElm.parent().find(clickEvent.target).length === 0 && this.shown) {\n      this.dismissPopover();\n    }\n  }\n\n  angular.element('body').on('mousedown', onMouseDown.bind(this));\n\n  $scope.$on('$destroy', () => {\n    angular.element('body').off('mousedown', onMouseDown);\n  });\n};\n\n\n/**\n * Dissmiss popover function\n * @export\n */\nexports.PopoverController_.prototype.dismissPopover = function() {\n  this.shown = false;\n  this.anchorElm.popover('hide');\n};\n\n\nexports.controller('NgeoPopoverController', exports.PopoverController_);\nexports.directive('ngeoPopover', exports.component_);\nexports.directive('ngeoPopoverAnchor', exports.anchorComponent);\nexports.directive('ngeoPopoverContent', exports.contentComponent);\n\n\nexport default exports;\n","/**\n * @module gmf.search.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfSearchFulltextSearch from 'gmf/search/FulltextSearch.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMiscAutoProjection from 'ngeo/misc/AutoProjection.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscColorpickerComponent from 'ngeo/misc/colorpickerComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessagePopoverComponent from 'ngeo/message/popoverComponent.js';\n\nimport ngeoSearchModule from 'ngeo/search/module.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olObj from 'ol/obj.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport * as olProj from 'ol/proj.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfSearch', [\n  gmfLayertreeTreeManager.module.name,\n  gmfSearchFulltextSearch.module.name,\n  gmfThemeThemes.module.name,\n  ngeoMiscAutoProjection.module.name,\n  ngeoMiscColorpickerComponent.name,\n  ngeoSearchModule.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMessagePopoverComponent.name,\n]);\n\n\n/**\n * @param {angular.JQLite} element Element.\n * @param {angular.Attributes} attrs Attributes.\n * @return {string} Template URL.\n */\nexports.gmfSearchTemplateUrl_ = (element, attrs) => {\n  const templateUrl = attrs['gmfSearchTemplateurl'];\n  return templateUrl !== undefined ? templateUrl :\n    'gmf/search';\n};\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/search', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfSearchTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfSearchTemplateUrl($element, $attrs, gmfSearchTemplateUrl) {\n  return gmfSearchTemplateUrl($element, $attrs);\n}\n\n\n/**\n * A component that allows to search and recenter on a selected\n * result's feature.\n * It can search in multiple GeoJSON datasources.\n * It can filter and group results by a feature's property.\n *\n * This component uses the {@link ngeo.map.FeatureOverlayMgr} to create a\n * feature overlay for drawing features on the map. The application\n * is responsible to initialize the {@link ngeo.map.FeatureOverlayMgr}\n * with the map.\n *\n * Example flat results:\n *\n *      <gmf-search gmf-search-map=\"::ctrl.map\"\n *        gmf-search-options=\"::ctrl.searchOptions\"\n *        gmf-search-styles=\"::ctrl.searchStyles\"\n *        gmf-search-datasources=\"::ctrl.searchDatasources\"\n *        gmf-search-coordinatesprojections=\"::ctrl.searchCoordinatesProjections\">\n *      </gmf-search>\n *      <script>\n *        (function() {\n *          let module = angular.module('app');\n *          module.value('fulltextsearchUrl', '${request.route_url('fulltextsearch', _query={\"limit\": 20}) | n}');\n *          module.value('gmfSearchGroups', []);\n *          module.constant('gmfSearchActions', [\n *                {action: 'add_theme', title: 'Add a theme'},\n *                {action: 'add_group', title: 'Add a sub theme'},\n *                {action: 'add_layer', title: 'Add a layer'}\n *          ]);\n *        })();\n *      </script>\n *\n * Example with categories:\n *\n *      <gmf-search gmf-search-map=\"::ctrl.map\"\n *        gmf-search-options=\"::ctrl.searchOptions\"\n *        gmf-search-styles=\"::ctrl.searchStyles\"\n *        gmf-search-datasources=\"::ctrl.searchDatasources\"\n *        gmf-search-coordinatesprojections=\"::ctrl.searchCoordinatesProjections\">\n *      </gmf-search>\n *      <script>\n *        (function() {\n *          let module = angular.module('app');\n *          module.value('fulltextsearchUrl', '${request.route_url('fulltextsearch', _query={\"limit\": 30, \"partitionlimit\": 5}) | n}');\n *          module.value('gmfSearchGroups', ${dumps(fulltextsearch_groups) | n});\n *          module.value('gmfSearchActions', []);\n *        })();\n *     </scriptrchUrl' value in the examples above set three \"_query\" parameters: \"limit\",\n *\n * The 'fulltextsearchUrl' value in the examples above set three \"_query\" parameters: \"limit\",\n * \"partitionlimit\" and \"ranksystem\". For this last one \"ts_rank_cd\" is the only effective value. It's used to\n * order your search results with the \"ts_rank_cd\" ranking system from PostgreSQL module pg_trgm. Without\n * this value, the PostgreSQL function \"similarity\" (module pg_trgm) is used for the ranking. Read the\n * full-text search c2cgeoportal documentation to know more.\n * You can also add these parameters to the \"url\" variable of one (or more) of the\n * gmfx.SearchDirectiveDatasource given to this component (here within the \"ctrl.searchDatasources\"). That\n * allows you to have multiples configurations on one search component.\n *\n * @htmlAttribute {string} gmf-search-input-value The input value (read only).\n * @htmlAttribute {ol.Map} gmf-search-map The map.\n * @htmlAttribute {TypeaheadOptions|undefined} gmf-search-options Addition Typeahead options.\n * @htmlAttribute {gmfx.SearchComponentDatasource} gmf-search-datasource\n *      The datasources.\n * @htmlAttribute {Object.<string, ol.style.Style>}\n *      gmf-search-styles A map of styles to apply on searched features. Keys\n *      must be the 'layer_name' property of features except for coordinates\n *      where the key ifor its style is the value of the constant\n *      'gmf.COORDINATES_LAYER_NAME'. The 'default' key is used to apply the\n *      default style.\n * @htmlAttribute {Array.<string>} gmf-search-coordinatesprojections codes\n *      of supported projections for coordinates search (projections must be\n *      defined in ol3). If not provided, only the map's view projection\n *      format will be supported.\n * @htmlAttribute {ngeox.SearchComponentListeners} gmf-search-listeners\n *      The listeners.\n * @htmlAttribute {boolean=} gmf-search-clearbutton Optional clear button in the input search. Default to true.\n * @htmlAttribute {number=} gmf-search-delay Optional bloodhound request delay in ms. Default to 50 ms.\n * @htmlAttribute {boolean=} gmf-search-colorchooser Optional. Whether to let the user\n *      change the style of the feature on the map. Default is false.\n * @htmlAttribute {number=} gmf-search-maxzoom Optional maximum zoom we will zoom on result, default is 16.\n * @htmlAttribute {function=} gmf-search-on-init Optional function called when the component is initialized.\n * @ngdoc component\n * @ngname gmfSearch\n */\nexports.component_ = {\n  bindings: {\n    'inputValue': '=?gmfSearchInputValue',\n    'placeholder': '@?gmfSearchPlaceholder',\n    'map': '<gmfSearchMap',\n    'datasources': '<gmfSearchDatasources',\n    'typeaheadOptions': '<?gmfSearchOptions',\n    'featuresStyles': '<?gmfSearchStyles',\n    'clearButton': '=?gmfSearchClearbutton',\n    'colorChooser': '<?gmfSearchColorchooser',\n    'coordinatesProjections': '<?gmfSearchCoordinatesprojections',\n    'additionalListeners': '<gmfSearchListeners',\n    'maxZoom': '<?gmfSearchMaxzoom',\n    'delay': '<?gmfSearchDelay',\n    'onInitCallback': '<?gmfSearchOnInit'\n  },\n  controller: 'gmfSearchController',\n  templateUrl: gmfSearchTemplateUrl\n};\n\n\nexports.value('gmfSearchTemplateUrl', exports.gmfSearchTemplateUrl_);\n\n\n// Register the controller in the module\nexports.component('gmfSearch', exports.component_);\n\n\n/**\n * @private\n */\nexports.SearchController_ = class {\n\n  /**\n   * @private\n   * @param {jQuery} $element Element.\n   * @param {angular.Scope} $scope The component's scope.\n   * @param {angular.$compile} $compile Angular compile service.\n   * @param {angular.$timeout} $timeout Angular timeout service.\n   * @param {angular.$injector} $injector Main injector.\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {ngeo.misc.AutoProjection} ngeoAutoProjection The ngeo coordinates service.\n   * @param {ngeo.search.createGeoJSONBloodhound.Function} ngeoSearchCreateGeoJSONBloodhound The ngeo\n   *     create GeoJSON Bloodhound service.\n   * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n   *     overlay manager service.\n   * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n   * @param {gmf.layertree.TreeManager} gmfTreeManager gmf Tree Manager service.\n   * @param {gmf.search.FulltextSearch} gmfSearchFulltextSearch gmf Full text search service.\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfSearchController\n   */\n  constructor($element, $scope, $compile, $timeout, $injector,\n    gettextCatalog, ngeoAutoProjection, ngeoSearchCreateGeoJSONBloodhound,\n    ngeoFeatureOverlayMgr, gmfThemes, gmfTreeManager, gmfSearchFulltextSearch) {\n\n\n    /**\n     * @type {jQuery}\n     * @private\n     */\n    this.element_ = $element;\n\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {angular.$compile}\n     * @private\n     */\n    this.compile_ = $compile;\n\n    /**\n     * @type {angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {gmf.theme.Themes}\n     * @private\n     */\n    this.gmfThemes_ = gmfThemes;\n\n    /**\n     * @type {gmf.layertree.TreeManager}\n     * @private\n     */\n    this.gmfTreeManager_ = gmfTreeManager;\n\n    /**\n     * @type {gmf.search.FulltextSearch}\n     * @private\n     */\n    this.fullTextSearch_ = gmfSearchFulltextSearch;\n\n    /**\n     * @type {ngeo.search.createGeoJSONBloodhound.Function}\n     * @private\n     */\n    this.ngeoSearchCreateGeoJSONBloodhound_ = ngeoSearchCreateGeoJSONBloodhound;\n\n    /**\n     * @type {ngeo.map.FeatureOverlayMgr}\n     * @private\n     */\n    this.ngeoFeatureOverlayMgr = ngeoFeatureOverlayMgr;\n\n    /**\n     * @type {ngeo.statemanager.Location|undefined}\n     * @private\n     */\n    this.ngeoLocation_;\n\n    if ($injector.has('ngeoLocation')) {\n      this.ngeoLocation_ = $injector.get('ngeoLocation');\n    }\n\n    /**\n     * @type {ngeo.misc.AutoProjection}\n     * @private\n     */\n    this.ngeoAutoProjection_ = ngeoAutoProjection;\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {Object}\n     * @private\n     */\n    this.styles_ = {};\n\n    /**\n     * @type {function()}\n     * @export\n     */\n    this.onInitCallback;\n\n    /**\n     * Whether or not to show a button to clear the search text.\n     * Default to true.\n     * @type {boolean}\n     * @export\n     */\n    this.clearButton;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.colorChooser;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.placeholder;\n\n    /**\n     * @type {number}\n     * @export\n     */\n    this.delay;\n\n    /**\n     * The maximum zoom we will zoom on result.\n     * @type {number}\n     * @export\n     */\n    this.maxZoom = 16;\n\n    /**\n     * Supported projections for coordinates search.\n     * @type {Array.<ol.proj.Projection>}\n     * @export\n     */\n    this.coordinatesProjections;\n\n    /**\n     * @type {ngeo.map.FeatureOverlay}\n     * @private\n     */\n    this.featureOverlay_ = ngeoFeatureOverlayMgr.getFeatureOverlay();\n\n    /**\n     * @type {Array.<gmfx.SearchComponentDatasource>}\n     * @export\n     */\n    this.datasources = [];\n\n    /**\n     * @type {TypeaheadOptions}\n     * @export\n     */\n    this.typeaheadOptions;\n\n    /**\n     * @type {TypeaheadOptions}\n     * @export\n     */\n    this.options = /** @type {TypeaheadOptions} */ ({\n      highlight: true\n    });\n\n    /**\n     * @type {Object.<string, ol.style.Style>}\n     * @export\n     */\n    this.featuresStyles;\n\n    /**\n     * @type {Array.<TypeaheadDataset>}\n     * @export\n     */\n    this.datasets = [];\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.inputValue = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.color;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.displayColorPicker = false;\n\n    /**\n     * @type {ngeox.SearchDirectiveListeners}\n     * @export\n     */\n    this.listeners;\n\n    /**\n     * @type {ngeox.SearchDirectiveListeners}\n     * @export\n     */\n    this.additionalListeners;\n  }\n\n\n  /**\n   * Called on initialization of the controller.\n   */\n  $onInit() {\n    const gettextCatalog = this.gettextCatalog_;\n    this.clearButton = this.clearButton !== false;\n    this.colorChooser = this.colorChooser === true;\n    if (this.delay === undefined) {\n      this.delay = 50;\n    }\n    this.placeholder = this.placeholder !== undefined ? this.placeholder :\n      gettextCatalog.getString('Search…');\n\n    // Init coordinates projections\n    let coordProj = this.coordinatesProjections;\n    if (coordProj === undefined) {\n      coordProj = [this.map.getView().getProjection()];\n    } else {\n      coordProj = this.ngeoAutoProjection_.getProjectionList(\n        /** @type {Array.<string>} */ (coordProj)\n      );\n    }\n    this.coordinatesProjections = coordProj;\n\n    if (!this.clearButton) {\n      // Empty the search field on focus and blur.\n      this.element_.find('input').on('focus blur', () => {\n        this.clear();\n      });\n    }\n\n    if (this.onInitCallback) {\n      this.onInitCallback();\n    }\n\n    this.initStyles_();\n\n    this.featureOverlay_.setStyle(this.getSearchStyle_.bind(this));\n\n    if (this.typeaheadOptions) {\n      olObj.assign(this.options, this.typeaheadOptions);\n    }\n\n    this.initDatasets_();\n\n    this.scope_.$watch(\n      () => this.color,\n      this.setStyleColor.bind(this)\n    );\n\n    this.listeners = this.mergeListeners_(\n      this.additionalListeners,\n      /** @type {ngeox.SearchDirectiveListeners} */ ({\n        select: this.select_.bind(this),\n        close: this.close_.bind(this),\n        datasetsempty: this.datasetsempty_.bind(this)\n      })\n    );\n\n    if (this.ngeoLocation_) {\n      const searchQuery = this.ngeoLocation_.getParam('search');\n      if (searchQuery) {\n        let resultIndex = 1;\n        if (this.ngeoLocation_.getParam('search-select-index')) {\n          resultIndex = parseInt(this.ngeoLocation_.getParam('search-select-index'), 10);\n        }\n        let mapZoom;\n        if (this.ngeoLocation_.getParam('search-maxzoom')) {\n          mapZoom = parseInt(this.ngeoLocation_.getParam('search-maxzoom'), 10);\n        } else if (this.ngeoLocation_.getParam('map_zoom')) {\n          mapZoom = parseInt(this.ngeoLocation_.getParam('map_zoom'), 10);\n        }\n        this.fulltextsearch_(searchQuery, resultIndex, mapZoom);\n      }\n    }\n  }\n\n\n  /**\n   * Merges the custom listeners received via the component attributes and the\n   * listeners that are needed for this controller to function (close and select).\n   * @param {ngeox.SearchDirectiveListeners} additionalListeners Custom provided\n   *    listeners.\n   * @param {ngeox.SearchDirectiveListeners} listeners Default listeners.\n   * @return {ngeox.SearchDirectiveListeners} Merged listeners.\n   * @private\n   */\n  mergeListeners_(additionalListeners, listeners) {\n    if (additionalListeners === undefined) {\n      return listeners;\n    }\n    return {\n      open: additionalListeners.open,\n      close: additionalListeners.close === undefined ?\n        listeners.close : function() {\n          listeners.close();\n          additionalListeners.close();\n        },\n      cursorchange: additionalListeners.cursorchange,\n      datasetsempty: additionalListeners.datasetsempty,\n      select: additionalListeners.select === undefined ?\n        listeners.select : function(evt, obj, dataset) {\n          listeners.select(evt, obj, dataset);\n          additionalListeners.select(evt, obj, dataset);\n        },\n      autocomplete: additionalListeners.autocomplete\n    };\n  }\n\n\n  /**\n   * Initialize datasets for the search\n   * @private\n   */\n  initDatasets_() {\n    const gettextCatalog = this.gettextCatalog_;\n    for (let i = 0; i < this.datasources.length; i++) {\n      const datasource = this.datasources[i];\n\n      /** @type {Array.<string>} */\n      const groupValues = datasource.groupValues !== undefined ? datasource.groupValues : [];\n      /** @type {Array.<string>} */\n      const groupActions = datasource.groupActions ? datasource.groupActions : [];\n      const filters = [];\n\n      if (groupValues.length === 0) {\n        filters.push({\n          'title': '',\n          'filter': this.filterLayername_()\n        });\n      } else {\n        groupValues.forEach(function(layerName) {\n          filters.push({\n            'title': layerName,\n            'filter': this.filterLayername_(layerName)\n          });\n        }, this);\n      }\n\n      groupActions.forEach(function(action) {\n        filters.push({\n          'title': gettextCatalog.getString(action['title']),\n          'filter': this.filterAction_(action['action'])\n        });\n      }, this);\n\n      filters.forEach(function(filter) {\n        this.datasets.push(this.createDataset_({\n          bloodhoundOptions: datasource.bloodhoundOptions,\n          datasetTitle: filter['title'],\n          groupsKey: 'layer_name',\n          labelKey: datasource.labelKey,\n          projection: datasource.projection,\n          typeaheadDatasetOptions: datasource.typeaheadDatasetOptions,\n          url: datasource.url\n        }, filter['filter']));\n      }, this);\n    }\n\n    // For searching coordinates\n    this.datasets.push({\n      source: this.createSearchCoordinates_(this.map.getView()),\n      name: 'coordinates',\n      display: 'label',\n      templates: {\n        header: () => {\n          const header = gettextCatalog.getString('Recenter to');\n          return `<div class=\"gmf-search-header\" translate>${header}</div>`;\n        },\n        suggestion: (suggestion) => {\n          const coordinates = suggestion['label'];\n\n          let html = `<p class=\"gmf-search-label\">${coordinates}</p>`;\n          html = `<div class=\"gmf-search-datum\">${html}</div>`;\n          return html;\n        }\n      }\n    });\n  }\n\n\n  /**\n   * @param {gmfx.SearchComponentDatasource} config The config of the dataset.\n   * @param {(function(GeoJSONFeature): boolean)=} opt_filter A filter function\n   *     based on a GeoJSONFeaturesCollection's array.\n   * @return {TypeaheadDataset} A typeahead dataset.\n   * @private\n   */\n  createDataset_(config, opt_filter) {\n    const gettextCatalog = this.gettextCatalog_;\n    const componentScope = this.scope_;\n    const compile = this.compile_;\n    const bloodhoundEngine = this.createAndInitBloodhound_(config, opt_filter);\n    const typeaheadDataset = /** @type {TypeaheadDataset} */ ({\n      limit: Infinity,\n      source: bloodhoundEngine.ttAdapter(),\n      display: (suggestion) => {\n        const feature = /** @type {ol.Feature} */ (suggestion);\n        return feature.get(config.labelKey);\n      },\n      templates: /* TypeaheadTemplates */ ({\n        header: () => {\n          if (config.datasetTitle === undefined) {\n            return '';\n          } else {\n            const header = gettextCatalog.getString(config.datasetTitle);\n            return `<div class=\"gmf-search-header\">${header}</div>`;\n          }\n        },\n        suggestion: (suggestion) => {\n          const feature = /** @type {ol.Feature} */ (suggestion);\n\n          const scope = componentScope.$new(true);\n          scope['feature'] = feature;\n\n          let html = `<p class=\"gmf-search-label\" translate>${\n            feature.get(config.labelKey)}</p>`;\n          html += `<p class=\"gmf-search-group\" translate>${feature.get('layer_name') ||\n                  config.datasetTitle}</p>`;\n          html = `<div class=\"gmf-search-datum\">${html}</div>`;\n          return compile(html)(scope);\n        }\n      })\n    });\n    if (config.typeaheadDatasetOptions) {\n      olObj.assign(typeaheadDataset, config.typeaheadDatasetOptions);\n    }\n    return typeaheadDataset;\n  }\n\n\n  /**\n   * @param {string} action The action to keep.\n   * @return {(function(GeoJSONFeature): boolean)} A filter function based on a\n   *     GeoJSONFeaturesCollection's array.\n   * @private\n   */\n  filterAction_(action) {\n    return (\n    /**\n         * @param {GeoJSONFeature} feature\n         * @return {boolean}\n         */\n      function(feature) {\n        const properties = feature['properties'];\n        if (properties['actions']) {\n          // result is an action (add_theme, add_group, ...)\n          // add it to the corresponding group\n          return !properties['layer_name'] && properties['actions'].some(act => act.action === action);\n        } else {\n          return false;\n        }\n      }\n    );\n  }\n\n\n  /**\n   * @param {string=} opt_layerName The layerName to keep. If null, keep all layers\n   *     (In all cases, except actions layers).\n   * @return {(function(GeoJSONFeature): boolean)} A filter function based on a\n   *     GeoJSONFeaturesCollection's array.\n   * @private\n   */\n  filterLayername_(opt_layerName) {\n    return (\n    /**\n         * @param {GeoJSONFeature} feature\n         * @return {boolean}\n         */\n      function(feature) {\n        const featureLayerName = feature['properties']['layer_name'];\n        // Keep only layers with layer_name (don't keep action layers).\n        if (featureLayerName === undefined) {\n          return false;\n        }\n        if (opt_layerName === undefined) {\n          return true;\n        }\n        return featureLayerName === opt_layerName;\n      }\n    );\n  }\n\n\n  /**\n   * @param {gmfx.SearchComponentDatasource} config The config of the dataset.\n   * @param {(function(GeoJSONFeature): boolean)=} opt_filter Afilter function\n   *     based on a GeoJSONFeaturesCollection's array.\n   * @return {Bloodhound} The bloodhound engine.\n   * @private\n   */\n  createAndInitBloodhound_(config, opt_filter) {\n    const mapProjectionCode = this.map.getView().getProjection().getCode();\n    const remoteOptions = this.getBloodhoudRemoteOptions_();\n    const bloodhound = this.ngeoSearchCreateGeoJSONBloodhound_(config.url, opt_filter,\n      olProj.get(mapProjectionCode), olProj.get(config.projection),\n      config.bloodhoundOptions, remoteOptions);\n    bloodhound.initialize();\n    return bloodhound;\n  }\n\n\n  /**\n   * @return {BloodhoundRemoteOptions} Options.\n   * @private\n   */\n  getBloodhoudRemoteOptions_() {\n    const gettextCatalog = this.gettextCatalog_;\n    return {\n      rateLimitWait: this.delay,\n      prepare: (query, settings) => {\n        const url = settings.url;\n        const lang = gettextCatalog.currentLanguage;\n        const interfaceName = 'mobile'; // FIXME dynamic interfaces\n        settings.xhrFields = {\n          withCredentials: true\n        };\n        settings.url = olUri.appendParams(url, {\n          'query': query,\n          'lang': lang,\n          'interface': interfaceName\n        });\n        return settings;\n      }\n    };\n  }\n\n\n  /**\n   * @param {ol.View} view View.\n   * @return {function(string, function(Object))} function defining parameters for the search suggestions.\n   * @private\n   */\n  createSearchCoordinates_(view) {\n    const viewProjection = view.getProjection();\n    const extent = viewProjection.getExtent();\n    return function(query, callback) {\n      const suggestions = [];\n      const coordinates = this.ngeoAutoProjection_.stringToCoordinates(query);\n      if (coordinates === null) {\n        return;\n      }\n      const position = this.ngeoAutoProjection_.tryProjectionsWithInversion(coordinates,\n        extent, viewProjection, this.coordinatesProjections);\n      if (position === null) {\n        return;\n      }\n      suggestions.push({\n        label: coordinates.join(' '),\n        position: position,\n        'tt_source': 'coordinates'\n      });\n      callback(suggestions);\n    }.bind(this);\n  }\n\n\n  /**\n   * Init the style object for the search results. It set defaults for the\n   * coordinates and the polygon styles, and both can be overloaded from component\n   * attributes. The styles from component attributes can specify custom styles\n   * for each search group.\n   * @private\n   */\n  initStyles_() {\n    this.styles_[gmfBase.COORDINATES_LAYER_NAME] = new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({color: [0, 0, 0, 0.7], width: 2}),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    });\n    const fill = new olStyleFill({\n      color: [65, 134, 240, 0.5]\n    });\n    const stroke = new olStyleStroke({\n      color: [65, 134, 240, 1],\n      width: 2\n    });\n    this.styles_['default'] = new olStyleStyle({\n      fill: fill,\n      image: new olStyleCircle({\n        fill: fill,\n        radius: 5,\n        stroke: stroke\n      }),\n      stroke: stroke\n    });\n    const customStyles = this.featuresStyles || {};\n    olObj.assign(this.styles_, customStyles);\n  }\n\n  /**\n   * Style for search results.\n   * @param {null|ol.Feature|ol.render.Feature} feature The searched feature.\n   * @param {number} resolution The current resolution of the map.\n   * @return {ol.style.Style} A style for this kind of features.\n   * @private\n   */\n  getSearchStyle_(feature, resolution) {\n    googAsserts.assert(feature);\n    const style = this.styles_[feature.get('layer_name')] || this.styles_['default'];\n    if (this.color) {\n      const color = olColor.asArray(this.color);\n\n      const strokeColor = color.slice();\n      // 100% opacity for the stroke color\n      strokeColor[3] = 1;\n\n      const fillColor = color.slice();\n      // 50% opacity for the fill color\n      fillColor[3] = 0.5;\n\n      const strokeStyle = style.getStroke();\n      if (strokeStyle) {\n        strokeStyle.setColor(strokeColor);\n      }\n      const fillStyle = style.getFill();\n      if (fillStyle) {\n        fillStyle.setColor(fillColor);\n      }\n      const image = style.getImage();\n      if (image) {\n        style.setImage(new olStyleCircle({\n          fill: new olStyleFill({color: fillColor}),\n          radius: 5,\n          stroke: new olStyleStroke({color: strokeColor})\n        }));\n      }\n    }\n    return style;\n  }\n\n  /**\n   * Set a new color for the search feature style.\n   * @param {string} color The color to set.\n   * @export\n   */\n  setStyleColor(color) {\n    if (color) {\n      this.color = color;\n      this.ngeoFeatureOverlayMgr.getLayer().changed();\n    }\n  }\n\n  /**\n   * @private\n   */\n  setTTDropdownVisibility_() {\n    if (this.clearButton) {\n      const ttDropdown = this.element_.find('.twitter-typeahead .tt-menu');\n      (this.inputValue) ? ttDropdown.show() : ttDropdown.hide();\n    }\n  }\n\n\n  /**\n   * @export\n   */\n  onClearButton() {\n    this.featureOverlay_.clear();\n    this.clear();\n  }\n\n\n  /**\n   * @export\n   */\n  clear() {\n    const typeahead = this.element_.find('.twitter-typeahead');\n    const ttmenu = typeahead.children('.tt-menu');\n    const inputs = typeahead.children('input');\n    // clear model value, the 'real' input value and tt's suggestions\n    this.inputValue = '';\n    $(inputs[1]).typeahead('val', '');\n    ttmenu.children('.tt-dataset').empty();\n    this.setTTDropdownVisibility_();\n    this.displayColorPicker = false;\n  }\n\n\n  /**\n   * @export\n   */\n  blur() {\n    const typeahead = this.element_.find('.twitter-typeahead');\n    const inputs = typeahead.children('input');\n    // Blur as soon as possible in digest loops\n    this.timeout_(() => {\n      $(inputs[1]).blur();\n    });\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @param {Object|ol.Feature} suggestion Suggestion.\n   * @param {TypeaheadDataset} dataset Dataset.\n   * @private\n   */\n  select_(event, suggestion, dataset) {\n    if (suggestion['tt_source'] === 'coordinates') {\n      const geom = new olGeomPoint(suggestion['position']);\n\n      this.featureOverlay_.clear();\n      this.featureOverlay_.addFeature(new olFeature({\n        geometry: geom,\n        'layer_name': gmfBase.COORDINATES_LAYER_NAME\n      }));\n      this.map.getView().setCenter(suggestion['position']);\n      this.leaveSearch_();\n    } else {\n      googAsserts.assertInstanceof(suggestion, olFeature);\n      this.selectFromGMF_(event, suggestion, dataset);\n    }\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @param {ol.Feature} feature Feature.\n   * @param {TypeaheadDataset} dataset Dataset.\n   * @private\n   */\n  selectFromGMF_(event, feature, dataset) {\n    const actions = feature.get('actions');\n    const featureGeometry = /** @type {ol.geom.SimpleGeometry} */\n        (feature.getGeometry());\n    if (actions) {\n      for (let i = 0, ii = actions.length; i < ii; i++) {\n        const action = actions[i];\n        const actionName = action['action'];\n        const actionData = action['data'];\n        if (actionName == 'add_theme') {\n          this.gmfThemes_.getThemesObject().then((themes) => {\n            const theme = gmfThemeThemes.findThemeByName(themes, actionData);\n            if (theme) {\n              this.gmfTreeManager_.addFirstLevelGroups(theme.children);\n            }\n          });\n        } else if (actionName == 'add_group') {\n          this.gmfTreeManager_.addGroupByName(actionData, true);\n        } else if (actionName == 'add_layer') {\n          const groupActions = /** @type {Array.<string>} */ (\n            this.datasources[0].groupActions);\n          let datasourcesActionsHaveAddLayer;\n          groupActions.forEach((groupAction) => {\n            if (groupAction['action'] === 'add_layer') {\n              return datasourcesActionsHaveAddLayer = true;\n            }\n          });\n          if (datasourcesActionsHaveAddLayer) {\n            const silent = !!featureGeometry;\n            this.gmfTreeManager_.addGroupByLayerName(actionData, true, silent);\n          }\n        }\n      }\n    }\n\n    const size = this.map.getSize();\n    if (featureGeometry && size) {\n      const view = this.map.getView();\n      this.featureOverlay_.clear();\n      this.featureOverlay_.addFeature(feature);\n      this.displayColorPicker = true;\n      const fitArray = featureGeometry.getType() === 'GeometryCollection' ?\n        featureGeometry.getExtent() : featureGeometry;\n      view.fit(fitArray, {\n        size: size,\n        maxZoom: this.maxZoom\n      });\n    }\n    this.leaveSearch_();\n  }\n\n\n  /**\n   * @private\n   */\n  leaveSearch_() {\n    if (!this.clearButton) {\n      this.clear();\n    }\n    this.blur();\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @private\n   */\n  close_(event) {\n    if (!this.clearButton) {\n      this.setTTDropdownVisibility_();\n    }\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @param {string} query Query.\n   * @param {boolean} empty Empty.\n   * @private\n   */\n  datasetsempty_(event, query, empty) {\n    // workaround to display a 'no result found' in the search result when all of\n    // the datasets are empty.\n    // based on https://github.com/twitter/typeahead.js/issues/780#issuecomment-251554452\n    // FIXME: remove this workaround when https://github.com/corejavascript/typeahead.js/issues/60 is fixed\n\n    const menu = this.element_.find('.twitter-typeahead .tt-menu');\n    const message = menu.children('.gmf-search-no-results');\n    if (message.length == 0) {\n      const div = $('<div class=\"gmf-search-no-results\" translate>No result found</div>');\n      menu.append(div);\n    }\n    if (empty) {\n      message.show();\n      menu.addClass('gmf-search-no-results');\n    } else {\n      menu.removeClass('gmf-search-no-results');\n      message.hide();\n    }\n  }\n\n\n  /**\n   * Performs a full-text search and centers the map on the first search result.\n   * @param {string} query Search query.\n   * @param {number} resultIndex Return nth result instead.\n   * @param {number=} opt_zoom Optional zoom level.\n   * @private\n   */\n  fulltextsearch_(query, resultIndex, opt_zoom) {\n    if (resultIndex < 1) { // can't be lower than one\n      resultIndex = 1;\n    }\n    this.fullTextSearch_.search(query, {'limit': resultIndex})\n      .then((data) => {\n        if (data && data.features[resultIndex - 1]) {\n          const format = new olFormatGeoJSON();\n          const feature = format.readFeature(data.features[resultIndex - 1]);\n          this.featureOverlay_.addFeature(feature);\n          const fitOptions = /** @type {olx.view.FitOptions} */ ({});\n          if (opt_zoom !== undefined) {\n            fitOptions.maxZoom = opt_zoom;\n            fitOptions.size = this.map.getSize();\n          }\n          this.map.getView().fit(feature.getGeometry().getExtent(), fitOptions);\n          this.inputValue = /** @type {string} */ (feature.get('label'));\n        }\n      });\n  }\n};\n\n\n// Register the controller in the module\nexports.controller('gmfSearchController', exports.SearchController_);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.recenter\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoRecenter', []);\n\n/**\n * Provides the \"ngeoRecenter\" directive, a widget for recentering a map\n * to a specific extent (by using `ngeo-extent`) or a specific zoom level\n * (by using `ngeo-zoom`).\n *\n * Example:\n *\n *      <div ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <a href=\"#\" ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</a>\n *        <a href=\"#\" ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</a>\n *        <a href=\"#\" ngeo-zoom=\"1\">Zoom to level 1</a>\n *      </div>\n *\n * Or with a select:\n *\n *      <select ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <option ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</option>\n *        <option ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</option>\n *      </select>\n *\n * See our live example: [../examples/recenter.html](../examples/recenter.html)\n *\n * @htmlAttribute {ol.Map} ngeo-recenter-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoRecenter\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    link: ($scope, $element, $attrs) => {\n      const mapExpr = $attrs['ngeoRecenterMap'];\n      const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n\n      function recenter(element) {\n        const extent = element.attr('ngeo-extent');\n        if (extent !== undefined) {\n          const size = /** @type {ol.Size} */ (map.getSize());\n          map.getView().fit($scope.$eval(extent), {size});\n        }\n        const zoom = element.attr('ngeo-zoom');\n        if (zoom !== undefined) {\n          map.getView().setZoom($scope.$eval(zoom));\n        }\n      }\n\n      // if the children is a link or button\n      $element.on('click', '*', function(event) {\n        recenter(angular.element($(this)));\n      });\n\n      // if the children is an option inside a select\n      $element.on('change', (event) => {\n        const selected = event.target.options[event.target.selectedIndex];\n        recenter(angular.element(selected));\n      });\n\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoRecenter', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.syncArrays\n */\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * Provides a function that synchronizes two arrays, arr1 and\n * arr2. arr2 is a subset of arr1, it includes the elements of arr1 that passes\n * the filter. When elements are added to/removed from arr1, arr2 is updated to\n * include the elements of arr1 that pass the filter. When the order of\n * elements in arr2 changes, arr1 is reordered to have the same order as arr2.\n *\n * This can for example be used to synchronize the array of layers in the map\n * with the array of selected layers, where layers may be added to/removed from\n * the map, and the order of selected layers may change.\n *\n *     let dereg = ngeoSyncArrays(map.getLayers().getArray(), selectedLayers,\n *         true, scope, function(layer) {\n *           // exclude the layer at index 0 in the map\n *           return map.getLayers().indexOf(layer) !== 0;\n *         });\n *\n * This will return a function that can be called to cancel synchronization.\n *\n * @param {Array.<T>} arr1 Array 1.\n * @param {Array.<T>} arr2 Array 2.\n * @param {boolean} reverse `true` if arr2 is in reverse order, `false`\n *     otherwise.\n * @param {angular.Scope} scope Angular scope. Used to watch arr1 and arr2\n *     using $watchCollection.\n * @param {function(T):boolean} filter Filter function.\n * @return {function()} Function to call to stop synchronization\n * @template T\n */\nconst exports = function(arr1, arr2, reverse, scope, filter) {\n\n\n  // Update arr2 when elements are added to, or removed from, arr1.\n\n  const dereg1 = scope.$watchCollection(() => arr1, () => {\n    let i, ii, j;\n    if (reverse) {\n      for (i = arr1.length - 1, j = 0; i >= 0; --i) {\n        if (filter(arr1[i])) {\n          arr2[j++] = arr1[i];\n        }\n      }\n    } else {\n      for (i = 0, ii = arr1.length, j = 0; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr2[j++] = arr1[i];\n        }\n      }\n    }\n    arr2.length = j;\n  });\n\n\n  // Update arr1 when the order of elements changes in arr2.\n\n  const dereg2 = scope.$watchCollection(() => arr2, () => {\n    let i, ii, j;\n    if (reverse) {\n      for (i = 0, ii = arr1.length, j = arr2.length - 1; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr1[i] = arr2[j--];\n        }\n      }\n      googAsserts.assert(j == -1);\n    } else {\n      for (i = 0, ii = arr1.length, j = 0; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr1[i] = arr2[j++];\n        }\n      }\n      googAsserts.assert(j == arr2.length);\n    }\n  });\n\n  return function() {\n    dereg1();\n    dereg2();\n  };\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.layertree.component\n */\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\n\nimport 'bootstrap/js/collapse.js'; // needed to collapse a layertree\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoLayertree', [\n  ngeoLayertreeController.module.name\n]);\n\n\nexports.value('ngeoLayertreeTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoLayertreeTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/layertree';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/layertree', require('./component.html'));\n});\n\n\n/**\n * Provides the \"ngeoLayertree\" directive, a directive for\n * creating layer trees in application.\n *\n * The directive assumes that tree nodes that are not leaves have a \"children\"\n * property referencing an array of child nodes.\n *\n * Example:\n *\n *      <div ngeo-layertree=\"ctrl.tree\"\n *        ngeo-layertree-map=\"ctrl.map\"\n *        ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\"\n *        ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\">\n *      </div>\n *\n * The \"ngeo-layertree\", \"ngeo-layertree-map\" and\n * \"ngeo-layertree-nodelayer\" attributes are mandatory attributes.\n *\n * - \"ngeo-layertree\" specifies an expression providing the tree. The\n *   directive watches that expression, making it possible to retrieve\n *   the tree data through Ajax.\n *\n * - \"ngeo-layertree-map\" specifies an expression providing the OpenLayers\n *   map. The directive doesn't watch that expression.\n *\n * - The \"ngeo-layertree-nodelayer\" specifies an expression providing the\n *   layer for a given node. In most cases that expression will be function\n *   call with \"node\" as the argument to the function call. E.g.\n *   \"ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\".\n *\n * - The \"ngeo-layertree-listeners\" specifies an expression providing a function\n *   to bind scope events to customs functions. You'll must set the listener on\n *   the \"treeScope\" and probably use \"treeCtrl\" as context. E.g.\n *   \"ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\".\n *\n * The directive comes with a default template. That template assumes that\n * tree nodes that are not leaves have a \"children\" property referencing an\n * array of child nodes. It also assumes that nodes have a \"name\" property.\n *\n * By default the directive uses \"layertree.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoLayertreeTemplateUrl\" value (using\n * app.module.value('ngeoLayertreeTemplateUrl', 'path/layertree.html'), or\n * by adding an \"ngeo-layertree-templateurl\" attribute to the element.\n *\n * Example:\n *\n *      <div ngeo-layertree=\"ctrl.tree\"\n *        ngeo-layertree-templateurl=\"path/to/layertree.html\"\n *        ngeo-layertree-map=\"ctrl.map\"\n *        ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\"\n *        ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\"\n *      </div>\n *\n * The directive has its own scope, but it is not an isolate scope. That scope\n * has a \"layertreeCtrl\" property which is a reference to the directive's\n * controller: \"layertreeCtrl\". You can refer to that property in a custom\n * template for example.\n *\n * See our live example: [../examples/layertree.html](../examples/layertree.html)\n *\n * @htmlAttribute {Object} ngeo-layertree One theme (JSON).\n * @htmlAttribute {string} ngeo-layertree-templateurl The template URL.\n * @htmlAttribute {ol.Map} ngeo-layertree-map The map.\n * @htmlAttribute {string} ngeo-layertree-nodelayer Expression that will be parsed\n *      to be a {@link Function} that return a {@link ol.layer.Layer}\n *      with the argument:\n *      {\n *          'node': {@link Object}|undefined,\n *          'depth': {@link number}\n *      }\n * @htmlAttribute {string} ngeo-layertree-nodelayerexpr Expression that will be parsed\n *      to be a {@link ngeo-layertree-nodelayer}.\n * @htmlAttribute {string} ngeo-layertree-listeners Expression that will be parsed\n *      to be a {@link Function} with the argument:\n *      {\n *          'treeScope': !{@link angular.Scope},\n *          'treeCtrl': {@link ngeo.layertree.Controller}\n *      }\n * @htmlAttribute {string} ngeo-layertree-listenersexpr Expression that will be parsed\n *      to be a {@link ngeo-layertree-listeners}.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoLayertreeTemplateUrl Template URL for the directive.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoLayertree\n */\nexports.directive_ = function(ngeoLayertreeTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    templateUrl: ngeoLayertreeTemplateUrl,\n    controller: ngeoLayertreeController\n  };\n};\n\n\nexports.directive('ngeoLayertree', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.olcs.constants\n */\nconst exports = {};\n\n/**\n * @enum {string}\n * @export\n */\nexports.Permalink3dParam = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ENABLED: '3d_enabled',\n  /**\n   * @type {string}\n   * @export\n   */\n  LON: '3d_lon',\n  /**\n   * @type {string}\n   * @export\n   */\n  LAT: '3d_lat',\n  /**\n   * @type {string}\n   * @export\n   */\n  ELEVATION: '3d_elevation',\n  /**\n   * @type {string}\n   * @export\n   */\n  HEADING: '3d_heading',\n  /**\n   * @type {string}\n   * @export\n   */\n  PITCH: '3d_pitch',\n  /**\n   * @type {string}\n   * @export\n   */\n  PREFIX: '3d_'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.Popover\n */\nimport * as olBase from 'ol/index.js';\nimport olOverlay from 'ol/Overlay.js';\n\n/**\n * @classdesc\n * An openlayers overlay that uses bootstrap popover to produce a popup\n * for maps.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {olx.OverlayOptions=} opt_options Overlay options.\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  let originalEl;\n  if (options.element) {\n    originalEl = options.element;\n    delete options.element;\n  } else {\n    originalEl = $('<div />')[0];\n  }\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.closeEl_ = $('<button>', {\n    'class': 'close',\n    'html': '&times;'\n  });\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.contentEl_ = $('<div/>')\n    .append(this.closeEl_)\n    .append(originalEl);\n\n  options.element = $('<div />')[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const element = this.getElement();\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    $(element).popover('destroy');\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    const contentEl = this.contentEl_;\n    // wait for the overlay to be rendered in the map before poping over\n    window.setTimeout(() => {\n      $(element)\n        .popover({\n          'content': contentEl,\n          'html': true,\n          'placement': 'top',\n          'template': [\n            '<div class=\"popover ngeo-popover\" role=\"tooltip\">',\n            '  <div class=\"arrow\"></div>',\n            '  <h3 class=\"popover-title\"></h3>',\n            '  <div class=\"popover-content\"></div>',\n            '</div>'\n          ].join('')\n        })\n        .popover('show');\n    }, 0);\n\n    this.closeEl_.one('click', () => {\n      const map = this.getMap();\n      if (map) {\n        map.removeOverlay(this);\n      }\n    });\n  }\n};\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfDatasourceDataSourceBeingFiltered from 'gmf/datasource/DataSourceBeingFiltered.js';\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\n\n/** @suppress {extraRequire} */\nimport gmfLayertreeDatasourceGroupTreeComponent from 'gmf/layertree/datasourceGroupTreeComponent.js';\n\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoLayertreeComponent from 'ngeo/layertree/component.js';\n\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMiscSyncArrays from 'ngeo/misc/syncArrays.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\n\nimport 'bootstrap/js/collapse.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeComponent', [\n  gmfDatasourceDataSourceBeingFiltered.module.name,\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  gmfPermalinkPermalink.module.name,\n  gmfLayertreeDatasourceGroupTreeComponent.name,\n  gmfLayertreeSyncLayertreeMap.module.name,\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoLayertreeComponent.name,\n  ngeoLayertreeController.module.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\n\n\n// Overrides the path to the layertree template (used by each node, except\n// the root node that path is defined by the gmfLayertreeTemplate value.\nexports.value('ngeoLayertreeTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => 'gmf/layertree');\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/layertree', require('./component.html'));\n});\n\n\nexports.value('gmfLayertreeTemplate',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template.\n   */\n  ($element, $attrs) => {\n    const subTemplateUrl = 'gmf/layertree';\n    return '<div ngeo-layertree=\"gmfLayertreeCtrl.root\" ' +\n          'ngeo-layertree-map=\"gmfLayertreeCtrl.map\" ' +\n          'ngeo-layertree-nodelayer=\"gmfLayertreeCtrl.getLayer(treeCtrl)\" ' +\n          'ngeo-layertree-listeners=\"gmfLayertreeCtrl.listeners(treeScope, treeCtrl)\" ' +\n          `ngeo-layertree-templateurl=\"${subTemplateUrl}\">` +\n          '</div>';\n  }\n);\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfLayertreeTemplate Template function.\n * @return {string} Template.\n * @ngInject\n */\nfunction gmfLayertreeTemplate($element, $attrs, gmfLayertreeTemplate) {\n  return gmfLayertreeTemplate($element, $attrs);\n}\n\n\n/**\n * This component creates a layertree based on the c2cgeoportal JSON themes\n * source and a {@link ngeo.layertreeComponent}. The controller used by this\n * component defines some functions for each node that are created by a default\n * template. This default template can be overridden by setting the value\n * 'gmf.layertreeTemplateUrl' but you will have to adapt the\n * ngeoLayertreeTemplateUrl value too (to define the children's nodes template\n * path).\n *\n * Example:\n *\n *      <gmf-layertree\n *        gmf-layertree-dimensions=\"ctrl.dimensions\"\n *        gmf-layertree-map=\"ctrl.map\">\n *      </gmf-layertree>\n *\n * You can add an attribute 'gmf-layertree-openlinksinnewwindow=\"::true\"' to open\n * metadata URLs in a new window. By default, and in the default template,\n * links will be opened in a popup (The window.gmfx.openIframePopup function must be available !)\n *\n * Used UI metadata:\n *\n *  * isChecked: if 'false' the layer visibility will be set to false.\n *  * iconUrl: layer icon full URL.\n *  * legendRule: WMS rule used to get a layer icon.\n *  * isLegendExpanded: if 'true' the legend is expanded by default.\n *  * metadataUrl: Display a popup with the content of the given URL if\n *    possible also open a new window.\n *\n * @htmlAttribute {ol.Map} gmf-layertree-map The map.\n * @htmlAttribute {Object<string, string>|undefined} gmf-layertree-dimensions Global dimensions object.\n * @htmlAttribute {boolean|undefined} gmf-layertree-openlinksinnewwindow if true, open\n *     metadataURLs in a new window. Otherwise open them in a popup.\n *\n * @ngdoc component\n * @ngname gmfLayertreeComponent\n */\nexports.component_ = {\n  controller: 'GmfLayertreeController as gmfLayertreeCtrl',\n  bindings: {\n    'map': '=gmfLayertreeMap',\n    'dimensions': '=?gmfLayertreeDimensions',\n    'openLinksInNewWindow': '<?gmfLayertreeOpenlinksinnewwindow',\n  },\n  template: gmfLayertreeTemplate\n};\n\nexports.component('gmfLayertree', exports.component_);\n\n\n/**\n * @param {angular.JQLite} $element Element.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {gmfx.datasource.DataSourceBeingFiltered} gmfDataSourceBeingFiltered\n *     The Gmf value service that determines the data source currently being\n *     filtered.\n * @param {!gmf.datasource.ExternalDataSourcesManager}\n *     gmfExternalDataSourcesManager The Gmf external data sources manager\n *     service. Used here to fetch the external WMS groups.\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.layertree.TreeManager} gmfTreeManager gmf Tree Manager service.\n * @param {!gmf.layertree.SyncLayertreeMap} gmfSyncLayertreeMap gmfSyncLayertreeMap service.\n * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n * @param {!gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname gmfLayertreeController\n */\nexports.Controller_ = function($element, $scope, ngeoLayerHelper, gmfDataSourceBeingFiltered,\n  gmfExternalDataSourcesManager, gmfPermalink, gmfTreeManager, gmfSyncLayertreeMap, ngeoWMSTime, gmfThemes) {\n\n  /**\n   * @type {?ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {?Object<string, string>}\n   * @export\n   */\n  this.dimensions;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {gmfx.datasource.DataSourceBeingFiltered}\n   * @export\n   */\n  this.gmfDataSourceBeingFiltered = gmfDataSourceBeingFiltered;\n\n  /**\n   * @type {!gmf.datasource.ExternalDataSourcesManager}\n   * @export\n   */\n  this.gmfExternalDataSourcesManager = gmfExternalDataSourcesManager;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  const root = gmfTreeManager.root;\n  googAsserts.assert(root);\n\n  /**\n   * @type {!gmfThemes.GmfRootNode}\n   * @export\n   */\n  this.root = root;\n\n  /**\n   * @type {!gmf.layertree.SyncLayertreeMap}\n   * @private\n   */\n  this.gmfSyncLayertreeMap_ = gmfSyncLayertreeMap;\n\n  /**\n   * @type {!ngeo.misc.WMSTime}\n   * @private\n   */\n  this.ngeoWMSTime_ = ngeoWMSTime;\n\n  /**\n   * @type {!Object.<number, !Array.<string>>}\n   * @private\n   */\n  this.groupNodeStates_ = {};\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.openLinksInNewWindow;\n\n  /**\n   * @type {?ol.layer.Group}\n   * @private\n   */\n  this.dataLayerGroup_ = null;\n\n  /**\n   * @type {!Array.<!ol.layer.Base>}\n   * @export\n   */\n  this.layers = [];\n\n  /**\n   * @type {!gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  // enter digest cycle on node collapse\n  $element.on('shown.bs.collapse', () => {\n    this.scope_.$apply();\n  });\n};\n\n\n/**\n * Init the controller,\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.openLinksInNewWindow = this.openLinksInNewWindow === true;\n  this.dataLayerGroup_ = this.layerHelper_.getGroupFromMap(this.map,\n    gmfBase.DATALAYERGROUP_NAME);\n\n  ngeoMiscSyncArrays(this.dataLayerGroup_.getLayers().getArray(), this.layers, true, this.scope_, () => true);\n\n  // watch any change on layers array to refresh the map\n  this.scope_.$watchCollection(() => this.layers,\n    () => {\n      this.map.render();\n    });\n\n  // watch any change on dimensions object to refresh the layers\n  this.scope_.$watchCollection(() => {\n    if (this.gmfTreeManager_.rootCtrl) {\n      return this.dimensions;\n    }\n  }, (dimensions) => {\n    if (dimensions) {\n      this.updateDimensions_(this.gmfTreeManager_.rootCtrl);\n    }\n  });\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl Layer tree controller.\n * @private\n */\nexports.Controller_.prototype.updateDimensions_ = function(treeCtrl) {\n  treeCtrl.traverseDepthFirst((ctrl) => {\n    if (ctrl.node.dimensions) {\n      const layer = ctrl.layer;\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      this.updateLayerDimensions_(layer, /** @type gmfThemes.GmfGroup|gmfThemes.GmfLayer */ (ctrl.node));\n    }\n  });\n};\n\n\n/**\n * @param {ol.layer.Layer} layer Layer to update.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layer tree node.\n * @private\n */\nexports.Controller_.prototype.updateLayerDimensions_ = function(layer, node) {\n  if (this.dimensions && node.dimensions) {\n    const dimensions = {};\n    for (const key in node.dimensions) {\n      if (node.dimensions[key] === null) {\n        const value = this.dimensions[key];\n        if (value !== undefined) {\n          dimensions[key] = value;\n        }\n      } else {\n        dimensions[key] = node.dimensions[key];\n      }\n    }\n    if (!olObj.isEmpty(dimensions)) {\n      const source = layer.getSource();\n      if (source instanceof olSourceWMTS) {\n        source.updateDimensions(dimensions);\n      } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n        source.updateParams(dimensions);\n      } else {\n        // the source is not ready yet\n        layer.once('change:source', () => {\n          googAsserts.assertInstanceof(layer, olLayerLayer);\n          this.updateLayerDimensions_(layer, node);\n        });\n      }\n    }\n  }\n};\n\n\n/**\n * Use the gmfSyncLayertreeMap_ to create and get layer corresponding to this\n * treeCtrl. The layer will be inserted into the map. The layer can be null\n * if the treeCtrl is based on a node inside a mixed node. It this case, the\n * layer will be in the first parent declared as a mixed node.\n * @param {ngeo.layertree.Controller} treeCtrl tree controller of the node\n * @return {ol.layer.Base|ol.layer.Group|null} The OpenLayers layer or group\n *     for the node.\n * @export\n */\nexports.Controller_.prototype.getLayer = function(treeCtrl) {\n  let opt_position;\n  if (treeCtrl.parent.isRoot) {\n    this.gmfTreeManager_.rootCtrl = treeCtrl.parent;\n    // Precise the index to add first level groups.\n    opt_position = this.gmfTreeManager_.root.children.length -\n        this.gmfTreeManager_.numberOfGroupsToAddInThisDigestLoop || 0;\n  }\n\n  const layer = this.gmfSyncLayertreeMap_.createLayer(treeCtrl, this.map,\n    this.dataLayerGroup_, opt_position);\n\n  if (layer instanceof olLayerLayer) {\n    const node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n    this.updateLayerDimensions_(layer, node);\n  }\n\n  return layer;\n};\n\n\n/**\n * Remove layer from this component's layergroup (and then, from the map) on\n * a ngeo layertree destroy event.\n * @param {angular.Scope} scope treeCtrl scope.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.listeners = function(scope, treeCtrl) {\n  const dataLayerGroup = this.dataLayerGroup_;\n  scope.$on('$destroy', () => {\n    // Remove the layer from the map.\n    dataLayerGroup.getLayers().remove(treeCtrl.layer);\n  });\n};\n\n/**\n * Toggle the state of treeCtrl's node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.toggleActive = function(treeCtrl) {\n  treeCtrl.setState(treeCtrl.getState() === 'on' ? 'off' : 'on');\n};\n\n\n/**\n * Return the current state of the given treeCtrl's node.\n * Return a class name that match with the current node activation state.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {string} 'on' or 'off' or 'indeterminate'.\n * @export\n */\nexports.Controller_.prototype.getNodeState = function(treeCtrl) {\n  return treeCtrl.getState();\n};\n\n\n/**\n * Update the `timeRangeValue` property of the data source bound to the\n * given tree controller using the given time. If the tree controller has\n * no data source, it means that it has children and they might have\n * data sources.\n *\n * The setting of the TIME parameter on the layer occurs in the\n * `gmf.datasource.Manager` service\n *\n * LayertreeController.prototype.updateWMSTimeLayerState - description\n * @param {ngeo.layertree.Controller} layertreeCtrl ngeo layertree controller\n * @param {{start : number, end : number}} time The start\n * and optionally the end datetime (for time range selection) selected by user\n * @export\n */\nexports.Controller_.prototype.updateWMSTimeLayerState = function(\n  layertreeCtrl, time) {\n  if (!time) {\n    return;\n  }\n  const dataSource = layertreeCtrl.getDataSource();\n  if (dataSource) {\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    dataSource.timeRangeValue = time;\n  } else if (layertreeCtrl.children) {\n    for (let i = 0, ii = layertreeCtrl.children.length; i < ii; i++) {\n      this.updateWMSTimeLayerState(layertreeCtrl.children[i], time);\n    }\n  }\n};\n\n\n/**\n * Get the icon image URL for the given treeCtrl's layer. It can only return a\n * string for internal WMS layers without multiple childlayers in the node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {string|undefined} The icon legend URL or undefined.\n * @export\n */\nexports.Controller_.prototype.getLegendIconURL = function(treeCtrl) {\n  const iconUrl = treeCtrl.node.metadata.iconUrl;\n\n  if (iconUrl !== undefined) {\n    return iconUrl;\n  }\n\n  if (treeCtrl.node.children !== undefined) {\n    return undefined;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (gmfLayer.type !== 'WMS') {\n    return undefined;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  const legendRule = gmfLayerWMS.metadata.legendRule;\n\n  if (legendRule === undefined) {\n    return undefined;\n  }\n\n  //In case of multiple layers for a gmfLayerWMS, always take the first layer\n  //name to get the icon\n  const layerName = gmfLayerWMS.layers.split(',')[0];\n  const gmfOgcServer = this.gmfTreeManager_.getOgcServer(treeCtrl);\n  return this.layerHelper_.getWMSLegendURL(\n    gmfOgcServer.url, layerName, undefined, legendRule\n  );\n};\n\n\n/**\n * Get the legends object (<LayerName: url> for each layer) for the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {Object.<string, string>} A <layerName: url> object that provides a\n *     layer for each layer.\n * @export\n */\nexports.Controller_.prototype.getLegendsObject = function(treeCtrl) {\n  const legendsObject = {};\n  if (/** @type gmfThemes.GmfGroup */ (treeCtrl.node).children !== undefined) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const gmfLayerDefaultName = gmfLayer.name;\n  if (gmfLayer.metadata.legendImage) {\n    legendsObject[gmfLayerDefaultName] = gmfLayer.metadata.legendImage;\n    return legendsObject;\n  }\n\n  const layer = treeCtrl.layer;\n  if (gmfLayer.type === 'WMTS') {\n    googAsserts.assertInstanceof(layer, olLayerTile);\n    const wmtsLegendURL = this.layerHelper_.getWMTSLegendURL(layer);\n    legendsObject[gmfLayerDefaultName] = wmtsLegendURL;\n    return wmtsLegendURL ? legendsObject : null;\n  } else {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n    let layersNames = gmfLayerWMS.layers;\n    const gmfOgcServer = this.gmfTreeManager_.getOgcServer(treeCtrl);\n    const scale = this.getScale_();\n    // QGIS can handle multiple layers natively. Use Multiple URLs for other map\n    // servers\n    if (gmfOgcServer.type === ngeoDatasourceOGC.ServerType.QGISSERVER) {\n      layersNames = [layersNames];\n    } else {\n      layersNames = layersNames.split(',');\n    }\n    layersNames.forEach((layerName) => {\n      legendsObject[layerName] = this.layerHelper_.getWMSLegendURL(gmfOgcServer.url, layerName, scale);\n    });\n    return legendsObject;\n  }\n};\n\n\n/**\n * Get the number of legends object for this layertree controller.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {number} The number of Legends object.\n * @export\n */\nexports.Controller_.prototype.getNumberOfLegendsObject = function(treeCtrl) {\n  const legendsObject = this.getLegendsObject(treeCtrl);\n  return legendsObject ? Object.keys(legendsObject).length : 0;\n};\n\n\n/**\n * Return the current scale of the map.\n * @return {number} Scale.\n * @private\n */\nexports.Controller_.prototype.getScale_ = function() {\n  const view = this.map.getView();\n  const resolution = view.getResolution();\n  const mpu = view.getProjection().getMetersPerUnit();\n  const dpi = 25.4 / 0.28;\n  return resolution * mpu * 39.37 * dpi;\n};\n\n\n/**\n * Opens a gmfx.openIframePopup with the content of the metadata url of a node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.displayMetadata = function(treeCtrl) {\n  const node = treeCtrl.node;\n  const metadataURL = node.metadata['metadataUrl'];\n  if (metadataURL !== undefined) {\n    // FIXME layertree should not rely on a window function.\n    const gmfx = window.gmfx;\n    if (gmfx.openIframePopup) {\n      gmfx.openIframePopup(metadataURL, node.name, undefined, undefined, false);\n    }\n  }\n};\n\n\n/**\n * Update the layers order in the map and the treeCtrl in the treeManager after\n * a reorder of the first-level groups. Then update the permalink.\n * @export\n */\nexports.Controller_.prototype.afterReorder = function() {\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const currentTreeCtrls = this.gmfTreeManager_.rootCtrl.children;\n  const treeCtrls = [];\n\n  // Get order of first-level groups for treectrl and layers;\n  groupNodes.forEach((node) => {\n    currentTreeCtrls.some((treeCtrl) => {\n      if (treeCtrl.node === node) {\n        treeCtrls.push(treeCtrl);\n        return;\n      }\n    });\n  });\n\n  // Update gmfTreeManager rootctrl children order\n  this.gmfTreeManager_.rootCtrl.children = treeCtrls;\n\n  // Update map 'data' groupe layers order\n  this.layers.length = 0;\n  this.gmfTreeManager_.rootCtrl.children.forEach((child) => {\n    this.layers.push(child.layer);\n  });\n\n  // Update the permalink order\n  this.gmfPermalink_.refreshFirstLevelGroups();\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup} node Layer tree node to remove.\n * @export\n */\nexports.Controller_.prototype.removeNode = function(node) {\n  this.gmfTreeManager_.removeGroup(node);\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.removeAllNodes = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @return {number} first level node count.\n * @export\n */\nexports.Controller_.prototype.nodesCount = function() {\n  return this.gmfTreeManager_.root.children.length;\n};\n\n/**\n * Return 'out-of-resolution' if the current resolution of the map is out of\n * the min/max resolution in the node.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {string|undefined} 'out-of-resolution' or undefined.\n * @export\n */\nexports.Controller_.prototype.getResolutionStyle = function(gmfLayer) {\n  const resolution = this.map.getView().getResolution();\n  const minResolution = gmfThemeThemes.getNodeMinResolution(gmfLayer);\n  if (minResolution !== undefined && resolution < minResolution) {\n    return 'out-of-resolution';\n  }\n  const maxResolution = gmfThemeThemes.getNodeMaxResolution(gmfLayer);\n  if (maxResolution !== undefined && resolution > maxResolution) {\n    return 'out-of-resolution';\n  }\n  return undefined;\n};\n\n\n/**\n * Set the resolution of the map with the max or min resolution of the node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.zoomToResolution = function(treeCtrl) {\n  const gmfLayer = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n  const view = this.map.getView();\n  const resolution = view.getResolution();\n  const minResolution = gmfThemeThemes.getNodeMinResolution(gmfLayer);\n  if (minResolution !== undefined && resolution < minResolution) {\n    view.setResolution(view.constrainResolution(minResolution, 0, 1));\n  } else {\n    const maxResolution = gmfThemeThemes.getNodeMaxResolution(gmfLayer);\n    if (maxResolution !== undefined && resolution > maxResolution) {\n      view.setResolution(view.constrainResolution(maxResolution, 0, -1));\n    }\n  }\n};\n\n\n/**\n * Toggle the legend for a node\n * @param {string} legendNodeId The DOM node legend id to toggle\n * @export\n */\nexports.Controller_.prototype.toggleNodeLegend = function(legendNodeId) {\n  $(legendNodeId).toggle({\n    toggle: true\n  });\n};\n\n\n/**\n * @param {gmf.datasource.OGC} ds Data source to filter.\n * @export\n */\nexports.Controller_.prototype.toggleFiltrableDataSource = function(ds) {\n  this.gmfDataSourceBeingFiltered.dataSource = ds;\n};\n\n\n/**\n * @param {string} legendNodeId The DOM node legend id\n * @return {boolean} Whenever the legend is currently displayed.\n * @export\n */\nexports.Controller_.prototype.isNodeLegendVisible = function(legendNodeId) {\n  return $(legendNodeId).is(':visible');\n};\n\n\n/**\n * Determines whether the layer tree controller supports being customized.\n * For example, having its layer opacity changed, displaying its legend, etc.\n *\n * If any requirement is met, then the treeCtrl is considered supporting\n * \"customization\", regardless of what it actually is.\n *\n * The requirements are:\n *\n * - must not be the root controller, any of the following:\n *   - it supports legend\n *   - it supports having the layer opacity being changed\n *\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports being\n *     \"customized\" or not.\n * @export\n */\nexports.Controller_.prototype.supportsCustomization = function(treeCtrl) {\n  return !treeCtrl.isRoot &&\n    (\n      this.supportsLegend(treeCtrl) ||\n      this.supportsOpacityChange(treeCtrl)\n    );\n};\n\n\n/**\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports having a\n *     legend being shown.\n * @export\n */\nexports.Controller_.prototype.supportsLegend = function(treeCtrl) {\n  const node = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.node);\n  return !!node.metadata &&\n    !!node.metadata.legend &&\n    !!this.getLegendsObject(treeCtrl);\n};\n\n\n/**\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports having its\n *     layer opacity being changed or not.\n * @export\n */\nexports.Controller_.prototype.supportsOpacityChange = function(treeCtrl) {\n  const node = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.node);\n  const parentNode = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  return !!treeCtrl.layer &&\n    (\n      (\n        treeCtrl.depth === 1 && !node.mixed\n      ) ||\n      (\n        treeCtrl.depth > 1 && parentNode.mixed\n      )\n    );\n};\n\nexports.controller('GmfLayertreeController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module app\n */\nconst exports = {};\n\n/**\n * This file provides the \"app\" namespace, which is the\n * application's main namespace. And it defines the application's Angular\n * module.\n */\n\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('app', []);\n\nexports.module.config(['$compileProvider', function($compileProvider) {\n  if (!('debug' in ngeoUtils.decodeQueryString(window.location.search))) {\n    // Disable the debug info\n    $compileProvider.debugInfoEnabled(false);\n  }\n}]);\n\n\nexport default exports;\n","/**\n * @module ngeo.googlestreetview.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olProj from 'ol/proj.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomPoint from 'ol/geom/Point.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoGooglestreetview', [\n  ngeoMapFeatureOverlayMgr.module.name\n]);\n\n\nexports.value('ngeoGooglestreetviewTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoGooglestreetviewTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/googlestreetview';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/googlestreetview', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoGooglestreetviewTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoGooglestreetviewTemplateUrl($attrs, ngeoGooglestreetviewTemplateUrl) {\n  return ngeoGooglestreetviewTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {angular.JQLite} $element Element.\n   * @param {!angular.Scope} $scope Scope.\n   * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Ngeo FeatureOverlay\n   *     manager.\n   * @private\n   * @ngInject\n   * @ngdoc controller\n   * @ngname NgeoGooglestreetviewController\n   */\n  constructor($element, $scope, ngeoFeatureOverlayMgr) {\n\n    // Binding properties\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.active;\n\n    $scope.$watch(\n      () => this.active,\n      this.handleActiveChange_.bind(this)\n    );\n\n    /**\n     * Style for the feature.\n     * @type {ol.style.Style|Array.<ol.style.Style>|\n     *     ol.FeatureStyleFunction|ol.StyleFunction|undefined}\n     * @export\n     */\n    this.featureStyle;\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {number|undefined}\n     * @export\n     */\n    this.radius;\n\n\n    // Injected properties\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n\n    // Inner properties\n\n    /**\n     * @type {!ol.Feature}\n     * @private\n     */\n    this.feature_ = new olFeature();\n\n    /**\n     * @type {!ngeo.map.FeatureOverlay}\n     * @private\n     */\n    this.featureOverlay_ = googAsserts.assert(\n      ngeoFeatureOverlayMgr.getFeatureOverlay()\n    );\n\n    /**\n     * @type {Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    /**\n     * The current location in the OpenLayers' map view projection.\n     * @type {?ol.Coordinate}\n     * @private\n     */\n    this.location = null;\n\n    /**\n     * Flag that determines whether there's data at a given location or not.\n     * @type {boolean}\n     * @export\n     */\n    this.noDataAtLocation = false;\n\n    /**\n     * @type {!google.maps.StreetViewPanorama}\n     * @private\n     */\n    this.panorama_ = new google.maps.StreetViewPanorama(\n      $element[0],\n      {\n        pov: {\n          heading: 0,\n          pitch: 0\n        },\n        visible: false,\n        zoom: 1\n      }\n    );\n\n    /**\n     * @type {?google.maps.MapsEventListener}\n     * @private\n     */\n    this.panoramaListener_ = null;\n\n    /**\n     * @type {ol.geom.Point}\n     * @private\n     */\n    this.point_ = new olGeomPoint([0, 0]);\n\n    this.feature_.setGeometry(this.point_);\n\n    /**\n     * @type {google.maps.StreetViewService}\n     * @private\n     */\n    this.streetViewService_ = new google.maps.StreetViewService();\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.panoramaPositionChanging_ = false;\n  }\n\n  /**\n   * Called on initialization of the controller.\n   */\n  $onInit() {\n\n    // === Watchers ===\n\n    // (1) Watch for any change in the location\n    this.scope_.$watch(\n      () => this.location,\n      this.handleLocationChange_.bind(this)\n    );\n\n    // (2) Watch for both the active and location. When we have both, the\n    //     state is considered 'ready'.\n    this.scope_.$watch(\n      () => {\n        const isActive = this.active;\n        const hasLocation = this.location !== null;\n        return isActive && hasLocation;\n      },\n      this.handleReadyChange_.bind(this)\n    );\n\n    // (3) Watcher to manage the visibility of the panorama.\n    this.scope_.$watch(\n      () => {\n        const isActive = this.active;\n        const hasLocation = this.location !== null;\n        const hasData = this.noDataAtLocation === false;\n        return isActive && hasLocation && hasData;\n      },\n      (show, oldShow) => {\n        if (show === oldShow) {\n          return;\n        }\n\n        this.panorama_.setVisible(show);\n\n        if (show) {\n          this.panoramaListener_ = google.maps.event.addListener(\n            this.panorama_,\n            'position_changed',\n            this.handlePanoramaPositionChange_.bind(this)\n          );\n        } else if (this.panoramaListener_) {\n          google.maps.event.removeListener(this.panoramaListener_);\n          this.panoramaListener_ = null;\n        }\n      }\n    );\n\n\n    // Other initialization\n    if (this.featureStyle) {\n      this.feature_.setStyle(this.featureStyle);\n    }\n\n  }\n\n  /**\n   * Called when the 'active' property of this component changes.\n   * @param {boolean} active Active.\n   * @private\n   */\n  handleActiveChange_(active) {\n\n    const keys = this.listenerKeys_;\n\n    if (active) {\n      keys.push(\n        olEvents.listen(this.map, 'click', this.handleMapClick_, this)\n      );\n    } else {\n      keys.forEach(olEvents.unlistenByKey);\n      keys.length = 0;\n    }\n  }\n\n  /**\n   * Called when the 'location' property of this component changes.\n   * @param {?ol.Coordinate} location Location, in OL map view projection.\n   * @param {?ol.Coordinate} oldLocation The previous location.\n   * @private\n   */\n  handleLocationChange_(location, oldLocation) {\n\n    // (1) No need to do anything if the old value equals the new value\n    if (location === oldLocation || (\n      Array.isArray(location) && Array.isArray(oldLocation) &&\n        olArray.equals(location, oldLocation)\n    )) {\n      return;\n    }\n\n    // (2) Update point coordinates\n    this.point_.setCoordinates(location);\n\n    // (3) Update StreetView location\n    if (location && !this.panoramaPositionChanging_) {\n      const lonLat = this.toLonLat_(location);\n      this.streetViewService_.getPanorama({\n        location: {\n          lat: lonLat[1],\n          lng: lonLat[0]\n        },\n        radius: this.radius\n      }, this.handleStreetViewServiceGetPanorama_.bind(this));\n    }\n  }\n\n  /**\n   * Called when the map is clicked while this component is active. Update the\n   * location accordingly.\n   * @param {ol.MapBrowserEvent} evt The map browser event being fired.\n   * @private\n   */\n  handleMapClick_(evt) {\n    this.location = evt.coordinate;\n    this.scope_.$apply();\n  }\n\n  /**\n   * Called when the component 'virtual ready' state changes.\n   *\n   * When ready:\n   *  - add the feature to the overlay\n   *\n   * When not ready:\n   *  - remove the feature from the overlay\n   *\n   * @param {boolean} ready Whether the component is ready or not.\n   * @param {boolean} oldReady Previous ready value.\n   * @private\n   */\n  handleReadyChange_(ready, oldReady) {\n\n    if (ready === oldReady) {\n      return;\n    }\n\n    if (ready) {\n      this.featureOverlay_.addFeature(this.feature_);\n    } else {\n      this.featureOverlay_.removeFeature(this.feature_);\n    }\n  }\n\n  /**\n   * @param {google.maps.StreetViewPanoramaData} data Data.\n   * @param {google.maps.StreetViewStatus} status Status.\n   * @private\n   */\n  handleStreetViewServiceGetPanorama_(data, status) {\n\n    const panorama = this.panorama_;\n\n    if (status === google.maps.StreetViewStatus.OK) {\n      this.noDataAtLocation = false;\n      panorama.setPosition(data.location.latLng);\n    } else {\n      this.noDataAtLocation = true;\n    }\n\n    this.scope_.$apply();\n  }\n\n  /**\n   * Called when the panorama position changes. Update the location.\n   * @private\n   */\n  handlePanoramaPositionChange_() {\n    this.panoramaPositionChanging_ = true;\n    const position = this.panorama_.getPosition();\n    const lonLat = [position.lng(), position.lat()];\n    const location = this.fromLonLat_(lonLat);\n    this.location = location;\n    this.scope_.$apply();\n    this.panoramaPositionChanging_ = false;\n  }\n\n\n  // Utility methods\n\n  /**\n   * @param {!ol.Coordinate} lonLat LonLat coordinate.\n   * @return {ol.Coordinate} Map view projection coordinate.\n   */\n  fromLonLat_(lonLat) {\n    return olProj.fromLonLat(\n      lonLat,\n      this.map.getView().getProjection()\n    );\n  }\n\n  /**\n   * @param {!ol.Coordinate} coordinate Map view projection coordinate.\n   * @return {ol.Coordinate} LonLat coordinate.\n   */\n  toLonLat_(coordinate) {\n    return olProj.toLonLat(\n      coordinate,\n      this.map.getView().getProjection()\n    );\n  }\n};\n\n\nexports.component('ngeoGooglestreetview', {\n  bindings: {\n    'active': '<',\n    'featureStyle': '<?',\n    'map': '<',\n    'radius': '<?'\n  },\n  controller: exports.Controller_,\n  templateUrl: ngeoGooglestreetviewTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.googlestreetview.module\n */\nimport ngeoGooglestreetviewComponent from 'ngeo/googlestreetview/component.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoGooglestreetviewModule', [\n  ngeoGooglestreetviewComponent.name\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.routing.NominatimService\n */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\n/**\n * Service to provide access to Nominatim, which allows to search for\n * OSM data by name and address.\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngInject\n * @export\n * @ngname ngeoNominatimService\n * @see https://wiki.openstreetmap.org/wiki/Nominatim\n */\nconst exports = function($http, $injector, ngeoDebounce) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * URL for Nominatim backend\n   * Defaults openstreetmap instance.\n   * @type {string}\n   * @private\n   */\n  this.nominatimUrl_ = 'https://nominatim.openstreetmap.org/';\n\n  if ($injector.has('ngeoNominatimUrl')) {\n    this.nominatimUrl_ = $injector.get('ngeoNominatimUrl');\n\n    // the url is expected to end with a slash\n    if (this.nominatimUrl_.substr(-1) !== '/') {\n      this.nominatimUrl_ += '/';\n    }\n  }\n\n  /**\n   * @type {Object<string, string>}\n   * @private\n   */\n  this.searchDefaultParams_ = {};\n\n  if ($injector.has('ngeoNominatimSearchDefaultParams')) {\n    this.searchDefaultParams_ = $injector.get('ngeoNominatimSearchDefaultParams');\n  }\n\n  /**\n   * Delay (in milliseconds) to avoid calling the API too often.\n   * Only if there were no calls for that many milliseconds,\n   * the last call will be executed.\n   * @type {number}\n   * @private\n   */\n  this.typeaheadDebounceDelay_ = 500;\n\n  /**\n   * @export\n   * @type {function(string,function(Array.<BloodhoundDatum>),(function(Array.<ol.Feature>)|undefined))}\n   */\n  this.typeaheadSourceDebounced =\n    /** @type{function(string,function(Array.<BloodhoundDatum>),(function(Array.<ol.Feature>)|undefined))} */\n    (this.ngeoDebounce_(/** @type {function(?)} */ (this.typeaheadSource_.bind(this)), this.typeaheadDebounceDelay_, true));\n};\n\n/**\n * Search by name\n * @param {string} query Search query\n * @param {?Object} params Optional parameters\n * @return {!angular.$http.HttpPromise} promise of the Nominatim API request\n * @see https://wiki.openstreetmap.org/wiki/Nominatim#Search\n * @export\n */\nexports.prototype.search = function(query, params) {\n  let url = `${this.nominatimUrl_}search?q=${query}`;\n\n  params = params || {};\n  params = Object.assign({}, this.searchDefaultParams_, params);\n\n  // require JSON response\n  params['format'] = 'json';\n\n  if (params) {\n    url += '&';\n    const options = [];\n    for (const option of Object.keys(params)) {\n      options.push(`${option}=${params[option]}`);\n    }\n    url += options.join('&');\n  }\n\n  return this.$http_.get(url);\n};\n\n/**\n * Reverse Geocoding\n * @param {ol.Coordinate} coordinate Search coordinate in LonLat projection\n * @param {(Object|undefined)} params Optional parameters\n * @return {!angular.$http.HttpPromise} promise of the Nominatim API request\n * @see https://wiki.openstreetmap.org/wiki/Nominatim#Reverse_Geocoding\n * @export\n */\nexports.prototype.reverse = function(coordinate, params) {\n  let url = `${this.nominatimUrl_}reverse`;\n\n  params = Object.assign({}, params);\n\n  // coordinate\n  params['lon'] = coordinate[0];\n  params['lat'] = coordinate[1];\n\n  // require JSON response\n  params['format'] = 'json';\n\n  if (params) {\n    url += '?';\n    const options = [];\n    for (const option of Object.keys(params)) {\n      options.push(`${option}=${params[option]}`);\n    }\n    url += options.join('&');\n  }\n\n  return this.$http_.get(url);\n};\n\n/**\n * @param {string} query Search query\n * @param {function(Array.<BloodhoundDatum>)} syncResults Callback for synchronous execution, unused\n * @param {function(Array.<ngeox.NominatimSearchResult>)} asyncResults Callback for asynchronous execution\n * @private\n */\nexports.prototype.typeaheadSource_ = function(query, syncResults, asyncResults) {\n  const onSuccess_ = function(resp) {\n    /**\n     * Parses result response.\n     * @param {ngeox.NominatimSearchResponseResult} result Result\n     * @return {ngeox.NominatimSearchResult} Parsed result\n     */\n    const parse = function(result) {\n      return /** @type{ngeox.NominatimSearchResult} */({\n        coordinate: [result.lon, result.lat],\n        name: result.display_name\n      });\n    };\n    asyncResults(resp.data.map(parse));\n  };\n\n  const onError_ = function(resp) {\n    asyncResults([]);\n  };\n\n  this.search(query, {}).then(onSuccess_, onError_);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoNominatimService', [\n  ngeoMiscDebounce.name\n]);\n\nexports.module.service('ngeoNominatimService', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.routing.RoutingService\n */\n/**\n * Service to provide access to a [Open Source Routing Machine (OSRM) backend](https://github.com/Project-OSRM/osrm-backend)\n * of version 5.8 and higher and its features.\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngInject\n * @export\n * @ngname ngeoRoutingService\n */\nconst exports = function($http, $injector) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {ngeox.RoutingOptions}\n   * @private\n   */\n  this.routingOptions_ = $injector.has('ngeoRoutingOptions') ? $injector.get('ngeoRoutingOptions') : {};\n\n  /**\n   * URL for OSRM backend API.\n   * Defaults to demo backend.\n   * @type {string}\n   * @private\n   */\n  this.ngeoOsrmBackendUrl_ = this.routingOptions_.backendUrl || 'https://router.project-osrm.org/';\n\n  // the url is expected to end with a slash\n  if (this.ngeoOsrmBackendUrl_.substr(-1) !== '/') {\n    this.ngeoOsrmBackendUrl_ += '/';\n  }\n\n  /**\n   * Version of the protocol implemented by the service.\n   * see: https://github.com/Project-OSRM/osrm-backend/blob/master/docs/http.md\n   * @type {string}\n   * @private\n   */\n  this.protocolVersion_ = 'v1';\n\n};\n\n/**\n * Route request\n * @param {Array.<ol.Coordinate>} coordinates coordinates of the route (at least two!)\n * @param {?Object} config optional configuration\n * @return {!angular.$http.HttpPromise} promise of the OSRM API request\n */\nexports.prototype.getRoute = function(coordinates, config) {\n\n  config = config || {};\n\n  // Service\n  // see: https://github.com/Project-OSRM/osrm-backend/blob/master/docs/http.md#requests\n  if (!config['service']) {\n    config['service'] = 'route'; // default to route\n  }\n\n  // Mode of transportation,\n  // can be: car, bike, foot\n  // see: https://github.com/Project-OSRM/osrm-backend/blob/master/docs/http.md#requests\n  //\n  // As of version 5.8.0, OSRM (server) does not support multiple profiles simultaneously.\n  // This means the value actually does not matter.\n  if (!config['profile']) {\n    config['profile'] = 'car'; // default to car\n  }\n\n  // build request URL\n  let url = this.ngeoOsrmBackendUrl_;\n\n  // Common workaround to provide multiple profiles (since it is not supported yet)\n  // Every profile runs on its own instance.\n  if (config['instance']) {\n    url += `${config['instance']}/`;\n  }\n\n  url += `${config['service']}/${this.protocolVersion_}/${config['profile']}/`;\n\n  // [ [a,b] , [c,d] ] -> 'a,b;c,d'\n  const coordinateString = coordinates.map(c => c.join(',')).join(';');\n\n  url += coordinateString;\n\n  // look for route service options\n  // see: https://github.com/Project-OSRM/osrm-backend/blob/master/docs/http.md#route-service\n  if (config.options) {\n    url += '?';\n    const options = [];\n    for (const option of Object.keys(config.options)) {\n      options.push(`${option}=${config.options[option]}`);\n    }\n    url += options.join('&');\n  }\n\n  return this.$http_.get(url);\n};\n\n/**\n * Snaps a coordinate to the street network and returns the nearest match\n * @param {ol.Coordinate} coordinate coordinate to query\n * @param {?Object} config optional configuration\n * @return {!angular.$http.HttpPromise} promise of the OSRM API request\n * @see https://github.com/Project-OSRM/osrm-backend/blob/master/docs/http.md#nearest-service\n */\nexports.prototype.getNearest = function(coordinate, config) {\n  config = config || {};\n\n  // service is always nearest\n  config['service'] = 'nearest';\n\n  // Mode of transportation\n  // If used in combination with a getRoute request, choose the same profile.\n  if (!config['profile']) {\n    config['profile'] = 'car'; // default to car\n  }\n\n  // build request URL\n  let url = this.ngeoOsrmBackendUrl_;\n\n  // Common workaround to provide multiple profiles (since it is not supported yet)\n  // Every profile runs on its own instance.\n  if (config['instance']) {\n    url += `${config['instance']}/`;\n  }\n\n  url += `${config['service']}/${this.protocolVersion_}/${config['profile']}/`;\n\n  // [a,b] -> 'a,b'\n  const coordinateString = coordinate.join(',');\n  url += coordinateString;\n\n  // look for nearest service options\n  if (config.options) {\n    url += '?';\n    const options = [];\n    for (const option of Object.keys(config.options)) {\n      options.push(`${option}=${config.options[option]}`);\n    }\n    url += options.join('&');\n  }\n\n  return this.$http_.get(url);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoRoutingService', [\n]);\n\nexports.module.service('ngeoRoutingService', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.routing.NominatimInputComponent\n */\nconst exports = {};\nimport ngeoSearchSearchDirective from 'ngeo/search/searchDirective.js';\nimport ngeoRoutingNominatimService from 'ngeo/routing/NominatimService.js';\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoRoutingNominatimInputComponent', [\n  ngeoSearchSearchDirective.module.name,\n  ngeoRoutingNominatimService.module.name\n]);\n\nexports.module.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/routing/nominatiminput', require('./nominatiminput.html'));\n});\n\n\nexports.module.value('ngeoRoutingNominatimInputComponentTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoRoutingNominatimInputComponentTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/routing/nominatiminput';\n  }\n);\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoRoutingNominatimInputComponentTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoRoutingNominatimInputComponentTemplateUrl($attrs, ngeoRoutingNominatimInputComponentTemplateUrl) {\n  return ngeoRoutingNominatimInputComponentTemplateUrl($attrs);\n}\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {angular.$injector} $injector Main injector.\n * @param {!angular.Scope} $scope Scope.\n * @param {!ngeo.routing.NominatimService} ngeoNominatimService service for Nominatim\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoNominatimInputController\n */\nexports.Controller = function($element, $injector, $scope, ngeoNominatimService) {\n\n  /**\n   * @type {!angular.JQLite}\n   * @private\n   */\n  this.element_ = $element;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {ngeo.routing.NominatimService}\n   * @export\n   */\n  this.ngeoNominatimService = ngeoNominatimService;\n\n  /**\n   * @type {(function(Object)|undefined)}\n   * @export\n   */\n  this.onSelect;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.inputValue;\n\n  /**\n   * @type {TypeaheadOptions}\n   * @export\n   */\n  this.options = /** @type {TypeaheadOptions} */ ({\n  });\n\n  /**\n   * @type {Array.<TypeaheadDataset>}\n   * @export\n   */\n  this.datasets = [/** @type {TypeaheadDataset} */({\n    name: 'nominatim',\n    display: 'name',\n    source: this.ngeoNominatimService.typeaheadSourceDebounced\n  })];\n\n  /**\n   * @type {ngeox.SearchDirectiveListeners}\n   * @export\n   */\n  this.listeners = /** @type {ngeox.SearchDirectiveListeners} */({\n    select: this.select_.bind(this)\n  });\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.placeholder = '';\n\n};\n\n/**\n * @param {jQuery.Event} event Event.\n * @param {ngeox.NominatimSearchResult} suggestion Suggestion.\n * @param {TypeaheadDataset} dataset Dataset.\n * @this {ngeo.routing.NominatimInputComponent.Controller}\n * @private\n */\nexports.Controller.prototype.select_ = function(event, suggestion, dataset) {\n  if (this.onSelect) {\n    this.onSelect(suggestion);\n  }\n};\n\n/**\n * Input form field which provides Nominatim typeahead lookup using {@link ngeo.routing.NominatimService}.\n *\n * Example:\n *\n *     <ngeo-nominatim-input\n *         ngeo-nominatim-input-value=\"ctrl.label\"\n *         ngeo-nominatim-input-placeholder=\"type to search\"\n *         ngeo-nominatim-input-on-select=\"ctrl.onSelect\">\n *\n * Is used in in the partial of {@link ngeo.routingFeatureComponent}.\n *\n * See the [../examples/routing.html](../examples/routing.html) example to see it in action.\n *\n * @htmlAttribute {function(ngeox.NominatimSearchResult)} ngeo-nominatim-input-on-select\n *  Event fired when user selects a new suggestion.\n * @htmlAttribute {string} ngeo-nominatim-input-value\n *  Value of input field, will be set to the label of the search result.\n * @htmlAttribute {string} ngeo-nominatim-input-placeholder\n *  Placeholder text, when field is empty.\n * @ngdoc directive\n * @ngname ngeoNominatimInput\n */\nconst component = {\n  controller: exports.Controller,\n  bindings: {\n    'onSelect': '=?ngeoNominatimInputOnSelect',\n    'inputValue': '=?ngeoNominatimInputValue',\n    'placeholder': '@?ngeoNominatimInputPlaceholder'\n  },\n  templateUrl: ngeoRoutingNominatimInputComponentTemplateUrl\n};\n\nexports.module.component('ngeoNominatimInput', component);\n\n\nexport default exports;\n","/**\n * @module ngeo.routing.RoutingFeatureComponent\n */\nconst exports = {};\nimport ngeoRoutingNominatimService from 'ngeo/routing/NominatimService.js';\nimport ngeoRoutingNominatimInputComponent from 'ngeo/routing/NominatimInputComponent.js';\nimport * as olProj from 'ol/proj.js';\nimport olFeature from 'ol/Feature.js';\nimport olCollection from 'ol/Collection.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport 'font-awesome/css/font-awesome.css';\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoRoutingFeatureComponent', [\n  ngeoRoutingNominatimService.module.name,\n  ngeoRoutingNominatimInputComponent.module.name\n]);\n\nexports.module.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/routing/routingfeature', require('./routingfeature.html'));\n});\n\n\nexports.module.value('ngeoRoutingFeatureTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoRoutingFeatureTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/routing/routingfeature';\n  }\n);\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoRoutingFeatureTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoRoutingFeatureTemplateUrl($attrs, ngeoRoutingFeatureTemplateUrl) {\n  return ngeoRoutingFeatureTemplateUrl($attrs);\n}\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {!angular.$q} $q Angular q service\n * @param {!ngeo.routing.NominatimService} ngeoNominatimService service for Nominatim\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoRoutingFeatureController\n */\nexports.Controller = function($scope, $timeout, $q, ngeoNominatimService) {\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {ngeo.routing.NominatimService}\n   * @private\n   */\n  this.ngeoNominatimService_ = ngeoNominatimService;\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map;\n\n  /**\n   * @type {ol.Feature}\n   * @export\n   */\n  this.feature;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.featureLabel = '';\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.fillColor;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.strokeColor;\n\n  /**\n   * @type {function(ol.Feature)}\n   * @export\n   */\n  this.onChange;\n\n  /**\n   * @type {ol.Collection}\n   * @private\n   */\n  this.vectorFeatures_ = new olCollection();\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.vectorSource_ = new olSourceVector({\n    features: this.vectorFeatures_\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: this.vectorSource_,\n    style: (function(feature, resolution) {\n      return [new olStyleStyle({\n        text: new olStyleText({\n          fill: new olStyleFill({\n            color: this.fillColor || '#000000'\n          }),\n          font: 'normal 30px FontAwesome',\n          offsetY: -15,\n          stroke: new olStyleStroke({\n            width: 3,\n            color: this.strokeColor || '#000000'\n          }),\n          text: '\\uf041'\n        })\n      })];\n    }).bind(this)\n  });\n\n  /**\n   * Interaction for moving start and end.\n   * @type {ol.interaction.Modify}\n   * @private\n   */\n  this.modifyFeature_ = new olInteractionModify({\n    features: this.vectorFeatures_\n  });\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @private\n   */\n  this.draw_ = null;\n\n  /**\n   * @param {ngeox.NominatimSearchResult} selected Selected result.\n   * @export\n   */\n  this.onSelect = this.onSelect_.bind(this);\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.errorMessage = '';\n};\n\nexports.Controller.prototype.$onInit = function() {\n  this.map.addLayer(this.vectorLayer_);\n\n  // setup modify interaction\n  this.modifyFeature_.setActive(true);\n  this.map.addInteraction(this.modifyFeature_);\n\n  this.modifyFeature_.on('modifyend', (event) => {\n    const feature = event.features.getArray()[0];\n    this.vectorSource_.clear();\n    this.snapFeature_(feature);\n  });\n\n  this.scope_.$watch(\n    () => this.feature,\n    (newVal, oldVal) => {\n      if (newVal) {\n        this.onFeatureChange_();\n      }\n      if (newVal === null) {\n        this.vectorSource_.clear();\n        this.featureLabel = '';\n      }\n    }\n  );\n};\n\n/**\n * Cleanup, mostly relevant for vias.\n */\nexports.Controller.prototype.$onDestroy = function() {\n  this.map.removeLayer(this.vectorLayer_);\n  this.modifyFeature_.setActive(false);\n  this.map.removeInteraction(this.modifyFeature_);\n};\n\n/**\n * @export\n */\nexports.Controller.prototype.set = function() {\n  if (this.draw_) {\n    this.map.removeInteraction(this.draw_);\n  }\n\n  this.draw_ = new olInteractionDraw({\n    features: this.vectorFeatures_,\n    type: /** @type {ol.geom.GeometryType} */ ('Point')\n  });\n\n  this.draw_.on('drawstart', () => {\n    if (this.feature) {\n      this.vectorSource_.removeFeature(this.feature);\n    }\n  });\n\n  this.draw_.on('drawend', (event) => {\n    if (this.draw_) {\n      this.map.removeInteraction(this.draw_);\n    }\n    this.snapFeature_(event.feature);\n    this.modifyFeature_.setActive(true);\n  });\n\n  this.modifyFeature_.setActive(false);\n  this.map.addInteraction(this.draw_);\n};\n\n/**\n * @param {ol.Coordinate} coordinate LonLat coordinate.\n * @param {string} label Feature name/label.\n * @private\n */\nexports.Controller.prototype.setFeature_ = function(coordinate, label) {\n  const transformedCoordinate = olProj.fromLonLat(coordinate, this.map.getView().getProjection());\n  if (label === '') {\n    label = transformedCoordinate.join('/');\n  }\n  this.feature = new olFeature({\n    geometry: new olGeomPoint(transformedCoordinate),\n    name: label\n  });\n};\n\nexports.Controller.prototype.onFeatureChange_ = function() {\n  // update label\n  this.featureLabel = /** @type{string} */(this.feature.get('name') || '');\n\n  //update vector source\n  this.vectorSource_.clear();\n  this.vectorSource_.addFeature(this.feature);\n\n  // notify others\n  if (this.onChange) {\n    this.timeout_(() => {\n      this.onChange(this.feature);\n    });\n  }\n};\n\n/**\n * @param {ngeox.NominatimSearchResult} selected Selected result.\n * @private\n */\nexports.Controller.prototype.onSelect_ = function(selected) {\n  const coordinate = selected.coordinate.map(parseFloat);\n  const label = selected.label;\n  this.setFeature_(coordinate, label);\n  const newCoordinates = /** @type{ol.geom.Point} */(this.feature.getGeometry()).getCoordinates();\n  this.map.getView().setCenter(newCoordinates);\n};\n\n/**\n * Snaps a feature to the street network using the getNearest\n * function of the routing service. Replaces the feature.\n * @param {ol.Feature} feature Feature to snap\n * @private\n */\nexports.Controller.prototype.snapFeature_ = function(feature) {\n  const coord = this.getLonLatFromPoint_(feature);\n  const config = {};\n\n  const onSuccess = (function(resp) {\n    const lon = parseFloat(resp['data']['lon']);\n    const lat = parseFloat(resp['data']['lat']);\n    const coordinate = [lon, lat];\n    const label = resp['data']['display_name'];\n    this.setFeature_(coordinate, label);\n  }).bind(this);\n\n  const onError = (function(resp) {\n    this.errorMessage = 'Error: nominatim server not responding.';\n    console.log(resp);\n  }).bind(this);\n\n  this.$q_.when(this.ngeoNominatimService_.reverse(coord, config))\n    .then(onSuccess.bind(this), onError.bind(this));\n};\n\n/**\n * Converts feature point into LonLat coordinate.\n * @param {ol.Feature} point Feature point to convert\n * @return {ol.Coordinate} LonLat coordinate\n * @private\n */\nexports.Controller.prototype.getLonLatFromPoint_ = function(point) {\n  const geometry = /** @type {ol.geom.Point} */ (point.getGeometry());\n  const coords = geometry.getCoordinates();\n  const projection = this.map.getView().getProjection();\n  return olProj.toLonLat(coords, projection);\n};\n\n\n/**\n * Provides a text input and draw interaction to allow a user to create and modify a ol.Feature (point geometry).\n *\n * The text input is provided by {@link ngeo.nominatimInputComponent} and includes Nominatim search.\n *\n * Example:\n *\n *     <ngeo-routing-feature\n *         ngeo-routing-feature-map=\"ctrl.map\"\n *         ngeo-routing-feature-feature=\"ctrl.feature\"\n *         ngeo-routing-feature-fill-color=\"#6BE62E\"\n *         ngeo-routing-feature-stroke-color=\"#4CB01E\"\n *         ngeo-routing-feature-on-change=\"ctrl.handleChange\">\n *\n * Is used in in the partial of {@link ngeo.routingComponent}.\n *\n * See the [../examples/routing.html](../examples/routing.html) example for a usage sample.\n *\n * @htmlAttribute {ol.Map} ngeo-routing-feature-map The map.\n * @htmlAttribute {ol.Feature} ngeo-routing-feature-feature The feature.\n * @htmlAttribute {string} ngeo-routing-feature-fill-color The marker fill color.\n * @htmlAttribute {string} ngeo-routing-feature-stroke-color The marker stroke color.\n * @htmlAttribute {function(ol.Feature)} ngeo-routing-feature-on-change Event fired when feature changes.\n * @ngdoc directive\n * @ngname ngeoRoutingFeature\n */\nexports.component_ = {\n  controller: exports.Controller,\n  bindings: {\n    'map': '<ngeoRoutingFeatureMap',\n    'feature': '=ngeoRoutingFeatureFeature',\n    'fillColor': '<?ngeoRoutingFeatureFillColor',\n    'strokeColor': '<?ngeoRoutingFeatureStrokeColor',\n    'onChange': '=?ngeoRoutingFeatureOnChange'\n  },\n  templateUrl: ngeoRoutingFeatureTemplateUrl\n};\n\nexports.module.component('ngeoRoutingFeature', exports.component_);\n\n\nexport default exports;\n","/**\n * @module ngeo.routing.RoutingComponent\n */\nconst exports = {};\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoRoutingNominatimService from 'ngeo/routing/NominatimService.js';\nimport ngeoRoutingRoutingService from 'ngeo/routing/RoutingService.js';\nimport ngeoRoutingRoutingFeatureComponent from 'ngeo/routing/RoutingFeatureComponent.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport * as olProj from 'ol/proj.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport 'font-awesome/css/font-awesome.css';\n\nexports.module = angular.module('ngeoRoutingComponent', [\n  ngeoMiscDebounce.name,\n  ngeoMiscFilters.name,\n  ngeoRoutingNominatimService.module.name,\n  ngeoRoutingRoutingService.module.name,\n  ngeoRoutingRoutingFeatureComponent.module.name\n]);\n\n\nexports.module.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/routing/routing', require('./routing.html'));\n});\n\n\nexports.module.value('ngeoRoutingTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoRoutingTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/routing/routing';\n  }\n);\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoRoutingTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoRoutingTemplateUrl($attrs, ngeoRoutingTemplateUrl) {\n  return ngeoRoutingTemplateUrl($attrs);\n}\n\n\n/**\n * The controller for the routing directive.\n * @param {angular.$injector} $injector Main injector.\n * @param {!angular.Scope} $scope Scope.\n * @param {!ngeo.routing.RoutingService} ngeoRoutingService service for OSRM routing\n * @param {!ngeo.routing.NominatimService} ngeoNominatimService service for Nominatim\n * @param {!angular.$q} $q Angular q service\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoRoutingController\n */\nexports.Controller = function($injector, $scope, ngeoRoutingService, ngeoNominatimService, $q, ngeoDebounce) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {ngeo.routing.RoutingService}\n   * @private\n   */\n  this.ngeoRoutingService_ = ngeoRoutingService;\n\n  /**\n   * @type {ngeo.routing.NominatimService}\n   * @private\n   */\n  this.ngeoNominatimService_ = ngeoNominatimService;\n\n  /**\n   * @type {ngeox.RoutingOptions}\n   * @private\n   */\n  this.routingOptions_ = $injector.has('ngeoRoutingOptions') ? $injector.get('ngeoRoutingOptions') : {};\n\n  /**\n   * Available routing profiles.\n   * Example: [\n   *            {\n   *              label: 'Car', // used as label in the UI\n   *              profile: 'routed-car' // used as part of the query\n   *            }\n   *          ]\n   * @type {Array<ngeox.RoutingProfile>}\n   * @export\n   */\n  this.routingProfiles = this.routingOptions_.profiles || [];\n\n  /**\n   * @type {?ngeox.RoutingProfile}\n   * @export\n   */\n  this.selectedRoutingProfile = this.routingProfiles.length > 0 ? this.routingProfiles[0] : null;\n\n  $scope.$watch(\n    () => this.selectedRoutingProfile,\n    this.calculateRoute.bind(this)\n  );\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.errorMessage = '';\n\n  /**\n   * @type {ol.Feature}\n   * @export\n   */\n  this.startFeature_ = null;\n\n  /**\n   * @type {ol.Feature}\n   * @export\n   */\n  this.targetFeature_ = null;\n\n  /**\n   * @type {Array.<ngeox.RoutingVia>}\n   * @export\n   */\n  this.viaArray = [];\n\n  /**\n   * @type {Object<string, string>}\n   * @export\n   */\n  this.colors = {\n    'start.fill': '#6BE62E',\n    'start.stroke': '#4CB01E',\n    'destination.fill': '#FF3E13',\n    'destination.stroke': '#CD3412',\n    'via.fill': '#767676',\n    'via.stroke': '#000000'\n  };\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.routeSource_ = new olSourceVector({\n    features: []\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.routeLayer_ = new olLayerVector({\n    source: this.routeSource_,\n    style: new olStyleStyle({\n      fill: new olStyleFill({\n        color: 'rgba(16, 112, 29, 0.6)'\n      }),\n      stroke: new olStyleStroke({\n        color: 'rgba(16, 112, 29, 0.6)',\n        width: 5\n      })\n    })\n  });\n\n  /**\n   * Distance of route in meters\n   * @type {number}\n   * @export\n   */\n  this.routeDistance = 0;\n\n  /**\n   * Duration of route in minutes.\n   * @type {?number}\n   * @export\n   */\n  this.routeDuration = null;\n\n  /**\n   * @type {RegExp}\n   * @private\n   */\n  this.regexIsFormattedCoord = /\\d+\\.\\d+\\/\\d+\\.\\d+/;\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @private\n   */\n  this.draw_ = null;\n\n  const debounceDelay = 200; // in milliseconds\n\n  /**\n   * Debounced because in some cases (reverse route) multiple changes are done\n   * at once and spam this function.\n   * @export\n   * @type {function()}\n   */\n  this.handleChange = /** @type {function()} */\n          (ngeoDebounce(\n            /** @type {function(?)} */ (this.calculateRoute.bind(this)),\n            debounceDelay,\n            true));\n};\n\n/**\n * Init the controller\n */\nexports.Controller.prototype.$onInit = function() {\n  this.map.addLayer(this.routeLayer_);\n};\n\n/**\n * Clears start, end and vias. Removes features from map.\n * @export\n */\nexports.Controller.prototype.clearRoute = function() {\n  this.startFeature_ = null;\n  this.targetFeature_ = null;\n  this.viaArray = [];\n  this.routeDistance = 0;\n  this.routeDuration = null;\n  this.routeSource_.clear();\n  this.errorMessage = '';\n};\n\n/**\n * Converts feature point into LonLat coordinate.\n * @param {ol.Feature} point Feature point to convert\n * @return {ol.Coordinate} LonLat coordinate\n * @private\n */\nexports.Controller.prototype.getLonLatFromPoint_ = function(point) {\n  const geometry = /** @type {ol.geom.Point} */ (point.getGeometry());\n  const coords = geometry.getCoordinates();\n  const projection = this.map.getView().getProjection();\n  return olProj.toLonLat(coords, projection);\n};\n\n/**\n * Flip start and target and re-calculate route.\n * @export\n */\nexports.Controller.prototype.reverseRoute = function() {\n  // swap start and target\n  const tmpFeature = this.startFeature_;\n  this.startFeature_ = this.targetFeature_;\n  this.targetFeature_ = tmpFeature;\n\n  // reverse vias\n  this.viaArray = this.viaArray.reverse();\n\n  // recalculation is done by the debounced handleChange\n};\n\n/**\n * @param {Object} route Routes of OSRM response\n * @returns {Array<ol.Feature>} parsed route features\n * @private\n */\nexports.Controller.prototype.parseRoute_ = function(route) {\n  let parsedRoutes = [];\n  const format = new olFormatGeoJSON();\n  const formatConfig = {\n    dataProjection: 'EPSG:4326',\n    featureProjection: this.map.getView().getProjection()\n  };\n  // if there are is useful \"legs\" data, parse this\n  if (route.legs) {\n    parsedRoutes = route.legs.map(leg => leg.steps.map(step => new olFeature({geometry: format.readGeometry(step.geometry, formatConfig)})));\n    // flatten\n    parsedRoutes = [].concat(...parsedRoutes);\n  } else if (route.geometry) {\n  // otherwise parse (overview) geometry\n    parsedRoutes.push(new olFeature({geometry: format.readGeometry(route.geometry, formatConfig)}));\n  }\n  return parsedRoutes;\n};\n\n/**\n * @export\n */\nexports.Controller.prototype.calculateRoute = function() {\n  if (this.startFeature_ && this.targetFeature_) {\n    // remove rendered routes\n    this.routeSource_.clear();\n\n    const coordFrom = this.getLonLatFromPoint_(this.startFeature_);\n    const coordTo = this.getLonLatFromPoint_(this.targetFeature_);\n    const vias = this.viaArray.filter(via => via.feature !== null).map(via => this.getLonLatFromPoint_(via.feature));\n    const route =  [coordFrom].concat(vias, [coordTo]);\n\n    const onSuccess_ = (function(resp) {\n      const features = this.parseRoute_(resp.data.routes[0]);\n      if (features.length === 0) {\n        console.log('No route or not supported format.');\n        return;\n      }\n      this.routeSource_.addFeatures(features);\n\n      // recenter map on route\n      this.map.getView().fit(this.routeSource_.getExtent());\n\n      this.routeDistance = parseInt(resp.data.routes[0].distance, 10);\n      this.routeDuration = resp.data.routes[0].duration;\n\n      // get first and last coordinate of route\n      const startRoute = /** @type{ol.geom.LineString} */(features[0].getGeometry()).getCoordinateAt(0);\n      const endRoute = /** @type{ol.geom.LineString} */(features[features.length - 1].getGeometry()).getCoordinateAt(1);\n\n      // build geometries to connect route to start and end point of query\n      const startToRoute = [/** @type {ol.geom.Point} */(this.startFeature_.getGeometry()).getCoordinates(), startRoute];\n      const routeToEnd = [endRoute, /** @type {ol.geom.Point} */(this.targetFeature_.getGeometry()).getCoordinates()];\n      const routeConnections = [\n        new olFeature(new olGeomLineString(startToRoute)),\n        new olFeature(new olGeomLineString(routeToEnd))\n      ];\n\n      // add them to the source\n      this.routeSource_.addFeatures(routeConnections);\n    }).bind(this);\n\n    const onError_ = (function(resp) {\n      this.errorMessage = 'Error: routing server not responding.';\n      console.log(resp);\n    }).bind(this);\n\n    const options = {};\n    options['steps'] = true;\n    options['overview'] = false;\n    options['geometries'] = 'geojson';\n\n    const config = {};\n    config['options'] = options;\n\n    if (this.selectedRoutingProfile) {\n      config['instance'] = this.selectedRoutingProfile['profile'];\n    }\n\n    this.$q_.when(this.ngeoRoutingService_.getRoute(route, config))\n      .then(onSuccess_.bind(this), onError_.bind(this));\n  }\n};\n\n/**\n * @export\n */\nexports.Controller.prototype.addVia = function() {\n  this.viaArray.push(/** @type{ngeox.RoutingVia} */({\n    feature: null,\n    onSelect: null\n  }));\n};\n\n/**\n * @param {number} index Array index.\n * @export\n */\nexports.Controller.prototype.deleteVia = function(index) {\n  if (this.viaArray.length > index) {\n    this.viaArray.splice(index, 1);\n    this.calculateRoute();\n  }\n};\n\n\nexports.module.component('ngeoRouting', {\n  controller: exports.Controller,\n  bindings: {\n    'map': '<ngeoRoutingMap'\n  },\n  templateUrl: ngeoRoutingTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.routing.module\n */\nimport ngeoRoutingRoutingComponent from 'ngeo/routing/RoutingComponent.js';\n\nimport './routing.less';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('ngeoRoutingModule', [\n  ngeoRoutingRoutingComponent.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.proj.EPSG2056\n */\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport * as olProjProj4 from 'ol/proj/proj4.js';\n\nimport somerc from 'ngeo/proj/somerc.js';\nimport proj4 from 'proj4';\n\nconst epsg2056def = [\n  `+proj=${somerc}`,\n  '+lat_0=46.95240555555556',\n  '+lon_0=7.439583333333333',\n  '+k_0=1',\n  '+x_0=2600000',\n  '+y_0=1200000',\n  '+ellps=bessel',\n  '+towgs84=674.374,15.056,405.346,0,0,0,0',\n  '+units=m',\n  '+no_defs'\n].join(' ');\nconst epsg2056extent = [2420000, 1030000, 2900000, 1350000];\n\nproj4.defs('EPSG:2056', epsg2056def);\nolProjProj4.register(proj4);\nolProj.get('EPSG:2056').setExtent(epsg2056extent);\n\nconst exports = 'EPSG:2056';\n\n\nexport default exports;\n","/**\n * @module app.desktop_alt.Controller\n */\n/**\n * Application entry point.\n *\n * This file includes `goog.require`'s for all the components/directives used\n * by the HTML page and the controller to provide the configuration.\n */\n\nimport gmfControllersAbstractDesktopController from 'gmf/controllers/AbstractDesktopController.js';\nimport './less/main.less';\nimport appBase from '../appmodule.js';\nimport gmfImportModule from 'gmf/import/module.js';\nimport ngeoGooglestreetviewModule from 'ngeo/googlestreetview/module.js';\nimport ngeoRoutingModule from 'ngeo/routing/module.js';\nimport ngeoProjEPSG2056 from 'ngeo/proj/EPSG2056.js';\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\nimport * as olBase from 'ol/index.js';\n\nif (!window.requestAnimationFrame) {\n  alert('Your browser is not supported, please update it or use another one. You will be redirected.\\n\\n'\n    + 'Votre navigateur n\\'est pas supporté, veuillez le mettre à jour ou en utiliser un autre. Vous allez être redirigé.\\n\\n'\n    + 'Ihr Browser wird nicht unterstützt, bitte aktualisieren Sie ihn oder verwenden Sie einen anderen. Sie werden weitergeleitet.');\n  window.location = 'http://geomapfish.org/';\n}\n\n/**\n * @param {angular.Scope} $scope Scope.\n * @param {angular.$injector} $injector Main injector.\n * @param {ngeo.misc.File} ngeoFile The file service.\n * @param {gettext} gettext The gettext service\n * @param {angular.$q} $q Angular $q.\n * @constructor\n * @extends {gmf.controllers.AbstractDesktopController}\n * @ngInject\n * @export\n */\nconst exports = function($scope, $injector, ngeoFile, gettext, $q) {\n  gmfControllersAbstractDesktopController.call(this, {\n    srid: 21781,\n    mapViewConfig: {\n      center: [632464, 185457],\n      zoom: 3,\n      resolutions: [250, 100, 50, 20, 10, 5, 2, 1, 0.5, 0.25, 0.1, 0.05]\n    }\n  }, $scope, $injector);\n\n  /**\n   * @type {Array.<string>}\n   * @export\n   */\n  this.searchCoordinatesProjections = [ngeoProjEPSG21781, ngeoProjEPSG2056, 'EPSG:4326'];\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.searchDelay = 500;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.showInfobar = true;\n\n  /**\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scaleSelectorValues = [250000, 100000, 50000, 20000, 10000, 5000, 2000, 1000, 500, 250, 100, 50];\n\n  /**\n   * @type {Array.<string>}\n   * @export\n   */\n  this.elevationLayers = ['srtm'];\n\n  /**\n   * @type {Object.<string, gmfx.ProfileLineConfiguration>}\n   * @export\n   */\n  this.profileLinesconfiguration = {\n    'srtm': {}\n  };\n\n  /**\n   * @type {Array.<gmfx.MousePositionProjection>}\n   * @export\n   */\n  this.mousePositionProjections = [{\n    code: 'EPSG:2056',\n    label: 'CH1903+ / LV95',\n    filter: 'ngeoNumberCoordinates::{x}, {y} m'\n  }, {\n    code: 'EPSG:21781',\n    label: 'CH1903 / LV03',\n    filter: 'ngeoNumberCoordinates::{x}, {y} m'\n  }, {\n    code: 'EPSG:4326',\n    label: 'WGS84',\n    filter: 'ngeoDMSCoordinates:2'\n  }];\n\n  /**\n   * @type {gmfx.GridMergeTabs}\n   * @export\n   */\n  this.gridMergeTabs = {\n    'OSM_time_merged': ['osm_time', 'osm_time2'],\n    'transport (merged)': ['fuel', 'parking'],\n    'Learning [merged]': ['information', 'bus_stop']\n  };\n\n  // Allow angular-gettext-tools to collect the strings to translate\n  /** @type {angularGettext.Catalog} */\n  const gettextCatalog = $injector.get('gettextCatalog');\n  gettextCatalog.getString('OSM_time_merged');\n  gettextCatalog.getString('OSM_time (merged)');\n  gettextCatalog.getString('Learning [merged]');\n  gettextCatalog.getString('Add a theme');\n  gettextCatalog.getString('Add a sub theme');\n  gettextCatalog.getString('Add a layer');\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.bgOpacityOptions = 'Test aus Olten';\n};\n\nolBase.inherits(exports, gmfControllersAbstractDesktopController);\n\n\n/**\n * @param {jQuery.Event} event keydown event.\n * @export\n */\nexports.prototype.onKeydown = function(event) {\n  if (event.ctrlKey && event.key === 'p') {\n    this.printPanelActive = true;\n    event.preventDefault();\n  }\n};\n\n\nexports.module = angular.module('Appdesktop_alt', [\n  appBase.module.name,\n  gmfControllersAbstractDesktopController.module.name,\n  gmfImportModule.name,\n  ngeoRoutingModule.name,\n  ngeoGooglestreetviewModule.name,\n]);\n\nexports.module.controller('AlternativeDesktopController', exports);\n\nexport default exports;\n","module.exports = \"<div class=ngeo-routing> <div class=\\\"ngeo-routing-start form-group\\\"> <ngeo-routing-feature ngeo-routing-feature-map=$ctrl.map ngeo-routing-feature-feature=$ctrl.startFeature_ ngeo-routing-feature-fill-color=\\\"$ctrl.colors['start.fill']\\\" ngeo-routing-feature-stroke-color=\\\"$ctrl.colors['start.stroke']\\\" ngeo-routing-feature-on-change=$ctrl.handleChange> </ngeo-routing-feature> </div> <div class=\\\"ngeo-routing-vias form-group\\\" ng-repeat=\\\"(index, via) in $ctrl.viaArray\\\"> <div class=form-inline> <div class=form-group> <ngeo-routing-feature ngeo-routing-feature-map=$ctrl.map ngeo-routing-feature-feature=via.feature ngeo-routing-feature-fill-color=\\\"$ctrl.colors['via.fill']\\\" ngeo-routing-feature-stroke-color=\\\"$ctrl.colors['via.stroke']\\\" ngeo-routing-feature-on-change=$ctrl.handleChange> </ngeo-routing-feature> </div> <button type=button class=\\\"btn btn-primary delete-via\\\" ng-click=$ctrl.deleteVia(index)> <span class=\\\"fa fa-trash-o\\\"></span> </button> </div> </div> <div class=\\\"ngeo-routing-destination form-group\\\"> <ngeo-routing-feature ngeo-routing-feature-map=$ctrl.map ngeo-routing-feature-feature=$ctrl.targetFeature_ ngeo-routing-feature-fill-color=\\\"$ctrl.colors['destination.fill']\\\" ngeo-routing-feature-stroke-color=\\\"$ctrl.colors['destination.stroke']\\\" ngeo-routing-feature-on-change=$ctrl.handleChange> </ngeo-routing-feature> </div> <div class=\\\"form-group pull-right\\\"> <button type=button class=\\\"btn btn-primary\\\" ng-click=$ctrl.clearRoute()> <span class=\\\"fa fa-trash-o\\\"></span> <span translate>Clear</span> </button> <button type=button class=\\\"btn btn-primary\\\" ng-click=$ctrl.reverseRoute()> <span class=\\\"fa fa-exchange\\\"></span> <span translate>Reverse</span> </button> <button type=button class=\\\"btn btn-primary\\\" ng-click=$ctrl.addVia()> <span class=\\\"fa fa-plus\\\"></span> <span translate>Add via</span> </button> </div> <div class=clearfix></div> <div class=form-horizontal ng-if=\\\"$ctrl.routingProfiles.length > 1\\\"> <div class=form-group> <label class=\\\"control-label col-md-4\\\" translate>Profile</label> <div class=col-md-8> <select class=form-control ng-model=$ctrl.selectedRoutingProfile> <option ng-repeat=\\\"profile in $ctrl.routingProfiles\\\" ng-value=profile>{{profile.label}}</option> </select> </div> </div> </div> <div class=\\\"ngeo-routing-error form-group clearfix\\\" ng-hide=\\\"$ctrl.errorMessage === ''\\\"> {{$ctrl.errorMessage}} </div> <div class=clearfix></div> <div class=form-horizontal ng-hide=\\\"$ctrl.routeDuration === null && $ctrl.routeDistance <= 0\\\"> <div class=row> <div class=col-md-12> <strong translate>Route statistics</strong> </div> </div> <div class=row ng-hide=\\\"$ctrl.routeDuration === null\\\"> <div class=\\\"col-md-4 text-right\\\" translate> Duration </div> <div class=col-md-8> {{$ctrl.routeDuration | ngeoDuration}} </div> </div> <div class=row ng-hide=\\\"$ctrl.routeDistance <= 0\\\"> <div class=\\\"col-md-4 text-right\\\" translate> Distance </div> <div class=col-md-8> {{$ctrl.routeDistance | ngeoUnitPrefix:'m'}} </div> </div> </div> </div> \";","module.exports = \"<div class=ngeo-routing-feature> <div class=input-group> <ngeo-nominatim-input ngeo-nominatim-input-value=$ctrl.featureLabel ngeo-nominatim-input-placeholder=\\\"{{'Search...' | translate}}\\\" ngeo-nominatim-input-on-select=$ctrl.onSelect> </ngeo-nominatim-input> <div class=\\\"input-group-addon btn\\\" ng-click=$ctrl.set()> <span class=\\\"fa fa-map-marker\\\"></span> </div> </div> </div> \";","module.exports = \"<div class=ngeo-nominatim-input> <input type=text class=form-control placeholder={{$ctrl.placeholder}} ng-model=$ctrl.inputValue ngeo-search=$ctrl.options ngeo-search-datasets=$ctrl.datasets ngeo-search-listeners=$ctrl.listeners> </div> \";","module.exports = \"<div class=ngeo-googlestreetview-instructions ng-if=\\\"$ctrl.location === null\\\" translate> Click on a road on the map to start StreetView. </div> <div class=ngeo-googlestreetview-nodata ng-if=$ctrl.noDataAtLocation translate> Street View data not found for this location. </div> \";","module.exports = \"<div class=form-group> <select class=form-control ng-model=$ctrl.mode ng-options=\\\"mode | translate for mode in $ctrl.modes\\\"> </select> </div> <div> <form name=idsl_form novalidate ng-show=\\\"$ctrl.mode === 'Local'\\\"> <div class=form-group> <div class=\\\"input-group input-group-sm\\\"> <input name=file type=file required/> <input class=form-control placeholder=\\\"{{'No file' | translate}}\\\" readonly=readonly type=text value={{$ctrl.fileNameAndSize}} ng-click=$ctrl.browse() /> <span class=input-group-btn> <button class=\\\"btn btn-default\\\" type=button ng-click=$ctrl.browse() translate>Browse</button> </span> </div> </div> <div class=form-group> <button class=\\\"btn btn-sm btn-default form-control\\\" title=\\\"{{'Load a file from local' | translate}}\\\" type=submit ng-click=\\\"idsl_form.$valid && $ctrl.load()\\\" ng-disabled=\\\"$ctrl.file === undefined\\\"> <span>{{'Load local file' | translate}}</span> </button> </div> </form> <form name=idsc_form novalidate ng-show=\\\"$ctrl.mode === 'Online'\\\"> <div class=\\\"form-group gmf-importdatasource-url-form-group\\\"> <input autocomplete=off class=form-control name=url placeholder=\\\"{{'Choose or enter online resource URL' | translate}}\\\" required type=url ng-disabled=$ctrl.pending ng-model=$ctrl.url /> </div> <div class=form-group> <button class=\\\"btn btn-sm btn-default form-control gmf-importdatasource-connect-btn\\\" title=\\\"{{'Connect to online resource' | translate}}\\\" type=submit ng-click=\\\"idsc_form.$valid && $ctrl.connect()\\\" ng-disabled=\\\"idsc_form.$invalid || $ctrl.pending\\\"> <span ng-if=$ctrl.pending>{{'Connecting, please wait...' | translate}}</span> <span ng-if=\\\"!$ctrl.pending && $ctrl.hasError\\\">{{'Failed to connect' | translate}}</span> <span ng-if=\\\"!$ctrl.pending && !$ctrl.hasError\\\">{{'Connect' | translate}}</span> </button> </div> </form> </div> <div class=gmf-importdatasource-layers ng-if=\\\"$ctrl.wmsCapabilities !== null || $ctrl.wmtsCapabilities !== null\\\"> <hr/> <gmf-wmscapabilitylayertreenode capabilities=::$ctrl.wmsCapabilities layer=::$ctrl.wmsCapabilities.Capability.Layer url=::$ctrl.url ng-if=\\\"$ctrl.wmsCapabilities !== null\\\"> </gmf-wmscapabilitylayertreenode> <gmf-wmtscapabilitylayertree capabilities=::$ctrl.wmtsCapabilities layers=::$ctrl.wmtsCapabilities.Contents.Layer url=::$ctrl.url ng-if=\\\"$ctrl.wmtsCapabilities !== null\\\"> </gmf-wmtscapabilitylayertree> </div> \";","module.exports = \"<ul> <li ng-repeat=\\\"layer in ::$ctrl.layers\\\"> <div class=gmf-wmscapabilitylayertreenode-header> <span class=gmf-wmscapabilitylayertreenode-popover-container ngeo-popover ngeo-popover-dismiss=.content ngeo-popover-placement=left> <span ngeo-popover-anchor class=\\\"fa fa-cog gmf-wmscapabilitylayertreenode-actions\\\"> </span> <div class=gmf-wmscapabilitylayertreenode-popover-content ngeo-popover-content> <ul> <li> <i class=\\\"fa fa-plus fa-fw\\\"></i> <a href=\\\"\\\" ng-click=\\\"$ctrl.createAndAddDataSource(layer); popoverCtrl.dismissPopover()\\\"> <span translate>Add layer</span> </a> </li> <li ng-if=\\\"::(layer.Abstract !== undefined)\\\"> <i class=\\\"fa fa-th-list fa-fw\\\"></i> <a aria-expanded=false data-toggle=collapse href=#gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}} ng-click=popoverCtrl.dismissPopover()> <span translate>Open/Close description</span> </a> </li> </ul> </div> </span> <a class=\\\"fa fa-circle-thin gmf-wmscapabilitylayertreenode-no-icon fa-fw\\\"></a> <span class=gmf-wmscapabilitylayertreenode-title>{{ ::layer.Title }}</span> <div class=\\\"collapse gmf-wmscapabilitylayertreenode-description\\\" id=gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}} ng-if=\\\"::(layer.Abstract !== undefined)\\\"> <a aria-expanded=false class=gmf-wmscapabilitylayertreenode-description-toggle data-toggle=collapse href=#gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}}> <span translate>Hide description</span> </a> <span class=gmf-wmscapabilitylayertreenode-description-content>{{ ::layer.Abstract }}</span> </div> </div> </li> </ul> \";","module.exports = \"<ul> <li ng-repeat=\\\"layer in ::$ctrl.layer.Layer\\\"> <div class=gmf-wmscapabilitylayertreenode-header> <span class=gmf-wmscapabilitylayertreenode-popover-container ng-if=\\\"::(layer.Name !== undefined || layer.Abstract !== undefined)\\\" ngeo-popover ngeo-popover-dismiss=.content ngeo-popover-placement=left> <span ngeo-popover-anchor class=\\\"fa fa-cog gmf-wmscapabilitylayertreenode-actions\\\"> </span> <div class=gmf-wmscapabilitylayertreenode-popover-content ngeo-popover-content> <ul> <li ng-if=\\\"::(layer.Name !== undefined)\\\"> <i class=\\\"fa fa-plus fa-fw\\\"></i> <a href=\\\"\\\" ng-click=\\\"$ctrl.createAndAddDataSource(layer); popoverCtrl.dismissPopover()\\\"> <span translate>Add layer</span> </a> </li> <li ng-if=\\\"::(layer.Abstract !== undefined)\\\"> <i class=\\\"fa fa-th-list fa-fw\\\"></i> <a aria-expanded=false data-toggle=collapse href=#gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}} ng-click=popoverCtrl.dismissPopover()> <span translate>Open/Close description</span> </a> </li> </ul> </div> </span> <a aria-expanded=false class=\\\"fa gmf-wmscapabilitylayertreenode-expand-node fa-fw\\\" data-toggle=collapse href=#gmf-wmscapabilitylayertreenode-children-{{::$ctrl.getUid(layer)}} ng-if=\\\"::(layer.Layer !== undefined && layer.Layer.length)\\\"></a> <span ng-if=\\\"::(layer.Layer !== undefined && layer.Layer.length)\\\" class=\\\"fa fa-fw gmf-wmscapabilitylayertreenode-group\\\"> </span> <a class=\\\"fa fa-circle-thin gmf-wmscapabilitylayertreenode-no-icon fa-fw\\\" ng-if=\\\"::(layer.Layer === undefined || layer.Layer.length === 0)\\\"></a> <span class=gmf-wmscapabilitylayertreenode-title>{{ ::layer.Title }}</span> <div class=\\\"collapse gmf-wmscapabilitylayertreenode-description\\\" id=gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}} ng-if=\\\"::(layer.Abstract !== undefined)\\\"> <a aria-expanded=false class=gmf-wmscapabilitylayertreenode-description-toggle data-toggle=collapse href=#gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}}> <span translate>Hide description</span> </a> <span class=gmf-wmscapabilitylayertreenode-description-content>{{ ::layer.Abstract }}</span> </div> </div> <gmf-wmscapabilitylayertreenode class=collapse id=gmf-wmscapabilitylayertreenode-children-{{::$ctrl.getUid(layer)}} capabilities=::$ctrl.capabilities layer=::layer ng-if=\\\"::(layer.Layer !== undefined)\\\"> </gmf-wmscapabilitylayertreenode> </li> </ul> \";","module.exports = \"<div class=\\\"text-center btn-group dropup\\\" gmf-elevation gmf-elevation-active=ctrl.active gmf-elevation-elevation=ctrl.elevationValue gmf-elevation-loading=ctrl.elevationLoading gmf-elevation-layer=ctrl.selectedElevationLayer gmf-elevation-map=::ctrl.map> <a type=button class=\\\"btn btn-default\\\" aria-expanded=false ng-class=\\\"::{'dropdown-toggle': ctrl.layers.length > 1}\\\" ng-attr-data-toggle=\\\"{{::(ctrl.layers.length > 1) ? 'dropdown' : ''}}\\\"> <span class=gmf-elevationwidget-value> {{ctrl.elevationValue | number}}<span ng-show=ctrl.elevationValue> m</span> <span ng-show=ctrl.elevationLoading class=\\\"fa fa-spinner\\\"></span> <span ng-show=\\\"!ctrl.elevationValue && !ctrl.elevationLoading\\\" translate>Elevation…</span> </span><span class=caret ng-if=\\\"::ctrl.layers.length > 1\\\"></span> </a> <ul class=\\\"dropdown-menu dropdown-menu-right\\\" role=menu ng-if=\\\"::ctrl.layers.length > 1\\\"> <li class=dropdown-header translate>Elevation data sources</li> <li ng-repeat=\\\"elevationItem in ::ctrl.layers\\\"> <a href ng-click=\\\"ctrl.selectedElevationLayer = elevationItem\\\"> <span class=\\\"fa fa-fw\\\" ng-class=\\\"{'fa-check': ctrl.selectedElevationLayer === elevationItem}\\\"></span> {{::elevationItem | translate}} </a> </li> </ul> </div> \";","module.exports = \"<div class=\\\"gmf-profile-container panel\\\" ng-show=ctrl.active> <div class=ngeo-profile ng-show=!ctrl.isErrored ngeo-profile=ctrl.profileData ngeo-profile-highlight=ctrl.profileHighlight ngeo-profile-options=::ctrl.profileOptions> </div> <ul class=gmf-profile-legend ng-show=!ctrl.isErrored> <li ng-repeat=\\\"name in ::ctrl.getLayersNames()\\\"> <i class=\\\"fa fa-minus\\\" style=color:{};></i> &nbsp;{{name | translate}}&nbsp;{{ctrl.currentPoint.elevations[name]}}&nbsp;{{ctrl.currentPoint.yUnits}} </li> </ul> <div class=\\\"gmf-profile-export btn-group dropup\\\" ng-show=!ctrl.isErrored> <a class=dropdown-toggle href=\\\"\\\" ng-show=\\\"ctrl.profileData.length !== 0\\\" data-toggle=dropdown aria-expanded=false> {{'Export' | translate}}&nbsp;<i class=\\\"fa fa-caret-up\\\"></i> </a> <ul class=\\\"dropdown-menu dropdown-menu-right\\\" role=menu> <li> <a href=\\\"\\\" ng-click=::ctrl.downloadCsv()> <i class=\\\"fa fa-table\\\"></i>&nbsp;{{'Download CSV' | translate}}</a> </li> </ul> </div> <div class=gmf-profile-error ng-show=ctrl.isErrored> <p>{{'The profile service does not respond, please try later.' | translate}}</p> </div> <div class=close ng-click=\\\"ctrl.line = null\\\">&times;</div> </div> \";","module.exports = \"<div class=gmf-print> <div ng-show=\\\"$ctrl.isState('CAPABILITIES_NOT_LOADED') !== true && $ctrl.isState('ERROR_ON_GETCAPABILITIES') !== true\\\"> <div class=\\\"gmf-print-layout-selector form-horizontal\\\"><ng-transclude/></div> <div ng-repeat=\\\"attribute in $ctrl.layoutInfo.simpleAttributes\\\" class=\\\"gmf-print-layoutinfo form-group\\\"> <div ng-if=\\\"$ctrl.hiddenAttributeNames === undefined || $ctrl.hiddenAttributeNames.indexOf(attribute.name) < 0\\\"> <input ng-if=\\\"attribute.type === 'number'\\\" ng-model=attribute.value class=form-control type=number ng-attr-placeholder=\\\"{{attribute.name | translate}}\\\"> <input ng-if=\\\"attribute.type === 'text'\\\" ng-model=attribute.value class=form-control type=text ng-attr-placeholder=\\\"{{attribute.name | translate}}\\\"> <textarea ng-if=\\\"attribute.type === 'textarea'\\\" ng-model=attribute.value class=form-control row=3 ng-attr-placeholder=\\\"{{attribute.name | translate}}\\\"></textarea> <div ng-if=\\\"attribute.type === 'checkbox'\\\" class=checkbox> <label> <input ng-model=attribute.value type=checkbox> <span>{{attribute.name | translate}}</span> </label> </div> </div> </div> <div ng-show=\\\"$ctrl.layoutInfo.legend !== undefined\\\" class=\\\"gmf-print-legend checkbox\\\"> <label> <input ng-model=$ctrl.layoutInfo.legend type=checkbox> <span translate>Legend</span> </label> </div> <div class=\\\"gmf-print-layout-selector form-horizontal\\\"> <div ng-show=\\\"$ctrl.layoutInfo.layouts.length !== 1\\\" class=form-group> <label class=\\\"control-label col-md-5\\\" translate>Layout</label> <div class=col-md-7> <div class=\\\"btn-group btn-block\\\"> <button type=button class=\\\"btn btn-default form-control\\\" data-toggle=dropdown> <span>{{$ctrl.layoutInfo.layout | translate}}&nbsp;</span> <i class=\\\"fa fa-caret-down\\\"></i> </button> <ul class=\\\"dropdown-menu dropdown-menu-right btn-block\\\" role=menu> <li ng-repeat=\\\"layout in $ctrl.layoutInfo.layouts\\\"> <a ng-click=$ctrl.setLayout(layout) href=\\\"\\\">{{layout | translate}}</a> </li> </ul> </div> </div> </div> <div ng-show=\\\"$ctrl.layoutInfo.scales.length !== 1\\\" class=\\\"gmf-print-scale-selector form-group\\\"> <label class=\\\"control-label col-md-5\\\" translate>Scale</label> <div class=col-md-7> <div class=\\\"btn-group btn-block\\\"> <button type=button class=\\\"btn btn-default form-control\\\" data-toggle=dropdown aria-expanded=false> <span>{{$ctrl.layoutInfo.scale | ngeoScalify}}&nbsp;</span> <i class=\\\"fa fa-caret-down\\\"></i> </button> <ul class=\\\"dropdown-menu dropdown-menu-right btn-block\\\" role=menu> <li ng-repeat=\\\"scale in $ctrl.layoutInfo.scales\\\"> <a ng-click=$ctrl.getSetScale(scale) href=\\\"\\\">{{scale | ngeoScalify}}</a> </li> <span ng-if=$ctrl.scaleInput> <li class=dropdown-header translate>Manual entry</li> <li> <div class=gmf-print-custom-scale> 1 : <input class=gmf-print-custom-scale-input type=number min=1 ng-model=$ctrl.getSetScale ng-model-options=\\\"{getterSetter: true}\\\"> </div> </li> </span> </ul> </div> </div> </div> <div ng-show=\\\"$ctrl.layoutInfo.dpis.length !== 1\\\" class=\\\"gmf-print-dpi-selector form-group\\\"> <label class=\\\"control-label col-md-3\\\" translate>DPI</label> <div class=col-md-5> <div class=\\\"btn-group btn-block\\\"> <button type=button class=\\\"btn btn-default form-control\\\" data-toggle=dropdown aria-expanded=false> <span>{{$ctrl.layoutInfo.dpi}}&nbsp;</span> <i class=\\\"fa fa-caret-down\\\"></i> </button> <ul class=\\\"dropdown-menu dropdown-menu-right btn-block\\\" role=menu> <li ng-repeat=\\\"dpi in $ctrl.layoutInfo.dpis\\\"> <a href=\\\"\\\" ng-click=$ctrl.setDpi(dpi)>{{dpi}}</a> </li> </ul> </div> </div> </div> <div class=\\\"gmf-print-rotation-selector form-group\\\"> <label class=\\\"control-label col-md-3\\\" translate>Rotation</label> <div class=col-md-5> <input class=\\\"form-control gmf-print-rotation-input\\\" type=range value=0 min=-180 max=180 data-toggle=tooltip title=\\\"{{'You can also use Alt+Shift on the map' | translate}}\\\"> </div> <div class=col-md-4> <input class=\\\"form-control gmf-print-rotation-input\\\" type=number min=-180 max=180 value=0> </div> </div> </div> <div class=\\\"gmf-print-actions form-group pull-right\\\"> <span ng-show=\\\"$ctrl.isState('PRINTING')\\\"> <i class=\\\"fa fa-refresh fa-spin\\\"></i> </span> <a ng-show=\\\"$ctrl.isState('PRINTING')\\\" class=\\\"gmf-print-cancel btn btn-link\\\" href=\\\"\\\" ng-click=$ctrl.cancel() translate>Abort</a> <button ng-show=$ctrl.layoutInfo.formats.png class=\\\"gmf-print-image btn btn-primary\\\" ng-disabled=\\\"$ctrl.isState('PRINTING')\\\" ng-click=\\\"$ctrl.print('png')\\\" translate>Image</button> <button ng-show=$ctrl.layoutInfo.formats.pdf class=\\\"gmf-print-pdf btn btn-primary\\\" ng-disabled=\\\"$ctrl.isState('PRINTING')\\\" ng-click=\\\"$ctrl.print('pdf')\\\" translate>PDF</button> </div> <div ng-show=\\\"$ctrl.isState('ERROR_ON_REPORT')\\\" class=\\\"gmf-print-error-report form-group pull-left text-danger\\\"> <p>{{'Error during the print, please try again.' | translate}}</p> </div> </div> <div ng-show=\\\"$ctrl.isState('CAPABILITIES_NOT_LOADED')\\\" class=\\\"gmf-print-wait form-group pull-left\\\"> <p>{{'Connecting to the print server, please wait.' | translate}}</p> </div> <div ng-show=\\\"$ctrl.isState('ERROR_ON_GETCAPABILITIES')\\\" class=\\\"gmf-print-error-capabilities form-group pull-left text-danger\\\"> <p>{{'The print server is unavailable. Please, try later.' | translate}}</p> </div> </div> \";","module.exports = \"<div ng-switch=efsCtrl.selectedEditableTreeCtrl> <div ng-switch-when=null> <select class=form-control ng-model=efsCtrl.selectedEditableTreeCtrl ng-show=\\\"efsCtrl.editableTreeCtrls.length > 0\\\" ng-options=\\\"treeCtrl.node.name | translate for treeCtrl in efsCtrl.editableTreeCtrls\\\"> <option value=\\\"\\\" translate>-- Choose a layer --</option> </select> <span ng-show=\\\"efsCtrl.editableTreeCtrls.length == 0\\\" translate>No editable layer available!</span> </div> <div ng-switch-default> <div class=row> <div class=col-sm-12> <span translate>Currently editing: </span> <b>{{ efsCtrl.selectedEditableTreeCtrl.node.name | translate }}</b> <span class=\\\"fa fa-pencil\\\"></span> <br> <button ng-click=efsCtrl.stopEditing() class=\\\"btn btn-link btn-xs pull-right\\\"> <span class=\\\"fa fa-times\\\"></span> {{'Stop editing' | translate}} </button> </div> </div> <gmf-editfeature gmf-editfeature-dirty=efsCtrl.dirty gmf-editfeature-editabletreectrl=::efsCtrl.selectedEditableTreeCtrl gmf-editfeature-map=::efsCtrl.map gmf-editfeature-state=efsCtrl.state gmf-editfeature-tolerance=::efsCtrl.tolerance gmf-editfeature-vector=::efsCtrl.vectorLayer> </gmf-editfeature> </div> </div> \";","module.exports = \"<div> <div ng-switch=efCtrl.feature> <a ng-switch-when=null ng-if=efCtrl.geomType href ngeo-btn ngeo-createfeature ngeo-createfeature-active=efCtrl.createActive ngeo-createfeature-features=::efCtrl.features ngeo-createfeature-geom-type=::efCtrl.geomType ngeo-createfeature-map=::efCtrl.map class=\\\"btn btn-default\\\" ng-class=\\\"{active: efCtrl.createActive}\\\" ng-model=efCtrl.createActive> <span ng-switch=::efCtrl.geomType> <span ng-switch-when=Point> <span class=\\\"gmf-icon gmf-icon-point\\\"></span> {{'Draw new point' | translate}} </span> <span ng-switch-when=MultiPoint> <span class=\\\"gmf-icon gmf-icon-point\\\"></span> {{'Draw new point' | translate}} </span> <span ng-switch-when=LineString> <span class=\\\"gmf-icon gmf-icon-line\\\"></span> {{'Draw new linestring' | translate}} </span> <span ng-switch-when=MultiLineString> <span class=\\\"gmf-icon gmf-icon-line\\\"></span> {{'Draw new linestring' | translate}} </span> <span ng-switch-when=Polygon> <span class=\\\"gmf-icon gmf-icon-polygon\\\"></span> {{'Draw new polygon' | translate}} </span> <span ng-switch-when=MultiPolygon> <span class=\\\"gmf-icon gmf-icon-polygon\\\"></span> {{'Draw new polygon' | translate}} </span> </span> </a> <div ng-switch-default> <form novalidate name=form class=\\\"form gmf-editfeature-attributes-container\\\" ng-if=efCtrl.attributes> <div class=row> <div class=col-sm-12> <a class=close ng-click=efCtrl.cancel() ng-disabled=efCtrl.pending title=\\\"{{'Cancel modifications' | translate}}\\\" href>&times;</a> </div> </div> <ngeo-attributes ngeo-attributes-attributes=::efCtrl.attributes ngeo-attributes-disabled=efCtrl.pending ngeo-attributes-feature=::efCtrl.feature> </ngeo-attributes> <input type=submit value=\\\"{{'Save' | translate}}\\\" class=\\\"btn btn-sm btn-default gmf-editfeature-btn-save\\\" ng-click=\\\"form.$valid && efCtrl.save()\\\" ng-disabled=\\\"!efCtrl.dirty || efCtrl.pending\\\" title=\\\"{{'Save modifications' | translate}}\\\"> <a class=\\\"btn btn-sm btn-default gmf-editfeature-btn-cancel\\\" ng-click=efCtrl.confirmCancel() ng-disabled=efCtrl.pending title=\\\"{{'Cancel modifications' | translate}}\\\" href>{{'Cancel' | translate}}</a> <button class=\\\"btn btn-sm btn-link gmf-editfeature-btn-delete\\\" ng-click=efCtrl.delete() ng-disabled=efCtrl.pending ng-show=efCtrl.featureId title=\\\"{{'Delete this feature' | translate}}\\\"> <span class=\\\"fa fa-trash\\\"></span> {{'Delete' | translate}} </button> </form> </div> </div> <ngeo-modal ng-model=efCtrl.unsavedModificationsModalShown> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title> {{'Unsaved modifications!' | translate}} </h4> </div> <div class=modal-body> {{'There are unsaved changes.' | translate}} </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal ng-click=efCtrl.continueWithoutSaving()> {{'Continue without saving' | translate}} </button> <button type=button class=\\\"btn btn-primary\\\" data-dismiss=modal> {{'Cancel' | translate}} </button> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal ng-click=efCtrl.submit()> {{'Save' | translate}} </button> </div> </ngeo-modal> <ngeo-modal ng-model=efCtrl.showServerError> <div class=modal-header>{{'Server error.' | translate}}</div> <div class=modal-body>{{$parent.efCtrl.serverErrorType}}<br> {{$parent.efCtrl.serverErrorMessage || ('Unexpected server error.' | translate)}}</div> </ngeo-modal> </div> \";","module.exports = \"<fieldset ng-disabled=attrCtrl.disabled> <div class=form-group ng-repeat=\\\"attribute in ::attrCtrl.attributes\\\"> <div ng-if=\\\"attribute.type !== 'geometry'\\\"> <label ng-if=\\\"::attribute.type !== 'boolean'\\\" class=control-label>{{ ::attribute.name | translate }} <span class=text-muted>{{::attribute.required ? \\\"*\\\" : \\\"\\\"}}</span> </label> <div ng-switch=::attribute.type> <div ng-switch-when=boolean class=checkbox> <label> <input name={{::attribute.name}} ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); type=checkbox>  <span> {{ ::attribute.name | translate }} <span class=text-muted>{{::attribute.required ? \\\"*\\\" : \\\"\\\"}}</span></span> </label> </div> <select name={{::attribute.name}} ng-required=attribute.required ng-switch-when=select ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); class=form-control type=text> <option ng-repeat=\\\"attribute in ::attribute.choices\\\" value=\\\"{{ ::attribute }}\\\"> {{ ::attribute }} </option> </select> <input name={{::attribute.name}} ng-required=attribute.required ng-switch-when=date ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); ngeo-datetimepicker ngeo-datetimepicker-options=\\\"'{&quot;timepicker&quot;: false, &quot;format&quot;: &quot;' + attribute.format + '&quot;, &quot;allowBlank&quot;: true, &quot;todayButton&quot;: false, &quot;mask&quot;: &quot;' + attribute.mask + '&quot;}'\\\" class=form-control type=text>  <input name={{::attribute.name}} id=time ng-required=attribute.required ng-switch-when=time ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); ngeo-datetimepicker ngeo-datetimepicker-options=\\\"'{&quot;datepicker&quot;: false, &quot;format&quot;: &quot;' + attribute.format + '&quot;, &quot;todayButton&quot;: false, &quot;mask&quot;: &quot;' + attribute.mask + '&quot;, &quot;defaultTime&quot;: &quot;00:00&quot;}'\\\" class=form-control type=text>  <input name={{::attribute.name}} ng-required=attribute.required ng-switch-when=datetime ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); ngeo-datetimepicker ngeo-datetimepicker-options=\\\"'{&quot;scrollTime&quot;: false, &quot;format&quot;: &quot;' + attribute.format + '&quot;, &quot;allowBlank&quot;: true, &quot;todayButton&quot;: false, &quot;mask&quot;: &quot;' + attribute.mask + '&quot;, &quot;defaultTime&quot;: &quot;00:00&quot;}'\\\" class=form-control type=text>  <div ng-switch-when=number ng-switch=::attribute.numType> <input name={{::attribute.name}} ng-required=attribute.required ng-switch-when=integer ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); class=form-control step=1 type=number>  <input name={{::attribute.name}} ng-required=attribute.required ng-switch-default ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); class=form-control type=number>  </div> <input name={{::attribute.name}} ng-required=attribute.required ng-switch-default ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); ng-maxlength=attribute.maxLength class=form-control type=text>  <div ng-show=\\\"attrCtrl.form.$submitted || attrCtrl.form[attribute.name].$touched\\\"> <p class=text-danger ng-show=attrCtrl.form[attribute.name].$error.required> {{'This field is required' | translate}} </p> </div> </div> </div> </div> </fieldset> \";","module.exports = \"<ngeo-drawfeature ngeo-btn-group class=btn-group ngeo-drawfeature-active=efCtrl.drawActive ngeo-drawfeature-map=efCtrl.map ngeo-drawfeature-showmeasure=efCtrl.showMeasure> <a data-toggle=tooltip title=\\\"{{'Draw a point on the map' | translate}}\\\" href ngeo-btn ngeo-drawpoint class=\\\"btn btn-default ngeo-drawfeature-point\\\" ng-class=\\\"{active: dfCtrl.drawPoint.active}\\\" ng-model=dfCtrl.drawPoint.active> <span class=\\\"gmf-icon gmf-icon-point\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a line on the map' | translate}}\\\" href ngeo-btn ngeo-measurelength class=\\\"btn btn-default ngeo-drawfeature-linestring\\\" ng-class=\\\"{active: dfCtrl.measureLength.active}\\\" ng-model=dfCtrl.measureLength.active> <span class=\\\"gmf-icon gmf-icon-line\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a polygon on the map' | translate}}\\\" href ngeo-btn ngeo-measurearea class=\\\"btn btn-default ngeo-drawfeature-polygon\\\" ng-class=\\\"{active: dfCtrl.measureArea.active}\\\" ng-model=dfCtrl.measureArea.active> <span class=\\\"gmf-icon gmf-icon-polygon\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a circle on the map' | translate}}\\\" href ngeo-btn ngeo-measureazimut class=\\\"btn btn-default ngeo-drawfeature-circle\\\" ng-class=\\\"{active: dfCtrl.measureAzimut.active}\\\" ng-model=dfCtrl.measureAzimut.active> <span class=\\\"gmf-icon gmf-icon-circle\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a rectangle on the map' | translate}}\\\" href ngeo-btn ngeo-drawrectangle class=\\\"btn btn-default ngeo-drawfeature-rectangle\\\" ng-class=\\\"{active: dfCtrl.drawRectangle.active}\\\" ng-model=dfCtrl.drawRectangle.active> <span class=\\\"gmf-icon gmf-icon-rectangle\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a text label on the map' | translate}}\\\" href ngeo-btn ngeo-drawtext class=\\\"btn btn-default ngeo-drawfeature-text\\\" ng-class=\\\"{active: dfCtrl.drawText.active}\\\" ng-model=dfCtrl.drawText.active> <span class=\\\"gmf-icon gmf-icon-text\\\"></span> </a> </ngeo-drawfeature> <div ng-switch=efCtrl.selectedFeature> <hr class=gmf-drawfeature-separator ng-show=\\\"efCtrl.getFeaturesArray().length > 0\\\"> <div ng-switch-when=null> <div ng-show=\\\"efCtrl.getFeaturesArray().length > 0\\\"> <div class=ngeo-drawfeature-actionbuttons> <button type=button data-toggle=dropdown aria-haspopup=true aria-expanded=false ngeo-exportfeatures ngeo-exportfeatures-features=efCtrl.features class=\\\"btn btn-link btn-sm\\\"> <span class=\\\"fa fa-mail-forward\\\"></span> {{'Export' | translate}} <span class=caret></span> </button> <button ng-click=efCtrl.clearFeatures() class=\\\"btn btn-link btn-xs\\\"> <span class=\\\"fa fa-trash\\\"></span> {{'Delete All' | translate}} </button> </div> <div class=gmf-eol></div> <div class=\\\"gmf-drawfeature-featurelist list-group list-group-sm\\\"> <button role=button class=list-group-item ng-repeat=\\\"feature in efCtrl.getFeaturesArray()\\\" ng-click=efCtrl.selectFeatureFromList(feature);> {{ feature.get(efCtrl.nameProperty) }} </button> </div> </div> </div> <div ng-switch-default> <button ng-click=\\\"efCtrl.selectedFeature = null;\\\" class=\\\"btn btn-link btn-xs\\\"> <span class=\\\"fa fa-arrow-left\\\"></span> {{'List' | translate}} </button> <div class=ngeo-drawfeature-actionbuttons> <button type=button data-toggle=dropdown aria-haspopup=true aria-expanded=false ngeo-exportfeatures ngeo-exportfeatures-features=efCtrl.selectedFeatures class=\\\"btn btn-link btn-xs\\\"> <span class=\\\"fa fa-mail-forward\\\"></span> {{'Export' | translate}} <span class=caret></span> </button> <button ng-click=efCtrl.removeFeature(efCtrl.selectedFeature); class=\\\"btn btn-link btn-xs\\\"> <span class=\\\"fa fa-trash\\\"></span> {{'Delete' | translate}} </button> </div> <div class=gmf-eol></div> <gmf-featurestyle gmf-featurestyle-feature=efCtrl.selectedFeature> </gmf-featurestyle> </div> </div> \";","module.exports = \"<div ng-if=\\\"fsCtrl.feature && fsCtrl.type\\\"> <div class=form-group> <input ng-model=fsCtrl.getSetName ng-model-options=\\\"{getterSetter: true}\\\" ng-attr-placeholder=\\\"{{'Name' | translate}}\\\" class=form-control /> </div> <div ng-if=\\\"fsCtrl.type !== 'Text'\\\" class=form-group> <input id=gmf-featurestyle-showlabel type=checkbox ng-model=fsCtrl.getSetShowLabel ng-model-options=\\\"{getterSetter: true}\\\"/> <label ng-switch=fsCtrl.type for=gmf-featurestyle-showlabel class=control-label> {{'Display label' | translate}} </label> </div> <div ng-if=\\\"fsCtrl.type !== 'Text'\\\" class=form-group> <input id=gmf-featurestyle-showmeasure type=checkbox ng-model=fsCtrl.getSetShowMeasure ng-model-options=\\\"{getterSetter: true}\\\"/> <label ng-switch=fsCtrl.type for=gmf-featurestyle-showmeasure class=control-label> <span ng-switch-when=Circle> {{'Display azimuth and radius' | translate}} </span> <span ng-switch-when=Polygon> {{'Display surface' | translate}} </span> <span ng-switch-when=Rectangle> {{'Display surface' | translate}} </span> <span ng-switch-when=LineString> {{'Display length' | translate}} </span> <span ng-switch-when=Point> {{'Display coordinates' | translate}} </span> </label> <em class=text-muted> ({{ fsCtrl.measure }}) </em> </div> </div> <div ng-if=\\\"fsCtrl.feature && fsCtrl.type\\\" class=form-horizontal> <div class=form-group> <div ngeo-colorpicker=\\\"\\\" ngeo-colorpicker-color=fsCtrl.color class=col-md-12> </div> </div> <div ng-if=\\\"fsCtrl.type === 'Point'\\\" class=\\\"form-group form-group-nomargin\\\"> <label class=\\\"control-label col-md-4\\\">{{'Size' | translate}}</label> <div class=col-md-8> <input type=range class=form-control min=3 max=20 step=1 ng-model=fsCtrl.getSetSize ng-model-options=\\\"{getterSetter: true}\\\"/> </div> </div> <div ng-if=\\\"fsCtrl.type === 'Text'\\\" class=\\\"form-group form-group-nomargin\\\"> <label class=\\\"control-label col-md-4\\\">{{'Size' | translate}}</label> <div class=col-md-8> <input type=range class=form-control min=8 max=30 step=1 ng-model=fsCtrl.getSetSize ng-model-options=\\\"{getterSetter: true}\\\"/> </div> </div> <div ng-if=\\\"fsCtrl.type === 'Circle' || fsCtrl.type === 'LineString' || fsCtrl.type === 'Polygon' || fsCtrl.type === 'Rectangle'\\\" class=\\\"form-group form-group-nomargin\\\"> <label class=\\\"control-label col-md-4\\\">{{'Stroke' | translate}}</label> <div class=col-md-8> <input type=range class=form-control min=0.5 max=5 step=0.5 ng-model=fsCtrl.getSetStroke ng-model-options=\\\"{getterSetter: true}\\\"/> </div> </div> <div ng-if=\\\"fsCtrl.type === 'Circle' || fsCtrl.type === 'Polygon' || fsCtrl.type === 'Rectangle'\\\" class=\\\"form-group form-group-nomargin\\\"> <label class=\\\"control-label col-md-4\\\">{{'Opacity' | translate}}</label> <div class=col-md-8> <input type=range class=form-control min=0 max=1 step=0.05 ng-model=fsCtrl.getSetOpacity ng-model-options=\\\"{getterSetter: true}\\\"/> </div> </div> <div ng-if=\\\"fsCtrl.type === 'Text'\\\" class=\\\"form-group form-group-nomargin\\\"> <label class=\\\"control-label col-md-4\\\">{{'Angle' | translate}}</label> <div class=col-md-8> <input type=range class=form-control min=-180 max=180 step=22.5 ng-model=fsCtrl.getSetAngle ng-model-options=\\\"{getterSetter: true}\\\"/> </div> </div> </div> \";","module.exports = \"<div class=ngeo-displaywindow ng-show=$ctrl.open ng-style=$ctrl.style> <div class=windowcontainer> <button type=button class=\\\"btn fa-close close\\\" ng-click=$ctrl.close()> </button> <div class=animation-container> <div class=slide-animation> <div class=\\\"header ui-draggable-handle\\\" ng-if=\\\"$ctrl.title !== null\\\"> <p class=title>{{ $ctrl.title }}</p> </div> <div class=details ng-if=$ctrl.content ng-bind-html=$ctrl.content> </div> <div class=details ng-if=\\\"$ctrl.url !== null\\\"> <iframe frameborder=0 type=text/html height=100% width=100% ng-src=\\\"{{ $ctrl.urlTrusted }}\\\"></iframe> </div> </div> </div> </div> </div> \";","module.exports = \"<ul class=gmf-theme-selector> <li ng-repeat=\\\"theme in $ctrl.themes\\\" ng-click=$ctrl.setTheme(theme) ng-class=\\\"{'gmf-theme-selector-active': $ctrl.gmfThemeManager.getThemeName() == theme.name}\\\"> <img class=gmf-thumb ng-src={{::theme.icon}} /> <span class=gmf-text>{{theme.name | translate}}</span> </li> </ul> \";","module.exports = \"<div class=gmf-search> <input type=text ng-attr-placeholder={{$ctrl.placeholder|translate}} class=form-control ng-model=$ctrl.inputValue ngeo-search=$ctrl.options ngeo-search-datasets=$ctrl.datasets ngeo-search-listeners=$ctrl.listeners> <span class=\\\"gmf-clear-button ng-hide\\\" ng-hide=\\\"!$ctrl.clearButton || $ctrl.inputValue == ''\\\" ng-click=$ctrl.onClearButton()> </span> </div> <span ng-if=$ctrl.colorChooser> <span ng-show=$ctrl.displayColorPicker ngeo-popover ngeo-popover-placement=bottom> <button class=\\\"gmf-color-button fa fa-tint\\\" ngeo-popover-anchor data-original-title=\\\"{{'Change the color of the search result'|translate}}\\\"></button> <div ngeo-popover-content> <div ngeo-colorpicker ngeo-colorpicker-color=$ctrl.color></div> </div> </span> </span> \";","module.exports = \"<table class=ngeo-colorpicker-palette> <tr ng-repeat=\\\"colors in ::ctrl.colors\\\"> <td ng-repeat=\\\"color in ::colors\\\" ng-click=ctrl.setColor(color) ng-class=\\\"{'ngeo-colorpicker-selected': color == ctrl.color}\\\"> <div ng-style=\\\"::{'background-color': color}\\\"></div> </td> </tr> </table> \";","module.exports = \"<div class=gmf-displayquerywindow ng-class=\\\"{'desktop': ctrl.desktop, 'mobile': !ctrl.desktop}\\\" ng-show=ctrl.open ngeo-swipe-up=\\\"ctrl.collapsed = false\\\" ngeo-swipe-down=\\\"ctrl.collapsed = true\\\" ngeo-swipe-disable-mouse ng-swipe-disable-mouse ng-swipe-left=ctrl.next() ng-swipe-right=ctrl.previous()> <button class=collapse-button type=button ng-show=::!ctrl.desktop ng-click=\\\"ctrl.collapsed = !ctrl.collapsed\\\" ng-class=\\\"[ctrl.collapsed ? 'collapse-button-up' : 'collapse-button-down']\\\"> </button> <div class=windowcontainer> <button type=button class=\\\"btn fa-close close\\\" ng-click=ctrl.close()> </button> <div class=animation-container ng-class=\\\"[ctrl.collapsed ? '' : 'animation-container-detailed', ctrl.isNext ? 'next' : 'previous']\\\"> <div ng-animate-swap=ctrl.animate class=\\\"slide-animation gmf-animatable\\\"> <div class=header> <p class=title>{{ctrl.source.label | translate}}</p> <p class=subtitle>{{ctrl.getFeatureValues()[ctrl.source.identifierAttributeField]}}</p> </div> <div class=details> <table> <tr ng-repeat=\\\"(key, value) in ctrl.getFeatureValues()\\\" ng-if=\\\"value !== undefined\\\"> <td class=details-key ng-bind-html=\\\"key | translate | ngeoTrustHtml\\\"></td> <td class=details-value ng-bind-html=\\\"value | ngeoTrustHtml\\\"></td> </tr> </table> </div> </div> </div> <div class=navigate> <div class=placeholder> <button type=button class=\\\"previous btn\\\" ng-disabled=ctrl.isFirst() ng-show=\\\"ctrl.getResultLength() > 1\\\" ng-click=ctrl.previous()> <span ng-show=::ctrl.desktop>{{'Prev.' | translate}}</span> </button> </div> <div class=results> <span ng-show=::!ctrl.desktop>{{'Result' | translate}}</span> <span>{{ctrl.currentResult + 1}}</span> <span>/</span> <span>{{ctrl.getResultLength()}}</span> <div ng-show=::ctrl.desktop class=dropup> <button type=button class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=dropdown aria-expanded=false> <span class=\\\"fa fa-filter\\\"></span> <span class=\\\"fa fa-caret-up\\\"></span> </button> <ul class=\\\"dropdown-menu dropdown-menu-right\\\" role=menu> <li> <a href=# ng-click=ctrl.setSelectedSource(null)> <i class=\\\"fa fa-fw\\\" ng-class=\\\"{'fa-check': ctrl.selectedSource === null}\\\"> </i> <span>{{'All layers' | translate}} ({{ctrl.ngeoQueryResult.total}})</span> </a> </li> <li role=separator class=divider> </li> <li ng-repeat-start=\\\"source in ctrl.ngeoQueryResult.sources | filter: ctrl.sourcesFilter\\\" ng-repeat-end ng-class=\\\"{'disabled': source.features.length <= 0}\\\"> <a href=# ng-click=ctrl.setSelectedSource(source)> <i class=\\\"fa fa-fw\\\" ng-class=\\\"{'fa-check': ctrl.selectedSource === source}\\\"> </i> <span>{{source.label | translate}} ({{source.features.length}})</span> </a> </li> </ul> </div> </div> <div class=placeholder> <button type=button class=\\\"next btn\\\" ng-disabled=ctrl.isLast() ng-show=\\\"ctrl.getResultLength() > 1\\\" ng-click=ctrl.next()> <span ng-show=::ctrl.desktop>{{'Next' | translate}}</span> </button> </div> </div> </div> </div> \";","module.exports = \"<div class=\\\"gmf-displayquerygrid panel\\\" ng-show=ctrl.active> <div class=close ng-click=ctrl.clear()> &times; </div> <ul class=\\\"nav nav-pills\\\" role=tablist> <li ng-repeat=\\\"gridSource in ctrl.getGridSources() track by gridSource.source.label\\\" role=presentation ng-class=\\\"{'active' : ctrl.isSelected(gridSource)}\\\" ng-click=ctrl.selectTab(gridSource)> <a href=#{{ctrl.escapeValue(gridSource.source.label)}} data-target=#{{ctrl.escapeValue(gridSource.source.label)}} aria-controls={{ctrl.escapeValue(gridSource.source.label)}} role=tab data-toggle=tab> <span ng-if=\\\"gridSource.source.tooManyResults !== true\\\"> {{gridSource.source.label | translate}} ({{gridSource.source.features.length}}) </span> <span ng-if=\\\"gridSource.source.tooManyResults === true\\\"> {{gridSource.source.label | translate}} ({{gridSource.source.totalFeatureCount}}*) </span> </a> </li> </ul> <div class=tab-content> <div ng-repeat=\\\"gridSource in ctrl.getGridSources() track by gridSource.source.label\\\" role=tabpanel class=tab-pane ng-class=\\\"{'active' : ctrl.isSelected(gridSource)}\\\" id={{ctrl.escapeValue(gridSource.source.label)}}> <ngeo-grid ngeo-grid-configuration=gridSource.configuration ng-if=\\\"gridSource.source.tooManyResults !== true\\\"> </ngeo-grid> <div ng-if=\\\"gridSource.source.tooManyResults === true\\\"> <div class=\\\"gmf-displayquerygrid-message alert alert-warning\\\"> <p><span translate>The results can not be displayed because the maximum number has been reached</span> ({{gridSource.source.limit}}).</p> <p translate>Please refine your query.</p> </div> </div> </div> </div> <div class=navbar ng-show=\\\"!ctrl.pending && ctrl.getActiveGridSource() && ctrl.getActiveGridSource().configuration !== null\\\"> <ul class=\\\"nav navbar-nav navbar-right\\\"> <li class=ng-hide ng-show=ctrl.isOneSelected()> <p class=\\\"navbar-text ng-binding\\\"> {{ctrl.getSelectedRowCount()}} <span translate>selected element(s)</span> </p> </li> <li ng-show=ctrl.isOneSelected() class=ng-hide> <button class=\\\"btn btn-link btn-xs\\\" title=\\\"{{'Zoom to selection' | translate}}\\\" ng-click=ctrl.zoomToSelection()> <i class=\\\"fa fa-search-plus\\\"></i> <span translate>Zoom to</span> </button> </li> <li ng-show=ctrl.isOneSelected() class=ng-hide> <button class=\\\"btn btn-link btn-xs\\\" title=\\\"{{'Export selection as CSV' | translate}}\\\" ng-click=ctrl.downloadCsv()> <i class=\\\"fa fa-download\\\"></i> <span translate>Export as CSV</span> </button> </li> <li class=\\\"dropdown navbar-link dropup\\\"> <button type=button class=\\\"dropup btn btn-default btn-xs\\\" data-toggle=dropdown aria-haspopup=true aria-expanded=false> <span translate>Select</span> <span class=caret></span> </button> <ul class=dropdown-menu aria-labelledby=dLabel> <li> <a href=\\\"\\\" ng-click=ctrl.selectAll() translate>All</a> </li> <li> <a href=\\\"\\\" ng-click=ctrl.unselectAll() translate>None</a> </li> <li> <a href=\\\"\\\" ng-click=ctrl.invertSelection() translate>Reverse selection</a> </li> </ul> </li> </ul> </div> <div ng-show=ctrl.pending class=gmf-displayquerygrid-pending> <span class=\\\"fa fa-spinner fa-spin\\\"></span> </div> </div> \";","module.exports = \"<div class=ngeo-grid-table-container> <table float-thead=ctrl.floatTheadConfig ng-model=ctrl.configuration.data class=\\\"table table-bordered table-striped table-hover\\\"> <thead class=table-header> <tr> <th ng-repeat=\\\"columnDefs in ctrl.configuration.columnDefs\\\" ng-click=ctrl.sort(columnDefs.name) ng-bind-html=\\\"columnDefs.name | ngeoTrustHtml | translate\\\"> <i ng-show=\\\"ctrl.sortedBy !== columnDefs.name\\\" class=\\\"fa fa-fw\\\"></i> <i ng-show=\\\"ctrl.sortedBy === columnDefs.name && ctrl.sortAscending === true\\\" class=\\\"fa fa-caret-up\\\"></i> <i ng-show=\\\"ctrl.sortedBy === columnDefs.name && ctrl.sortAscending === false\\\" class=\\\"fa fa-caret-down\\\"></i> </th> </tr> </thead> <tbody> <tr ng-repeat=\\\"attributes in ctrl.configuration.data\\\" ng-class=\\\"['row-' + ctrl.configuration.getRowUid(attributes), ctrl.configuration.isRowSelected(attributes) ? 'ngeo-grid-active': '']\\\" ng-click=\\\"ctrl.clickRow(attributes, $event)\\\" ng-mousedown=ctrl.preventTextSelection($event)> <td ng-repeat=\\\"columnDefs in ctrl.configuration.columnDefs\\\" ng-bind-html=\\\"attributes[columnDefs.name] | ngeoTrustHtml\\\"></td> </tr> </tbody> </table> </div> \";","module.exports = \"<div class=\\\"btn-group dropup\\\"> <a type=button class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=dropdown aria-expanded=false> <span class=gmf-mouseposition-control-target></span> <span class=caret></span> </a> <ul class=\\\"dropdown-menu dropdown-menu-right\\\" role=menu> <li class=dropdown-header translate>Coordinate systems</li> <li ng-repeat=\\\"projitem in ::ctrl.projections\\\"> <a href ng-click=ctrl.setProjection(projitem)> <span class=\\\"fa fa-fw\\\" ng-class=\\\"{'fa-check': ctrl.projection == projitem}\\\"></span> {{::projitem.label}} </a> </li> </ul> </div> \";","module.exports = \"<div ngeo-map=ctrl.map ngeo-map-manage-resize=ctrl.manageResize ngeo-map-resize-transition=ctrl.resizeTransition> </div> \";","module.exports = \"<div class=\\\"btn-group btn-block\\\" ng-class=\\\"::{'dropup': scaleselectorCtrl.options.dropup}\\\"> <button type=button class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=dropdown aria-expanded=false> <span ng-bind-html=\\\"scaleselectorCtrl.currentScale | ngeoScalify | ngeoTrustHtml\\\"></span>&nbsp;<i class=caret></i> </button> <ul class=\\\"dropdown-menu btn-block\\\" role=menu> <li ng-repeat=\\\"zoomLevel in ::scaleselectorCtrl.zoomLevels\\\"> <a href ng-click=scaleselectorCtrl.changeZoom(zoomLevel) ng-bind-html=\\\"scaleselectorCtrl.getScale(zoomLevel) | ngeoScalify | ngeoTrustHtml\\\"> </a> </li> </ul> </div> \";","module.exports = \"<div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=Close><span aria-hidden=true>&times;</span></button> <h4 class=modal-title translate>Share this map</h4> </div> <div class=modal-body> <form role=form name=gmfShareForm novalidate> <div class=form-group> <label for=gmfShareInputShortLink translate>Permalink</label> <input type=text class=form-control id=gmfShareInputShortLink onclick=this.select() ng-model=$ctrl.shortLink readonly=True> <p class=help-block translate>Copy this link to share it.</p> <p class=text-danger ng-if=$ctrl.showLengthWarning> <span class=\\\"fa fa-exclamation-triangle\\\"></span> {{'You have a lot of drawn elements in this map. The above link may not be correctly supported by some browsers.' | translate}} </p> <p class=text-danger ng-if=$ctrl.errorOnGetShortUrl> <span class=\\\"fa fa-exclamation\\\"></span> {{'Error, cannot get the shortened URL.' | translate}} </p> </div> <hr> <div class=gmf-share-email ng-if=::$ctrl.enableEmail> <div class=form-group> <label for=gmfShareInputEmail translate>Send this link to</label> <input type=email class=form-control name=inputEmail id=gmfShareInputEmail placeholder=E-mail ng-model=$ctrl.email required> <span ng-show=\\\"gmfShareForm.$submitted || gmfShareForm.inputEmail.$touched\\\"> <span class=text-danger ng-show=\\\"gmfShareForm.inputEmail.$error.email || gmfShareForm.inputEmail.$error.required\\\"> <i class=\\\"fa fa-exclamation-triangle\\\" aria-hidden=true></i> {{'Invalid email.' | translate}}</span> </span> </div> <div class=form-group> <textarea class=form-control ng-attr-placeholder=\\\"{{'Message (optional)' | translate }}\\\" ng-model=$ctrl.message></textarea> </div> <span class=text-success ng-if=$ctrl.successfullySent> <i class=\\\"fa fa-check\\\" aria-hidden=true></i> {{ 'Link successfully sent.' | translate }} </span> <span class=text-danger ng-if=$ctrl.errorOnsend> <i class=\\\"fa fa-exclamation\\\" aria-hidden=true></i> {{ 'Error, the link has not been sent.' | translate }} </span> </div> <div class=text-right> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal translate>Close</button> <button ng-if=::$ctrl.enableEmail type=submit class=\\\"btn btn-default btn-primary\\\" ng-click=$ctrl.sendShortUrl() ng-disabled=!gmfShareForm.$valid translate>Send </button> </div> </form> </div> \";","module.exports = \"<div class=gmf-time-slider> <div ui-slider=sliderCtrl.sliderOptions ng-model=sliderCtrl.dates> <span class=\\\"ui-slider-handle ui-state-default ui-corner-all\\\" tabindex=0 data-toggle=tooltip title=\\\"\\\"> </span> </div> <div class=gmf-time-slider-displayed-dates> <div class=gmf-time-slider-start-date ng-if=\\\"::sliderCtrl.time.mode === 'range'\\\"> <span>{{sliderCtrl.getLocalizedDate(sliderCtrl.dates[0])}}</span> </div> <div class=gmf-time-slider-start-date ng-if=\\\"::sliderCtrl.time.mode === 'value'\\\"> <span>{{sliderCtrl.getLocalizedDate(sliderCtrl.dates)}}</span> </div> <div class=gmf-time-slider-end-date ng-if=\\\"::sliderCtrl.time.mode === 'range'\\\"> <span>{{sliderCtrl.getLocalizedDate(sliderCtrl.dates[1])}}</span> </div> </div> </div> \";","module.exports = \"<div class=gmf-layertree-root-tools ng-if=layertreeCtrl.isRoot> <a href ng-if=\\\"gmfLayertreeCtrl.nodesCount() > 0\\\" ng-click=gmfLayertreeCtrl.removeAllNodes()> <span class=\\\"fa fa-trash\\\"></span> {{'Clear all' | translate}} </a> </div> <div ng-if=::!layertreeCtrl.isRoot id=gmf-layertree-node-{{::layertreeCtrl.uid}} ng-class=\\\"[layertreeCtrl.node.children ? 'gmf-layertree-group' : 'gmf-layertree-leaf', 'gmf-layertree-depth-' + layertreeCtrl.depth, gmfLayertreeCtrl.getResolutionStyle(layertreeCtrl.node), gmfLayertreeCtrl.getNodeState(layertreeCtrl)]\\\"> <div class=ngeo-sortable-handle ng-show=\\\"layertreeCtrl.depth === 1 && layertreeCtrl.parent.children.length > 1\\\"> <i class=\\\"gmf-layertree-sortable-handle-icon fa fa-ellipsis-v\\\"></i> </div> <a ng-if=::layertreeCtrl.node.children data-toggle=collapse href=#gmf-layertree-layer-group-{{::layertreeCtrl.uid}} aria-expanded={{::layertreeCtrl.node.metadata.isExpanded}} class=\\\"fa gmf-layertree-expand-node fa-fw\\\"> </a> <a href ng-click=::gmfLayertreeCtrl.toggleActive(layertreeCtrl) ng-if=::!layertreeCtrl.node.children ng-class=\\\"::{'gmf-layertree-no-layer-icon' : !gmfLayertreeCtrl.getLegendIconURL(layertreeCtrl)}\\\" class=gmf-layertree-layer-icon> <img ng-if=\\\"::(legendIconUrl=gmfLayertreeCtrl.getLegendIconURL(layertreeCtrl))\\\" ng-src={{::legendIconUrl}}>  </a> <a href ng-click=::gmfLayertreeCtrl.toggleActive(layertreeCtrl) ng-if=::layertreeCtrl.node.children ng-class=\\\"['fa fa-fw', layertreeCtrl.node.children && !layertreeCtrl.layer.loading ? 'gmf-layertree-state' : 'fa-refresh fa-spin']\\\"> </a> <a href ng-click=::gmfLayertreeCtrl.toggleActive(layertreeCtrl) class=gmf-layertree-name data-toggle=tooltip data-placement=top title=\\\"{{layertreeCtrl.node.name | translate}}\\\"> {{layertreeCtrl.node.name | translate}} <i class=\\\"gmf-icon gmf-icon-search-go gmf-layertree-zoom\\\" data-toggle=tooltip data-placement=bottom data-title=\\\"{{'Not visible at current scale. Click to zoom.'|translate}}\\\" ng-click=\\\"::gmfLayertreeCtrl.zoomToResolution(layertreeCtrl); $event.preventDefault(); $event.stopPropagation();\\\" ng-if=\\\"gmfLayertreeCtrl.getNodeState(layertreeCtrl) == 'on'\\\"> </i> <span ngeo-popover ngeo-popover-dismiss=.content ng-if=\\\"gmfLayertreeCtrl.getNodeState(layertreeCtrl) !== 'off' && layertreeCtrl.node.time && layertreeCtrl.node.time.mode !== 'disabled'\\\"> <span ngeo-popover-anchor class=\\\"fa fa-clock-o\\\" ng-click=\\\"$event.preventDefault(); $event.stopPropagation()\\\"> </span> <div ngeo-popover-content> <ngeo-date-picker ng-if=\\\"::layertreeCtrl.node.time.widget === 'datepicker'\\\" time=layertreeCtrl.node.time on-date-selected=\\\"gmfLayertreeCtrl.updateWMSTimeLayerState(layertreeCtrl, time)\\\"> </ngeo-date-picker> <gmf-time-slider ng-if=\\\"::layertreeCtrl.node.time.widget === 'slider'\\\" gmf-time-slider-time=layertreeCtrl.node.time gmf-time-slider-on-date-selected=\\\"gmfLayertreeCtrl.updateWMSTimeLayerState(layertreeCtrl, time)\\\"> </gmf-time-slider> </div> </span> <span class=\\\"fa fa-pencil\\\" data-toggle=tooltip data-placement=right title=\\\"{{'Currently editing this layer'|translate}}\\\" ng-if=layertreeCtrl.properties.editing> </span> </a> <span class=gmf-layertree-right-buttons> <a href=\\\"\\\" ng-if=\\\"::layertreeCtrl.depth == 1\\\" ng-click=gmfLayertreeCtrl.removeNode(layertreeCtrl.node)> <span class=\\\"fa fa-trash\\\"></span> </a> <a class=gmf-layertree-node-menu-btn href=\\\"\\\" ng-if=::gmfLayertreeCtrl.supportsCustomization(layertreeCtrl) ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-menu-' + layertreeCtrl.uid)\\\"> <span class=\\\"fa fa-cog\\\"></span> </a> <span ngeo-popover ng-if=\\\"::(layertreeCtrl.depth === 1 && !layertreeCtrl.node.mixed) || (layertreeCtrl.depth > 1 && layertreeCtrl.parent.node.mixed && !layertreeCtrl.node.children) || (gmfLayertreeCtrl.getLegendsObject(layertreeCtrl) && layertreeCtrl.node.metadata.legend) || layertreeCtrl.getDataSource().filtrable\\\" ngeo-popover-dismiss=.content> <span ngeo-popover-anchor class=\\\"extra-actions fa fa-cog\\\"> </span> <div ngeo-popover-content> <ul> <li ng-if=\\\"::(layertreeCtrl.depth === 1 && !layertreeCtrl.node.mixed) || (layertreeCtrl.depth > 1 && layertreeCtrl.parent.node.mixed)\\\"> <i class=\\\"fa fa-tint fa-fw\\\"></i> <span for=layer-opactity>{{'Opacity'|translate}}</span> <input class=input-action name=layer-opactity type=range min=0 max=1 step=0.01 ng-model=layertreeCtrl.layer.opacity /> </li> <li ng-if=\\\"::gmfLayertreeCtrl.getLegendsObject(layertreeCtrl) && layertreeCtrl.node.metadata.legend\\\"> <i class=\\\"fa fa-th-list fa-fw\\\"></i> <a ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend'); popoverCtrl.dismissPopover()\\\" data-toggle=collapse href=\\\"\\\"> {{'Show/hide legend'|translate}} </a> </li> <li ng-if=\\\"layertreeCtrl.getDataSource() && layertreeCtrl.getDataSource().filtrable\\\"> <i class=\\\"fa fa-filter fa-fw\\\"></i> <a ng-click=gmfLayertreeCtrl.toggleFiltrableDataSource(layertreeCtrl.getDataSource()) href=\\\"\\\"> {{'Filter'|translate}} </a> </li> </ul> </div> </span> <span class=gmf-layertree-metadata ng-if=::layertreeCtrl.node.metadata.metadataUrl> <span ng-if=\\\"::gmfLayertreeCtrl.openLinksInNewWindow === true\\\"> <a title=\\\"{{'More informations'|translate}}\\\" href={{::layertreeCtrl.node.metadata.metadataUrl}} target=blank_> </a> </span> <span ng-if=\\\"::gmfLayertreeCtrl.openLinksInNewWindow !== true\\\"> <a title=\\\"{{'More informations'|translate}}\\\" href=\\\"\\\" ng-click=gmfLayertreeCtrl.displayMetadata(layertreeCtrl)> </a> </span> </span> </span> </div> <div class=gmf-layertree-node-menu id=gmf-layertree-node-menu-{{::layertreeCtrl.uid}} style=display:none ng-if=::gmfLayertreeCtrl.supportsCustomization(layertreeCtrl)> <div ng-if=::gmfLayertreeCtrl.supportsOpacityChange(layertreeCtrl)> <i class=\\\"fa fa-tint fa-fw\\\"></i> <span for=layer-opactity>{{'Opacity'|translate}}</span> <input class=input-action name=layer-opactity type=range min=0 max=1 step=0.01 ng-model=layertreeCtrl.layer.opacity /> </div> <a class=gmf-layertree-node-menu-togglelegend ng-if=::gmfLayertreeCtrl.supportsLegend(layertreeCtrl) data-toggle=collapse ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend')\\\" href=\\\"\\\"> <span class=\\\"fa fa-th-list\\\"> </span> {{'Show/hide legend'|translate}} </a> </div> <div ng-if=\\\"::!layertreeCtrl.isRoot && gmfLayertreeCtrl.getLegendsObject(layertreeCtrl) && layertreeCtrl.node.metadata.legend\\\" id=gmf-layertree-node-{{::layertreeCtrl.uid}}-legend class=\\\"collapse gmf-layertree-legend\\\" ng-class=\\\"::[layertreeCtrl.node.metadata.isLegendExpanded ? 'in' : '']\\\"> <a title=\\\"{{'Hide legend'|translate}}\\\" data-toggle=collapse ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend')\\\" href=\\\"\\\"> {{'Hide legend'|translate}} </a> <div ng-if=\\\"gmfLayertreeCtrl.isNodeLegendVisible('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend')\\\"> <div ng-repeat=\\\"(title, url) in ::gmfLayertreeCtrl.getLegendsObject(layertreeCtrl)\\\"> <p ng-if=\\\"::gmfLayertreeCtrl.getNumberOfLegendsObject(layertreeCtrl) > 1\\\">{{title|translate}}</p> <img ng-src={{url}}> </div> </div> </div> <ul class=gmf-layertree-root-external-datasources ng-if=\\\"layertreeCtrl.isRoot && (gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmsGroups.length || gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmtsGroups.length || gmfLayertreeCtrl.gmfExternalDataSourcesManager.fileGroup.dataSources.length)\\\"> <gmf-datasourcegrouptree class=\\\"gmf-layertree-node gmf-layertree-depth-1\\\" ng-repeat=\\\"wmtsGroup in gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmtsGroups\\\" group=wmtsGroup> </gmf-datasourcegrouptree> <gmf-datasourcegrouptree class=\\\"gmf-layertree-node gmf-layertree-depth-1\\\" ng-repeat=\\\"wmsGroup in gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmsGroups\\\" group=wmsGroup> </gmf-datasourcegrouptree> <gmf-datasourcegrouptree class=\\\"gmf-layertree-node gmf-layertree-depth-1\\\" ng-if=gmfLayertreeCtrl.gmfExternalDataSourcesManager.fileGroup.dataSources.length group=gmfLayertreeCtrl.gmfExternalDataSourcesManager.fileGroup> </gmf-datasourcegrouptree> </ul> <ul id=gmf-layertree-layer-group-{{::layertreeCtrl.uid}} ng-if=::layertreeCtrl.node.children ng-class=\\\"{collapse: !layertreeCtrl.isRoot, in : layertreeCtrl.node.metadata.isExpanded}\\\" ngeo-sortable=\\\"::layertreeCtrl.isRoot && layertreeCtrl.node.children\\\" ngeo-sortable-options=\\\"{handleClassName: 'ngeo-sortable-handle', draggerClassName: 'gmf-layertree-dragger', placeholderClassName : 'gmf-layertree-curr-drag-item'}\\\" ngeo-sortable-callback=::gmfLayertreeCtrl.afterReorder ngeo-sortable-callback-ctx=::gmfLayertreeCtrl> <li class=gmf-layertree-node ng-repeat=\\\"node in layertreeCtrl.node.children\\\" ng-class=\\\"'gmf-layertree-depth-' + layertreeCtrl.depth\\\" ngeo-layertree=node ngeo-layertree-notroot ngeo-layertree-map=layertreeCtrl.map ngeo-layertree-nodelayerexpr=layertreeCtrl.nodelayerExpr ngeo-layertree-listenersexpr=layertreeCtrl.listenersExpr> </li> </ul> \";","module.exports = \"<span ng-if=::!layertreeCtrl.isRoot>{{::layertreeCtrl.node.name}}</span> <input type=checkbox ng-if=\\\"::layertreeCtrl.node && !layertreeCtrl.node.children\\\" ng-model=layertreeCtrl.getSetActive ng-model-options=\\\"{getterSetter: true}\\\"/> <ul ng-if=::layertreeCtrl.node.children> <li ng-repeat=\\\"node in ::layertreeCtrl.node.children\\\" ngeo-layertree=::node ngeo-layertree-notroot ngeo-layertree-map=layertreeCtrl.map ngeo-layertree-nodelayerexpr=layertreeCtrl.nodelayerExpr ngeo-layertree-listenersexpr=layertreeCtrl.listenersExpr> </li> </ul> \";","module.exports = \"<div class=\\\"gmf-layertree-group gmf-layertree-depth-1 {{$ctrl.group.visibilityState}}\\\"> <a data-toggle=collapse href=#gmf-layertree-layer-group-{{::$ctrl.getGroupUid()}} aria-expanded=true class=\\\"fa gmf-layertree-expand-node fa-fw\\\"> </a> <a class=\\\"fa fa-fw gmf-layertree-state\\\" href ng-click=$ctrl.toggle()> </a> <a class=gmf-layertree-name href ng-click=$ctrl.toggle()> <span>{{$ctrl.group.title | translate}}</span> </a> <span class=gmf-layertree-right-buttons> <a href=\\\"\\\" ng-click=$ctrl.remove()> <span class=\\\"fa fa-trash\\\"></span> </a> </span> </div> <ul id=gmf-layertree-layer-group-{{::$ctrl.getGroupUid()}} class=\\\"collapse in\\\"> <li class=\\\"gmf-layertree-node gmf-layertree-depth-2\\\" ng-class=\\\"[dataSource.visible ? 'on' : 'off']\\\" ng-repeat=\\\"dataSource in $ctrl.group.dataSources\\\"> <div class=gmf-layertree-leaf> <a href ng-click=$ctrl.toggleDataSource(dataSource) class=\\\"gmf-layertree-layer-icon gmf-layertree-no-layer-icon\\\"> </a> <a class=gmf-layertree-name href ng-click=$ctrl.toggleDataSource(dataSource)> <span>{{dataSource.name | translate}}</span> </a> <span class=gmf-layertree-right-buttons> <a href=\\\"\\\" ng-click=$ctrl.removeDataSource(dataSource)> <span class=\\\"fa fa-trash\\\"></span> </a> </span> </div> </li> </ul> \";","module.exports = \"<div class=form-group ng-switch=$ctrl.filtrableDataSources.length> <span ng-switch-when=0 translate>No filtrable layer available!</span> <select class=form-control ng-disabled=$ctrl.aRuleIsActive ng-switch-default ng-model=$ctrl.gmfDataSourceBeingFiltered.dataSource ng-options=\\\"dataSource.name | translate for dataSource in $ctrl.filtrableDataSources\\\"> <option value=\\\"\\\" translate>-- Layer to filter --</option> </select> <div ng-if=\\\"$ctrl.customRules && $ctrl.directedRules && $ctrl.readyDataSource\\\"> <hr class=gmf-filterselector-separator /> <div class=\\\"dropdown gmf-filterselector-savedfilters\\\"> <a class=\\\"btn btn-link dropdown-toggle ngeo-filter-condition-button\\\" ng-class=\\\"{disabled: $ctrl.aRuleIsActive || $ctrl.gmfSavedFilters.currentDataSourceItems.length === 0}\\\" type=button data-toggle=dropdown ng-disabled=\\\"$ctrl.aRuleIsActive || $ctrl.gmfSavedFilters.currentDataSourceItems.length === 0\\\"> <span translate>Saved</span> <span class=caret></span> </a> <ul class=dropdown-menu> <li ng-repeat=\\\"item in $ctrl.gmfSavedFilters.currentDataSourceItems\\\"> <a href ng-click=$ctrl.saveFilterLoadItem(item)> <span>{{::item.name}}</span> </a> </li> <li role=separator class=divider></li> <li> <a href ng-click=$ctrl.saveFilterManage()> <span translate>Manage saved filters</span> </a> </li> </ul> </div> <ngeo-filter a-rule-is-active=$ctrl.aRuleIsActive custom-rules=$ctrl.customRules datasource=$ctrl.readyDataSource directed-rules=$ctrl.directedRules feature-overlay=$ctrl.featureOverlay map=$ctrl.map tool-group=$ctrl.toolGroup> </ngeo-filter> <div> <a class=\\\"btn btn-link gmf-filterselector-savebtn\\\" type=button data-toggle=dropdown ng-click=\\\"!$ctrl.aRuleIsActive && $ctrl.saveFilterShowModal()\\\" ng-disabled=$ctrl.aRuleIsActive> <span class=\\\"fa fa-save\\\"></span> <span translate>Save</span> </a> </div> </div> <ngeo-modal ng-model=$ctrl.saveFilterSaveModalShown> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title>{{'Save filter' | translate}}</h4> </div> <div class=modal-body> <p class=gmf-filterselector-savefilter-desc translate> You can save the filter that you created to re-load it later. </p> <input type=text class=form-control name=name ng-model=$ctrl.saveFilterName placeholder=\\\"{{'Filter name' | translate}}\\\"/> </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal>{{'Cancel' | translate}}</button> <button type=button ng-click=$ctrl.saveFilterSave() ng-disabled=\\\"$ctrl.saveFilterName === ''\\\" class=\\\"btn btn-primary\\\">{{'Save' | translate}}</button> </div> </ngeo-modal> <ngeo-modal ng-model=$ctrl.saveFilterManageModalShown> <div class=gmf-filterselector-managefilter-modal> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title>{{'Manage filters' | translate}}</h4> </div> <div class=modal-body> <ul> <li ng-repeat=\\\"item in $ctrl.gmfSavedFilters.currentDataSourceItems\\\"> <span>{{::item.name}}</span> <a href ng-click=$ctrl.saveFilterRemoveItem(item)> {{ 'Delete' | translate }} </a> <div class=gmf-eol></div> </li> </ul> </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal>{{'Close' | translate}}</button> </div> </div> </ngeo-modal> </div> \";","module.exports = \"<div class=dropdown> <a class=\\\"btn btn-link dropdown-toggle ngeo-filter-condition-button\\\" ng-class=\\\"{disabled: $ctrl.aRuleIsActive}\\\" type=button data-toggle=dropdown ng-disabled=$ctrl.aRuleIsActive> <span class=\\\"fa fa-cog\\\"></span> <span class=caret></span> </a> <ul class=dropdown-menu> <li class=ngeo-filter-condition-criteria-header translate>Criteria taken into account</li> <li ng-repeat=\\\"condition in ::$ctrl.conditions\\\"> <a href ng-click=$ctrl.setCondition(condition)> <span ng-class=\\\"{'ngeo-filter-condition-criteria-active': condition.value == $ctrl.datasource.filterCondition}\\\" class=\\\"fa fa-check ngeo-filter-condition-criteria\\\"> </span> <span>{{::condition.text | translate}}</span> </a> </li> </ul> </div> <ngeo-rule ng-repeat=\\\"rule in $ctrl.directedRules\\\" feature-overlay=::$ctrl.featureOverlay class=ngeo-filter-rule-directed map=$ctrl.map rule=rule tool-group=$ctrl.toolGroup> </ngeo-rule> <hr class=ngeo-filter-separator-rules /> <div ng-repeat=\\\"rule in $ctrl.customRules\\\"> <a class=\\\"btn btn-xs btn-link ngeo-filter-rule-custom-rm-btn\\\" ng-click=\\\"!$ctrl.aRuleIsActive && $ctrl.removeCustomRule(rule)\\\" ng-disabled=$ctrl.aRuleIsActive href> <span class=\\\"fa fa-remove\\\"></span> </a> <ngeo-rule feature-overlay=::$ctrl.featureOverlay class=ngeo-filter-rule-custom map=$ctrl.map rule=rule tool-group=$ctrl.toolGroup> </ngeo-rule> </div> <div class=dropdown> <a class=\\\"btn btn-link dropdown-toggle\\\" ng-class=\\\"{disabled: $ctrl.aRuleIsActive}\\\" type=button data-toggle=dropdown ng-disabled=$ctrl.aRuleIsActive> <span translate>+ Add a new criteria</span> <span class=caret></span> </a> <ul class=dropdown-menu> <li ng-repeat=\\\"attribute in ::$ctrl.geometryAttributes\\\"> <a href ng-click=$ctrl.createAndAddCustomRule(attribute)> <span translate>Spatial filter</span> </a> </li> <li role=presentation class=divider></li> <li ng-repeat=\\\"attribute in ::$ctrl.otherAttributes\\\"> <a href ng-click=$ctrl.createAndAddCustomRule(attribute)> <span>{{::attribute.name | translate}}</span> </a> </li> </ul> </div> <hr class=ngeo-filter-separator-criteria /> <a class=\\\"btn btn-link\\\" type=button ng-click=$ctrl.apply() ng-disabled=\\\"$ctrl.hasARule() === false || $ctrl.datasource.visible === false\\\"> <span class=\\\"fa fa-check\\\"></span> <span translate>Apply filter</span> </a> <a class=\\\"btn btn-link\\\" type=button ng-click=$ctrl.getData() ng-disabled=\\\"$ctrl.hasARule() === false || $ctrl.datasource.visible === false\\\"> <span class=\\\"fa fa-chevron-right\\\"></span> <span translate>Get data</span> </a> \";","module.exports = \"<div class=dropdown ng-class=\\\"{open: $ctrl.rule.active}\\\"> <a class=\\\"btn btn-default btn-sm dropdown-toggle\\\" type=button ng-click=$ctrl.toggle()> <span>{{ ::$ctrl.clone.name | translate }}</span> <span class=caret></span> </a> <div class=\\\"dropdown-menu form-group\\\"> <select class=\\\"form-control input-sm ngeo-rule-operators-list\\\" ng-disabled=$ctrl.drawActive ng-if=::$ctrl.clone.operators ng-model=$ctrl.clone.operator ng-options=\\\"$ctrl.operators[operator] | translate for operator in ::$ctrl.clone.operators track by operator\\\"> </select> <div ng-switch=::$ctrl.clone.type> <div class=\\\"ngeo-rule-type-date form-group\\\" ng-if=$ctrl.rule.active ng-switch-when=date|datetime ng-switch-when-separator=|> <div ng-switch=$ctrl.clone.operator> <div ng-switch-when=..|time_during ng-switch-when-separator=|> <ngeo-date-picker time=$ctrl.timeRangeMode on-date-selected=$ctrl.onDateRangeSelected(time)> </ngeo-date-picker> </div> <div ng-switch-default> <ngeo-date-picker time=$ctrl.timeValueMode on-date-selected=$ctrl.onDateSelected(time)> </ngeo-date-picker> </div> </div> </div> <div class=\\\"ngeo-rule-type-geometry form-group\\\" ng-switch-when=geometry> <div ng-switch=$ctrl.geomType> <span class=\\\"gmf-icon gmf-icon-point\\\" ng-switch-when=Point> </span> <span class=\\\"gmf-icon gmf-icon-line\\\" ng-switch-when=LineString> </span> <span class=\\\"gmf-icon gmf-icon-polygon\\\" ng-switch-when=Polygon> </span> <span class=\\\"gmf-icon gmf-icon-circle\\\" ng-switch-when=Circle> </span> <span class=\\\"gmf-icon gmf-icon-rectangle\\\" ng-switch-when=Rectangle> </span> </div> <ngeo-drawfeature ngeo-drawfeature-active=$ctrl.drawActive ngeo-drawfeature-features=$ctrl.drawnFeatures ngeo-drawfeature-map=$ctrl.map> <div ngeo-btn-group class=btn-group> <a data-toggle=tooltip title=\\\"{{'Draw a point on the map' | translate}}\\\" href ngeo-btn ngeo-drawpoint class=\\\"btn btn-sm btn-default ngeo-drawfeature-point\\\" ng-show=\\\"['intersects', 'within'].indexOf($ctrl.clone.operator) !== -1\\\" ng-class=\\\"{active: dfCtrl.drawPoint.active}\\\" ng-model=dfCtrl.drawPoint.active> <span class=\\\"gmf-icon gmf-icon-point\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a line on the map' | translate}}\\\" href ngeo-btn ngeo-measurelength class=\\\"btn btn-sm btn-default ngeo-drawfeature-linestring\\\" ng-show=\\\"['intersects', 'within'].indexOf($ctrl.clone.operator) !== -1\\\" ng-class=\\\"{active: dfCtrl.measureLength.active}\\\" ng-model=dfCtrl.measureLength.active> <span class=\\\"gmf-icon gmf-icon-line\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a polygon on the map' | translate}}\\\" href ngeo-btn ngeo-measurearea class=\\\"btn btn-sm btn-default ngeo-drawfeature-polygon\\\" ng-class=\\\"{active: dfCtrl.measureArea.active}\\\" ng-model=dfCtrl.measureArea.active> <span class=\\\"gmf-icon gmf-icon-polygon\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a circle on the map' | translate}}\\\" href ngeo-btn ngeo-measureazimut class=\\\"btn btn-sm btn-default ngeo-drawfeature-circle\\\" ng-class=\\\"{active: dfCtrl.measureAzimut.active}\\\" ng-model=dfCtrl.measureAzimut.active> <span class=\\\"gmf-icon gmf-icon-circle\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a rectangle on the map' | translate}}\\\" href ngeo-btn ngeo-drawrectangle class=\\\"btn btn-sm btn-default ngeo-drawfeature-rectangle\\\" ng-class=\\\"{active: dfCtrl.drawRectangle.active}\\\" ng-model=dfCtrl.drawRectangle.active> <span class=\\\"gmf-icon gmf-icon-rectangle\\\"></span> </a> </div> <div class=ngeo-rule-type-geometry-instructions ng-if=$ctrl.drawActive> <span ng-if=dfCtrl.drawPoint.active> {{ 'Draw a point on the map.' | translate }} </span> <span ng-if=dfCtrl.measureLength.active> {{ 'Draw a line string on the map.' | translate }} </span> <span ng-if=dfCtrl.measureArea.active> {{ 'Draw a polygon on the map.' | translate }} </span> <span ng-if=dfCtrl.measureAzimut.active> {{ 'Draw a circle on the map.' | translate }} </span> <span ng-if=dfCtrl.drawRectangle.active> {{ 'Draw a rectangle on the map.' | translate }} </span> </div> </ngeo-drawfeature> </div> <div class=\\\"checkbox ngeo-rule-type-select\\\" ng-switch-when=select> <a ng-click=$ctrl.selectAllChoices() href>{{ All | translate}} </a> <label class=\\\"form-group ol-unselectable\\\" ng-repeat=\\\"choice in ::$ctrl.clone.choices\\\"> <input ng-checked=\\\"$ctrl.clone.getExpression() && $ctrl.clone.getExpression().split(',').indexOf(choice) > -1\\\" ng-click=$ctrl.toggleChoiceSelection(choice) type=checkbox value=choice /> <span>{{ choice | translate }}</span> </label> </div> <div class=\\\"form-group ngeo-rule-type-text\\\" ng-switch-default> <div ng-switch=$ctrl.clone.operator> <div ng-switch-when=..> <input type=number class=\\\"form-control input-sm\\\" ng-model=$ctrl.clone.lowerBoundary /> <input type=number class=\\\"form-control input-sm\\\" ng-model=$ctrl.clone.upperBoundary /> </div> <div ng-switch-default> <input type=number class=\\\"form-control input-sm\\\" ng-if=\\\"$ctrl.clone.type === 'number'\\\" ng-model=$ctrl.clone.expression /> <input type=text class=\\\"form-control input-sm\\\" ng-if=\\\"$ctrl.clone.type !== 'number'\\\" ng-model=$ctrl.clone.expression /> </div> </div> </div> <div class=ngeo-rule-btns> <button class=\\\"btn btn-xs btn-default\\\" ng-click=$ctrl.apply() type=button>{{'Apply' | translate}}</button> <button class=\\\"btn btn-xs btn-default\\\" ng-click=$ctrl.cancel() type=button>{{'Cancel' | translate}}</button> </div> </div> </div> </div> <div class=ngeo-rule-value ng-if=\\\"$ctrl.rule.value !== null\\\"> <a class=\\\"btn btn-xs btn-link\\\" ng-click=\\\"!$ctrl.rule.active && $ctrl.reset()\\\" ng-disabled=$ctrl.rule.active href> <span class=\\\"fa fa-remove\\\"></span> </a> <div ng-switch=::$ctrl.rule.type> <div ng-switch-when=date|datetime ng-switch-when-separator=|> <div ng-switch=$ctrl.rule.operator> <div ng-switch-when=..|time_during ng-switch-when-separator=|> <span translate>From </span> <span>{{ $ctrl.timeToDate($ctrl.rule.lowerBoundary) }}</span> <span translate> to </span> <span>{{ $ctrl.timeToDate($ctrl.rule.upperBoundary) }}</span> </div> <div ng-switch-default> <span>{{ $ctrl.operatorsShortFormat[$ctrl.rule.operator] }}</span> <span>{{ $ctrl.timeToDate($ctrl.rule.getExpression()) }}</span> </div> </div> </div> <div ng-switch-when=geometry> <span>{{ $ctrl.operators[$ctrl.rule.operator] }}</span> <span ng-switch=$ctrl.getRuleGeometryType()> <span class=\\\"gmf-icon gmf-icon-point\\\" ng-switch-when=Point> </span> <span class=\\\"gmf-icon gmf-icon-line\\\" ng-switch-when=LineString> </span> <span class=\\\"gmf-icon gmf-icon-polygon\\\" ng-switch-when=Polygon> </span> <span class=\\\"gmf-icon gmf-icon-circle\\\" ng-switch-when=Circle> </span> <span class=\\\"gmf-icon gmf-icon-rectangle\\\" ng-switch-when=Rectangle> </span> </span> </div> <div ng-switch-when=select> <span ng-repeat=\\\"choice in $ctrl.rule.getExpression().split(',')\\\"> {{ choice | translate }}{{ $last ? '' : ', ' }} </span> </div> <div ng-switch-default> <div ng-switch=$ctrl.rule.operator> <div ng-switch-when=..|time_during ng-switch-when-separator=|> <span translate>Between </span> <span>{{ $ctrl.rule.lowerBoundary }}</span> <span translate> and </span> <span>{{ $ctrl.rule.upperBoundary }}</span> </div> <div ng-switch-default> <span>{{ $ctrl.operatorsShortFormat[$ctrl.rule.operator] }}</span> <span>{{ $ctrl.rule.getExpression() }}</span> </div> </div> </div> </div> </div> \";","module.exports = \"<div class=ngeo-datepicker> <form name=dateForm class=ngeo-datepicker-form novalidate> <div ng-if=\\\"::datepickerCtrl.time.widget === 'datepicker'\\\"> <div class=ngeo-datepicker-start-date> <span ng-if=\\\"::datepickerCtrl.time.mode === 'range'\\\" translate>From:</span> <span ng-if=\\\"::datepickerCtrl.time.mode !== 'range'\\\" translate>Date:</span> <input name=sdate ui-date=datepickerCtrl.sdateOptions ng-model=datepickerCtrl.sdate required=\\\"\\\"/> </div> <div class=ngeo-datepicker-end-date ng-if=\\\"::datepickerCtrl.time.mode === 'range'\\\"> <span translate>To:</span> <input name=edate ui-date=datepickerCtrl.edateOptions ng-model=datepickerCtrl.edate required=\\\"\\\"/> </div> </div> </form> </div> \";","module.exports = \"<h4 class=\\\"popover-title ngeo-popup-title\\\"> <span ng-bind-html=title></span> <button type=button class=close ng-click=\\\"open = false\\\"> &times;</button> </h4> <div class=popover-content ng-bind-html=content></div> \";","module.exports = \"<ul class=gmf-backgroundlayerselector> <li ng-repeat=\\\"layer in ctrl.bgLayers\\\" ng-click=ctrl.setLayer(layer) ng-class=\\\"{'gmf-backgroundlayerselector-active': ctrl.bgLayer == layer, 'gmf-backgroundlayerselector-disabled': ctrl.opacityLayer == layer}\\\"> <img class=gmf-thumb ng-src=\\\"{{::layer.get('metadata')['thumbnail']}}\\\"/> <span class=gmf-text>{{layer.get(\\\"label\\\") | translate}}</span> <span ng-class=\\\"{'gmf-backgroundlayerselector-opacity-check': ctrl.opacityLayer == layer}\\\"></span> </li> <input ng-if=ctrl.opacityLayer class=\\\"input-action gmf-backgroundlayerselector-opacity-slider\\\" name=bg-layer-opacity type=range min=0 max=1 step=0.01 ng-model=ctrl.getSetBgLayerOpacity ng-model-options=\\\"{getterSetter: true}\\\"> </ul> \";","module.exports = \"<div ng-if=$ctrl.gmfUser.username> <div class=form-group> <span>{{'Logged in as' | translate}}</span> <strong>{{ ::$ctrl.gmfUser.username }}</strong>. </div> <form name=logoutForm role=form ng-submit=$ctrl.logout() ng-controller=GmfAuthenticationController ng-class=\\\"{'has-error': $ctrl.error}\\\" ng-if=!$ctrl.changingPassword> <div class=form-group> <input type=submit class=\\\"form-control btn btn-primary\\\" value=\\\"{{'Logout' | translate}}\\\"/> </div> <div class=form-group> <input ng-show=$ctrl.allowPasswordChange type=button class=\\\"form-control btn btn-default\\\" value=\\\"{{'Change password' | translate}}\\\" ng-click=\\\"$ctrl.changingPassword = true\\\"/> </div> </form> <form name=changePasswordForm role=form ng-submit=$ctrl.changePassword() ng-controller=GmfAuthenticationController ng-class=\\\"{'has-error': $ctrl.error}\\\" ng-if=$ctrl.changingPassword> <div class=form-group> <input type=password class=form-control name=oldpassword ng-model=$ctrl.oldPwdVal ng-attr-placeholder=\\\"{{'Old password' | translate}}\\\"/> </div> <div class=form-group> <input type=password class=form-control name=newpassword ng-model=$ctrl.newPwdVal ng-attr-placeholder=\\\"{{'New password' | translate}}\\\"/> </div> <div class=form-group> <input type=password class=form-control name=newpasswordconfirm ng-model=$ctrl.newPwdConfVal ng-attr-placeholder=\\\"{{'Confirm new password' | translate}}\\\"/> </div> <div class=form-group> <input type=submit class=\\\"form-control btn btn-primary\\\" value=\\\"{{'Change password' | translate}}\\\"/> </div> <div class=form-group> <input type=button class=\\\"form-control btn btn-default\\\" value=\\\"{{'Cancel' | translate}}\\\" ng-if=!$ctrl.userMustChangeItsPassword() ng-click=$ctrl.changePasswordReset() /> <input type=button class=\\\"form-control btn btn-default\\\" value=\\\"{{'Logout' | translate}}\\\" ng-if=$ctrl.userMustChangeItsPassword() ng-click=$ctrl.logout() /> </div> </form> <div ng-show=$ctrl.error class=\\\"gmf-authentication-error help-block\\\"></div> <ngeo-modal ng-model=$ctrl.changePasswordModalShown> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title> {{'Password Changed' | translate}} </h4> </div> <div class=modal-body> {{'Your password has successfully been changed.' | translate}} </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal>{{'OK' | translate}}</button> </div> </ngeo-modal> </div> <div ng-if=!$ctrl.gmfUser.username> <form name=loginForm role=form ng-submit=$ctrl.login() ng-controller=GmfAuthenticationController ng-class=\\\"{'has-error': $ctrl.error}\\\"> <div class=form-group> <input type=text class=form-control name=login ng-model=$ctrl.loginVal ng-attr-placeholder=\\\"{{'Username' | translate}}\\\"/> </div> <div class=form-group> <input type=password class=form-control name=password ng-model=$ctrl.pwdVal ng-attr-placeholder=\\\"{{'Password' | translate}}\\\"/> </div> <div class=form-group> <input type=submit class=\\\"form-control btn btn-primary\\\" value=\\\"{{'Connect' | translate}}\\\"/> </div> <div ng-show=$ctrl.allowPasswordReset class=form-group> <a ng-click=$ctrl.resetPassword() href=\\\"\\\">{{'Password forgotten?' | translate}}</a> </div> </form> <div ng-show=$ctrl.error class=\\\"gmf-authentication-error help-block\\\"></div> <ngeo-modal ng-model=$ctrl.resetPasswordModalShown> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title> {{'Password forgotten?' | translate}} </h4> </div> <div class=modal-body translate> A new password has just been sent to you by e-mail. </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal>{{'OK' | translate}}</button> </div> </ngeo-modal> </div> \";"],"sourceRoot":""}